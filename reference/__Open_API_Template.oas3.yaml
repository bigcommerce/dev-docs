openapi: 3.0.0
info:
  version: ""
  title: BigCommerce API
  description: Things API. The Things API allows you to do blah, blah and blah.
  contact:
    {}
paths:
  /things:
    get:
      description: >-
        Returns a list of *things*. Optional filter parameters can be passed in.
      summary: Get All things
      tags:
        - Things
      operationId: ThingsGet
      parameters:
        - $ref: "#/components/parameters/FilterPageParam"
        - $ref: "#/components/parameters/FilterLimitParam"
        - $ref: "#/components/parameters/FilterIdParam"
        - $ref: "#/components/parameters/FilterCompanyParam"
        - $ref: "#/components/parameters/FilterThingIDParam"
        - $ref: "#/components/parameters/FilterDateCreatedParam"
        - $ref: "#/components/parameters/FilterDateCreatedMaxParam"
        - $ref: "#/components/parameters/FilterDateCreatedMinParam"
        - $ref: "#/components/parameters/FilterDateModifiedParam"
        - $ref: "#/components/parameters/FilterDateModifiedMinParam"
        - $ref: "#/components/parameters/FilterDateModifiedMaxParam"
        - $ref: "#/components/parameters/FilterNameParam"
        - $ref: "#/components/parameters/FilterNameLikeParam"
        - $ref: "#/components/parameters/FilterThingIncludeParam"
        - $ref: "#/components/parameters/FilterThingAttributeTypeParam"
      responses:
        "200":
          $ref: "#/components/responses/ThingCollectionResponse"
    post:
      description: >-
        Creates a *Thing*. Multiple things can be created in one call.
      summary: Create a Thing
      tags:
        - Things
      operationId: ThingsPost
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ThingPost"
        required: true
      responses:
        "200":
          $ref: "#/components/responses/ThingResponse"
        "422":
          description: The *Thing* was not valid. This is the result of missing required
            fields or trying to edit a read only field. See the response for
            more details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: An Error Occured. To document errors list out all possible responses in the response section then use oneOf to have them listed out. Note, there is a current bug in swagger where responses that use oneOf don't show. This is a limitiation our public api platform is fixing internally, so it should not be an issue for us.
            https://github.com/swagger-api/swagger-ui/issues/3803
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/responses/500'
                  - $ref: '#/components/responses/15001'
                  - $ref: '#/components/responses/12001'
            
    put:
      description: >-
        Updates a *Thing*. Multiple *Things* can be updated in one call. 
      summary: Update a Thing
      tags:
        - Things
      operationId: ThingsPut
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/ThingPut"
        required: true
        x-examples:
          application/json:
            - id: 65206491
              email: etu
              first_name: Excepte
              last_name: incidi
              company: anim
              phone: "quis "
              registration_ip_address: l
              notes: adipisicing incididunt quis dolor
              tax_exempt_category: "Excepteur "
              Thing_group_id: -76846758
              authentication:
                force_password_reset: true
                new_password: cupidatat dolore
      responses:
        "200":
          $ref: "#/components/responses/ThingResponse"
        "422":
          description: >
            The `Thing` was not valid. This is the result of missing required
            fields, or of invalid data. See the response for more details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    delete:
      description: |-
        Deletes *things*. 
      summary: Delete things
      tags:
        - Things
      operationId: ThingsDelete
      parameters:
        - in: query
          name: id:in
          description: |-
            Filter items by id.
            `id:in=4,5,6`
          required: true
          schema:
            type: array
            items:
              type: integer
      responses:
        "204":
          description: ""
          headers:
            {}
tags:
  - name: Things
    description: BigCommerce Things API
security:
  - X-Auth-Client:
      []
  - X-Auth-Token:
      []
servers:
  - url: https://api.bigcommerce.com/stores/{store_hash}/v3
    variables:
      store_hash:
        default: store_hash
components:
  parameters:
    FilterNameParam:
      name: name
      in: query
      description: Filter items by first_name and last_name.
      schema:
        type: array
        items:
          type: string
    FilterNameLikeParam:
      name: name:like
      in: query
      description: >-
        Filter items by substring in first_name and last_name.
      schema:
        type: array
        items:
          type: string
    FilterIdParam:
      name: id:in
      in: query
      description: |-
        Filter items by id.
      schema:
        type: array
        items:
          type: integer
    FilterDateModifiedParam:
      name: date_modified
      in: query
      description: Filter items by date_modified using RFC 3339 format.
      schema:
        type: string
        format: date-time
    FilterDateModifiedMinParam:
      name: date_modified:min
      in: query
      description: Filter items by mininum date_modified using RFC 3339 format.
      schema:
        type: string
    FilterDateModifiedMaxParam:
      name: date_modified:max
      in: query
      description: Filter items by maximum date_modified using RFC 3339 format.
      schema:
        type: string
        format: date-time
    FilterDateCreatedParam:
      name: date_created
      in: query
      description: Filter items by date_created using RFC 3339 format..
      schema:
        type: string
        format: date-time
    FilterDateCreatedMinParam:
      name: date_created:min
      in: query
      description: Filter items by date_created using RFC 3339 format..
      schema:
        type: string
        format: date-time
    FilterDateCreatedMaxParam:
      name: date_created:max
      in: query
      description: Filter items by maximum date_created using RFC 3339 format.
      schema:
        type: string
    FilterCompanyParam:
      name: company
      in: query
      description: Filter items by company.
      schema:
        type: array
        items:
          type: string
    FilterThingIDParam:
      name: thing_id
      in: query
      description: Filter items by thing_id.
      schema:
        type: array
        items:
          type: string
    FilterThingAttributeTypeParam:
      name: type
      in: query
      description: The type of the Thing attrribute.
      schema:
        type: string
        enum:
          - string
          - number
          - date
    FilterAttributeValueByNameParam:
      name: name
      in: query
      description: The attribute name for which we should return values. `name=age`
      schema:
        type: string
    FilterPageParam:
      name: page
      in: query
      description: Page number.
      schema:
        type: integer
    FilterLimitParam:
      in: query
      name: limit
      description: Items count per page.
      schema:
        type: number
    FilterThingIncludeParam:
      name: include
      in: query
      description: |-
        Indicates whether to include Thing sub-resources:
      schema:
        type: string
        enum:
          - addresses
          - storecredit
          - attributes
          - formfields
    FilterAddressIncludeParam:
      name: include
      in: query
      description: |-
        Indicates whether to include Thing address sub-resources:
        * `formfields` - address form fields
        `include=formfields`
      schema:
        type: string
        enum:
          - formfields
    FilterThingIdParam:
      in: query
      name: Thing_id:in
      description: The ID of the Thing. `Thing_id:in=23,24,55`
      schema:
        type: array
        items:
          type: integer
    FilterAttributeIdParam:
      name: attribute_id:in
      in: query
      description: The attribute id for which we should return values. `attribute_id:in=1,2`
      schema:
        type: array
        items:
          type: integer
    FilterThingIdEqualsParam:
      in: query
      name: Thing_id
      description: The ID of the *Thing*.
      schema:
        type: integer
    FilterAddressIdEqualsParam:
      name: address_id
      in: query
      description: The ID of the *Thing Address*.
      schema:
        type: integer
    FilterFormFieldNameParam:
      name: field_name
      in: query
      description: The fields name.
      schema:
        type: string
    FilterFormFieldTypeParam:
      name: field_type
      in: query
      description: |-
        The field type. 
         * `checkboxes` - checkboxes field
         * `date` - date field
         * `multiline` - multiline text field
         * `numbers` - numbers only field
         * `password` - password field
         * `radiobuttons` - radio buttons field
         * `text` - text field
         * `picklist` - pick list field
      schema:
        type: string
        enum:
          - checkboxes
          - date
          - multiline
          - numbers
          - password
          - radiobuttons
          - text
          - picklist
  responses:
    ThingCollectionResponse:
      description: Thing Collection Response
      content:
        application/json:
          schema:
            title: ThingCollectionResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Thing"
              meta:
                $ref: "#/components/schemas/CollectionMeta"
    ThingResponse:
      description: Thing Response
      content:
        application/json:
          schema:
            title: ThingsResponse
            description: Response payload for the BigCommerce API.
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/Thing"
              meta:
                type: object
    FormFieldValueCollectionResponse:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/FormFieldValue"
              meta:
                $ref: "#/components/schemas/CollectionMeta"
    FormFieldValuesResponse:
      description: ""
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: "#/components/schemas/FormFieldValue"
              meta:
                type: object
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            title: Error
            type: object
            properties:
              status:
                type: integer
              title:
                type: string
              type:
                type: string
    15001:
      description: You should use this space to describe how to resolve the error.
      content:
        application/json:
          schema:
            title: Error
            type: object
            properties:
              status:
                type: integer
              title:
                type: string
              type:
                type: string              
    12001:
      description: Internal Server Error
      content:
        application/json:
          schema:
            title: Error
            type: object
            properties:
              status:
                type: integer
              title:
                type: string
              type:
                type: string                    
  securitySchemes:
    X-Auth-Client:
      type: apiKey
      name: X-Auth-Client
      in: header
    X-Auth-Token:
      type: apiKey
      name: X-Auth-Token
      in: header
  schemas:
    Pagination:
      title: Pagination
      description: Data about the response, including pagination and collection totals.
      type: object
      properties:
        total:
          description: Total number of items in the result set.
          type: integer
          format: int32
          example: 55
        count:
          description: Total number of items in the collection response.
          type: integer
          format: int32
          example: 10
        per_page:
          description: The amount of items returned in the collection per page, controlled
            by the limit parameter.
          type: integer
          format: int32
          example: 10
        current_page:
          description: The page you are currently on within the collection.
          type: integer
          format: int32
          example: 1
        total_pages:
          description: The total number of pages in the collection.
          type: integer
          format: int32
          example: 3
    CollectionMeta:
      title: Collection Meta
      description: Data about the response, including pagination and collection totals.
      type: object
      properties:
        pagination:
          $ref: "#/components/schemas/Pagination"
    ErrorResponse:
      title: Error Response
      type: object
      properties:
        status:
          description: The HTTP status code.
          type: integer
          format: int32
        title:
          description: The error title describing the particular error.
          type: string
        type:
          type: string
        instance:
          type: string
        errors:
          type: object
          additionalProperties:
            type: string
    Thing:
      title: Thing
      type: object
      properties:
        email:
          description: The email of the Thing. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
          example: janedoe@email.com
        first_name:
          description: The first name of the Thing.
          type: string
          minLength: 1
          maxLength: 100
          example: Jane
        last_name:
          description: The last name of the Thing.
          type: string
          minLength: 1
          maxLength: 100
          example: doe
        company:
          description: The company of the Thing.
          type: string
          minLength: 0
          maxLength: 255
          example: BigCommerce
        phone:
          description: The phone number of the Thing.
          type: string
          minLength: 0
          maxLength: 50
          example: 1234567890
        notes:
          description: The Thing notes.
          type: string
          example: The things notes
        tax_exempt_category:
          description: The tax exempt category code for the Thing.
          type: string
          minLength: 0
          maxLength: 255
          example: tax-456
        thing_group_id:
          description: Id of the group which this Thing belongs to.
          type: integer
          format: int32
          example: 56
        id:
          description: The unique numeric ID of the Thing.
          type: integer
          format: int32
          example: 2
        date_modified:
          description: The date on which the Thing was modified.
          type: string
          format: date-time
          example: 2018-08-15T14:49:00+00:00
          readOnly: true
        date_created:
          description: The date of which the Thing was created.
          type: string
          format: date-time
          example: 2018-08-15T14:49:00+00:00
          readOnly: true
        address_count:
          description: Total number of Thing addresses
          type: integer
          format: int32
          example: 4
        attribute_count:
          description: Total number of Thing attributes
          type: integer
          format: int32
          example: 8
        form_fields:
          description: Array of form fields. Controlled by `formfields` parameter.
          type: array
          items:
            $ref: "#/components/schemas/FormFieldValue"
        store_credit:
          description: Store credit. Controlled by `storecredit` parameter.
          type: number
          format: double
          example: 12.45
    ThingPost:
      title: Thing Post
      type: object
      properties:
        email:
          description: The email of the Thing. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
          example: janedoe@email.com
        first_name:
          description: The first name of the Thing.
          type: string
          minLength: 1
          maxLength: 100
          example: Jane
        last_name:
          description: The last name of the Thing.
          type: string
          minLength: 1
          maxLength: 100
          example: Doe
        company:
          description: The company of the Thing.
          type: string
          minLength: 0
          maxLength: 255
          example: BigCommerce
        phone:
          description: The phone number of the Thing.
          type: string
          minLength: 0
          maxLength: 50
          example: 1234567890
        notes:
          description: The Thing notes.
          type: string
          example: The thing notes.
        tax_exempt_category:
          description: The tax exempt category code for the Thing.
          type: string
          minLength: 0
          maxLength: 255
          example: tax-456
        thing_group_id:
          description: Id of the group which this Thing belongs to.
          type: integer
          format: int32
          example: 5
      required:
        - email
        - first_name
        - phone
    ThingPut:
      title: Thing Put
      type: object
      properties:
        email:
          description: The email of the Thing. Must be unique.
          type: string
          minLength: 3
          maxLength: 255
          example: janedoe@email.com
        first_name:
          description: The first name of the Thing.
          type: string
          minLength: 1
          maxLength: 100
          example: Jane
        last_name:
          description: The last name of the Thing.
          type: string
          minLength: 1
          maxLength: 100
          example: Doe
        company:
          description: The company of the Thing.
          type: string
          minLength: 0
          maxLength: 255
          example: BigComerce
        phone:
          description: The phone number of the Thing.
          type: string
          minLength: 0
          maxLength: 50
          example: 1234567890
        notes:
          description: The Thing notes.
          type: string
        tax_exempt_category:
          description: The tax exempt category code for the Thing.
          type: string
          minLength: 0
          maxLength: 255
        Thing_group_id:
          description: Id of the group which this Thing belongs to.
          type: integer
          format: int32
        id:
          description: The unique numeric ID of the Thing.
          type: integer
          format: int32
    ThingFormFieldValue:
      allOf:
        - $ref: "#/components/schemas/FormFieldValue"
        - type: object
          properties:
            thing_id:
              type: integer
            thing_name:
              type: string
          required:
            - thing_id
      title: Thing Form Field Value
    FormFieldValue:
      oneOf:
        - $ref: "#/components/schemas/Thing"
        - $ref: "#/components/schemas/ThingFormFieldValue"
      title: "Form Field Value"