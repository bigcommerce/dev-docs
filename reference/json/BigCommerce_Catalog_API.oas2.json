{
  "swagger": "2.0",
  "info": {
    "title": "Catalog APIs",
    "version": "",
    "description": "### Catalog\n\nThe Catalog API manages products, brands and categories for a store. To learn more about the Catalog resources see [Catalog Products](https://developer.bigcommerce.com/api-docs/catalog/products-overview) and [Categories](https://developer.bigcommerce.com/api-docs/catalog/products-overview#products-overview_categories).",
    "termsOfService": "",
    "license": {
      "name": ""
    }
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{$$.env.store_hash}/v3",
  "tags": [
    {
      "name": "Catalog"
    },
    {
      "name": "Products"
    },
    {
      "name": "Product Metafields"
    },
    {
      "name": "Product Bulk Pricing Rules"
    },
    {
      "name": "Product Custom Fields"
    },
    {
      "name": "Product Images"
    },
    {
      "name": "Product Variant Options"
    },
    {
      "name": "Product Variant Option Values"
    },
    {
      "name": "Product Variants"
    },
    {
      "name": "Product Variants Metafields"
    },
    {
      "name": "Product Modifiers"
    },
    {
      "name": "Product Modifier Values"
    },
    {
      "name": "Product Modifier Images"
    },
    {
      "name": "Product Complex Rules"
    },
    {
      "name": "Product Reviews"
    },
    {
      "name": "Product Videos"
    },
    {
      "name": "Brands"
    },
    {
      "name": "Brand Metafields"
    },
    {
      "name": "Brand Images"
    },
    {
      "name": "Category"
    },
    {
      "name": "Category Metafields"
    },
    {
      "name": "Category Images"
    },
    {
      "name": "Variants"
    }
  ],
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/catalog/products": {
      "get": {
        "description": "Returns a list of **Products**. Optional filter parameters can be passed in.",
        "operationId": "getProducts",
        "parameters": [
          {
            "name": "id",
            "description": "Filter items by id.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "name",
            "description": "Filter items by name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "sku",
            "description": "Filter items by sku.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "upc",
            "description": "Filter items by upc.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "price",
            "description": "Filter items by price.\n",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "name": "weight",
            "description": "Filter items by weight.\n",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "name": "condition",
            "description": "Filter items by condition.\n",
            "required": false,
            "in": "query",
            "type": "integer",
            "enum": [
              "new",
              "used",
              "refurbished"
            ]
          },
          {
            "name": "brand_id",
            "description": "Filter items by brand_id.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "date_modified",
            "description": "Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`",
            "required": false,
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_last_imported",
            "description": "Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`",
            "required": false,
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "is_visible",
            "description": "Filter items by if visible on the storefront. ",
            "required": false,
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "is_featured",
            "description": "Filter items by is_featured.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "is_free_shipping",
            "description": "Filter items by is_free_shipping.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "inventory_level",
            "description": "Filter items by inventory_level.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "inventory_low",
            "description": "Filter items by inventory_low. Values: 1, 0.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "out_of_stock",
            "description": "Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "total_sold",
            "description": "Filter items by total_sold.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "type",
            "description": "Filter items by type: `physical` or `digital`.",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "digital",
              "physical"
            ]
          },
          {
            "name": "categories",
            "description": "Filter items by categories.\n If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "keyword",
            "description": "Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "keyword_context",
            "description": "Set context for a product search.",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "shopper",
              "merchant"
            ]
          },
          {
            "name": "status",
            "description": "Filter items by status.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include",
            "description": "Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "variants",
              "images",
              "custom_fields",
              "bulk_pricing_rules",
              "primary_image",
              "modifiers",
              "options",
              "videos"
            ]
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "availability",
            "description": "Filter items by availability. Values are: available, disabled, preorder.\n",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "available",
              "disabled",
              "preorder"
            ]
          },
          {
            "name": "price_list_id",
            "description": "This filter returns the product pricing with the *Price List* pricing instead. To use: \n`?price_list_id=1`.\nIf there are variants use:\n`?price_list_id=1&include=variants`",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "direction",
            "description": "Sort direction. Acceptable values are: `asc`, `desc`.\n",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "sort",
            "description": "Field name to sort by.\n",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "id",
              "name",
              "sku",
              "price",
              "date_modified",
              "date_last_imported",
              "inventory_level",
              "is_visible",
              "total_sold"
            ]
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common Product properties.",
                    "title": "Product",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The product name.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "Smith Journal 13"
                      },
                      "type": {
                        "type": "string",
                        "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                        "x-required": [
                          "post"
                        ],
                        "enum": [
                          "physical",
                          "digital"
                        ],
                        "example": "physical"
                      },
                      "sku": {
                        "type": "string",
                        "description": "User defined product code/stock keeping unit (SKU).\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "SM-13"
                      },
                      "description": {
                        "type": "string",
                        "description": "The product description, which can include HTML formatting.\n",
                        "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
                      },
                      "weight": {
                        "type": "number",
                        "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "width": {
                        "type": "number",
                        "description": "Width of the product, which can be used when calculating shipping costs.\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "depth": {
                        "type": "number",
                        "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "height": {
                        "type": "number",
                        "description": "Height of the product, which can be used when calculating shipping costs.\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "price": {
                        "type": "number",
                        "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "cost_price": {
                        "type": "number",
                        "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "retail_price": {
                        "type": "number",
                        "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "sale_price": {
                        "type": "number",
                        "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "tax_class_id": {
                        "type": "integer",
                        "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "product_tax_code": {
                        "type": "string",
                        "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "categories": {
                        "type": "array",
                        "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                        "x-required": [
                          "post"
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "brand_id": {
                        "type": "integer",
                        "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "inventory_level": {
                        "type": "integer",
                        "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "inventory_warning_level": {
                        "type": "integer",
                        "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "inventory_tracking": {
                        "type": "string",
                        "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                        "enum": [
                          "none",
                          "product",
                          "variant"
                        ]
                      },
                      "fixed_cost_shipping_price": {
                        "type": "number",
                        "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "is_free_shipping": {
                        "type": "boolean",
                        "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
                      },
                      "is_visible": {
                        "type": "boolean",
                        "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
                      },
                      "is_featured": {
                        "type": "boolean",
                        "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
                      },
                      "related_products": {
                        "type": "array",
                        "description": "An array of IDs for the related products.\n",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "warranty": {
                        "type": "string",
                        "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                        "minLength": 0,
                        "maxLength": 65535
                      },
                      "bin_picking_number": {
                        "type": "string",
                        "description": "The BIN picking number for the product.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "layout_file": {
                        "type": "string",
                        "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                        "minLength": 0,
                        "maxLength": 500
                      },
                      "upc": {
                        "type": "string",
                        "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "search_keywords": {
                        "type": "string",
                        "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                        "minLength": 0,
                        "maxLength": 65535
                      },
                      "availability": {
                        "type": "string",
                        "enum": [
                          "available",
                          "disabled",
                          "preorder"
                        ],
                        "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
                      },
                      "availability_description": {
                        "type": "string",
                        "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "gift_wrapping_options_type": {
                        "type": "string",
                        "enum": [
                          "any",
                          "none",
                          "list"
                        ],
                        "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
                      },
                      "gift_wrapping_options_list": {
                        "type": "array",
                        "description": "A list of gift-wrapping option IDs.\n",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "condition": {
                        "type": "string",
                        "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                        "enum": [
                          "New",
                          "Used",
                          "Refurbished"
                        ]
                      },
                      "is_condition_shown": {
                        "type": "boolean",
                        "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
                      },
                      "order_quantity_minimum": {
                        "type": "integer",
                        "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "order_quantity_maximum": {
                        "type": "integer",
                        "description": "The maximum quantity an order can contain when purchasing the product.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "page_title": {
                        "type": "string",
                        "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "meta_keywords": {
                        "type": "array",
                        "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                        "items": {
                          "type": "string"
                        }
                      },
                      "meta_description": {
                        "type": "string",
                        "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                        "minLength": 0,
                        "maxLength": 65535
                      },
                      "view_count": {
                        "type": "integer",
                        "description": "The number of times the product has been viewed.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "preorder_release_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                        "x-nullable": true
                      },
                      "preorder_message": {
                        "type": "string",
                        "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "is_preorder_only": {
                        "type": "boolean",
                        "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
                      },
                      "is_price_hidden": {
                        "type": "boolean",
                        "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
                      },
                      "price_hidden_label": {
                        "type": "string",
                        "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                        "minLength": 0,
                        "maxLength": 200
                      },
                      "custom_url": {
                        "type": "object",
                        "description": "The custom URL for the product on the storefront.",
                        "title": "Custom Url Product",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Product URL on the storefront.\n",
                            "x-url": true,
                            "example": "/red-large-shirt"
                          },
                          "is_customized": {
                            "type": "boolean",
                            "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                          }
                        }
                      },
                      "open_graph_type": {
                        "type": "string",
                        "description": "Type of product, defaults to `product`.\n",
                        "enum": [
                          "product",
                          "album",
                          "book",
                          "drink",
                          "food",
                          "game",
                          "movie",
                          "song",
                          "tv_show"
                        ]
                      },
                      "open_graph_title": {
                        "type": "string",
                        "description": "Title of the product, if not specified the product name will be used instead.\n"
                      },
                      "open_graph_description": {
                        "type": "string",
                        "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
                      },
                      "open_graph_use_meta_description": {
                        "type": "boolean",
                        "description": "Flag to determine if product description or open graph description is used.\n"
                      },
                      "open_graph_use_product_name": {
                        "type": "boolean",
                        "description": "Flag to determine if product name or open graph name is used.\n"
                      },
                      "open_graph_use_image": {
                        "type": "boolean",
                        "description": "Flag to determine if product image or open graph image is used.\n"
                      },
                      "brand_name or brand_id": {
                        "type": "string",
                        "example": "Common Good",
                        "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
                      },
                      "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number"
                      },
                      "mpn": {
                        "type": "string",
                        "description": "Manufacturer Part Number"
                      },
                      "calculated_price": {
                        "type": "number",
                        "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                        "format": "float"
                      },
                      "reviews_rating_sum": {
                        "type": "integer",
                        "description": "The total rating for the product.\n",
                        "example": 3.2
                      },
                      "reviews_count": {
                        "type": "integer",
                        "description": "The number of times the product has been rated.\n",
                        "example": 4
                      },
                      "total_sold": {
                        "type": "integer",
                        "description": "The total quantity of this product sold.\n",
                        "example": 80
                      },
                      "custom_fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                          "title": "Custom Field",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                              "minimum": 1,
                              "example": 6
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 250,
                              "example": "ISBN"
                            },
                            "value": {
                              "type": "string",
                              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 250,
                              "example": "1234567890123"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ]
                        }
                      },
                      "bulk_pricing_rules": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/BulkPricingRuleBase"
                        }
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date on which the product was created.\n",
                        "example": "2018-08-15T14:49:05+00:00"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date on which the product was modified.\n",
                        "example": "2018-08-24T14:41:00+00:00"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "title": "Product Image",
                          "allOf": [
                            {
                              "description": "Common ProductImage properties.",
                              "title": "Product Image Base",
                              "properties": {
                                "id": {
                                  "description": "The unique numeric ID of the image; increments sequentially.\n",
                                  "type": "integer"
                                },
                                "product_id": {
                                  "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                  "type": "integer"
                                },
                                "image_file": {
                                  "description": "The local path to the original image file uploaded to BigCommerce.\n",
                                  "type": "string"
                                },
                                "url_zoom": {
                                  "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                  "type": "string"
                                },
                                "url_standard": {
                                  "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                  "type": "string"
                                },
                                "url_thumbnail": {
                                  "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                  "type": "string"
                                },
                                "url_tiny": {
                                  "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                  "type": "string"
                                },
                                "date_modified": {
                                  "format": "date-time",
                                  "description": "The date on which the product image was modified.\n",
                                  "type": "string"
                                },
                                "is_thumbnail": {
                                  "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                                  "type": "boolean"
                                },
                                "sort_order": {
                                  "type": "integer",
                                  "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                                  "minimum": -2147483648,
                                  "maximum": 2147483647
                                },
                                "description": {
                                  "description": "The description for the image.\n",
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "properties": {
                                "id": {
                                  "description": "The unique numeric ID of the image; increments sequentially.\n",
                                  "type": "integer"
                                },
                                "product_id": {
                                  "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                  "type": "integer"
                                },
                                "image_file": {
                                  "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                                  "type": "string"
                                },
                                "url_zoom": {
                                  "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                  "type": "string"
                                },
                                "url_standard": {
                                  "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                  "type": "string"
                                },
                                "url_thumbnail": {
                                  "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                  "type": "string"
                                },
                                "url_tiny": {
                                  "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                  "type": "string"
                                },
                                "date_modified": {
                                  "format": "date-time",
                                  "description": "The date on which the product image was modified.\n",
                                  "type": "string"
                                },
                                "image_url": {
                                  "type": "string",
                                  "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                                  "description": "Publically available URL. \nUse the image_url when creating a product. "
                                }
                              }
                            }
                          ],
                          "type": "object"
                        }
                      },
                      "videos": {
                        "type": "array",
                        "items": {
                          "description": "A product video model.\n",
                          "allOf": [
                            {
                              "description": "Common ProductVideo properties.",
                              "title": "Product Video Base",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                                  "minLength": 0,
                                  "maxLength": 255
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                                },
                                "sort_order": {
                                  "type": "integer",
                                  "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                                  "minimum": -2147483648,
                                  "maximum": 2147483647
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The video type (a short name of a host site).\n",
                                  "enum": [
                                    "youtube"
                                  ]
                                }
                              }
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The unique numeric ID of the product video; increments sequentially.\n"
                                },
                                "video_id": {
                                  "description": "The ID of the video on a host site.\n",
                                  "type": "string"
                                },
                                "product_id": {
                                  "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                  "type": "integer"
                                },
                                "length": {
                                  "description": "Length of the video. This will be filled in according to data on a host site.\n",
                                  "type": "string"
                                }
                              }
                            }
                          ],
                          "title": "Product Video",
                          "type": "object"
                        }
                      },
                      "variants": {
                        "type": "array",
                        "items": {
                          "allOf": [
                            {
                              "description": "Common Variant properties.",
                              "title": "Variant Base",
                              "properties": {
                                "cost_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The cost price of the variant. Not affected by Price List prices.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "sale_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "retail_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "weight": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "width": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "height": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "depth": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "is_free_shipping": {
                                  "type": "boolean",
                                  "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                                },
                                "fixed_cost_shipping_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "purchasing_disabled": {
                                  "type": "boolean",
                                  "description": "If `true`, this variant will not be purchasable on the storefront."
                                },
                                "purchasing_disabled_message": {
                                  "type": "string",
                                  "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                                  "minLength": 0,
                                  "maxLength": 255
                                },
                                "upc": {
                                  "type": "string",
                                  "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                                  "x-nullable": true
                                },
                                "inventory_level": {
                                  "type": "integer",
                                  "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                                  "x-nullable": true
                                },
                                "inventory_warning_level": {
                                  "type": "integer",
                                  "description": "When the variant hits this inventory level, it is considered low stock.",
                                  "x-nullable": true
                                },
                                "bin_picking_number": {
                                  "type": "string",
                                  "description": "Identifies where in a warehouse the variant is located.",
                                  "x-nullable": true,
                                  "minLength": 0,
                                  "maxLength": 255
                                }
                              }
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "product_id": {
                                  "type": "integer"
                                },
                                "sku": {
                                  "type": "string"
                                },
                                "sku_id": {
                                  "type": "integer",
                                  "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                                  "x-nullable": true
                                },
                                "option_values": {
                                  "type": "array",
                                  "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                                  "items": {
                                    "allOf": [
                                      {
                                        "description": "Common Option Value Product properties.",
                                        "title": "Option Value Product Base",
                                        "properties": {
                                          "option_display_name": {
                                            "type": "string",
                                            "description": "The name of the option.\n",
                                            "x-required": [
                                              "post"
                                            ],
                                            "minLength": 1,
                                            "maxLength": 255,
                                            "example": "Color"
                                          },
                                          "label": {
                                            "type": "string",
                                            "description": "The label of the option value.\n",
                                            "x-required": [
                                              "post"
                                            ],
                                            "minLength": 1,
                                            "maxLength": 255,
                                            "example": "Beige"
                                          }
                                        }
                                      },
                                      {
                                        "properties": {
                                          "id": {
                                            "type": "integer"
                                          },
                                          "option_id": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Option Value Variant",
                                    "type": "object"
                                  }
                                },
                                "calculated_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                                }
                              }
                            }
                          ],
                          "type": "object"
                        }
                      },
                      "base_variant_id": {
                        "type": "integer",
                        "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                        "example": 363
                      },
                      "id": {
                        "type": "integer",
                        "description": "ID of the product. Read Only"
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "title": "Collection Meta",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 174,
                    "name": "1L Le Parfait Jar",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 7.95,
                    "cost_price": 0,
                    "retail_price": 10,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 7.95,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 7,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "jar, glass",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:46+00:00",
                    "date_modified": "2018-09-05T20:42:07+00:00",
                    "view_count": 10,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/1l-le-parfait-jar/",
                      "is_customized": true
                    },
                    "base_variant_id": 345,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 345,
                        "product_id": 174,
                        "sku": "",
                        "sku_id": {},
                        "price": 7.95,
                        "calculated_price": 7.95,
                        "sale_price": 0,
                        "retail_price": 10,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 167,
                    "name": "Able Brewing System",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 225,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 225,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 43,
                    "option_set_id": 52,
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 2,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:36+00:00",
                    "date_modified": "2018-08-20T15:11:17+00:00",
                    "view_count": 21,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/able-brewing-system/",
                      "is_customized": true
                    },
                    "base_variant_id": 338,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 338,
                        "product_id": 167,
                        "sku": "",
                        "sku_id": {},
                        "price": 225,
                        "calculated_price": 225,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/167/images/398/ablebrewingsystem4_1024x1024__07155__93974.1534344516.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 181,
                    "name": "All Purpose Cleaner",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 15,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 15,
                    "categories": [
                      21,
                      22
                    ],
                    "brand_id": 37,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:51+00:00",
                    "date_modified": "2018-08-15T15:01:15+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/all-purpose-cleaner/",
                      "is_customized": true
                    },
                    "base_variant_id": 352,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 352,
                        "product_id": 181,
                        "sku": "",
                        "sku_id": {},
                        "price": 15,
                        "calculated_price": 15,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/181/images/442/CommonGoodAllPurposeCleaner_d37aa1e8_e16f_4309_bddd_8fae0d94efc7_1024x1024__40180__66527.1534344531.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 193,
                    "name": "BigCommerce Coffee Mug",
                    "type": "physical",
                    "sku": "",
                    "description": "",
                    "weight": 4,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 10,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 10,
                    "categories": [
                      21
                    ],
                    "brand_id": 38,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-09-05T20:19:06+00:00",
                    "date_modified": "2018-09-05T20:19:06+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/bigcommerce-coffee-mug/",
                      "is_customized": false
                    },
                    "base_variant_id": 385,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 385,
                        "product_id": 193,
                        "sku": "",
                        "sku_id": {},
                        "price": 10,
                        "calculated_price": 10,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 4,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 4,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 194,
                    "name": "BigCommerce Coffee Mug_2",
                    "type": "physical",
                    "sku": "",
                    "description": "",
                    "weight": 3,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 11,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 11,
                    "categories": [
                      21
                    ],
                    "brand_id": 38,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-09-05T20:20:47+00:00",
                    "date_modified": "2018-09-05T20:20:47+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/bigcommerce-coffee-mug_2/",
                      "is_customized": false
                    },
                    "base_variant_id": 386,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 386,
                        "product_id": 194,
                        "sku": "",
                        "sku_id": {},
                        "price": 11,
                        "calculated_price": 11,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 3,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 3,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 195,
                    "name": "BigCommerce Coffee Mug_3",
                    "type": "physical",
                    "sku": "",
                    "description": "",
                    "weight": 3,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 11,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 11,
                    "categories": [
                      21
                    ],
                    "brand_id": 38,
                    "option_set_id": 50,
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-09-05T20:22:19+00:00",
                    "date_modified": "2018-09-07T20:01:26+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/bigcommerce-coffee-mug_3/",
                      "is_customized": false
                    },
                    "base_variant_id": {},
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 388,
                        "product_id": 195,
                        "sku": "SKU-4484A834",
                        "sku_id": 351,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 174,
                            "label": "Beige",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 389,
                        "product_id": 195,
                        "sku": "SKU-9E932372",
                        "sku_id": 352,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 175,
                            "label": "Grey",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 390,
                        "product_id": 195,
                        "sku": "SKU-29CE333F",
                        "sku_id": 353,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 176,
                            "label": "Black",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 391,
                        "product_id": 195,
                        "sku": "SKU-02FBF02A",
                        "sku_id": 354,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 189,
                            "label": "Black-Walnut",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 184,
                    "name": "Canvas Laundry Cart",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 15,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 249,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 249,
                    "categories": [
                      23,
                      22
                    ],
                    "brand_id": 36,
                    "option_set_id": 51,
                    "option_set_display": "right",
                    "inventory_level": 1497,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "variant",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 6,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:53+00:00",
                    "date_modified": "2018-08-28T19:02:11+00:00",
                    "view_count": 22,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/canvas-laundry-cart/",
                      "is_customized": true
                    },
                    "base_variant_id": {},
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 364,
                        "product_id": 184,
                        "sku": "SMA-RED",
                        "sku_id": 330,
                        "price": 15.99,
                        "calculated_price": 15.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": 15,
                        "calculated_weight": 15,
                        "width": 4,
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 497,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 177,
                            "label": "Small",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 180,
                            "label": "Red",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 365,
                        "product_id": 184,
                        "sku": "MED-RED",
                        "sku_id": 331,
                        "price": 555,
                        "calculated_price": 555,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 500,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 178,
                            "label": "Medium",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 180,
                            "label": "Red",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 366,
                        "product_id": 184,
                        "sku": "LAR-RED",
                        "sku_id": 332,
                        "price": {},
                        "calculated_price": 253.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 500,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 179,
                            "label": "Large",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 180,
                            "label": "Red",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 367,
                        "product_id": 184,
                        "sku": "SMA-GRE",
                        "sku_id": 333,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 177,
                            "label": "Small",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 181,
                            "label": "Green",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 368,
                        "product_id": 184,
                        "sku": "MED-GRE",
                        "sku_id": 334,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 178,
                            "label": "Medium",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 181,
                            "label": "Green",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 369,
                        "product_id": 184,
                        "sku": "LAR-GRE",
                        "sku_id": 335,
                        "price": {},
                        "calculated_price": 253.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 179,
                            "label": "Large",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 181,
                            "label": "Green",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 370,
                        "product_id": 184,
                        "sku": "SMA-BLU",
                        "sku_id": 336,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 177,
                            "label": "Small",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 182,
                            "label": "Blue",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 371,
                        "product_id": 184,
                        "sku": "MED-BLU",
                        "sku_id": 337,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 178,
                            "label": "Medium",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 182,
                            "label": "Blue",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 372,
                        "product_id": 184,
                        "sku": "LAR-BLU",
                        "sku_id": 338,
                        "price": {},
                        "calculated_price": 253.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 179,
                            "label": "Large",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 182,
                            "label": "Blue",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 173,
                    "name": "Ceramic Measuring Spoon Set",
                    "type": "physical",
                    "sku": "",
                    "description": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 18,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 18,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 1,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:45+00:00",
                    "date_modified": "2018-08-20T15:14:23+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/ceramic-measuring-spoon-set/",
                      "is_customized": true
                    },
                    "base_variant_id": 344,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 344,
                        "product_id": 173,
                        "sku": "",
                        "sku_id": {},
                        "price": 18,
                        "calculated_price": 18,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/173/images/424/measuringspoons1_1024x1024__22102__55079.1534344525.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 170,
                    "name": "Ceramic Measuring Spoons",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 25,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 25,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:42+00:00",
                    "date_modified": "2018-08-15T15:01:15+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/ceramic-measuring-spoons/",
                      "is_customized": true
                    },
                    "base_variant_id": 341,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 341,
                        "product_id": 170,
                        "sku": "",
                        "sku_id": {},
                        "price": 25,
                        "calculated_price": 25,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 176,
                    "name": "Ceramic Sugar & Creamer Set",
                    "type": "physical",
                    "sku": "",
                    "description": "<div data-position=\"description\"> <div class=\"description\"> <div class=\"rte-content\"> <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p> </div> </div> </div>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 59,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 59,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 1,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:48+00:00",
                    "date_modified": "2018-08-31T15:19:27+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/ceramic-sugar-creamer-set/",
                      "is_customized": true
                    },
                    "base_variant_id": 347,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 347,
                        "product_id": 176,
                        "sku": "",
                        "sku_id": {},
                        "price": 59,
                        "calculated_price": 59,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/176/images/432/milkandcreamer1_1024x1024__69117__81345.1534344528.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 39,
                    "count": 10,
                    "per_page": 10,
                    "current_page": 1,
                    "total_pages": 4,
                    "links": {
                      "next": "?sort=name&include=variants&limit=10&page=2",
                      "current": "?sort=name&include=variants&limit=10&page=1"
                    },
                    "too_many": false
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Products",
        "tags": [
          "Products",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Product*. Only one product can be created at a time.\n\n**Required Fields:**\n- `name`\n- `type`\n- `weight`\n- `categories`\n- `price`\n\n**Read-Only Fields**\n- `id`\n- `date_created`\n- `date_modified`\n- `calculated_price`\n- `base_variant_id`\n\n**Usage Notes**\n* `POST` requests to `/products` accepts a single `video` object; to send an array of video objects, see: `/products/{product_id}/videos`",
        "operationId": "createProduct",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ProductPost"
            },
            "x-examples": {
              "Simple Product": "{\n  \"name\": \"BigCommerce Coffee Mug\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23,\n    21\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\"\n}",
              "Creating a Product with Variants": "{\n    \"name\": \"BigCommerce Coffee Mug\",\n    \"price\": \"10.00\",\n    \"categories\":[\n            23,21\n        ],\n        \n    \"weight\": 4,\n    \"type\": \"physical\",\n    \"variants\":[\n        {\n            \"sku\": \"SKU-BLU\",\n            \"option_values\":[\n                    {\n                        \"option_display_name\": \"Mug Color\",\n                        \"label\": \"Blue\"\n                    }\n                ]\n        },\n        {\n            \"sku\": \"SKU-GRAY\",\n            \"option_values\":[\n                    {\n                        \"option_display_name\": \"Mug Color\",\n                        \"label\": \"Gray\"\n                    }\n                ]\n        }\n    ]\n}",
              "application/json": {
                "name": "deser",
                "type": "digital",
                "sku": "nulla cill",
                "description": "velit ea laborum",
                "weight": 6653716699.214403,
                "width": 3309999404.9099708,
                "depth": 4134454397.1852517,
                "height": 5598633863.808846,
                "price": 49476158.100480735,
                "cost_price": 50352345.96818179,
                "retail_price": 36286048.34741529,
                "sale_price": 11052123.33915786,
                "tax_class_id": 306504518,
                "product_tax_code": "a",
                "categories": [
                  5956409,
                  -946051
                ],
                "brand_id": 996103720,
                "inventory_level": 632406493,
                "inventory_warning_level": 550419826,
                "inventory_tracking": "none",
                "fixed_cost_shipping_price": 58177662.107555576,
                "is_free_shipping": true,
                "is_visible": true,
                "is_featured": true,
                "related_products": [
                  91656741,
                  -2410364,
                  73795790
                ],
                "warranty": "",
                "bin_picking_number": "sint amet",
                "layout_file": "nulla do",
                "upc": "cons",
                "search_keywords": "ut sit",
                "availability": "disabled",
                "availability_description": "aliqu",
                "gift_wrapping_options_type": "any",
                "gift_wrapping_options_list": [
                  25901911,
                  -11127634
                ],
                "sort_order": -1555536918,
                "condition": "Refurbished",
                "is_condition_shown": true,
                "order_quantity_minimum": 240355460,
                "order_quantity_maximum": 178262377,
                "page_title": "eu magn",
                "meta_keywords": [
                  "aute sed laboris",
                  "sint proident",
                  "Duis"
                ],
                "meta_description": "Excepteu",
                "view_count": 311660434,
                "preorder_release_date": "1978-02-08T16:31:47.697Z",
                "preorder_message": "eu veniam ",
                "is_preorder_only": true,
                "is_price_hidden": true,
                "price_hidden_label": "elit mo",
                "custom_url": {
                  "url": "amet dolore",
                  "is_customized": true
                },
                "open_graph_type": "drink",
                "open_graph_title": "sed dolore laboris",
                "open_graph_description": "qui aute occaecat irure Excepteur",
                "open_graph_use_meta_description": false,
                "open_graph_use_product_name": true,
                "open_graph_use_image": true,
                "brand_name": "consectetur ullamco",
                "custom_fields": [
                  {
                    "name": "incidid",
                    "value": "amet "
                  },
                  {
                    "name": "laboris u",
                    "value": "sed occae"
                  },
                  {
                    "name": "d",
                    "value": "in sin"
                  },
                  {
                    "name": "quis",
                    "value": "non nisi d"
                  }
                ],
                "bulk_pricing_rules": [
                  {
                    "quantity_min": 36386399,
                    "quantity_max": 16049178,
                    "type": "percent",
                    "amount": 45682957.00946889
                  },
                  {
                    "quantity_min": 30096932,
                    "quantity_max": 18129770,
                    "type": "fixed",
                    "amount": 81926328.72978693
                  },
                  {
                    "quantity_min": 26209769,
                    "quantity_max": 20727080,
                    "type": "percent",
                    "amount": 98517183.05615105
                  },
                  {
                    "quantity_min": 23518238,
                    "quantity_max": 69792968,
                    "type": "percent",
                    "amount": 77246599.44982533
                  },
                  {
                    "quantity_min": 68783738,
                    "quantity_max": 55517681,
                    "type": "fixed",
                    "amount": 131961.92377118443
                  }
                ],
                "variants": [
                  {
                    "cost_price": 43411253.95607388,
                    "price": 33995022.931045726,
                    "sale_price": 68667606.302963,
                    "retail_price": 9552682.621407116,
                    "weight": 35541646.32589165,
                    "width": 41896181.62487447,
                    "height": 46658474.628709756,
                    "depth": 15671295.040809019,
                    "is_free_shipping": true,
                    "fixed_cost_shipping_price": 84506228.2754877,
                    "purchasing_disabled": true,
                    "purchasing_disabled_message": "aute ",
                    "image_url": "cillum in sed",
                    "upc": "amet culpa",
                    "inventory_level": -95050659,
                    "inventory_warning_level": -94168530,
                    "bin_picking_number": "paria",
                    "product_id": 48998310,
                    "sku": "occ",
                    "option_values": [
                      {
                        "option_display_name": "des",
                        "label": "eni"
                      }
                    ]
                  }
                ]
              },
              "Create Product with Image": "{\n  \"name\": \"Create product with imageT\",\n  \"price\": \"10.00\",\n  \"categories\": [\n    23\n  ],\n  \"weight\": 4,\n  \"type\": \"physical\",\n  \"images\":[\n  \t{\n\t\"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg\"\n  \t}\n  \t]\n}"
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "$ref": "#/parameters/FilterIncludeFieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Product Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Product properties.",
                  "title": "Product",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The product name.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Smith Journal 13"
                    },
                    "type": {
                      "type": "string",
                      "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "physical",
                        "digital"
                      ],
                      "example": "physical"
                    },
                    "sku": {
                      "type": "string",
                      "description": "User defined product code/stock keeping unit (SKU).\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "SM-13"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product description, which can include HTML formatting.\n",
                      "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "width": {
                      "type": "number",
                      "description": "Width of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "depth": {
                      "type": "number",
                      "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "price": {
                      "type": "number",
                      "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "cost_price": {
                      "type": "number",
                      "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "tax_class_id": {
                      "type": "integer",
                      "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "product_tax_code": {
                      "type": "string",
                      "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "categories": {
                      "type": "array",
                      "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                      "x-required": [
                        "post"
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "brand_id": {
                      "type": "integer",
                      "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_tracking": {
                      "type": "string",
                      "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                      "enum": [
                        "none",
                        "product",
                        "variant"
                      ]
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
                    },
                    "is_featured": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
                    },
                    "related_products": {
                      "type": "array",
                      "description": "An array of IDs for the related products.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "warranty": {
                      "type": "string",
                      "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "The BIN picking number for the product.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "layout_file": {
                      "type": "string",
                      "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                      "minLength": 0,
                      "maxLength": 500
                    },
                    "upc": {
                      "type": "string",
                      "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "available",
                        "disabled",
                        "preorder"
                      ],
                      "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
                    },
                    "availability_description": {
                      "type": "string",
                      "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "gift_wrapping_options_type": {
                      "type": "string",
                      "enum": [
                        "any",
                        "none",
                        "list"
                      ],
                      "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
                    },
                    "gift_wrapping_options_list": {
                      "type": "array",
                      "description": "A list of gift-wrapping option IDs.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "condition": {
                      "type": "string",
                      "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                      "enum": [
                        "New",
                        "Used",
                        "Refurbished"
                      ]
                    },
                    "is_condition_shown": {
                      "type": "boolean",
                      "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
                    },
                    "order_quantity_minimum": {
                      "type": "integer",
                      "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "order_quantity_maximum": {
                      "type": "integer",
                      "description": "The maximum quantity an order can contain when purchasing the product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "page_title": {
                      "type": "string",
                      "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "view_count": {
                      "type": "integer",
                      "description": "The number of times the product has been viewed.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "preorder_release_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                      "x-nullable": true
                    },
                    "preorder_message": {
                      "type": "string",
                      "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "is_preorder_only": {
                      "type": "boolean",
                      "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
                    },
                    "is_price_hidden": {
                      "type": "boolean",
                      "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
                    },
                    "price_hidden_label": {
                      "type": "string",
                      "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the product on the storefront.",
                      "title": "Custom Url Product",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Product URL on the storefront.\n",
                          "x-url": true,
                          "example": "/red-large-shirt"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                        }
                      }
                    },
                    "open_graph_type": {
                      "type": "string",
                      "description": "Type of product, defaults to `product`.\n",
                      "enum": [
                        "product",
                        "album",
                        "book",
                        "drink",
                        "food",
                        "game",
                        "movie",
                        "song",
                        "tv_show"
                      ]
                    },
                    "open_graph_title": {
                      "type": "string",
                      "description": "Title of the product, if not specified the product name will be used instead.\n"
                    },
                    "open_graph_description": {
                      "type": "string",
                      "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
                    },
                    "open_graph_use_meta_description": {
                      "type": "boolean",
                      "description": "Flag to determine if product description or open graph description is used.\n"
                    },
                    "open_graph_use_product_name": {
                      "type": "boolean",
                      "description": "Flag to determine if product name or open graph name is used.\n"
                    },
                    "open_graph_use_image": {
                      "type": "boolean",
                      "description": "Flag to determine if product image or open graph image is used.\n"
                    },
                    "brand_name or brand_id": {
                      "type": "string",
                      "example": "Common Good",
                      "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
                    },
                    "gtin": {
                      "type": "string",
                      "description": "Global Trade Item Number"
                    },
                    "mpn": {
                      "type": "string",
                      "description": "Manufacturer Part Number"
                    },
                    "calculated_price": {
                      "type": "number",
                      "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                      "format": "float"
                    },
                    "reviews_rating_sum": {
                      "type": "integer",
                      "description": "The total rating for the product.\n",
                      "example": 3.2
                    },
                    "reviews_count": {
                      "type": "integer",
                      "description": "The number of times the product has been rated.\n",
                      "example": 4
                    },
                    "total_sold": {
                      "type": "integer",
                      "description": "The total quantity of this product sold.\n",
                      "example": 80
                    },
                    "custom_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                        "title": "Custom Field",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                            "minimum": 1,
                            "example": 6
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "ISBN"
                          },
                          "value": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "1234567890123"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      }
                    },
                    "bulk_pricing_rules": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/BulkPricingRuleBase"
                      }
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was created.\n",
                      "example": "2018-08-15T14:49:05+00:00"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was modified.\n",
                      "example": "2018-08-24T14:41:00+00:00"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "title": "Product Image",
                        "allOf": [
                          {
                            "description": "Common ProductImage properties.",
                            "title": "Product Image Base",
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "is_thumbnail": {
                                "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                                "type": "boolean"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "description": {
                                "description": "The description for the image.\n",
                                "type": "string"
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "image_url": {
                                "type": "string",
                                "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                                "description": "Publically available URL. \nUse the image_url when creating a product. "
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "videos": {
                      "type": "array",
                      "items": {
                        "description": "A product video model.\n",
                        "allOf": [
                          {
                            "description": "Common ProductVideo properties.",
                            "title": "Product Video Base",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "description": {
                                "type": "string",
                                "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "type": {
                                "type": "string",
                                "description": "The video type (a short name of a host site).\n",
                                "enum": [
                                  "youtube"
                                ]
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the product video; increments sequentially.\n"
                              },
                              "video_id": {
                                "description": "The ID of the video on a host site.\n",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "length": {
                                "description": "Length of the video. This will be filled in according to data on a host site.\n",
                                "type": "string"
                              }
                            }
                          }
                        ],
                        "title": "Product Video",
                        "type": "object"
                      }
                    },
                    "variants": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common Variant properties.",
                            "title": "Variant Base",
                            "properties": {
                              "cost_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The cost price of the variant. Not affected by Price List prices.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "sale_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "retail_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "weight": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "depth": {
                                "type": "number",
                                "format": "double",
                                "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "is_free_shipping": {
                                "type": "boolean",
                                "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                              },
                              "fixed_cost_shipping_price": {
                                "type": "number",
                                "format": "double",
                                "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "purchasing_disabled": {
                                "type": "boolean",
                                "description": "If `true`, this variant will not be purchasable on the storefront."
                              },
                              "purchasing_disabled_message": {
                                "type": "string",
                                "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "upc": {
                                "type": "string",
                                "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                                "x-nullable": true
                              },
                              "inventory_level": {
                                "type": "integer",
                                "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                                "x-nullable": true
                              },
                              "inventory_warning_level": {
                                "type": "integer",
                                "description": "When the variant hits this inventory level, it is considered low stock.",
                                "x-nullable": true
                              },
                              "bin_picking_number": {
                                "type": "string",
                                "description": "Identifies where in a warehouse the variant is located.",
                                "x-nullable": true,
                                "minLength": 0,
                                "maxLength": 255
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "product_id": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "sku_id": {
                                "type": "integer",
                                "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                                "x-nullable": true
                              },
                              "option_values": {
                                "type": "array",
                                "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                                "items": {
                                  "allOf": [
                                    {
                                      "description": "Common Option Value Product properties.",
                                      "title": "Option Value Product Base",
                                      "properties": {
                                        "option_display_name": {
                                          "type": "string",
                                          "description": "The name of the option.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Color"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the option value.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Beige"
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer"
                                        },
                                        "option_id": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Option Value Variant",
                                  "type": "object"
                                }
                              },
                              "calculated_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "base_variant_id": {
                      "type": "integer",
                      "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                      "example": 363
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the product. Read Only"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 174,
                  "name": "1L Le Parfait Jar",
                  "type": "physical",
                  "sku": "",
                  "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                  "weight": 1,
                  "width": 0,
                  "depth": 0,
                  "height": 0,
                  "price": 7.95,
                  "cost_price": 0,
                  "retail_price": 10,
                  "sale_price": 0,
                  "map_price": 0,
                  "tax_class_id": 0,
                  "product_tax_code": "",
                  "calculated_price": 7.95,
                  "categories": [
                    23,
                    21
                  ],
                  "brand_id": 36,
                  "option_set_id": {},
                  "option_set_display": "right",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "inventory_tracking": "none",
                  "reviews_rating_sum": 0,
                  "reviews_count": 0,
                  "total_sold": 7,
                  "fixed_cost_shipping_price": 0,
                  "is_free_shipping": false,
                  "is_visible": true,
                  "is_featured": false,
                  "related_products": [
                    -1
                  ],
                  "warranty": "",
                  "bin_picking_number": "",
                  "layout_file": "product.html",
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "search_keywords": "jar, glass",
                  "availability": "available",
                  "availability_description": "",
                  "gift_wrapping_options_type": "any",
                  "gift_wrapping_options_list": [],
                  "sort_order": 0,
                  "condition": "New",
                  "is_condition_shown": false,
                  "order_quantity_minimum": 0,
                  "order_quantity_maximum": 0,
                  "page_title": "",
                  "meta_keywords": [],
                  "meta_description": "",
                  "date_created": "2018-08-15T14:48:46+00:00",
                  "date_modified": "2018-09-05T20:42:07+00:00",
                  "view_count": 10,
                  "preorder_release_date": {},
                  "preorder_message": "",
                  "is_preorder_only": false,
                  "is_price_hidden": false,
                  "price_hidden_label": "",
                  "custom_url": {
                    "url": "/all/1l-le-parfait-jar/",
                    "is_customized": true
                  },
                  "base_variant_id": 345,
                  "open_graph_type": "product",
                  "open_graph_title": "",
                  "open_graph_description": "",
                  "open_graph_use_meta_description": true,
                  "open_graph_use_product_name": true,
                  "open_graph_use_image": true
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "`Product` was in conflict with another product. This is the result of duplicate unique values, such as name or SKU; a missing or invalid `category_id`, `brand_id`, or `tax_class id`; or a conflicting `bulk_pricing_rule`.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "`Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Product",
        "tags": [
          "Products",
          "Catalog"
        ]
      },
      "delete": {
        "description": "By default, it deletes all *Product* objects. A filter should be added to avoid deleting all *Product* objects in a store.\n\n**Example**:\nTo delete products with the id's of 1,2 and 3, use `DELETE /v3/catalog/products?id:in=1,2,3`.",
        "operationId": "deleteProducts",
        "parameters": [
          {
            "name": "name",
            "description": "Filter items by name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "sku",
            "description": "Filter items by sku.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "price",
            "description": "Filter items by price.\n",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "name": "weight",
            "description": "Filter items by weight.\n",
            "required": false,
            "in": "query",
            "type": "number"
          },
          {
            "name": "condition",
            "description": "Filter items by condition.\n",
            "required": false,
            "in": "query",
            "type": "integer",
            "enum": [
              "new",
              "used",
              "refurbished"
            ]
          },
          {
            "name": "brand_id",
            "description": "Filter items by brand_id.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "date_modified",
            "description": "Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`",
            "required": false,
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "date_last_imported",
            "description": "Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`",
            "required": false,
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "is_visible",
            "description": "Filter items by if visible on the storefront. ",
            "required": false,
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "is_featured",
            "description": "Filter items by is_featured.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "inventory_level",
            "description": "Filter items by inventory_level.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "total_sold",
            "description": "Filter items by total_sold.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "type",
            "description": "Filter items by type: `physical` or `digital`.",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "digital",
              "physical"
            ]
          },
          {
            "name": "categories",
            "description": "Filter items by categories.\n If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "keyword",
            "description": "Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete Products",
        "tags": [
          "Products",
          "Catalog"
        ]
      },
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common Product properties.",
                    "title": "Product",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The product name.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "Smith Journal 13"
                      },
                      "type": {
                        "type": "string",
                        "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                        "x-required": [
                          "post"
                        ],
                        "enum": [
                          "physical",
                          "digital"
                        ],
                        "example": "physical"
                      },
                      "sku": {
                        "type": "string",
                        "description": "User defined product code/stock keeping unit (SKU).\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "SM-13"
                      },
                      "description": {
                        "type": "string",
                        "description": "The product description, which can include HTML formatting.\n",
                        "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
                      },
                      "weight": {
                        "type": "number",
                        "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "width": {
                        "type": "number",
                        "description": "Width of the product, which can be used when calculating shipping costs.\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "depth": {
                        "type": "number",
                        "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "height": {
                        "type": "number",
                        "description": "Height of the product, which can be used when calculating shipping costs.\n",
                        "format": "float",
                        "minimum": 0,
                        "maximum": 9999999999
                      },
                      "price": {
                        "type": "number",
                        "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "cost_price": {
                        "type": "number",
                        "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "retail_price": {
                        "type": "number",
                        "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "sale_price": {
                        "type": "number",
                        "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "tax_class_id": {
                        "type": "integer",
                        "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "product_tax_code": {
                        "type": "string",
                        "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "categories": {
                        "type": "array",
                        "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                        "x-required": [
                          "post"
                        ],
                        "items": {
                          "type": "integer"
                        }
                      },
                      "brand_id": {
                        "type": "integer",
                        "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "inventory_level": {
                        "type": "integer",
                        "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "inventory_warning_level": {
                        "type": "integer",
                        "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "inventory_tracking": {
                        "type": "string",
                        "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                        "enum": [
                          "none",
                          "product",
                          "variant"
                        ]
                      },
                      "fixed_cost_shipping_price": {
                        "type": "number",
                        "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                        "format": "float",
                        "minimum": 0
                      },
                      "is_free_shipping": {
                        "type": "boolean",
                        "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
                      },
                      "is_visible": {
                        "type": "boolean",
                        "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
                      },
                      "is_featured": {
                        "type": "boolean",
                        "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
                      },
                      "related_products": {
                        "type": "array",
                        "description": "An array of IDs for the related products.\n",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "warranty": {
                        "type": "string",
                        "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                        "minLength": 0,
                        "maxLength": 65535
                      },
                      "bin_picking_number": {
                        "type": "string",
                        "description": "The BIN picking number for the product.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "layout_file": {
                        "type": "string",
                        "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                        "minLength": 0,
                        "maxLength": 500
                      },
                      "upc": {
                        "type": "string",
                        "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "search_keywords": {
                        "type": "string",
                        "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                        "minLength": 0,
                        "maxLength": 65535
                      },
                      "availability": {
                        "type": "string",
                        "enum": [
                          "available",
                          "disabled",
                          "preorder"
                        ],
                        "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
                      },
                      "availability_description": {
                        "type": "string",
                        "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "gift_wrapping_options_type": {
                        "type": "string",
                        "enum": [
                          "any",
                          "none",
                          "list"
                        ],
                        "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
                      },
                      "gift_wrapping_options_list": {
                        "type": "array",
                        "description": "A list of gift-wrapping option IDs.\n",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647
                      },
                      "condition": {
                        "type": "string",
                        "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                        "enum": [
                          "New",
                          "Used",
                          "Refurbished"
                        ]
                      },
                      "is_condition_shown": {
                        "type": "boolean",
                        "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
                      },
                      "order_quantity_minimum": {
                        "type": "integer",
                        "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "order_quantity_maximum": {
                        "type": "integer",
                        "description": "The maximum quantity an order can contain when purchasing the product.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "page_title": {
                        "type": "string",
                        "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "meta_keywords": {
                        "type": "array",
                        "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                        "items": {
                          "type": "string"
                        }
                      },
                      "meta_description": {
                        "type": "string",
                        "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                        "minLength": 0,
                        "maxLength": 65535
                      },
                      "view_count": {
                        "type": "integer",
                        "description": "The number of times the product has been viewed.\n",
                        "minimum": 0,
                        "maximum": 1000000000
                      },
                      "preorder_release_date": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                        "x-nullable": true
                      },
                      "preorder_message": {
                        "type": "string",
                        "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "is_preorder_only": {
                        "type": "boolean",
                        "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
                      },
                      "is_price_hidden": {
                        "type": "boolean",
                        "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
                      },
                      "price_hidden_label": {
                        "type": "string",
                        "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                        "minLength": 0,
                        "maxLength": 200
                      },
                      "custom_url": {
                        "type": "object",
                        "description": "The custom URL for the product on the storefront.",
                        "title": "Custom Url Product",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Product URL on the storefront.\n",
                            "x-url": true,
                            "example": "/red-large-shirt"
                          },
                          "is_customized": {
                            "type": "boolean",
                            "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                          }
                        }
                      },
                      "open_graph_type": {
                        "type": "string",
                        "description": "Type of product, defaults to `product`.\n",
                        "enum": [
                          "product",
                          "album",
                          "book",
                          "drink",
                          "food",
                          "game",
                          "movie",
                          "song",
                          "tv_show"
                        ]
                      },
                      "open_graph_title": {
                        "type": "string",
                        "description": "Title of the product, if not specified the product name will be used instead.\n"
                      },
                      "open_graph_description": {
                        "type": "string",
                        "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
                      },
                      "open_graph_use_meta_description": {
                        "type": "boolean",
                        "description": "Flag to determine if product description or open graph description is used.\n"
                      },
                      "open_graph_use_product_name": {
                        "type": "boolean",
                        "description": "Flag to determine if product name or open graph name is used.\n"
                      },
                      "open_graph_use_image": {
                        "type": "boolean",
                        "description": "Flag to determine if product image or open graph image is used.\n"
                      },
                      "brand_name or brand_id": {
                        "type": "string",
                        "example": "Common Good",
                        "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
                      },
                      "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number"
                      },
                      "mpn": {
                        "type": "string",
                        "description": "Manufacturer Part Number"
                      },
                      "calculated_price": {
                        "type": "number",
                        "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                        "format": "float"
                      },
                      "reviews_rating_sum": {
                        "type": "integer",
                        "description": "The total rating for the product.\n",
                        "example": 3.2
                      },
                      "reviews_count": {
                        "type": "integer",
                        "description": "The number of times the product has been rated.\n",
                        "example": 4
                      },
                      "total_sold": {
                        "type": "integer",
                        "description": "The total quantity of this product sold.\n",
                        "example": 80
                      },
                      "custom_fields": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                          "title": "Custom Field",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                              "minimum": 1,
                              "example": 6
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 250,
                              "example": "ISBN"
                            },
                            "value": {
                              "type": "string",
                              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 250,
                              "example": "1234567890123"
                            }
                          },
                          "required": [
                            "name",
                            "value"
                          ]
                        }
                      },
                      "bulk_pricing_rules": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Common BulkPricingRule properties",
                          "title": "Bulk Pricing Rule",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                            },
                            "quantity_min": {
                              "type": "integer",
                              "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                              "x-required": [
                                "post"
                              ],
                              "minimum": 0,
                              "example": 10
                            },
                            "quantity_max": {
                              "type": "integer",
                              "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                              "x-required": [
                                "post"
                              ],
                              "minimum": 0,
                              "example": 50
                            },
                            "type": {
                              "type": "string",
                              "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                              "x-required": [
                                "post"
                              ],
                              "enum": [
                                "price",
                                "percent",
                                "fixed"
                              ],
                              "example": "price"
                            },
                            "amount": {
                              "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
                              "example": 10,
                              "type": "integer"
                            }
                          },
                          "required": [
                            "quantity_min",
                            "quantity_max",
                            "type",
                            "amount"
                          ]
                        }
                      },
                      "date_created": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date on which the product was created.\n",
                        "example": "2018-08-15T14:49:05+00:00"
                      },
                      "date_modified": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The date on which the product was modified.\n",
                        "example": "2018-08-24T14:41:00+00:00"
                      },
                      "images": {
                        "type": "array",
                        "items": {
                          "title": "Product Image",
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Common ProductImage properties.",
                              "properties": {
                                "id": {
                                  "description": "The unique numeric ID of the image; increments sequentially.\n",
                                  "type": "integer"
                                },
                                "product_id": {
                                  "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                  "type": "integer"
                                },
                                "image_file": {
                                  "description": "The local path to the original image file uploaded to BigCommerce.\n",
                                  "type": "string"
                                },
                                "url_zoom": {
                                  "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                  "type": "string"
                                },
                                "url_standard": {
                                  "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                  "type": "string"
                                },
                                "url_thumbnail": {
                                  "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                  "type": "string"
                                },
                                "url_tiny": {
                                  "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                  "type": "string"
                                },
                                "date_modified": {
                                  "format": "date-time",
                                  "description": "The date on which the product image was modified.\n",
                                  "type": "string"
                                },
                                "is_thumbnail": {
                                  "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                                  "type": "boolean"
                                },
                                "sort_order": {
                                  "type": "integer",
                                  "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                                  "minimum": -2147483648,
                                  "maximum": 2147483647
                                },
                                "description": {
                                  "description": "The description for the image.\n",
                                  "type": "string"
                                }
                              },
                              "title": "Product Image Base"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The unique numeric ID of the image; increments sequentially.\n",
                                  "type": "integer"
                                },
                                "product_id": {
                                  "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                  "type": "integer"
                                },
                                "image_file": {
                                  "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                                  "type": "string"
                                },
                                "url_zoom": {
                                  "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                  "type": "string"
                                },
                                "url_standard": {
                                  "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                  "type": "string"
                                },
                                "url_thumbnail": {
                                  "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                  "type": "string"
                                },
                                "url_tiny": {
                                  "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                  "type": "string"
                                },
                                "date_modified": {
                                  "format": "date-time",
                                  "description": "The date on which the product image was modified.\n",
                                  "type": "string"
                                },
                                "image_url": {
                                  "type": "string",
                                  "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                                  "description": "Publically available URL. \nUse the image_url when creating a product. "
                                }
                              }
                            }
                          ]
                        }
                      },
                      "videos": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "A product video model.\n",
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Common ProductVideo properties.",
                              "properties": {
                                "title": {
                                  "type": "string",
                                  "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                                  "minLength": 0,
                                  "maxLength": 255
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                                },
                                "sort_order": {
                                  "type": "integer",
                                  "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                                  "minimum": -2147483648,
                                  "maximum": 2147483647
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The video type (a short name of a host site).\n",
                                  "enum": [
                                    "youtube"
                                  ]
                                }
                              },
                              "title": "Product Video Base"
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "description": "The unique numeric ID of the product video; increments sequentially.\n"
                                },
                                "video_id": {
                                  "description": "The ID of the video on a host site.\n",
                                  "type": "string"
                                },
                                "product_id": {
                                  "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                  "type": "integer"
                                },
                                "length": {
                                  "description": "Length of the video. This will be filled in according to data on a host site.\n",
                                  "type": "string"
                                }
                              }
                            }
                          ],
                          "title": "Product Video"
                        }
                      },
                      "variants": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Common Variant properties.",
                              "title": "Variant Base",
                              "properties": {
                                "cost_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The cost price of the variant. Not affected by Price List prices.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "sale_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "retail_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "weight": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "width": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "height": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "depth": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "is_free_shipping": {
                                  "type": "boolean",
                                  "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                                },
                                "fixed_cost_shipping_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                                  "x-nullable": true,
                                  "minimum": 0
                                },
                                "purchasing_disabled": {
                                  "type": "boolean",
                                  "description": "If `true`, this variant will not be purchasable on the storefront."
                                },
                                "purchasing_disabled_message": {
                                  "type": "string",
                                  "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                                  "minLength": 0,
                                  "maxLength": 255
                                },
                                "upc": {
                                  "type": "string",
                                  "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                                  "x-nullable": true
                                },
                                "inventory_level": {
                                  "type": "integer",
                                  "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                                  "x-nullable": true
                                },
                                "inventory_warning_level": {
                                  "type": "integer",
                                  "description": "When the variant hits this inventory level, it is considered low stock.",
                                  "x-nullable": true
                                },
                                "bin_picking_number": {
                                  "type": "string",
                                  "description": "Identifies where in a warehouse the variant is located.",
                                  "x-nullable": true,
                                  "minLength": 0,
                                  "maxLength": 255
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "product_id": {
                                  "type": "integer"
                                },
                                "sku": {
                                  "type": "string"
                                },
                                "sku_id": {
                                  "type": "integer",
                                  "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                                  "x-nullable": true
                                },
                                "option_values": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "allOf": [
                                      {
                                        "type": "object",
                                        "description": "Common Option Value Product properties.",
                                        "title": "Option Value Product Base",
                                        "properties": {
                                          "option_display_name": {
                                            "type": "string",
                                            "description": "The name of the option.\n",
                                            "x-required": [
                                              "post"
                                            ],
                                            "minLength": 1,
                                            "maxLength": 255,
                                            "example": "Color"
                                          },
                                          "label": {
                                            "type": "string",
                                            "description": "The label of the option value.\n",
                                            "x-required": [
                                              "post"
                                            ],
                                            "minLength": 1,
                                            "maxLength": 255,
                                            "example": "Beige"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "integer"
                                          },
                                          "option_id": {
                                            "type": "integer"
                                          }
                                        }
                                      }
                                    ],
                                    "title": "Option Value Variant"
                                  },
                                  "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                                },
                                "calculated_price": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                                }
                              }
                            }
                          ]
                        }
                      },
                      "base_variant_id": {
                        "type": "integer",
                        "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                        "example": 363
                      },
                      "id": {
                        "type": "integer",
                        "description": "ID of the product. Read Only"
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 174,
                    "name": "1L Le Parfait Jar",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 7.95,
                    "cost_price": 0,
                    "retail_price": 10,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 7.95,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 7,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "jar, glass",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:46+00:00",
                    "date_modified": "2018-09-05T20:42:07+00:00",
                    "view_count": 10,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/1l-le-parfait-jar/",
                      "is_customized": true
                    },
                    "base_variant_id": 345,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 345,
                        "product_id": 174,
                        "sku": "",
                        "sku_id": {},
                        "price": 7.95,
                        "calculated_price": 7.95,
                        "sale_price": 0,
                        "retail_price": 10,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 167,
                    "name": "Able Brewing System",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 225,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 225,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 43,
                    "option_set_id": 52,
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 2,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:36+00:00",
                    "date_modified": "2018-08-20T15:11:17+00:00",
                    "view_count": 21,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/able-brewing-system/",
                      "is_customized": true
                    },
                    "base_variant_id": 338,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 338,
                        "product_id": 167,
                        "sku": "",
                        "sku_id": {},
                        "price": 225,
                        "calculated_price": 225,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/167/images/398/ablebrewingsystem4_1024x1024__07155__93974.1534344516.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 181,
                    "name": "All Purpose Cleaner",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 15,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 15,
                    "categories": [
                      21,
                      22
                    ],
                    "brand_id": 37,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:51+00:00",
                    "date_modified": "2018-08-15T15:01:15+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/all-purpose-cleaner/",
                      "is_customized": true
                    },
                    "base_variant_id": 352,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 352,
                        "product_id": 181,
                        "sku": "",
                        "sku_id": {},
                        "price": 15,
                        "calculated_price": 15,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/181/images/442/CommonGoodAllPurposeCleaner_d37aa1e8_e16f_4309_bddd_8fae0d94efc7_1024x1024__40180__66527.1534344531.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 193,
                    "name": "BigCommerce Coffee Mug",
                    "type": "physical",
                    "sku": "",
                    "description": "",
                    "weight": 4,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 10,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 10,
                    "categories": [
                      21
                    ],
                    "brand_id": 38,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-09-05T20:19:06+00:00",
                    "date_modified": "2018-09-05T20:19:06+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/bigcommerce-coffee-mug/",
                      "is_customized": false
                    },
                    "base_variant_id": 385,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 385,
                        "product_id": 193,
                        "sku": "",
                        "sku_id": {},
                        "price": 10,
                        "calculated_price": 10,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 4,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 4,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 194,
                    "name": "BigCommerce Coffee Mug_2",
                    "type": "physical",
                    "sku": "",
                    "description": "",
                    "weight": 3,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 11,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 11,
                    "categories": [
                      21
                    ],
                    "brand_id": 38,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-09-05T20:20:47+00:00",
                    "date_modified": "2018-09-05T20:20:47+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/bigcommerce-coffee-mug_2/",
                      "is_customized": false
                    },
                    "base_variant_id": 386,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 386,
                        "product_id": 194,
                        "sku": "",
                        "sku_id": {},
                        "price": 11,
                        "calculated_price": 11,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 3,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 3,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 195,
                    "name": "BigCommerce Coffee Mug_3",
                    "type": "physical",
                    "sku": "",
                    "description": "",
                    "weight": 3,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 11,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 11,
                    "categories": [
                      21
                    ],
                    "brand_id": 38,
                    "option_set_id": 50,
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-09-05T20:22:19+00:00",
                    "date_modified": "2018-09-07T20:01:26+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/bigcommerce-coffee-mug_3/",
                      "is_customized": false
                    },
                    "base_variant_id": {},
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 388,
                        "product_id": 195,
                        "sku": "SKU-4484A834",
                        "sku_id": 351,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 174,
                            "label": "Beige",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 389,
                        "product_id": 195,
                        "sku": "SKU-9E932372",
                        "sku_id": 352,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 175,
                            "label": "Grey",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 390,
                        "product_id": 195,
                        "sku": "SKU-29CE333F",
                        "sku_id": 353,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 176,
                            "label": "Black",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 391,
                        "product_id": 195,
                        "sku": "SKU-02FBF02A",
                        "sku_id": 354,
                        "price": {},
                        "calculated_price": 11,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 3,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 189,
                            "label": "Black-Walnut",
                            "option_id": 221,
                            "option_display_name": "Color"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 184,
                    "name": "Canvas Laundry Cart",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 15,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 249,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 249,
                    "categories": [
                      23,
                      22
                    ],
                    "brand_id": 36,
                    "option_set_id": 51,
                    "option_set_display": "right",
                    "inventory_level": 1497,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "variant",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 6,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:53+00:00",
                    "date_modified": "2018-08-28T19:02:11+00:00",
                    "view_count": 22,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/canvas-laundry-cart/",
                      "is_customized": true
                    },
                    "base_variant_id": {},
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 364,
                        "product_id": 184,
                        "sku": "SMA-RED",
                        "sku_id": 330,
                        "price": 15.99,
                        "calculated_price": 15.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": 15,
                        "calculated_weight": 15,
                        "width": 4,
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 497,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 177,
                            "label": "Small",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 180,
                            "label": "Red",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 365,
                        "product_id": 184,
                        "sku": "MED-RED",
                        "sku_id": 331,
                        "price": 555,
                        "calculated_price": 555,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 500,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 178,
                            "label": "Medium",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 180,
                            "label": "Red",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 366,
                        "product_id": 184,
                        "sku": "LAR-RED",
                        "sku_id": 332,
                        "price": {},
                        "calculated_price": 253.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 500,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 179,
                            "label": "Large",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 180,
                            "label": "Red",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 367,
                        "product_id": 184,
                        "sku": "SMA-GRE",
                        "sku_id": 333,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 177,
                            "label": "Small",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 181,
                            "label": "Green",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 368,
                        "product_id": 184,
                        "sku": "MED-GRE",
                        "sku_id": 334,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 178,
                            "label": "Medium",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 181,
                            "label": "Green",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 369,
                        "product_id": 184,
                        "sku": "LAR-GRE",
                        "sku_id": 335,
                        "price": {},
                        "calculated_price": 253.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 179,
                            "label": "Large",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 181,
                            "label": "Green",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 370,
                        "product_id": 184,
                        "sku": "SMA-BLU",
                        "sku_id": 336,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 177,
                            "label": "Small",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 182,
                            "label": "Blue",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 371,
                        "product_id": 184,
                        "sku": "MED-BLU",
                        "sku_id": 337,
                        "price": {},
                        "calculated_price": 249,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 178,
                            "label": "Medium",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 182,
                            "label": "Blue",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      },
                      {
                        "id": 372,
                        "product_id": 184,
                        "sku": "LAR-BLU",
                        "sku_id": 338,
                        "price": {},
                        "calculated_price": 253.99,
                        "sale_price": {},
                        "retail_price": {},
                        "map_price": {},
                        "weight": {},
                        "calculated_weight": 15,
                        "width": {},
                        "height": {},
                        "depth": {},
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": {},
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": [
                          {
                            "id": 179,
                            "label": "Large",
                            "option_id": 199,
                            "option_display_name": "Size"
                          },
                          {
                            "id": 182,
                            "label": "Blue",
                            "option_id": 200,
                            "option_display_name": "Color"
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "id": 173,
                    "name": "Ceramic Measuring Spoon Set",
                    "type": "physical",
                    "sku": "",
                    "description": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 18,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 18,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 1,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:45+00:00",
                    "date_modified": "2018-08-20T15:14:23+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/ceramic-measuring-spoon-set/",
                      "is_customized": true
                    },
                    "base_variant_id": 344,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 344,
                        "product_id": 173,
                        "sku": "",
                        "sku_id": {},
                        "price": 18,
                        "calculated_price": 18,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/173/images/424/measuringspoons1_1024x1024__22102__55079.1534344525.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 170,
                    "name": "Ceramic Measuring Spoons",
                    "type": "physical",
                    "sku": "",
                    "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 25,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 25,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 0,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:42+00:00",
                    "date_modified": "2018-08-15T15:01:15+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/ceramic-measuring-spoons/",
                      "is_customized": true
                    },
                    "base_variant_id": 341,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 341,
                        "product_id": 170,
                        "sku": "",
                        "sku_id": {},
                        "price": 25,
                        "calculated_price": 25,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  },
                  {
                    "id": 176,
                    "name": "Ceramic Sugar & Creamer Set",
                    "type": "physical",
                    "sku": "",
                    "description": "<div data-position=\"description\"> <div class=\"description\"> <div class=\"rte-content\"> <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p> </div> </div> </div>",
                    "weight": 1,
                    "width": 0,
                    "depth": 0,
                    "height": 0,
                    "price": 59,
                    "cost_price": 0,
                    "retail_price": 0,
                    "sale_price": 0,
                    "map_price": 0,
                    "tax_class_id": 0,
                    "product_tax_code": "",
                    "calculated_price": 59,
                    "categories": [
                      23,
                      21
                    ],
                    "brand_id": 36,
                    "option_set_id": {},
                    "option_set_display": "right",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "inventory_tracking": "none",
                    "reviews_rating_sum": 0,
                    "reviews_count": 0,
                    "total_sold": 1,
                    "fixed_cost_shipping_price": 0,
                    "is_free_shipping": false,
                    "is_visible": true,
                    "is_featured": false,
                    "related_products": [
                      -1
                    ],
                    "warranty": "",
                    "bin_picking_number": "",
                    "layout_file": "product.html",
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "search_keywords": "",
                    "availability": "available",
                    "availability_description": "",
                    "gift_wrapping_options_type": "any",
                    "gift_wrapping_options_list": [],
                    "sort_order": 0,
                    "condition": "New",
                    "is_condition_shown": false,
                    "order_quantity_minimum": 0,
                    "order_quantity_maximum": 0,
                    "page_title": "",
                    "meta_keywords": [],
                    "meta_description": "",
                    "date_created": "2018-08-15T14:48:48+00:00",
                    "date_modified": "2018-08-31T15:19:27+00:00",
                    "view_count": 0,
                    "preorder_release_date": {},
                    "preorder_message": "",
                    "is_preorder_only": false,
                    "is_price_hidden": false,
                    "price_hidden_label": "",
                    "custom_url": {
                      "url": "/all/ceramic-sugar-creamer-set/",
                      "is_customized": true
                    },
                    "base_variant_id": 347,
                    "open_graph_type": "product",
                    "open_graph_title": "",
                    "open_graph_description": "",
                    "open_graph_use_meta_description": true,
                    "open_graph_use_product_name": true,
                    "open_graph_use_image": true,
                    "variants": [
                      {
                        "id": 347,
                        "product_id": 176,
                        "sku": "",
                        "sku_id": {},
                        "price": 59,
                        "calculated_price": 59,
                        "sale_price": 0,
                        "retail_price": 0,
                        "map_price": 0,
                        "weight": 1,
                        "width": 0,
                        "height": 0,
                        "depth": 0,
                        "is_free_shipping": false,
                        "fixed_cost_shipping_price": 0,
                        "calculated_weight": 1,
                        "purchasing_disabled": false,
                        "purchasing_disabled_message": "",
                        "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/176/images/432/milkandcreamer1_1024x1024__69117__81345.1534344528.560.850.jpg?c=2",
                        "cost_price": 0,
                        "upc": "",
                        "mpn": "",
                        "gtin": "",
                        "inventory_level": 0,
                        "inventory_warning_level": 0,
                        "bin_picking_number": "",
                        "option_values": []
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 39,
                    "count": 10,
                    "per_page": 10,
                    "current_page": 1,
                    "total_pages": 4,
                    "links": {
                      "next": "?sort=name&include=variants&limit=10&page=2",
                      "current": "?sort=name&include=variants&limit=10&page=1"
                    },
                    "too_many": false
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "409": {
            "description": "`Product` was in conflict with another product. This is caused by: duplicate unique values, such as name or SKU; a missing category, brand, or tax_class with which the product is being associated; or a conflicting bulk pricing rule.",
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "description": "Error payload for the BigCommerce API.\n",
                    "properties": {
                      "status": {
                        "description": "The HTTP status code.\n",
                        "type": "integer"
                      },
                      "title": {
                        "description": "The error title describing the particular error.\n",
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "instance": {
                        "type": "string"
                      }
                    },
                    "title": "Base Error"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "object",
                        "title": "Detailed Errors",
                        "properties": {
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                ],
                "title": "Error Response"
              }
            }
          },
          "413": {
            "description": "",
            "examples": {
              "application/json": {
                "errors": {},
                "status": 413,
                "title": "The request payload is too large. The maximum items allowed in the array is 50",
                "type": "https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes"
              }
            }
          },
          "422": {
            "description": "`Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "type": "object",
                    "description": "Error payload for the BigCommerce API.\n",
                    "properties": {
                      "status": {
                        "description": "The HTTP status code.\n",
                        "type": "integer"
                      },
                      "title": {
                        "description": "The error title describing the particular error.\n",
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "instance": {
                        "type": "string"
                      }
                    },
                    "title": "Base Error"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "errors": {
                        "type": "object",
                        "title": "Detailed Errors",
                        "properties": {
                          "additionalProperties": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                ],
                "title": "Error Response"
              }
            },
            "examples": {
              "application/json": [
                {
                  "status": -511628,
                  "title": "elit qui aute deserunt",
                  "type": "aliqua enim",
                  "instance": "in",
                  "errors": {
                    "additionalProperties": "ipsum"
                  }
                },
                {
                  "status": 58617067,
                  "title": "elit ea officia aute veniam",
                  "type": "consequat sit ex in",
                  "instance": "quis",
                  "errors": {
                    "additionalProperties": "commodo tempor ut non"
                  }
                },
                {
                  "status": -74834728,
                  "title": "ea v",
                  "type": "veniam",
                  "instance": "Duis sit anim quis",
                  "errors": {
                    "additionalProperties": "ut sint amet"
                  }
                },
                {
                  "status": -99427802,
                  "title": "ut labore veniam",
                  "type": "occaecat qui ut tempor",
                  "instance": "occaecat sit",
                  "errors": {
                    "additionalProperties": "sint enim"
                  }
                }
              ]
            }
          }
        },
        "summary": "Update Products (Batch)",
        "tags": [
          "Products",
          "Catalog"
        ],
        "operationId": "updateProducts",
        "description": "Updates products in batches. At the time of writing, batches are limited to 10 products.\n\n**Read-Only Fields**\n- `id`\n- `date_created`\n- `date_modified`\n- `calculated_price`\n- `base_variant_id`\n\n**Usage Notes**\n* `POST` requests to `/products` accepts a single `video` object; to send an array of video objects, see: `/products/{product_id}/videos`",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "title": "Product Collection Put",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProductPut"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "name": "Smith Jour",
                  "type": "physical",
                  "sku": "SM-13",
                  "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                  "weight": 4218855357.71975,
                  "width": 8367871943.308026,
                  "depth": 4710997649.898224,
                  "height": 6506889417.595158,
                  "price": 99883500.36150932,
                  "cost_price": 43618929.137176774,
                  "retail_price": 72740983.83121683,
                  "sale_price": 28892438.67787592,
                  "tax_class_id": 139485041,
                  "product_tax_code": "cupidatat ",
                  "categories": [
                    11274566,
                    35101195,
                    -71343502,
                    -78507936
                  ],
                  "brand_id": 966701948,
                  "inventory_level": 978637814,
                  "inventory_warning_level": 977793522,
                  "inventory_tracking": "variant",
                  "fixed_cost_shipping_price": 33285743.655756917,
                  "is_free_shipping": false,
                  "is_visible": false,
                  "is_featured": false,
                  "related_products": [
                    -90637728,
                    2495792,
                    -74913530
                  ],
                  "warranty": "",
                  "bin_picking_number": "",
                  "layout_file": "ea",
                  "upc": "Lorem",
                  "search_keywords": "occaecat",
                  "availability": "disabled",
                  "availability_description": "i",
                  "gift_wrapping_options_type": "list",
                  "gift_wrapping_options_list": [
                    95659176,
                    81482926,
                    -4103318,
                    85699187
                  ],
                  "sort_order": -1953187365,
                  "condition": "Refurbished",
                  "is_condition_shown": true,
                  "order_quantity_minimum": 171773575,
                  "order_quantity_maximum": 515153022,
                  "page_title": "",
                  "meta_keywords": [
                    "Duis irure ut",
                    "laboris",
                    "nulla in mollit eiusmod",
                    "est dolor ex eu Excepteur"
                  ],
                  "meta_description": "enim pari",
                  "view_count": 191494941,
                  "preorder_release_date": "2006-11-30T04:19:48.474Z",
                  "preorder_message": "",
                  "is_preorder_only": false,
                  "is_price_hidden": true,
                  "price_hidden_label": "fu",
                  "custom_url": {
                    "url": "/red-large-shirt",
                    "is_customized": true
                  },
                  "open_graph_type": "movie",
                  "open_graph_title": "elit id",
                  "open_graph_description": "consectetur culpa eiusmod",
                  "open_graph_use_meta_description": false,
                  "open_graph_use_product_name": true,
                  "open_graph_use_image": false,
                  "brand_name or brand_id": "Common Good",
                  "gtin": "sed non",
                  "mpn": "velit",
                  "calculated_price": 20148278.615455702,
                  "reviews_rating_sum": 3,
                  "reviews_count": 4,
                  "total_sold": 80,
                  "custom_fields": [
                    {
                      "name": "ISBN",
                      "value": "1234567890",
                      "id": 6
                    },
                    {
                      "name": "ISBN",
                      "value": "1234567890",
                      "id": 6
                    }
                  ],
                  "bulk_pricing_rules": [
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": 47239096
                    },
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": -11695103
                    },
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": -15718975
                    },
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": 77415687
                    },
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": -23691769
                    }
                  ],
                  "date_created": "2018-08-15T14:49:05.000Z",
                  "date_modified": "2018-08-24T14:41:00.000Z",
                  "images": [
                    {
                      "id": -17271262,
                      "product_id": 87307998,
                      "image_file": "eiusmod dolore nostrud",
                      "url_zoom": "sed irure dolor in",
                      "url_standard": "anim",
                      "url_thumbnail": "reprehenderit ex aliqua",
                      "url_tiny": "ipsum et",
                      "date_modified": "1961-09-17T11:08:25.591Z",
                      "is_thumbnail": false,
                      "sort_order": 549923739,
                      "description": "aute proident voluptate Lorem commodo",
                      "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                    },
                    {
                      "id": -99174943,
                      "product_id": -59294739,
                      "image_file": "nostrud magna exe",
                      "url_zoom": "eiusmod Lorem",
                      "url_standard": "in labore est",
                      "url_thumbnail": "irure amet eu eiusmod id",
                      "url_tiny": "in tempor eu occaecat",
                      "date_modified": "1987-08-09T04:40:42.983Z",
                      "is_thumbnail": true,
                      "sort_order": 1037701623,
                      "description": "enim sed Lorem labore et",
                      "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                    }
                  ],
                  "videos": [
                    {
                      "title": "aliqu",
                      "description": "est dolor",
                      "sort_order": 1385628901,
                      "type": "youtube",
                      "id": 35843493,
                      "video_id": "in id fugiat",
                      "product_id": -18005892,
                      "length": "esse labore adipisicing"
                    }
                  ],
                  "variants": [
                    {
                      "cost_price": 25146606.12150217,
                      "price": 13484805.485217221,
                      "sale_price": 2567554.004389705,
                      "retail_price": 78963980.70238353,
                      "weight": 69515716.95144951,
                      "width": 98829733.14878638,
                      "height": 75467365.76584303,
                      "depth": 76972137.82330573,
                      "is_free_shipping": true,
                      "fixed_cost_shipping_price": 24091762.261078943,
                      "purchasing_disabled": true,
                      "purchasing_disabled_message": "cillum la",
                      "upc": "labore",
                      "inventory_level": 52623616,
                      "inventory_warning_level": -78630763,
                      "bin_picking_number": "ull",
                      "id": 65808649,
                      "product_id": 91346478,
                      "sku": "in sed do",
                      "sku_id": -69411775,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -8828034,
                          "option_id": 63255558
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -95324886,
                          "option_id": 93999320
                        }
                      ],
                      "calculated_price": -6544960.895433679
                    },
                    {
                      "cost_price": 50147230.34059643,
                      "price": 3327342.336077099,
                      "sale_price": 15430727.105315745,
                      "retail_price": 82773671.11111856,
                      "weight": 481952.6510945638,
                      "width": 31471282.262054447,
                      "height": 39763733.40795958,
                      "depth": 68311151.79754552,
                      "is_free_shipping": false,
                      "fixed_cost_shipping_price": 99752283.2381734,
                      "purchasing_disabled": false,
                      "purchasing_disabled_message": "ex ad pa",
                      "upc": "velit",
                      "inventory_level": -75267450,
                      "inventory_warning_level": 46797264,
                      "bin_picking_number": "sit qui d",
                      "id": 79143852,
                      "product_id": -72118329,
                      "sku": "adip",
                      "sku_id": 69753729,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 51185875,
                          "option_id": -89435089
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -93964482,
                          "option_id": 80509327
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -84615248,
                          "option_id": -10820633
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -95471389,
                          "option_id": -72672411
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 56649575,
                          "option_id": -32135846
                        }
                      ],
                      "calculated_price": -92724202.4963164
                    },
                    {
                      "cost_price": 94150626.27536805,
                      "price": 62452869.96257944,
                      "sale_price": 29525855.40377013,
                      "retail_price": 82832527.10007876,
                      "weight": 61934259.68058137,
                      "width": 64759578.299939215,
                      "height": 55389632.95464947,
                      "depth": 66628005.201010935,
                      "is_free_shipping": true,
                      "fixed_cost_shipping_price": 22379636.866219975,
                      "purchasing_disabled": true,
                      "purchasing_disabled_message": "d",
                      "upc": "do in",
                      "inventory_level": 66946954,
                      "inventory_warning_level": 89792908,
                      "bin_picking_number": "",
                      "id": 25148535,
                      "product_id": -86752990,
                      "sku": "eiusmo",
                      "sku_id": 90470442,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 52421490,
                          "option_id": -68266526
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 95903045,
                          "option_id": -25884717
                        }
                      ],
                      "calculated_price": -9053438.507871807
                    },
                    {
                      "cost_price": 11888868.28196931,
                      "price": 45208848.37755559,
                      "sale_price": 72798478.91644657,
                      "retail_price": 72731728.99435303,
                      "weight": 33633702.67279537,
                      "width": 29778135.7600835,
                      "height": 17655155.51711603,
                      "depth": 88548090.510014,
                      "is_free_shipping": true,
                      "fixed_cost_shipping_price": 39692644.170056626,
                      "purchasing_disabled": false,
                      "purchasing_disabled_message": "conse",
                      "upc": "dolore deserunt",
                      "inventory_level": 1275796,
                      "inventory_warning_level": 65270804,
                      "bin_picking_number": "Duis",
                      "id": 20524058,
                      "product_id": 81430926,
                      "sku": "ad proide",
                      "sku_id": -35156310,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -34212857,
                          "option_id": 82574637
                        }
                      ],
                      "calculated_price": 21749259.8433183
                    },
                    {
                      "cost_price": 39004801.318036206,
                      "price": 4619887.97142876,
                      "sale_price": 9369040.92663291,
                      "retail_price": 87204702.09199136,
                      "weight": 41456837.04142611,
                      "width": 37560956.886325546,
                      "height": 46237023.150415465,
                      "depth": 41662427.07912715,
                      "is_free_shipping": false,
                      "fixed_cost_shipping_price": 18651163.804362513,
                      "purchasing_disabled": true,
                      "purchasing_disabled_message": "ips",
                      "upc": "labore cillum et Excepteur",
                      "inventory_level": -52895870,
                      "inventory_warning_level": 56465649,
                      "bin_picking_number": "ea dolo",
                      "id": -73330809,
                      "product_id": 52514648,
                      "sku": "ea el",
                      "sku_id": 62017004,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -86744460,
                          "option_id": 83816458
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 82207668,
                          "option_id": -21068749
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -26801180,
                          "option_id": 51237067
                        }
                      ],
                      "calculated_price": 8371211.42493014
                    }
                  ],
                  "base_variant_id": 363,
                  "id": -56266378
                },
                {
                  "name": "Smith Jour",
                  "type": "physical",
                  "sku": "SM-13",
                  "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                  "weight": 1185323593.1317747,
                  "width": 8912484557.672657,
                  "depth": 8332001188.842729,
                  "height": 1323131456.7626684,
                  "price": 74413617.74742115,
                  "cost_price": 81896845.46955936,
                  "retail_price": 87458843.0609606,
                  "sale_price": 49444743.38940674,
                  "tax_class_id": 776138741,
                  "product_tax_code": "aliquip",
                  "categories": [
                    69339486,
                    -63421334
                  ],
                  "brand_id": 604055380,
                  "inventory_level": 210269438,
                  "inventory_warning_level": 131050111,
                  "inventory_tracking": "product",
                  "fixed_cost_shipping_price": 32610857.96573924,
                  "is_free_shipping": true,
                  "is_visible": true,
                  "is_featured": false,
                  "related_products": [
                    58525815,
                    -59785091,
                    76887489,
                    93103421
                  ],
                  "warranty": "nisi dolor",
                  "bin_picking_number": "Lore",
                  "layout_file": "quis off",
                  "upc": "n",
                  "search_keywords": "qu",
                  "availability": "disabled",
                  "availability_description": "p",
                  "gift_wrapping_options_type": "none",
                  "gift_wrapping_options_list": [
                    -84627208,
                    42529273,
                    -87066933
                  ],
                  "sort_order": 1162113083,
                  "condition": "Refurbished",
                  "is_condition_shown": false,
                  "order_quantity_minimum": 465076052,
                  "order_quantity_maximum": 135993607,
                  "page_title": "labore eni",
                  "meta_keywords": [
                    "voluptate enim",
                    "officia dolor",
                    "sint",
                    "in id ipsum",
                    "officia nulla ut"
                  ],
                  "meta_description": "exerc",
                  "view_count": 108957762,
                  "preorder_release_date": "1962-09-26T20:55:16.227Z",
                  "preorder_message": "nisi",
                  "is_preorder_only": false,
                  "is_price_hidden": false,
                  "price_hidden_label": "voluptate",
                  "custom_url": {
                    "url": "/red-large-shirt",
                    "is_customized": false
                  },
                  "open_graph_type": "song",
                  "open_graph_title": "id dolore minim nostrud esse",
                  "open_graph_description": "laborum non Ut",
                  "open_graph_use_meta_description": false,
                  "open_graph_use_product_name": false,
                  "open_graph_use_image": true,
                  "brand_name or brand_id": "Common Good",
                  "gtin": "velit dolor",
                  "mpn": "elit labore E",
                  "calculated_price": -67938182.38028382,
                  "reviews_rating_sum": 3,
                  "reviews_count": 4,
                  "total_sold": 80,
                  "custom_fields": [
                    {
                      "name": "ISBN",
                      "value": "1234567890",
                      "id": 6
                    },
                    {
                      "name": "ISBN",
                      "value": "1234567890",
                      "id": 6
                    },
                    {
                      "name": "ISBN",
                      "value": "1234567890",
                      "id": 6
                    },
                    {
                      "name": "ISBN",
                      "value": "1234567890",
                      "id": 6
                    },
                    {
                      "name": "ISBN",
                      "value": "1234567890",
                      "id": 6
                    }
                  ],
                  "bulk_pricing_rules": [
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": 80128489
                    },
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": -12103294
                    },
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": -67110842
                    },
                    {
                      "quantity_min": 10,
                      "quantity_max": 50,
                      "type": "price",
                      "amount": "\".10\"",
                      "id": 72676393
                    }
                  ],
                  "date_created": "2018-08-15T14:49:05.000Z",
                  "date_modified": "2018-08-24T14:41:00.000Z",
                  "images": [
                    {
                      "id": -74786704,
                      "product_id": -65290754,
                      "image_file": "ips",
                      "url_zoom": "ipsum voluptate",
                      "url_standard": "eu culpa",
                      "url_thumbnail": "elit id aliqua cillum ullamco",
                      "url_tiny": "occaecat labore",
                      "date_modified": "1976-11-24T14:02:29.119Z",
                      "is_thumbnail": false,
                      "sort_order": 1174604388,
                      "description": "Excepteur eiusmod laborum proident in",
                      "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                    },
                    {
                      "id": -10342233,
                      "product_id": -51509902,
                      "image_file": "amet",
                      "url_zoom": "sunt",
                      "url_standard": "consequat veniam quis amet aute",
                      "url_thumbnail": "ullamco occaecat tempor veniam sed",
                      "url_tiny": "aliquip elit commodo",
                      "date_modified": "1986-10-28T06:23:45.425Z",
                      "is_thumbnail": true,
                      "sort_order": 115310429,
                      "description": "quis veniam magna mollit irure",
                      "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                    },
                    {
                      "id": -74214158,
                      "product_id": 85206212,
                      "image_file": "cillum laboris qui cupidatat esse",
                      "url_zoom": "amet ipsum",
                      "url_standard": "Duis",
                      "url_thumbnail": "ad velit aliqua culpa",
                      "url_tiny": "officia ullamco non do amet",
                      "date_modified": "2017-11-02T07:07:14.599Z",
                      "is_thumbnail": false,
                      "sort_order": 732510176,
                      "description": "dolor veniam dolore nostrud",
                      "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                    },
                    {
                      "id": -54911492,
                      "product_id": -937666,
                      "image_file": "magna do dolore in",
                      "url_zoom": "magna",
                      "url_standard": "laboris aliquip",
                      "url_thumbnail": "laboris elit pr",
                      "url_tiny": "pariatur adipisicing voluptate aute",
                      "date_modified": "1980-09-07T21:43:22.743Z",
                      "is_thumbnail": false,
                      "sort_order": -1079338335,
                      "description": "aliqua",
                      "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                    },
                    {
                      "id": -83126435,
                      "product_id": 55303650,
                      "image_file": "nulla proident",
                      "url_zoom": "id iru",
                      "url_standard": "in id",
                      "url_thumbnail": "sunt",
                      "url_tiny": "cupidatat adipisicing voluptate sint",
                      "date_modified": "1956-10-06T19:35:04.192Z",
                      "is_thumbnail": false,
                      "sort_order": -849690591,
                      "description": "dolore id ea",
                      "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
                    }
                  ],
                  "videos": [
                    {
                      "title": "mollit ip",
                      "description": "aute consectetur do Ut",
                      "sort_order": 993898399,
                      "type": "youtube",
                      "id": -22859825,
                      "video_id": "culpa",
                      "product_id": -13763998,
                      "length": "proident amet tempor in est"
                    }
                  ],
                  "variants": [
                    {
                      "cost_price": 78028547.80663995,
                      "price": 3302707.5268646567,
                      "sale_price": 67348433.48805763,
                      "retail_price": 41855509.61116338,
                      "weight": 48004930.034135394,
                      "width": 58468583.108885966,
                      "height": 84647626.89931364,
                      "depth": 8251668.298809789,
                      "is_free_shipping": false,
                      "fixed_cost_shipping_price": 20338533.570105597,
                      "purchasing_disabled": true,
                      "purchasing_disabled_message": "adipisic",
                      "upc": "ea",
                      "inventory_level": -43271939,
                      "inventory_warning_level": -34811292,
                      "bin_picking_number": "incidi",
                      "id": -92115181,
                      "product_id": 97108812,
                      "sku": "aliq",
                      "sku_id": -22422334,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 29696248,
                          "option_id": -76124110
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -94613338,
                          "option_id": -20918376
                        }
                      ],
                      "calculated_price": -97926577.74766935
                    },
                    {
                      "cost_price": 78878504.07759735,
                      "price": 50721497.35837539,
                      "sale_price": 75046666.60337019,
                      "retail_price": 89936904.96357483,
                      "weight": 47950568.68956149,
                      "width": 29275585.01763223,
                      "height": 11665589.83400674,
                      "depth": 12168881.978239466,
                      "is_free_shipping": false,
                      "fixed_cost_shipping_price": 17069660.959162448,
                      "purchasing_disabled": true,
                      "purchasing_disabled_message": "exer",
                      "upc": "aute",
                      "inventory_level": 54269953,
                      "inventory_warning_level": -19575014,
                      "bin_picking_number": "sint Lore",
                      "id": -1063570,
                      "product_id": 56500991,
                      "sku": "sit ali",
                      "sku_id": -29507227,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 63059199,
                          "option_id": 89837493
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 6817942,
                          "option_id": 94516223
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -12947401,
                          "option_id": 58318441
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -35739181,
                          "option_id": -30039862
                        }
                      ],
                      "calculated_price": 82753395.31008288
                    },
                    {
                      "cost_price": 37588333.121578254,
                      "price": 55499864.702020705,
                      "sale_price": 49880410.78618033,
                      "retail_price": 33287783.45944039,
                      "weight": 15635904.354903474,
                      "width": 44207173.78264265,
                      "height": 8441367.368712127,
                      "depth": 60941169.99776251,
                      "is_free_shipping": true,
                      "fixed_cost_shipping_price": 64791513.62016113,
                      "purchasing_disabled": false,
                      "purchasing_disabled_message": "sint et s",
                      "upc": "enim in elit culpa",
                      "inventory_level": 55784684,
                      "inventory_warning_level": -61231939,
                      "bin_picking_number": "nisi nost",
                      "id": -12529247,
                      "product_id": -72983914,
                      "sku": "an",
                      "sku_id": -28889742,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -44576629,
                          "option_id": -26053980
                        }
                      ],
                      "calculated_price": 80117495.66380379
                    },
                    {
                      "cost_price": 92425179.40171812,
                      "price": 32920676.782777235,
                      "sale_price": 36061848.688568436,
                      "retail_price": 81902471.01756787,
                      "weight": 22117026.151362885,
                      "width": 72968017.73039572,
                      "height": 97441433.40488748,
                      "depth": 11440745.390963536,
                      "is_free_shipping": true,
                      "fixed_cost_shipping_price": 7266166.277203534,
                      "purchasing_disabled": true,
                      "purchasing_disabled_message": "adip",
                      "upc": "elit ullamco irure Ut voluptate",
                      "inventory_level": -43202889,
                      "inventory_warning_level": 59081078,
                      "bin_picking_number": "e",
                      "id": -37451950,
                      "product_id": 44639220,
                      "sku": "ex",
                      "sku_id": 17296090,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -95454127,
                          "option_id": -50072168
                        }
                      ],
                      "calculated_price": 1844857.1138655245
                    },
                    {
                      "cost_price": 1262830.3955616094,
                      "price": 77815533.14773682,
                      "sale_price": 85261192.26576434,
                      "retail_price": 75099478.35908055,
                      "weight": 77889069.21178289,
                      "width": 27309705.829497833,
                      "height": 91827515.13569127,
                      "depth": 42364450.28347937,
                      "is_free_shipping": true,
                      "fixed_cost_shipping_price": 3436012.8052737247,
                      "purchasing_disabled": false,
                      "purchasing_disabled_message": "est",
                      "upc": "irure cillum voluptate sunt sit",
                      "inventory_level": 11945576,
                      "inventory_warning_level": -68123771,
                      "bin_picking_number": "nu",
                      "id": -31468250,
                      "product_id": 40473787,
                      "sku": "e",
                      "sku_id": 46114880,
                      "option_values": [
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -38475016,
                          "option_id": 5479030
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": -66756113,
                          "option_id": -31908321
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 29449029,
                          "option_id": -56636120
                        },
                        {
                          "option_display_name": "Color",
                          "label": "Beige",
                          "id": 99390273,
                          "option_id": -55957819
                        }
                      ],
                      "calculated_price": 79343122.03279355
                    }
                  ],
                  "base_variant_id": 363,
                  "id": 92455576
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/FilterIncludeFieldsParam"
          }
        ]
      }
    },
    "/catalog/products/{product_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Product*. Optional parameters can be passed in.",
        "operationId": "getProductById",
        "parameters": [
          {
            "name": "include",
            "description": "Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.",
            "required": false,
            "in": "query",
            "type": "string",
            "enum": [
              "variants",
              "images",
              "custom_fields",
              "bulk_pricing_rules",
              "primary_image",
              "modifiers",
              "options",
              "videos"
            ]
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "price_list_id",
            "description": "This filter returns the product pricing with the *Price List* pricing instead. To use: \n`?price_list_id=1`.\nIf there are variants use:\n`?price_list_id=1&include=variants`",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Product Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Product properties.",
                  "title": "Product",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The product name.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Smith Journal 13"
                    },
                    "type": {
                      "type": "string",
                      "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "physical",
                        "digital"
                      ],
                      "example": "physical"
                    },
                    "sku": {
                      "type": "string",
                      "description": "User defined product code/stock keeping unit (SKU).\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "SM-13"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product description, which can include HTML formatting.\n",
                      "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "width": {
                      "type": "number",
                      "description": "Width of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "depth": {
                      "type": "number",
                      "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "price": {
                      "type": "number",
                      "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "cost_price": {
                      "type": "number",
                      "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "tax_class_id": {
                      "type": "integer",
                      "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "product_tax_code": {
                      "type": "string",
                      "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "categories": {
                      "type": "array",
                      "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                      "x-required": [
                        "post"
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "brand_id": {
                      "type": "integer",
                      "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_tracking": {
                      "type": "string",
                      "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                      "enum": [
                        "none",
                        "product",
                        "variant"
                      ]
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
                    },
                    "is_featured": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
                    },
                    "related_products": {
                      "type": "array",
                      "description": "An array of IDs for the related products.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "warranty": {
                      "type": "string",
                      "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "The BIN picking number for the product.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "layout_file": {
                      "type": "string",
                      "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                      "minLength": 0,
                      "maxLength": 500
                    },
                    "upc": {
                      "type": "string",
                      "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "available",
                        "disabled",
                        "preorder"
                      ],
                      "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
                    },
                    "availability_description": {
                      "type": "string",
                      "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "gift_wrapping_options_type": {
                      "type": "string",
                      "enum": [
                        "any",
                        "none",
                        "list"
                      ],
                      "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
                    },
                    "gift_wrapping_options_list": {
                      "type": "array",
                      "description": "A list of gift-wrapping option IDs.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "condition": {
                      "type": "string",
                      "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                      "enum": [
                        "New",
                        "Used",
                        "Refurbished"
                      ]
                    },
                    "is_condition_shown": {
                      "type": "boolean",
                      "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
                    },
                    "order_quantity_minimum": {
                      "type": "integer",
                      "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "order_quantity_maximum": {
                      "type": "integer",
                      "description": "The maximum quantity an order can contain when purchasing the product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "page_title": {
                      "type": "string",
                      "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "view_count": {
                      "type": "integer",
                      "description": "The number of times the product has been viewed.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "preorder_release_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                      "x-nullable": true
                    },
                    "preorder_message": {
                      "type": "string",
                      "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "is_preorder_only": {
                      "type": "boolean",
                      "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
                    },
                    "is_price_hidden": {
                      "type": "boolean",
                      "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
                    },
                    "price_hidden_label": {
                      "type": "string",
                      "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the product on the storefront.",
                      "title": "Custom Url Product",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Product URL on the storefront.\n",
                          "x-url": true,
                          "example": "/red-large-shirt"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                        }
                      }
                    },
                    "open_graph_type": {
                      "type": "string",
                      "description": "Type of product, defaults to `product`.\n",
                      "enum": [
                        "product",
                        "album",
                        "book",
                        "drink",
                        "food",
                        "game",
                        "movie",
                        "song",
                        "tv_show"
                      ]
                    },
                    "open_graph_title": {
                      "type": "string",
                      "description": "Title of the product, if not specified the product name will be used instead.\n"
                    },
                    "open_graph_description": {
                      "type": "string",
                      "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
                    },
                    "open_graph_use_meta_description": {
                      "type": "boolean",
                      "description": "Flag to determine if product description or open graph description is used.\n"
                    },
                    "open_graph_use_product_name": {
                      "type": "boolean",
                      "description": "Flag to determine if product name or open graph name is used.\n"
                    },
                    "open_graph_use_image": {
                      "type": "boolean",
                      "description": "Flag to determine if product image or open graph image is used.\n"
                    },
                    "brand_name or brand_id": {
                      "type": "string",
                      "example": "Common Good",
                      "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
                    },
                    "gtin": {
                      "type": "string",
                      "description": "Global Trade Item Number"
                    },
                    "mpn": {
                      "type": "string",
                      "description": "Manufacturer Part Number"
                    },
                    "calculated_price": {
                      "type": "number",
                      "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                      "format": "float"
                    },
                    "reviews_rating_sum": {
                      "type": "integer",
                      "description": "The total rating for the product.\n",
                      "example": 3.2
                    },
                    "reviews_count": {
                      "type": "integer",
                      "description": "The number of times the product has been rated.\n",
                      "example": 4
                    },
                    "total_sold": {
                      "type": "integer",
                      "description": "The total quantity of this product sold.\n",
                      "example": 80
                    },
                    "custom_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                        "title": "Custom Field",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                            "minimum": 1,
                            "example": 6
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "ISBN"
                          },
                          "value": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "1234567890123"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      }
                    },
                    "bulk_pricing_rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Common BulkPricingRule properties",
                        "title": "Bulk Pricing Rule",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                          },
                          "quantity_min": {
                            "type": "integer",
                            "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "minimum": 0,
                            "example": 10
                          },
                          "quantity_max": {
                            "type": "integer",
                            "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                            "x-required": [
                              "post"
                            ],
                            "minimum": 0,
                            "example": 50
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                            "x-required": [
                              "post"
                            ],
                            "enum": [
                              "price",
                              "percent",
                              "fixed"
                            ],
                            "example": "price"
                          },
                          "amount": {
                            "type": "integer",
                            "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST."
                          }
                        },
                        "required": [
                          "quantity_min",
                          "quantity_max",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was created.\n",
                      "example": "2018-08-15T14:49:05+00:00"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was modified.\n",
                      "example": "2018-08-24T14:41:00+00:00"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "title": "Product Image",
                        "allOf": [
                          {
                            "description": "Common ProductImage properties.",
                            "title": "Product Image Base",
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "is_thumbnail": {
                                "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                                "type": "boolean"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "description": {
                                "description": "The description for the image.\n",
                                "type": "string"
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "image_url": {
                                "type": "string",
                                "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                                "description": "Publically available URL. \nUse the image_url when creating a product. "
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "videos": {
                      "type": "array",
                      "items": {
                        "description": "A product video model.\n",
                        "allOf": [
                          {
                            "description": "Common ProductVideo properties.",
                            "title": "Product Video Base",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "description": {
                                "type": "string",
                                "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "type": {
                                "type": "string",
                                "description": "The video type (a short name of a host site).\n",
                                "enum": [
                                  "youtube"
                                ]
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the product video; increments sequentially.\n"
                              },
                              "video_id": {
                                "description": "The ID of the video on a host site.\n",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "length": {
                                "description": "Length of the video. This will be filled in according to data on a host site.\n",
                                "type": "string"
                              }
                            }
                          }
                        ],
                        "title": "Product Video",
                        "type": "object"
                      }
                    },
                    "variants": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common Variant properties.",
                            "title": "Variant Base",
                            "properties": {
                              "cost_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The cost price of the variant. Not affected by Price List prices.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "sale_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "retail_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "weight": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "depth": {
                                "type": "number",
                                "format": "double",
                                "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "is_free_shipping": {
                                "type": "boolean",
                                "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                              },
                              "fixed_cost_shipping_price": {
                                "type": "number",
                                "format": "double",
                                "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "purchasing_disabled": {
                                "type": "boolean",
                                "description": "If `true`, this variant will not be purchasable on the storefront."
                              },
                              "purchasing_disabled_message": {
                                "type": "string",
                                "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "upc": {
                                "type": "string",
                                "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                                "x-nullable": true
                              },
                              "inventory_level": {
                                "type": "integer",
                                "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                                "x-nullable": true
                              },
                              "inventory_warning_level": {
                                "type": "integer",
                                "description": "When the variant hits this inventory level, it is considered low stock.",
                                "x-nullable": true
                              },
                              "bin_picking_number": {
                                "type": "string",
                                "description": "Identifies where in a warehouse the variant is located.",
                                "x-nullable": true,
                                "minLength": 0,
                                "maxLength": 255
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "product_id": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "sku_id": {
                                "type": "integer",
                                "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                                "x-nullable": true
                              },
                              "option_values": {
                                "type": "array",
                                "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                                "items": {
                                  "allOf": [
                                    {
                                      "description": "Common Option Value Product properties.",
                                      "title": "Option Value Product Base",
                                      "properties": {
                                        "option_display_name": {
                                          "type": "string",
                                          "description": "The name of the option.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Color"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the option value.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Beige"
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer"
                                        },
                                        "option_id": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Option Value Variant",
                                  "type": "object"
                                }
                              },
                              "calculated_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "base_variant_id": {
                      "type": "integer",
                      "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                      "example": 363
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the product. Read Only"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 174,
                  "name": "1L Le Parfait Jar",
                  "type": "physical",
                  "sku": "",
                  "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                  "weight": 1,
                  "width": 0,
                  "depth": 0,
                  "height": 0,
                  "price": 7.95,
                  "cost_price": 0,
                  "retail_price": 10,
                  "sale_price": 0,
                  "map_price": 0,
                  "tax_class_id": 0,
                  "product_tax_code": "",
                  "calculated_price": 7.95,
                  "categories": [
                    23,
                    21
                  ],
                  "brand_id": 36,
                  "option_set_id": {},
                  "option_set_display": "right",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "inventory_tracking": "none",
                  "reviews_rating_sum": 0,
                  "reviews_count": 0,
                  "total_sold": 7,
                  "fixed_cost_shipping_price": 0,
                  "is_free_shipping": false,
                  "is_visible": true,
                  "is_featured": false,
                  "related_products": [
                    -1
                  ],
                  "warranty": "",
                  "bin_picking_number": "",
                  "layout_file": "product.html",
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "search_keywords": "jar, glass",
                  "availability": "available",
                  "availability_description": "",
                  "gift_wrapping_options_type": "any",
                  "gift_wrapping_options_list": [],
                  "sort_order": 0,
                  "condition": "New",
                  "is_condition_shown": false,
                  "order_quantity_minimum": 0,
                  "order_quantity_maximum": 0,
                  "page_title": "",
                  "meta_keywords": [],
                  "meta_description": "",
                  "date_created": "2018-08-15T14:48:46+00:00",
                  "date_modified": "2018-09-05T20:42:07+00:00",
                  "view_count": 10,
                  "preorder_release_date": {},
                  "preorder_message": "",
                  "is_preorder_only": false,
                  "is_price_hidden": false,
                  "price_hidden_label": "",
                  "custom_url": {
                    "url": "/all/1l-le-parfait-jar/",
                    "is_customized": true
                  },
                  "base_variant_id": 345,
                  "open_graph_type": "product",
                  "open_graph_title": "",
                  "open_graph_description": "",
                  "open_graph_use_meta_description": true,
                  "open_graph_use_product_name": true,
                  "open_graph_use_image": true
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Product",
        "tags": [
          "Products",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Product*.\n\n**Read-Only Fields**\n- id\n- date_created\n- date_modified\n- calculated_price\n- base_variant_id\n",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "product",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The model for a PUT to update a product.",
              "allOf": [
                {
                  "description": "Common Product properties.",
                  "title": "Product",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The product name.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Smith Journal 13"
                    },
                    "type": {
                      "type": "string",
                      "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "physical",
                        "digital"
                      ],
                      "example": "physical"
                    },
                    "sku": {
                      "type": "string",
                      "description": "User defined product code/stock keeping unit (SKU).\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "SM-13"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product description, which can include HTML formatting.\n",
                      "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "width": {
                      "type": "number",
                      "description": "Width of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "depth": {
                      "type": "number",
                      "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "price": {
                      "type": "number",
                      "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "cost_price": {
                      "type": "number",
                      "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "tax_class_id": {
                      "type": "integer",
                      "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "product_tax_code": {
                      "type": "string",
                      "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "categories": {
                      "type": "array",
                      "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                      "x-required": [
                        "post"
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "brand_id": {
                      "type": "integer",
                      "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_tracking": {
                      "type": "string",
                      "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                      "enum": [
                        "none",
                        "product",
                        "variant"
                      ]
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
                    },
                    "is_featured": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
                    },
                    "related_products": {
                      "type": "array",
                      "description": "An array of IDs for the related products.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "warranty": {
                      "type": "string",
                      "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "The BIN picking number for the product.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "layout_file": {
                      "type": "string",
                      "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                      "minLength": 0,
                      "maxLength": 500
                    },
                    "upc": {
                      "type": "string",
                      "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "available",
                        "disabled",
                        "preorder"
                      ],
                      "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
                    },
                    "availability_description": {
                      "type": "string",
                      "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "gift_wrapping_options_type": {
                      "type": "string",
                      "enum": [
                        "any",
                        "none",
                        "list"
                      ],
                      "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
                    },
                    "gift_wrapping_options_list": {
                      "type": "array",
                      "description": "A list of gift-wrapping option IDs.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "condition": {
                      "type": "string",
                      "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                      "enum": [
                        "New",
                        "Used",
                        "Refurbished"
                      ]
                    },
                    "is_condition_shown": {
                      "type": "boolean",
                      "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
                    },
                    "order_quantity_minimum": {
                      "type": "integer",
                      "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "order_quantity_maximum": {
                      "type": "integer",
                      "description": "The maximum quantity an order can contain when purchasing the product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "page_title": {
                      "type": "string",
                      "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "view_count": {
                      "type": "integer",
                      "description": "The number of times the product has been viewed.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "preorder_release_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                      "x-nullable": true
                    },
                    "preorder_message": {
                      "type": "string",
                      "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "is_preorder_only": {
                      "type": "boolean",
                      "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
                    },
                    "is_price_hidden": {
                      "type": "boolean",
                      "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
                    },
                    "price_hidden_label": {
                      "type": "string",
                      "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the product on the storefront.",
                      "title": "Custom Url Product",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Product URL on the storefront.\n",
                          "x-url": true,
                          "example": "/red-large-shirt"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                        }
                      }
                    },
                    "open_graph_type": {
                      "type": "string",
                      "description": "Type of product, defaults to `product`.\n",
                      "enum": [
                        "product",
                        "album",
                        "book",
                        "drink",
                        "food",
                        "game",
                        "movie",
                        "song",
                        "tv_show"
                      ]
                    },
                    "open_graph_title": {
                      "type": "string",
                      "description": "Title of the product, if not specified the product name will be used instead.\n"
                    },
                    "open_graph_description": {
                      "type": "string",
                      "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
                    },
                    "open_graph_use_meta_description": {
                      "type": "boolean",
                      "description": "Flag to determine if product description or open graph description is used.\n"
                    },
                    "open_graph_use_product_name": {
                      "type": "boolean",
                      "description": "Flag to determine if product name or open graph name is used.\n"
                    },
                    "open_graph_use_image": {
                      "type": "boolean",
                      "description": "Flag to determine if product image or open graph image is used.\n"
                    },
                    "brand_name or brand_id": {
                      "type": "string",
                      "example": "Common Good",
                      "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
                    },
                    "gtin": {
                      "type": "string",
                      "description": "Global Trade Item Number"
                    },
                    "mpn": {
                      "type": "string",
                      "description": "Manufacturer Part Number"
                    },
                    "calculated_price": {
                      "type": "number",
                      "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                      "format": "float"
                    },
                    "reviews_rating_sum": {
                      "type": "integer",
                      "description": "The total rating for the product.\n",
                      "example": 3.2
                    },
                    "reviews_count": {
                      "type": "integer",
                      "description": "The number of times the product has been rated.\n",
                      "example": 4
                    },
                    "total_sold": {
                      "type": "integer",
                      "description": "The total quantity of this product sold.\n",
                      "example": 80
                    },
                    "custom_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                        "title": "Custom Field",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                            "minimum": 1,
                            "example": 6
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "ISBN"
                          },
                          "value": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "1234567890123"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      }
                    },
                    "bulk_pricing_rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Common BulkPricingRule properties",
                        "title": "Bulk Pricing Rule",
                        "properties": {
                          "quantity_min": {
                            "type": "integer",
                            "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "minimum": 0,
                            "example": 10
                          },
                          "quantity_max": {
                            "type": "integer",
                            "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                            "x-required": [
                              "post"
                            ],
                            "minimum": 0,
                            "example": 50
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                            "x-required": [
                              "post"
                            ],
                            "enum": [
                              "price",
                              "percent",
                              "fixed"
                            ],
                            "example": "price"
                          },
                          "amount": {
                            "type": "integer",
                            "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST."
                          }
                        },
                        "required": [
                          "quantity_min",
                          "quantity_max",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was created.\n",
                      "example": "2018-08-15T14:49:05+00:00"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was modified.\n",
                      "example": "2018-08-24T14:41:00+00:00"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "title": "Product Image",
                        "allOf": [
                          {
                            "description": "Common ProductImage properties.",
                            "title": "Product Image Base",
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "is_thumbnail": {
                                "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                                "type": "boolean"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "description": {
                                "description": "The description for the image.\n",
                                "type": "string"
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "image_url": {
                                "type": "string",
                                "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                                "description": "Publically available URL. \nUse the image_url when creating a product. "
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "videos": {
                      "type": "array",
                      "items": {
                        "description": "A product video model.\n",
                        "allOf": [
                          {
                            "description": "Common ProductVideo properties.",
                            "title": "Product Video Base",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "description": {
                                "type": "string",
                                "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "type": {
                                "type": "string",
                                "description": "The video type (a short name of a host site).\n",
                                "enum": [
                                  "youtube"
                                ]
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the product video; increments sequentially.\n"
                              },
                              "video_id": {
                                "description": "The ID of the video on a host site.\n",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "length": {
                                "description": "Length of the video. This will be filled in according to data on a host site.\n",
                                "type": "string"
                              }
                            }
                          }
                        ],
                        "title": "Product Video",
                        "type": "object"
                      }
                    },
                    "variants": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common Variant properties.",
                            "title": "Variant Base",
                            "properties": {
                              "cost_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The cost price of the variant. Not affected by Price List prices.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "sale_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "retail_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "weight": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "depth": {
                                "type": "number",
                                "format": "double",
                                "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "is_free_shipping": {
                                "type": "boolean",
                                "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                              },
                              "fixed_cost_shipping_price": {
                                "type": "number",
                                "format": "double",
                                "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "purchasing_disabled": {
                                "type": "boolean",
                                "description": "If `true`, this variant will not be purchasable on the storefront."
                              },
                              "purchasing_disabled_message": {
                                "type": "string",
                                "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "upc": {
                                "type": "string",
                                "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                                "x-nullable": true
                              },
                              "inventory_level": {
                                "type": "integer",
                                "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                                "x-nullable": true
                              },
                              "inventory_warning_level": {
                                "type": "integer",
                                "description": "When the variant hits this inventory level, it is considered low stock.",
                                "x-nullable": true
                              },
                              "bin_picking_number": {
                                "type": "string",
                                "description": "Identifies where in a warehouse the variant is located.",
                                "x-nullable": true,
                                "minLength": 0,
                                "maxLength": 255
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "product_id": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "sku_id": {
                                "type": "integer",
                                "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                                "x-nullable": true
                              },
                              "option_values": {
                                "type": "array",
                                "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                                "items": {
                                  "allOf": [
                                    {
                                      "description": "Common Option Value Product properties.",
                                      "title": "Option Value Product Base",
                                      "properties": {
                                        "option_display_name": {
                                          "type": "string",
                                          "description": "The name of the option.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Color"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the option value.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Beige"
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer"
                                        },
                                        "option_id": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Option Value Variant",
                                  "type": "object"
                                }
                              },
                              "calculated_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "base_variant_id": {
                      "type": "integer",
                      "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                      "example": 363
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the product. Read Only"
                    }
                  }
                },
                {
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numerical ID of the product; increments sequentially.\n",
                      "x-required": [
                        "put"
                      ]
                    },
                    "custom_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                        "title": "Custom Field",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                            "minimum": 1,
                            "example": 6
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "ISBN"
                          },
                          "value": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "1234567890123"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      }
                    },
                    "bulk_pricing_rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Common BulkPricingRule properties",
                        "title": "Bulk Pricing Rule",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                          },
                          "quantity_min": {
                            "type": "integer",
                            "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "minimum": 0,
                            "example": 10
                          },
                          "quantity_max": {
                            "type": "integer",
                            "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                            "x-required": [
                              "post"
                            ],
                            "minimum": 0,
                            "example": 50
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                            "x-required": [
                              "post"
                            ],
                            "enum": [
                              "price",
                              "percent",
                              "fixed"
                            ],
                            "example": "price"
                          },
                          "amount": {
                            "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
                            "example": 10,
                            "type": "integer"
                          }
                        },
                        "required": [
                          "quantity_min",
                          "quantity_max",
                          "type",
                          "amount"
                        ]
                      }
                    },
                    "variants": {
                      "type": "array",
                      "items": {
                        "description": "The model for a PUT to update variants on a product.\n",
                        "allOf": [
                          {
                            "description": "Common Variant properties.",
                            "title": "Variant Base",
                            "properties": {
                              "cost_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The cost price of the variant. Not affected by Price List prices.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "sale_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "retail_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "weight": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "depth": {
                                "type": "number",
                                "format": "double",
                                "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "is_free_shipping": {
                                "type": "boolean",
                                "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                              },
                              "fixed_cost_shipping_price": {
                                "type": "number",
                                "format": "double",
                                "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "purchasing_disabled": {
                                "type": "boolean",
                                "description": "If `true`, this variant will not be purchasable on the storefront."
                              },
                              "purchasing_disabled_message": {
                                "type": "string",
                                "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "upc": {
                                "type": "string",
                                "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                                "x-nullable": true
                              },
                              "inventory_level": {
                                "type": "integer",
                                "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                                "x-nullable": true
                              },
                              "inventory_warning_level": {
                                "type": "integer",
                                "description": "When the variant hits this inventory level, it is considered low stock.",
                                "x-nullable": true
                              },
                              "bin_picking_number": {
                                "type": "string",
                                "description": "Identifies where in a warehouse the variant is located.",
                                "x-nullable": true,
                                "minLength": 0,
                                "maxLength": 255
                              }
                            }
                          },
                          {
                            "properties": {
                              "product_id": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string",
                                "minLength": 1,
                                "maxLength": 255
                              }
                            }
                          }
                        ],
                        "title": "Variant Product Put",
                        "type": "object"
                      }
                    }
                  }
                }
              ],
              "title": "Product Put",
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "name": "Fog Linen Chambray Towel - Beige Stripe",
                "type": "physical",
                "sku": "SLCTBS",
                "description": "<p>The perfect beach towel: thin, lightweight and highly absorbent. Crafted by Fog Linen in Japan using soft Lithuanian linen, each towel rolls up for compact stowaway. Dry off after a refreshing dip in the ocean and stretch out on it for a sun bath. The thinness ensures a quick dry so you can have it rolled back up in your bag without soaking your belongings.</p>\\r\\n<p>Measures 75 x 145 cm/29.5 x 57 in</p>\\r\\n<p>100% Linen</p>",
                "weight": 1,
                "width": 6,
                "depth": 2,
                "height": 4,
                "price": 49.99,
                "cost_price": 12.99,
                "retail_price": 32.99,
                "tax_class_id": 0,
                "product_tax_code": "3451",
                "categories": [
                  1,
                  2
                ],
                "brand_id": 5,
                "inventory_level": 10,
                "inventory_warning_level": 10,
                "inventory_tracking": "none",
                "fixed_cost_shipping_price": 8,
                "is_free_shipping": false,
                "is_visible": true,
                "is_featured": true,
                "related_products": [
                  -1
                ],
                "bin_picking_number": "56WB",
                "layout_file": "product.html",
                "upc": "1234567890",
                "search_keywords": "towel, bath, kitchen",
                "availability": "available",
                "gift_wrapping_options_type": "any",
                "gift_wrapping_options_list": [
                  1,
                  2,
                  3
                ],
                "sort_order": 4,
                "condition": "New",
                "is_condition_shown": true,
                "order_quantity_minimum": 5,
                "order_quantity_maximum": 50,
                "meta_keywords": [],
                "view_count": 146,
                "preorder_release_date": "null",
                "is_preorder_only": false,
                "is_price_hidden": false,
                "custom_url": {
                  "url": "/this-is-a-custom-url/",
                  "is_customized": true
                },
                "open_graph_type": "product",
                "id": 113,
                "custom_fields": [
                  {
                    "name": "Release year",
                    "value": "1987",
                    "id": 1
                  }
                ],
                "bulk_pricing_rules": [
                  {
                    "quantity_min": 10,
                    "quantity_max": 50,
                    "type": "price",
                    "amount": 10,
                    "id": 3
                  }
                ],
                "variants": [
                  {
                    "id": 12,
                    "cost_price": 3,
                    "price": 50.99,
                    "sale_price": 45,
                    "retail_price": 50.99,
                    "weight": 1,
                    "width": 4,
                    "height": 14.6,
                    "depth": 22,
                    "is_free_shipping": true,
                    "purchasing_disabled": true,
                    "purchasing_disabled_message": "This item not available at this time.",
                    "inventory_level": 100,
                    "inventory_warning_level": 10,
                    "product_id": 87,
                    "sku": "S-ORAN-1",
                    "brand_name": "Common Good",
                    "brand_id": 1
                  }
                ]
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "$ref": "#/parameters/FilterIncludeFieldsParam"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Product Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Product properties.",
                  "title": "Product",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The product name.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Smith Journal 13"
                    },
                    "type": {
                      "type": "string",
                      "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "physical",
                        "digital"
                      ],
                      "example": "physical"
                    },
                    "sku": {
                      "type": "string",
                      "description": "User defined product code/stock keeping unit (SKU).\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "SM-13"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product description, which can include HTML formatting.\n",
                      "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
                    },
                    "weight": {
                      "type": "number",
                      "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "width": {
                      "type": "number",
                      "description": "Width of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "depth": {
                      "type": "number",
                      "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "height": {
                      "type": "number",
                      "description": "Height of the product, which can be used when calculating shipping costs.\n",
                      "format": "float",
                      "minimum": 0,
                      "maximum": 9999999999
                    },
                    "price": {
                      "type": "number",
                      "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "cost_price": {
                      "type": "number",
                      "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "tax_class_id": {
                      "type": "integer",
                      "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "product_tax_code": {
                      "type": "string",
                      "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "categories": {
                      "type": "array",
                      "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                      "x-required": [
                        "post"
                      ],
                      "items": {
                        "type": "integer"
                      }
                    },
                    "brand_id": {
                      "type": "integer",
                      "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "inventory_tracking": {
                      "type": "string",
                      "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                      "enum": [
                        "none",
                        "product",
                        "variant"
                      ]
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "format": "float",
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
                    },
                    "is_featured": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
                    },
                    "related_products": {
                      "type": "array",
                      "description": "An array of IDs for the related products.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "warranty": {
                      "type": "string",
                      "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "The BIN picking number for the product.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "layout_file": {
                      "type": "string",
                      "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                      "minLength": 0,
                      "maxLength": 500
                    },
                    "upc": {
                      "type": "string",
                      "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "availability": {
                      "type": "string",
                      "enum": [
                        "available",
                        "disabled",
                        "preorder"
                      ],
                      "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
                    },
                    "availability_description": {
                      "type": "string",
                      "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "gift_wrapping_options_type": {
                      "type": "string",
                      "enum": [
                        "any",
                        "none",
                        "list"
                      ],
                      "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
                    },
                    "gift_wrapping_options_list": {
                      "type": "array",
                      "description": "A list of gift-wrapping option IDs.\n",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "condition": {
                      "type": "string",
                      "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                      "enum": [
                        "New",
                        "Used",
                        "Refurbished"
                      ]
                    },
                    "is_condition_shown": {
                      "type": "boolean",
                      "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
                    },
                    "order_quantity_minimum": {
                      "type": "integer",
                      "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "order_quantity_maximum": {
                      "type": "integer",
                      "description": "The maximum quantity an order can contain when purchasing the product.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "page_title": {
                      "type": "string",
                      "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "view_count": {
                      "type": "integer",
                      "description": "The number of times the product has been viewed.\n",
                      "minimum": 0,
                      "maximum": 1000000000
                    },
                    "preorder_release_date": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                      "x-nullable": true
                    },
                    "preorder_message": {
                      "type": "string",
                      "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "is_preorder_only": {
                      "type": "boolean",
                      "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
                    },
                    "is_price_hidden": {
                      "type": "boolean",
                      "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
                    },
                    "price_hidden_label": {
                      "type": "string",
                      "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                      "minLength": 0,
                      "maxLength": 200
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the product on the storefront.",
                      "title": "Custom Url Product",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Product URL on the storefront.\n",
                          "x-url": true,
                          "example": "/red-large-shirt"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                        }
                      }
                    },
                    "open_graph_type": {
                      "type": "string",
                      "description": "Type of product, defaults to `product`.\n",
                      "enum": [
                        "product",
                        "album",
                        "book",
                        "drink",
                        "food",
                        "game",
                        "movie",
                        "song",
                        "tv_show"
                      ]
                    },
                    "open_graph_title": {
                      "type": "string",
                      "description": "Title of the product, if not specified the product name will be used instead.\n"
                    },
                    "open_graph_description": {
                      "type": "string",
                      "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
                    },
                    "open_graph_use_meta_description": {
                      "type": "boolean",
                      "description": "Flag to determine if product description or open graph description is used.\n"
                    },
                    "open_graph_use_product_name": {
                      "type": "boolean",
                      "description": "Flag to determine if product name or open graph name is used.\n"
                    },
                    "open_graph_use_image": {
                      "type": "boolean",
                      "description": "Flag to determine if product image or open graph image is used.\n"
                    },
                    "brand_name or brand_id": {
                      "type": "string",
                      "example": "Common Good",
                      "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
                    },
                    "gtin": {
                      "type": "string",
                      "description": "Global Trade Item Number"
                    },
                    "mpn": {
                      "type": "string",
                      "description": "Manufacturer Part Number"
                    },
                    "calculated_price": {
                      "type": "number",
                      "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                      "format": "float"
                    },
                    "reviews_rating_sum": {
                      "type": "integer",
                      "description": "The total rating for the product.\n",
                      "example": 3.2
                    },
                    "reviews_count": {
                      "type": "integer",
                      "description": "The number of times the product has been rated.\n",
                      "example": 4
                    },
                    "total_sold": {
                      "type": "integer",
                      "description": "The total quantity of this product sold.\n",
                      "example": 80
                    },
                    "custom_fields": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                        "title": "Custom Field",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                            "minimum": 1,
                            "example": 6
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "ISBN"
                          },
                          "value": {
                            "type": "string",
                            "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                            "x-required": [
                              "post"
                            ],
                            "minLength": 1,
                            "maxLength": 250,
                            "example": "1234567890123"
                          }
                        },
                        "required": [
                          "name",
                          "value"
                        ]
                      }
                    },
                    "bulk_pricing_rules": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/BulkPricingRuleBase"
                      }
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was created.\n",
                      "example": "2018-08-15T14:49:05+00:00"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The date on which the product was modified.\n",
                      "example": "2018-08-24T14:41:00+00:00"
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "title": "Product Image",
                        "allOf": [
                          {
                            "description": "Common ProductImage properties.",
                            "title": "Product Image Base",
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "is_thumbnail": {
                                "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                                "type": "boolean"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "description": {
                                "description": "The description for the image.\n",
                                "type": "string"
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "description": "The unique numeric ID of the image; increments sequentially.\n",
                                "type": "integer"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "image_file": {
                                "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                                "type": "string"
                              },
                              "url_zoom": {
                                "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                                "type": "string"
                              },
                              "url_standard": {
                                "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                                "type": "string"
                              },
                              "url_thumbnail": {
                                "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                                "type": "string"
                              },
                              "url_tiny": {
                                "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                                "type": "string"
                              },
                              "date_modified": {
                                "format": "date-time",
                                "description": "The date on which the product image was modified.\n",
                                "type": "string"
                              },
                              "image_url": {
                                "type": "string",
                                "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                                "description": "Publically available URL. \nUse the image_url when creating a product. "
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "videos": {
                      "type": "array",
                      "items": {
                        "description": "A product video model.\n",
                        "allOf": [
                          {
                            "description": "Common ProductVideo properties.",
                            "title": "Product Video Base",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "description": {
                                "type": "string",
                                "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647
                              },
                              "type": {
                                "type": "string",
                                "description": "The video type (a short name of a host site).\n",
                                "enum": [
                                  "youtube"
                                ]
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the product video; increments sequentially.\n"
                              },
                              "video_id": {
                                "description": "The ID of the video on a host site.\n",
                                "type": "string"
                              },
                              "product_id": {
                                "description": "The unique numeric identifier for the product with which the image is associated.\n",
                                "type": "integer"
                              },
                              "length": {
                                "description": "Length of the video. This will be filled in according to data on a host site.\n",
                                "type": "string"
                              }
                            }
                          }
                        ],
                        "title": "Product Video",
                        "type": "object"
                      }
                    },
                    "variants": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "description": "Common Variant properties.",
                            "title": "Variant Base",
                            "properties": {
                              "cost_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The cost price of the variant. Not affected by Price List prices.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "sale_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "retail_price": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "weight": {
                                "type": "number",
                                "format": "double",
                                "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "width": {
                                "type": "number",
                                "format": "double",
                                "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "height": {
                                "type": "number",
                                "format": "double",
                                "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "depth": {
                                "type": "number",
                                "format": "double",
                                "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "is_free_shipping": {
                                "type": "boolean",
                                "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                              },
                              "fixed_cost_shipping_price": {
                                "type": "number",
                                "format": "double",
                                "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                                "x-nullable": true,
                                "minimum": 0
                              },
                              "purchasing_disabled": {
                                "type": "boolean",
                                "description": "If `true`, this variant will not be purchasable on the storefront."
                              },
                              "purchasing_disabled_message": {
                                "type": "string",
                                "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                                "minLength": 0,
                                "maxLength": 255
                              },
                              "upc": {
                                "type": "string",
                                "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                                "x-nullable": true
                              },
                              "inventory_level": {
                                "type": "integer",
                                "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                                "x-nullable": true
                              },
                              "inventory_warning_level": {
                                "type": "integer",
                                "description": "When the variant hits this inventory level, it is considered low stock.",
                                "x-nullable": true
                              },
                              "bin_picking_number": {
                                "type": "string",
                                "description": "Identifies where in a warehouse the variant is located.",
                                "x-nullable": true,
                                "minLength": 0,
                                "maxLength": 255
                              }
                            }
                          },
                          {
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "product_id": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "sku_id": {
                                "type": "integer",
                                "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                                "x-nullable": true
                              },
                              "option_values": {
                                "type": "array",
                                "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                                "items": {
                                  "allOf": [
                                    {
                                      "description": "Common Option Value Product properties.",
                                      "title": "Option Value Product Base",
                                      "properties": {
                                        "option_display_name": {
                                          "type": "string",
                                          "description": "The name of the option.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Color"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the option value.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "minLength": 1,
                                          "maxLength": 255,
                                          "example": "Beige"
                                        }
                                      }
                                    },
                                    {
                                      "properties": {
                                        "id": {
                                          "type": "integer"
                                        },
                                        "option_id": {
                                          "type": "integer"
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Option Value Variant",
                                  "type": "object"
                                }
                              },
                              "calculated_price": {
                                "type": "number",
                                "format": "double",
                                "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                              }
                            }
                          }
                        ],
                        "type": "object"
                      }
                    },
                    "base_variant_id": {
                      "type": "integer",
                      "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                      "example": 363
                    },
                    "id": {
                      "type": "integer",
                      "description": "ID of the product. Read Only"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 174,
                  "name": "1L Le Parfait Jar",
                  "type": "physical",
                  "sku": "",
                  "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
                  "weight": 1,
                  "width": 0,
                  "depth": 0,
                  "height": 0,
                  "price": 7.95,
                  "cost_price": 0,
                  "retail_price": 10,
                  "sale_price": 0,
                  "map_price": 0,
                  "tax_class_id": 0,
                  "product_tax_code": "",
                  "calculated_price": 7.95,
                  "categories": [
                    23,
                    21
                  ],
                  "brand_id": 36,
                  "option_set_id": {},
                  "option_set_display": "right",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "inventory_tracking": "none",
                  "reviews_rating_sum": 0,
                  "reviews_count": 0,
                  "total_sold": 7,
                  "fixed_cost_shipping_price": 0,
                  "is_free_shipping": false,
                  "is_visible": true,
                  "is_featured": false,
                  "related_products": [
                    -1
                  ],
                  "warranty": "",
                  "bin_picking_number": "",
                  "layout_file": "product.html",
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "search_keywords": "jar, glass",
                  "availability": "available",
                  "availability_description": "",
                  "gift_wrapping_options_type": "any",
                  "gift_wrapping_options_list": [],
                  "sort_order": 0,
                  "condition": "New",
                  "is_condition_shown": false,
                  "order_quantity_minimum": 0,
                  "order_quantity_maximum": 0,
                  "page_title": "",
                  "meta_keywords": [],
                  "meta_description": "",
                  "date_created": "2018-08-15T14:48:46+00:00",
                  "date_modified": "2018-09-05T20:42:07+00:00",
                  "view_count": 10,
                  "preorder_release_date": {},
                  "preorder_message": "",
                  "is_preorder_only": false,
                  "is_price_hidden": false,
                  "price_hidden_label": "",
                  "custom_url": {
                    "url": "/all/1l-le-parfait-jar/",
                    "is_customized": true
                  },
                  "base_variant_id": 345,
                  "open_graph_type": "product",
                  "open_graph_title": "",
                  "open_graph_description": "",
                  "open_graph_use_meta_description": true,
                  "open_graph_use_product_name": true,
                  "open_graph_use_image": true
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "409": {
            "description": "`Product` was in conflict with another product. This is caused by: duplicate unique values, such as name or SKU; a missing category, brand, or tax_class with which the product is being associated; or a conflicting bulk pricing rule.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "`Product` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Product",
        "tags": [
          "Products",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Product*.",
        "operationId": "deleteProductById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Product",
        "tags": [
          "Products",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/products/{product_id}/images": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of *Product Images*. Optional parameters can be passed in.",
        "operationId": "getProductImages",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "title": "Product Image",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common ProductImage properties.",
                        "properties": {
                          "id": {
                            "description": "The unique numeric ID of the image; increments sequentially.\n",
                            "type": "integer"
                          },
                          "product_id": {
                            "description": "The unique numeric identifier for the product with which the image is associated.\n",
                            "type": "integer"
                          },
                          "image_file": {
                            "description": "The local path to the original image file uploaded to BigCommerce.\n",
                            "type": "string"
                          },
                          "url_zoom": {
                            "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                            "type": "string"
                          },
                          "url_standard": {
                            "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                            "type": "string"
                          },
                          "url_thumbnail": {
                            "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                            "type": "string"
                          },
                          "url_tiny": {
                            "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                            "type": "string"
                          },
                          "date_modified": {
                            "format": "date-time",
                            "description": "The date on which the product image was modified.\n",
                            "type": "string"
                          },
                          "is_thumbnail": {
                            "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                            "type": "boolean"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647
                          },
                          "description": {
                            "description": "The description for the image.\n",
                            "type": "string"
                          }
                        },
                        "title": "Product Image Base"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The unique numeric ID of the image; increments sequentially.\n",
                            "type": "integer"
                          },
                          "product_id": {
                            "description": "The unique numeric identifier for the product with which the image is associated.\n",
                            "type": "integer"
                          },
                          "image_file": {
                            "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                            "type": "string"
                          },
                          "url_zoom": {
                            "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                            "type": "string"
                          },
                          "url_standard": {
                            "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                            "type": "string"
                          },
                          "url_thumbnail": {
                            "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                            "type": "string"
                          },
                          "url_tiny": {
                            "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                            "type": "string"
                          },
                          "date_modified": {
                            "format": "date-time",
                            "description": "The date on which the product image was modified.\n",
                            "type": "string"
                          },
                          "image_url": {
                            "type": "string",
                            "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                            "description": "Publically available URL. \nUse the image_url when creating a product. "
                          }
                        }
                      }
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Product Image Collection Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 382,
                    "product_id": 158,
                    "is_thumbnail": true,
                    "sort_order": 0,
                    "description": "",
                    "image_file": "a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg",
                    "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2",
                    "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2",
                    "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2",
                    "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2",
                    "date_modified": "2018-08-15T14:48:31+00:00"
                  },
                  {
                    "id": 383,
                    "product_id": 158,
                    "is_thumbnail": false,
                    "sort_order": 0,
                    "description": "",
                    "image_file": "k/050/foglinenbeigestripetowel2b_1024x1024__16082__46564.jpg",
                    "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.1280.1280.jpg?c=2",
                    "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.560.850.jpg?c=2",
                    "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.330.500.jpg?c=2",
                    "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.66.100.jpg?c=2",
                    "date_modified": "2018-08-15T14:48:31+00:00"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 2,
                    "count": 2,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "There are not any images on this product.\n"
          },
          "404": {
            "description": "The product ID does not exist.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get All Product Images",
        "tags": [
          "Product Images",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Product Image*. \n\n **Required Fields**\n- `image_file`, or\n- `image_url`\n\n**Usage Notes**\n- `image_url` - `255` character limit\n- Only one image at a time can be created",
        "operationId": "createProductImage",
        "parameters": [
          {
            "name": "productImage",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The model for a POST to create an image on a product.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common ProductImage properties.",
                  "properties": {
                    "id": {
                      "description": "The unique numeric ID of the image; increments sequentially.\n",
                      "type": "integer"
                    },
                    "product_id": {
                      "description": "The unique numeric identifier for the product with which the image is associated.\n",
                      "type": "integer"
                    },
                    "image_file": {
                      "description": "The local path to the original image file uploaded to BigCommerce.\n",
                      "type": "string"
                    },
                    "url_zoom": {
                      "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                      "type": "string"
                    },
                    "url_standard": {
                      "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                      "type": "string"
                    },
                    "url_thumbnail": {
                      "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                      "type": "string"
                    },
                    "url_tiny": {
                      "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                      "type": "string"
                    },
                    "date_modified": {
                      "format": "date-time",
                      "description": "The date on which the product image was modified.\n",
                      "type": "string"
                    },
                    "is_thumbnail": {
                      "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                      "type": "boolean"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "description": {
                      "description": "The description for the image.\n",
                      "type": "string"
                    }
                  },
                  "title": "Product Image Base"
                },
                {
                  "properties": {
                    "image_url": {
                      "description": "Must be a fully qualified URL path, including protocol. Limit of 8MB per file. \n",
                      "type": "string"
                    },
                    "image_file": {
                      "description": "Must be sent as a multipart/form-data field in the request body.\n",
                      "type": "string"
                    }
                  }
                }
              ],
              "title": "Product Image Post",
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "is_thumbnail": true,
                "sort_order": 1,
                "description": "Top View",
                "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
              },
              "multipart/form-data": "curl -X POST \\\n  https://api.bigcommerce.com/stores/id30h7ohwf/v3/catalog/products/158/images \\\n  -H 'Accept: application/json' \\\n  -H 'Cache-Control: no-cache' \\\n  -H 'Content-Type: application/json' \\\n  -H 'X-Auth-Client: {X-Auth-Client:}' \\\n  -H 'X-Auth-Token: {X-Auth-Token:}' \\\n  -H 'content-type: multipart/form-data; boundary=-WebKitFormBoundary7MA4YWxkTrZu0gW' \\\n  -F image_file=@/Users/user.name/Documents/docs_images/product-image.png"
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "title": "Product Image",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductImage properties.",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "is_thumbnail": {
                          "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                          "type": "boolean"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "description": {
                          "description": "The description for the image.\n",
                          "type": "string"
                        }
                      },
                      "title": "Product Image Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string",
                          "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                          "description": "Publically available URL. \nUse the image_url when creating a product. "
                        }
                      }
                    }
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Image Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 485,
                  "product_id": 158,
                  "is_thumbnail": false,
                  "sort_order": 1,
                  "description": "",
                  "image_file": "o/381/product-image__98178.png",
                  "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2",
                  "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2",
                  "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2",
                  "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2",
                  "date_modified": "2018-09-13T15:57:07+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The product ID does not exist.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Create a Product Image",
        "consumes": [
          "multipart/form-data",
          "application/json"
        ],
        "tags": [
          "Product Images",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/images/{image_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "image_id",
          "description": "The ID of the `Image` that is being operated on.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Product Image*. Optional parameters can be passed in.",
        "operationId": "getProductImageById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "title": "Product Image",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductImage properties.",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "is_thumbnail": {
                          "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                          "type": "boolean"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "description": {
                          "description": "The description for the image.\n",
                          "type": "string"
                        }
                      },
                      "title": "Product Image Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string",
                          "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                          "description": "Publically available URL. \nUse the image_url when creating a product. "
                        }
                      }
                    }
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Image Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 485,
                  "product_id": 158,
                  "is_thumbnail": false,
                  "sort_order": 1,
                  "description": "",
                  "image_file": "o/381/product-image__98178.png",
                  "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2",
                  "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2",
                  "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2",
                  "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2",
                  "date_modified": "2018-09-13T15:57:07+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Product Image",
        "tags": [
          "Product Images",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Product Image*.\n\n **Required Fields**\n- `image_file`, or\n- `image_url`\n\n**Usage Notes**\n- `image_url` - `255` character limit\n- When using file upload, other image file params can be updated using `key:value` pairs. ",
        "operationId": "updateProductImage",
        "parameters": [
          {
            "name": "productImage",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update applicable Product Image fields.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common ProductImage properties.",
                  "properties": {
                    "id": {
                      "description": "The unique numeric ID of the image; increments sequentially.\n",
                      "type": "integer"
                    },
                    "product_id": {
                      "description": "The unique numeric identifier for the product with which the image is associated.\n",
                      "type": "integer"
                    },
                    "image_file": {
                      "description": "The local path to the original image file uploaded to BigCommerce.\n",
                      "type": "string"
                    },
                    "url_zoom": {
                      "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                      "type": "string"
                    },
                    "url_standard": {
                      "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                      "type": "string"
                    },
                    "url_thumbnail": {
                      "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                      "type": "string"
                    },
                    "url_tiny": {
                      "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                      "type": "string"
                    },
                    "date_modified": {
                      "format": "date-time",
                      "description": "The date on which the product image was modified.\n",
                      "type": "string"
                    },
                    "is_thumbnail": {
                      "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                      "type": "boolean"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "description": {
                      "description": "The description for the image.\n",
                      "type": "string"
                    }
                  },
                  "title": "Product Image Base"
                }
              ],
              "title": "Product Image Put"
            },
            "x-examples": {
              "application/json": {
                "is_thumbnail": true,
                "sort_order": 1,
                "description": "Yellow Large Bath Towel"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "title": "Product Image",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductImage properties.",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "is_thumbnail": {
                          "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                          "type": "boolean"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "description": {
                          "description": "The description for the image.\n",
                          "type": "string"
                        }
                      },
                      "title": "Product Image Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string",
                          "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                          "description": "Publically available URL. \nUse the image_url when creating a product. "
                        }
                      }
                    }
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Image Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 485,
                  "product_id": 158,
                  "is_thumbnail": false,
                  "sort_order": 1,
                  "description": "",
                  "image_file": "o/381/product-image__98178.png",
                  "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2",
                  "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2",
                  "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2",
                  "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2",
                  "date_modified": "2018-09-13T15:57:07+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update a Product Image",
        "tags": [
          "Product Images",
          "Catalog"
        ],
        "consumes": [
          "application/json",
          "multipart/form-data"
        ]
      },
      "delete": {
        "description": "Deletes a *Product Image*.",
        "operationId": "deleteProductImage",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Product Image",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Images",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/videos": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of *Product Videos*. Optional parameters can be passed in",
        "operationId": "getProductVideos",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A product video model.\n",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common ProductVideo properties.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647
                          },
                          "type": {
                            "type": "string",
                            "description": "The video type (a short name of a host site).\n",
                            "enum": [
                              "youtube"
                            ]
                          }
                        },
                        "title": "Product Video Base"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the product video; increments sequentially.\n"
                          },
                          "video_id": {
                            "description": "The ID of the video on a host site.\n",
                            "type": "string"
                          },
                          "product_id": {
                            "description": "The unique numeric identifier for the product with which the image is associated.\n",
                            "type": "integer"
                          },
                          "length": {
                            "description": "Length of the video. This will be filled in according to data on a host site.\n",
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "title": "Product Video"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Product Video Collection Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 6,
                    "type": "youtube",
                    "video_id": "PqBTp23RLhI",
                    "product_id": 192,
                    "sort_order": 1,
                    "title": "Creating and Editing Banners | BigCommerce Tutorials",
                    "description": "Learn how to create and edit marketing banners. Marketing banners are a great way to advertise sales, display coupon codes, and add design elements. Let’s take a look at how you can leverage banners to convert your store’s visitors into paying customers.",
                    "length": "01:54"
                  },
                  {
                    "id": 7,
                    "type": "youtube",
                    "video_id": "EhYBjzqd-nI",
                    "product_id": 192,
                    "sort_order": 2,
                    "title": "BigCommerce Company Values",
                    "description": "These are the core principles upon which BigCommerce was built, guiding what we do and how we do it. Each employee learns them, loves them and lives them. Our merchants benefit from them every time they use our product or get help from our support team.\n\nJoin the BigCommerce team and help us build software that changes lives!\n\nhttps://www.bigcommerce.com/careers/",
                    "length": "03:30"
                  },
                  {
                    "id": 8,
                    "type": "youtube",
                    "video_id": "vAUdo4kRjrU",
                    "product_id": 192,
                    "sort_order": 3,
                    "title": "TOP WORKPLACES 2016 - Austin American Statesman + BigCommerce",
                    "description": "We've been named one of Austin American-Statesman's Top WorkPlaces for the 5th year in a row! Here's what some employees have to say:\n\n“I am given the freedom and trust to make a difference.”\n\n“Everyone believes in the product and growing the company.”\n\n“I'm appreciated for the work I do and there is room to grown within the company.”\n\nWork With Us!\nhttp://www.bigcommerce.com/careers.php",
                    "length": "01:37"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 3,
                    "count": 3,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Product Videos",
        "tags": [
          "Product Videos",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Product Video*.\n\n**Required Fields**\n* video_id - Example: https://www.youtube.com/watch?v=`R12345677`\n\n**Read-Only Fields**\n* id\n\nPublicly accessible URLs are valid parameters.\nVideos must be loaded through YouTube at this time. ",
        "operationId": "createProductVideo",
        "parameters": [
          {
            "name": "productVideo",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a POST to create a video on a product.\n",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common ProductVideo properties.",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "type": {
                      "type": "string",
                      "description": "The video type (a short name of a host site).\n",
                      "enum": [
                        "youtube"
                      ]
                    }
                  },
                  "title": "Product Video Base"
                },
                {
                  "type": "object",
                  "properties": {
                    "video_id": {
                      "type": "string",
                      "description": "The ID of the video on a host site.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 0,
                      "maxLength": 25
                    }
                  }
                }
              ],
              "title": "Product Video Post"
            },
            "x-examples": {
              "application/json": {
                "title": "Your Video",
                "description": "Company Values",
                "sort_order": 1,
                "type": "youtube",
                "video_id": "123345AA"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A product video model.\n",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductVideo properties.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "type": {
                          "type": "string",
                          "description": "The video type (a short name of a host site).\n",
                          "enum": [
                            "youtube"
                          ]
                        }
                      },
                      "title": "Product Video Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the product video; increments sequentially.\n"
                        },
                        "video_id": {
                          "description": "The ID of the video on a host site.\n",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "length": {
                          "description": "Length of the video. This will be filled in according to data on a host site.\n",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "title": "Product Video"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Video Response"
            },
            "examples": {
              "application/json": {
                "title": "Your Video",
                "description": "Company Values",
                "sort_order": 1,
                "type": "youtube",
                "video_id": "123345AA"
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Create a Product Video",
        "tags": [
          "Product Videos",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/videos/{id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "$ref": "#/parameters/VideoIdParam"
        }
      ],
      "get": {
        "description": "Returns a single *Product Video*. Optional parameters can be passed in.",
        "operationId": "getProductVideoById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A product video model.\n",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductVideo properties.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "type": {
                          "type": "string",
                          "description": "The video type (a short name of a host site).\n",
                          "enum": [
                            "youtube"
                          ]
                        }
                      },
                      "title": "Product Video Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the product video; increments sequentially.\n"
                        },
                        "video_id": {
                          "description": "The ID of the video on a host site.\n",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "length": {
                          "description": "Length of the video. This will be filled in according to data on a host site.\n",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "title": "Product Video"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Video Response"
            },
            "examples": {
              "application/json": {
                "title": "Your Video",
                "description": "Company Values",
                "sort_order": 1,
                "type": "youtube",
                "video_id": "123345AA"
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Product Video",
        "tags": [
          "Product Videos",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Product Video.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id",
        "operationId": "updateProductVideo",
        "parameters": [
          {
            "name": "productVideo",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update a video on a product.\n",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common ProductVideo properties.",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "type": {
                      "type": "string",
                      "description": "The video type (a short name of a host site).\n",
                      "enum": [
                        "youtube"
                      ]
                    }
                  },
                  "title": "Product Video Base"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the product video; increments sequentially.\n",
                      "x-required": [
                        "put"
                      ]
                    }
                  }
                }
              ],
              "title": "Product Video Put"
            },
            "x-examples": {
              "application/json": {
                "title": "est ",
                "description": "exercitation labore consectetur",
                "sort_order": 1272745782,
                "type": "youtube",
                "id": -39983286
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A product video model.\n",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductVideo properties.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "type": {
                          "type": "string",
                          "description": "The video type (a short name of a host site).\n",
                          "enum": [
                            "youtube"
                          ]
                        }
                      },
                      "title": "Product Video Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the product video; increments sequentially.\n"
                        },
                        "video_id": {
                          "description": "The ID of the video on a host site.\n",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "length": {
                          "description": "Length of the video. This will be filled in according to data on a host site.\n",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "title": "Product Video"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Video Response"
            },
            "examples": {
              "application/json": {
                "title": "Your Video",
                "description": "Company Values",
                "sort_order": 1,
                "type": "youtube",
                "video_id": "123345AA"
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update a Product Video",
        "tags": [
          "Product Videos",
          "Catalog"
        ]
      },
      "delete": {
        "operationId": "deleteProductVideo",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Product Video",
        "description": "Deletes a *Product Video*.",
        "tags": [
          "Product Videos",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/products/{product_id}/variants": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of product *Variants*. Optional parameters can be passed in.",
        "operationId": "getVariantsByProductId",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Variant properties.",
                        "title": "Variant Base",
                        "properties": {
                          "cost_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost price of the variant. Not affected by Price List prices.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "sale_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "retail_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "weight": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "width": {
                            "type": "number",
                            "format": "double",
                            "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "height": {
                            "type": "number",
                            "format": "double",
                            "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "depth": {
                            "type": "number",
                            "format": "double",
                            "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "is_free_shipping": {
                            "type": "boolean",
                            "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                          },
                          "fixed_cost_shipping_price": {
                            "type": "number",
                            "format": "double",
                            "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "purchasing_disabled": {
                            "type": "boolean",
                            "description": "If `true`, this variant will not be purchasable on the storefront."
                          },
                          "purchasing_disabled_message": {
                            "type": "string",
                            "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "upc": {
                            "type": "string",
                            "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                            "x-nullable": true
                          },
                          "inventory_level": {
                            "type": "integer",
                            "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                            "x-nullable": true
                          },
                          "inventory_warning_level": {
                            "type": "integer",
                            "description": "When the variant hits this inventory level, it is considered low stock.",
                            "x-nullable": true
                          },
                          "bin_picking_number": {
                            "type": "string",
                            "description": "Identifies where in a warehouse the variant is located.",
                            "x-nullable": true,
                            "minLength": 0,
                            "maxLength": 255
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "product_id": {
                            "type": "integer"
                          },
                          "sku": {
                            "type": "string"
                          },
                          "sku_id": {
                            "type": "integer",
                            "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                            "x-nullable": true
                          },
                          "option_values": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "description": "Common Option Value Product properties.",
                                  "title": "Option Value Product Base",
                                  "properties": {
                                    "option_display_name": {
                                      "type": "string",
                                      "description": "The name of the option.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Color"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label of the option value.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Beige"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "option_id": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              ],
                              "title": "Option Value Variant"
                            },
                            "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                          },
                          "calculated_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                          }
                        }
                      }
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Variant Collection Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 382,
                    "product_id": 192,
                    "sku": "SMIT",
                    "sku_id": 348,
                    "price": 10,
                    "calculated_price": 10,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 2,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 174,
                        "label": "Beige",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 383,
                    "product_id": 192,
                    "sku": "SMIT-1",
                    "sku_id": 349,
                    "price": {},
                    "calculated_price": 25,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 175,
                        "label": "Grey",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 384,
                    "product_id": 192,
                    "sku": "SMIT-2",
                    "sku_id": 350,
                    "price": {},
                    "calculated_price": 25,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 176,
                        "label": "Black",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 3,
                    "count": 3,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "tags": [
          "Product Variants",
          "Catalog"
        ],
        "summary": "Get All Product Variants"
      },
      "post": {
        "description": "Creates a *Product Variant*. \n\n**Required Fields**\n* sku\n* option_values\n\n**Read-Only Fields**\n* id\n\nVariants need to be created one at a time using this endpoint. To use a variant array and create products and variants in the same call use the [Create Products](/api-reference/catalog/catalog-api/products/createproduct) during the initial product creation.",
        "operationId": "createVariant",
        "parameters": [
          {
            "name": "Variant",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The model for a POST to create variants on a product.\n",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Variant properties.",
                  "title": "Variant Base",
                  "properties": {
                    "cost_price": {
                      "type": "number",
                      "format": "double",
                      "description": "The cost price of the variant. Not affected by Price List prices.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "weight": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "width": {
                      "type": "number",
                      "format": "double",
                      "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "height": {
                      "type": "number",
                      "format": "double",
                      "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "depth": {
                      "type": "number",
                      "format": "double",
                      "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "format": "double",
                      "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "purchasing_disabled": {
                      "type": "boolean",
                      "description": "If `true`, this variant will not be purchasable on the storefront."
                    },
                    "purchasing_disabled_message": {
                      "type": "string",
                      "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "upc": {
                      "type": "string",
                      "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                      "x-nullable": true
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                      "x-nullable": true
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "When the variant hits this inventory level, it is considered low stock.",
                      "x-nullable": true
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "Identifies where in a warehouse the variant is located.",
                      "x-nullable": true,
                      "minLength": 0,
                      "maxLength": 255
                    }
                  }
                },
                {
                  "properties": {
                    "product_id": {
                      "type": "integer",
                      "x-required": [
                        "post"
                      ]
                    },
                    "sku": {
                      "type": "string",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 255
                    },
                    "option_values": {
                      "type": "array",
                      "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                      "x-required": [
                        "post"
                      ],
                      "items": {
                        "type": "object",
                        "description": "The model for a POST to create option values on a variant.",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "x-required": [
                              "post"
                            ]
                          },
                          "option_id": {
                            "type": "integer",
                            "x-required": [
                              "post"
                            ]
                          }
                        },
                        "title": "Option Value Variant Post"
                      }
                    }
                  }
                }
              ],
              "title": "Variant Post",
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "cost_price": 3,
                "price": 12.99,
                "retail_price": 15.99,
                "weight": 1,
                "width": 4,
                "height": 14.6,
                "depth": 22,
                "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                "is_free_shipping": true,
                "purchasing_disabled": true,
                "purchasing_disabled_message": "This item not available at this time.",
                "product_id": 134,
                "sku": "SMALL",
                "option_values": [
                  {
                    "id": 255,
                    "option_id": 270
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Variant properties.",
                      "title": "Variant Base",
                      "properties": {
                        "cost_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost price of the variant. Not affected by Price List prices.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "sale_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "retail_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "weight": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "depth": {
                          "type": "number",
                          "format": "double",
                          "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "is_free_shipping": {
                          "type": "boolean",
                          "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                        },
                        "fixed_cost_shipping_price": {
                          "type": "number",
                          "format": "double",
                          "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "purchasing_disabled": {
                          "type": "boolean",
                          "description": "If `true`, this variant will not be purchasable on the storefront."
                        },
                        "purchasing_disabled_message": {
                          "type": "string",
                          "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "upc": {
                          "type": "string",
                          "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                          "x-nullable": true
                        },
                        "inventory_level": {
                          "type": "integer",
                          "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                          "x-nullable": true
                        },
                        "inventory_warning_level": {
                          "type": "integer",
                          "description": "When the variant hits this inventory level, it is considered low stock.",
                          "x-nullable": true
                        },
                        "bin_picking_number": {
                          "type": "string",
                          "description": "Identifies where in a warehouse the variant is located.",
                          "x-nullable": true,
                          "minLength": 0,
                          "maxLength": 255
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "product_id": {
                          "type": "integer"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "sku_id": {
                          "type": "integer",
                          "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                          "x-nullable": true
                        },
                        "option_values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value Product properties.",
                                "title": "Option Value Product Base",
                                "properties": {
                                  "option_display_name": {
                                    "type": "string",
                                    "description": "The name of the option.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Color"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The label of the option value.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Beige"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "option_id": {
                                    "type": "integer"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value Variant"
                          },
                          "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                        },
                        "calculated_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                        }
                      }
                    }
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Variant Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 384,
                  "product_id": 192,
                  "sku": "SMIT-2",
                  "sku_id": 350,
                  "price": {},
                  "calculated_price": 25,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 1,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": {},
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 176,
                      "label": "Black",
                      "option_id": 220,
                      "option_display_name": "Color"
                    }
                  ]
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "tags": [
          "Product Variants",
          "Catalog"
        ],
        "summary": "Create a Product Variant"
      }
    },
    "/catalog/products/{product_id}/variants/{variant_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "variant_id",
          "in": "path",
          "description": "ID of the variant on a product, or on an associated Price List Record.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single product *Variant*. Optional parameters can be passed in.",
        "operationId": "getVariantById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Variant properties.",
                      "title": "Variant Base",
                      "properties": {
                        "cost_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost price of the variant. Not affected by Price List prices.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "sale_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "retail_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "weight": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "depth": {
                          "type": "number",
                          "format": "double",
                          "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "is_free_shipping": {
                          "type": "boolean",
                          "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                        },
                        "fixed_cost_shipping_price": {
                          "type": "number",
                          "format": "double",
                          "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "purchasing_disabled": {
                          "type": "boolean",
                          "description": "If `true`, this variant will not be purchasable on the storefront."
                        },
                        "purchasing_disabled_message": {
                          "type": "string",
                          "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "upc": {
                          "type": "string",
                          "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                          "x-nullable": true
                        },
                        "inventory_level": {
                          "type": "integer",
                          "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                          "x-nullable": true
                        },
                        "inventory_warning_level": {
                          "type": "integer",
                          "description": "When the variant hits this inventory level, it is considered low stock.",
                          "x-nullable": true
                        },
                        "bin_picking_number": {
                          "type": "string",
                          "description": "Identifies where in a warehouse the variant is located.",
                          "x-nullable": true,
                          "minLength": 0,
                          "maxLength": 255
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "product_id": {
                          "type": "integer"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "sku_id": {
                          "type": "integer",
                          "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                          "x-nullable": true
                        },
                        "option_values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value Product properties.",
                                "title": "Option Value Product Base",
                                "properties": {
                                  "option_display_name": {
                                    "type": "string",
                                    "description": "The name of the option.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Color"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The label of the option value.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Beige"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "option_id": {
                                    "type": "integer"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value Variant"
                          },
                          "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                        },
                        "calculated_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                        }
                      }
                    }
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Variant Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 384,
                  "product_id": 192,
                  "sku": "SMIT-2",
                  "sku_id": 350,
                  "price": {},
                  "calculated_price": 25,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 1,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": {},
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 176,
                      "label": "Black",
                      "option_id": 220,
                      "option_display_name": "Color"
                    }
                  ]
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Product Variant",
        "tags": [
          "Product Variants",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a product *Variant*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id",
        "operationId": "updateVariant",
        "parameters": [
          {
            "name": "Variant",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update variants on a product.\n",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Variant properties.",
                  "title": "Variant Base",
                  "properties": {
                    "cost_price": {
                      "type": "number",
                      "format": "double",
                      "description": "The cost price of the variant. Not affected by Price List prices.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "weight": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "width": {
                      "type": "number",
                      "format": "double",
                      "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "height": {
                      "type": "number",
                      "format": "double",
                      "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "depth": {
                      "type": "number",
                      "format": "double",
                      "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "format": "double",
                      "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "purchasing_disabled": {
                      "type": "boolean",
                      "description": "If `true`, this variant will not be purchasable on the storefront."
                    },
                    "purchasing_disabled_message": {
                      "type": "string",
                      "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "upc": {
                      "type": "string",
                      "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                      "x-nullable": true
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                      "x-nullable": true
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "When the variant hits this inventory level, it is considered low stock.",
                      "x-nullable": true
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "Identifies where in a warehouse the variant is located.",
                      "x-nullable": true,
                      "minLength": 0,
                      "maxLength": 255
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "x-required": [
                        "put"
                      ]
                    }
                  }
                }
              ],
              "title": "Variant Put"
            },
            "x-examples": {
              "application/json": {
                "cost_price": 3,
                "price": 50.99,
                "sale_price": 45,
                "retail_price": 50.99,
                "weight": 1,
                "width": 4,
                "height": 14.6,
                "depth": 22,
                "is_free_shipping": true,
                "purchasing_disabled": true,
                "purchasing_disabled_message": "This item not available at this time."
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Variant properties.",
                      "title": "Variant Base",
                      "properties": {
                        "cost_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost price of the variant. Not affected by Price List prices.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "sale_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "retail_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "weight": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "depth": {
                          "type": "number",
                          "format": "double",
                          "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "is_free_shipping": {
                          "type": "boolean",
                          "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                        },
                        "fixed_cost_shipping_price": {
                          "type": "number",
                          "format": "double",
                          "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "purchasing_disabled": {
                          "type": "boolean",
                          "description": "If `true`, this variant will not be purchasable on the storefront."
                        },
                        "purchasing_disabled_message": {
                          "type": "string",
                          "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "upc": {
                          "type": "string",
                          "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                          "x-nullable": true
                        },
                        "inventory_level": {
                          "type": "integer",
                          "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                          "x-nullable": true
                        },
                        "inventory_warning_level": {
                          "type": "integer",
                          "description": "When the variant hits this inventory level, it is considered low stock.",
                          "x-nullable": true
                        },
                        "bin_picking_number": {
                          "type": "string",
                          "description": "Identifies where in a warehouse the variant is located.",
                          "x-nullable": true,
                          "minLength": 0,
                          "maxLength": 255
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "product_id": {
                          "type": "integer"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "sku_id": {
                          "type": "integer",
                          "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                          "x-nullable": true
                        },
                        "option_values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value Product properties.",
                                "title": "Option Value Product Base",
                                "properties": {
                                  "option_display_name": {
                                    "type": "string",
                                    "description": "The name of the option.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Color"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The label of the option value.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Beige"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "option_id": {
                                    "type": "integer"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value Variant"
                          },
                          "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                        },
                        "calculated_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                        }
                      }
                    }
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Variant Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 384,
                  "product_id": 192,
                  "sku": "SMIT-2",
                  "sku_id": 350,
                  "price": {},
                  "calculated_price": 25,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 1,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": {},
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 176,
                      "label": "Black",
                      "option_id": 220,
                      "option_display_name": "Color"
                    }
                  ]
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update a Product Variant",
        "tags": [
          "Product Variants",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a product *Variant*.",
        "operationId": "deleteVariantById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Product Variant",
        "tags": [
          "Product Variants",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/products/{product_id}/variants/{variant_id}/metafields": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "variant_id",
          "in": "path",
          "description": "ID of the variant on a product, or on an associated Price List Record.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of product variant *Metafields*. Optional parameters can be passed in.",
        "operationId": "getVariantMetafieldsByProductIdAndVariantId",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter based on a metafield's key.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Filter based on a metafield's namespace.",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Meta Field Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common Metafield properties.",
                    "title": "Metafield",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique ID of the *Metafield*. Read-Only.",
                        "example": 6
                      },
                      "permission_set": {
                        "type": "string",
                        "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                        "enum": [
                          "app_only",
                          "read",
                          "write"
                        ],
                        "x-required": [
                          "post"
                        ]
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Warehouse Locations"
                      },
                      "key": {
                        "type": "string",
                        "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Location"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 65535,
                        "example": "4HG"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description for the metafields.\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "Location in the warehouse"
                      },
                      "resource_type": {
                        "type": "string",
                        "description": "The type of resource with which the metafield is associated.\n",
                        "enum": [
                          "category",
                          "brand",
                          "product",
                          "variant"
                        ],
                        "x-required": [
                          "post"
                        ],
                        "example": "product"
                      },
                      "resource_id": {
                        "type": "integer",
                        "description": "The ID for the resource with which the metafield is associated.\n",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "maximum": 10000000000,
                        "example": 111
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of the metafield's creation. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the metafield was last updated. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      }
                    },
                    "required": [
                      "permission_set",
                      "namespace",
                      "key",
                      "value"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "read",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 3,
                    "count": 3,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get Product Variant Metafields",
        "tags": [
          "Product Variants Metafields",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a product variant *Metafield*.\n\n**Required Fields:**\n* permission_set\n* namespace\n* key\n* value\n\n**Read-Only Fields**\n* id",
        "operationId": "createVariantMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                }
              ],
              "title": "Metafield Post"
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "App Namespace",
                "key": "location_id",
                "value": "Shelf 3, Bin 5",
                "description": "Where products are locationed",
                "resource_type": "variant",
                "resource_id": 111
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique-key combinations of the app's client id, namespace, key, resource_type, and resource_id.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Product Variant Metafield",
        "tags": [
          "Product Variants Metafields",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/variants/{variant_id}/metafields/{metafield_id}": {
      "parameters": [
        {
          "name": "metafield_id",
          "in": "path",
          "description": "The ID of the `Metafield`.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "variant_id",
          "in": "path",
          "description": "ID of the variant on a product, or on an associated Price List Record.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single product variant *Metafield*. Optional parameters can be passed in.",
        "operationId": "getVariantMetafieldByProductIdAndVariantId",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get Product Variant Metafields",
        "tags": [
          "Product Variants Metafields",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a product variant *Metafield*.\n\n**Required Fields:**\n* none\n\n**Read-Only Fields**\n* id",
        "operationId": "updateVariantMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                }
              ],
              "title": "Metafield Post"
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "Warehouse SKUS",
                "key": "Location",
                "value": "4H",
                "description": "location in the warehouse",
                "resource_type": "variant"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update Product Variant Metafields",
        "tags": [
          "Product Variants Metafields",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a product variant *Metafield*.",
        "operationId": "deleteVariantMetafieldById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Variant Metafield",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Variants Metafields",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/variants/{variant_id}/image": {
      "post": {
        "operationId": "createVariantImage",
        "parameters": [
          {
            "name": "product_id",
            "in": "path",
            "description": "The ID of the `Product` to which the resource belongs.\n",
            "required": true,
            "type": "integer"
          },
          {
            "name": "variant_id",
            "in": "path",
            "description": "ID of the variant on a product, or on an associated Price List Record.\n",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "object",
              "description": "An object containing a publicly accessible image URL, or a form post that contains an image file.",
              "title": "Resource Image",
              "properties": {
                "image_url": {
                  "type": "string",
                  "description": "A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file. \n"
                }
              }
            },
            "x-examples": {
              "application/json": {
                "image_url": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg"
              },
              "multipart/form-data": "curl -X POST \\\n  https://api.bigcommerce.com/stores/{$$.env.store_hash}/v3/catalog/products/203/variants/503/image \\\n  -H 'Accept: application/json' \\\n  -H 'Content-Type: application/json' \\\n  -H 'Host: api.bigcommerce.com' \\\n  -H 'X-Auth-Client: {X-Auth-Client}' \\\n  -H 'X-Auth-Token: {X-Auth-Token}' \\\n  -H 'content-type: multipart/form-data; boundary=-WebKitFormBoundary7MA4YWxkTrZu0gW' \\\n  -F 'image_file=@/Users/user/Downloads/640px-Bergtocht_van_Gimillan_(1805m.)_naar_Colle_Tsa_Sètse_in_Cogne_Valley_(Italië)._Waterval_boven_Gimillan_gedeeltelijk_in_de_mist_03.jpg'"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "`image_url` is returned for both `image_file` and `image_url`.",
            "schema": {
              "description": "Image Response returns for:\n* Create Variant Image\n* Create Modifier Image\n* Create Category Image\n* Create Brand Image",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "An object containing a publicly accessible image URL, or a form post that contains an image file.",
                  "title": "Resource Image",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "description": "A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file. \n"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Image Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "422": {
            "description": "Image was not valid. This is the result of a missing `image_file` field or of an incorrect file type. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "500": {
            "description": "Returns for an `image_file` larger than 1 MB.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Variant Image",
        "description": "Creates a *Variant Image*.\n\nThe image will show on the storefront when the value is selected.\n\n **Required Fields**\n- image_file: Form posts. Files larger than 1 MB are not accepted\n- image_url: Any publicly available URL",
        "tags": [
          "Product Variants",
          "Catalog"
        ],
        "consumes": [
          "application/json",
          "multipart/form-data"
        ]
      }
    },
    "/catalog/products/{product_id}/options": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of product *Variant Options*. Optional parameters can be passed in. ",
        "operationId": "getOptions",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Get all product options",
              "type": "object",
              "title": "Option Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "description": "Common Option properties.",
                        "title": "Option Base",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numerical ID of the option, increments sequentially.\n",
                            "x-nullable": true,
                            "example": 55
                          },
                          "product_id": {
                            "type": "integer",
                            "description": "The unique numerical ID of the product to which the option belongs.\n",
                            "x-required": [
                              "post",
                              "put"
                            ],
                            "example": 4
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The name of the option shown on the storefront.\n",
                            "x-required": [
                              "post",
                              "put"
                            ],
                            "minLength": 1,
                            "maxLength": 255,
                            "example": "Add-a-$5-Donation1535042499-187"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                            "enum": [
                              "radio_buttons",
                              "rectangles",
                              "dropdown",
                              "product_list",
                              "product_list_with_images",
                              "swatch"
                            ],
                            "x-required": [
                              "post",
                              "put"
                            ]
                          },
                          "config": {
                            "type": "object",
                            "title": "Option Config",
                            "description": "The values for option config can vary based on the Modifier created.",
                            "properties": {
                              "default_value": {
                                "type": "string",
                                "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                              },
                              "checked_by_default": {
                                "type": "boolean",
                                "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                              },
                              "checkbox_label": {
                                "type": "string",
                                "description": "(checkbox) Label displayed for the checkbox option.\n"
                              },
                              "date_limited": {
                                "type": "boolean",
                                "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                              },
                              "date_limit_mode": {
                                "type": "string",
                                "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                                "enum": [
                                  "earliest",
                                  "range",
                                  "latest"
                                ],
                                "example": "range"
                              },
                              "date_earliest_value": {
                                "type": "string",
                                "format": "date",
                                "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                                "example": "2018-08-31T05:00:00+00:00"
                              },
                              "date_latest_value": {
                                "type": "string",
                                "format": "date",
                                "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                                "example": "2019-01-01T05:00:00+00:00"
                              },
                              "file_types_mode": {
                                "type": "string",
                                "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                                "enum": [
                                  "specific",
                                  "all"
                                ],
                                "example": "specific"
                              },
                              "file_types_supported": {
                                "type": "array",
                                "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                                "example": "images, documents, other",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_types_other": {
                                "type": "array",
                                "description": "(file) A list of other file types allowed with the file upload option.\n",
                                "example": "pdf",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_max_size": {
                                "type": "integer",
                                "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                                "example": 5
                              },
                              "text_characters_limited": {
                                "type": "boolean",
                                "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                              },
                              "text_min_length": {
                                "type": "integer",
                                "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                                "example": 1
                              },
                              "text_max_length": {
                                "type": "integer",
                                "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                                "example": 55
                              },
                              "text_lines_limited": {
                                "type": "boolean",
                                "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                                "example": true
                              },
                              "text_max_lines": {
                                "type": "integer",
                                "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                                "example": 4
                              },
                              "number_limited": {
                                "type": "boolean",
                                "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                                "example": true
                              },
                              "number_limit_mode": {
                                "type": "string",
                                "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                                "enum": [
                                  "lowest",
                                  "highest",
                                  "range"
                                ],
                                "example": "lowest"
                              },
                              "number_lowest_value": {
                                "type": "number",
                                "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                                "example": 100
                              },
                              "number_highest_value": {
                                "type": "number",
                                "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                              },
                              "number_integers_only": {
                                "type": "boolean",
                                "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                                "example": false
                              },
                              "product_list_adjusts_inventory": {
                                "type": "boolean",
                                "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                              },
                              "product_list_adjusts_pricing": {
                                "type": "boolean",
                                "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                              },
                              "product_list_shipping_calc": {
                                "type": "string",
                                "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                                "enum": [
                                  "none",
                                  "weight",
                                  "package"
                                ],
                                "example": "weight"
                              }
                            }
                          },
                          "sort_order": {
                            "type": "integer",
                            "example": 1,
                            "description": "Order in which the option is displayed on the storefront. "
                          },
                          "option_values": {
                            "type": "array",
                            "x-required": [
                              "post",
                              "put"
                            ],
                            "minItems": 1,
                            "items": {
                              "allOf": [
                                {
                                  "description": "Common Option Value properties.",
                                  "title": "Option Value Base",
                                  "properties": {
                                    "is_default": {
                                      "type": "boolean",
                                      "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                      "example": false
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "example": "Green"
                                    },
                                    "sort_order": {
                                      "type": "integer",
                                      "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                      "minimum": -2147483648,
                                      "maximum": 2147483647,
                                      "x-required": [
                                        "post"
                                      ],
                                      "example": 0
                                    },
                                    "value_data": {
                                      "type": [
                                        "object",
                                        "null"
                                      ],
                                      "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                    }
                                  },
                                  "required": [
                                    "label",
                                    "sort_order"
                                  ]
                                },
                                {
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The unique numeric ID of the value; increments sequentially.\n"
                                    }
                                  }
                                }
                              ],
                              "title": "Option Value",
                              "type": "object"
                            }
                          },
                          "image_url": {
                            "type": "string",
                            "description": "Publicly available image url"
                          }
                        }
                      },
                      {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
                            "example": "Add-a-$5-Donation1535042499-187"
                          }
                        }
                      }
                    ],
                    "title": "Option",
                    "type": "object"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "title": "Collection Meta",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 220,
                    "product_id": 192,
                    "name": "Color (Colors only)",
                    "display_name": "Color",
                    "type": "swatch",
                    "sort_order": 0,
                    "option_values": [
                      {
                        "id": 174,
                        "label": "Beige",
                        "sort_order": 1,
                        "value_data": {
                          "colors": [
                            "#FAFAEB"
                          ]
                        },
                        "is_default": false
                      },
                      {
                        "id": 175,
                        "label": "Grey",
                        "sort_order": 2,
                        "value_data": {
                          "colors": [
                            "#BDBDBD"
                          ]
                        },
                        "is_default": false
                      },
                      {
                        "id": 176,
                        "label": "Black",
                        "sort_order": 3,
                        "value_data": {
                          "colors": [
                            "#000000"
                          ]
                        },
                        "is_default": false
                      },
                      {
                        "id": 189,
                        "label": "Black-Walnut",
                        "sort_order": 4,
                        "value_data": {
                          "colors": [
                            "#e80ee8"
                          ]
                        },
                        "is_default": false
                      }
                    ],
                    "config": []
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get All Variant Options",
        "tags": [
          "Product Variant Options",
          "Catalog"
        ]
      },
      "post": {
        "parameters": [
          {
            "name": "Option",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a POST to create options on a product.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Option properties.",
                  "title": "Option Base",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numerical ID of the option, increments sequentially.\n",
                      "x-nullable": true,
                      "example": 55
                    },
                    "product_id": {
                      "type": "integer",
                      "description": "The unique numerical ID of the product to which the option belongs.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "example": 4
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The name of the option shown on the storefront.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Add-a-$5-Donation1535042499-187"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                      "enum": [
                        "radio_buttons",
                        "rectangles",
                        "dropdown",
                        "product_list",
                        "product_list_with_images",
                        "swatch"
                      ],
                      "x-required": [
                        "post",
                        "put"
                      ]
                    },
                    "config": {
                      "type": "object",
                      "title": "Option Config",
                      "description": "The values for option config can vary based on the Modifier created.",
                      "properties": {
                        "default_value": {
                          "type": "string",
                          "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                        },
                        "checked_by_default": {
                          "type": "boolean",
                          "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                        },
                        "checkbox_label": {
                          "type": "string",
                          "description": "(checkbox) Label displayed for the checkbox option.\n"
                        },
                        "date_limited": {
                          "type": "boolean",
                          "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                        },
                        "date_limit_mode": {
                          "type": "string",
                          "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                          "enum": [
                            "earliest",
                            "range",
                            "latest"
                          ],
                          "example": "range"
                        },
                        "date_earliest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2018-08-31T05:00:00+00:00"
                        },
                        "date_latest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2019-01-01T05:00:00+00:00"
                        },
                        "file_types_mode": {
                          "type": "string",
                          "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                          "enum": [
                            "specific",
                            "all"
                          ],
                          "example": "specific"
                        },
                        "file_types_supported": {
                          "type": "array",
                          "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                          "example": "images, documents, other",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_types_other": {
                          "type": "array",
                          "description": "(file) A list of other file types allowed with the file upload option.\n",
                          "example": "pdf",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_max_size": {
                          "type": "integer",
                          "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                          "example": 5
                        },
                        "text_characters_limited": {
                          "type": "boolean",
                          "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                        },
                        "text_min_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                          "example": 1
                        },
                        "text_max_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                          "example": 55
                        },
                        "text_lines_limited": {
                          "type": "boolean",
                          "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                          "example": true
                        },
                        "text_max_lines": {
                          "type": "integer",
                          "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                          "example": 4
                        },
                        "number_limited": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                          "example": true
                        },
                        "number_limit_mode": {
                          "type": "string",
                          "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                          "enum": [
                            "lowest",
                            "highest",
                            "range"
                          ],
                          "example": "lowest"
                        },
                        "number_lowest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                          "example": 100
                        },
                        "number_highest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                        },
                        "number_integers_only": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                          "example": false
                        },
                        "product_list_adjusts_inventory": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                        },
                        "product_list_adjusts_pricing": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                        },
                        "product_list_shipping_calc": {
                          "type": "string",
                          "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                          "enum": [
                            "none",
                            "weight",
                            "package"
                          ],
                          "example": "weight"
                        }
                      }
                    },
                    "sort_order": {
                      "type": "integer",
                      "example": 1,
                      "description": "Order in which the option is displayed on the storefront. "
                    },
                    "option_values": {
                      "type": "array",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Common Option Value properties.",
                            "title": "Option Value Base",
                            "properties": {
                              "is_default": {
                                "type": "boolean",
                                "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                "example": false
                              },
                              "label": {
                                "type": "string",
                                "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                "x-required": [
                                  "post"
                                ],
                                "example": "Green"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647,
                                "x-required": [
                                  "post"
                                ],
                                "example": 0
                              },
                              "value_data": {
                                "type": "object",
                                "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                              }
                            },
                            "required": [
                              "label",
                              "sort_order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the value; increments sequentially.\n"
                              }
                            }
                          }
                        ],
                        "title": "Option Value"
                      }
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Publicly available image url"
                    }
                  }
                }
              ],
              "title": "Option Post"
            },
            "x-examples": {
              "Create a Size Variant": {
                "product_id": 134,
                "name": "Size Rectangle",
                "display_name": "Size",
                "type": "rectangles",
                "option_values": [
                  {
                    "label": "S",
                    "sort_order": 0,
                    "is_default": false
                  },
                  {
                    "label": "M",
                    "sort_order": 1,
                    "is_default": true
                  },
                  {
                    "label": "L",
                    "sort_order": 2,
                    "is_default": false
                  }
                ]
              },
              "Create a Color Variant": "{\n    \"product_id\": 134,\n   \"name\": \"Colors\",\n   \"display_name\": \"Color\",\n   \"type\": \"swatch\",\n   \"sort_order\": 1,\n   \"option_values\": [\n       {\n           \"label\": \"Blue\",\n           \"sort_order\": 1,\n           \"value_data\": {\n               \"colors\": [\n                   \"#123c91\"\n               ]\n           },\n           \"is_default\": false\n       },\n       {\n           \"label\": \"Green\",\n           \"sort_order\": 2,\n           \"value_data\": {\n               \"colors\": [\n                   \"#0f961e\"\n               ]\n           },\n           \"is_default\": false\n       },\n       {\n           \"label\": \"Red\",\n           \"sort_order\": 3,\n           \"value_data\": {\n               \"colors\": [\n                   \"#e60c0c\"\n               ]\n           },\n           \"is_default\": false\n       }\n   ]\n}"
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "description": "Creates a *Variant Option*.\n\n**Required Fields**\n* display_name\n* type\n* option_values\n\n**Read-Only Fields**\n* id\n\n**Notes**\n\n* Only one variant option at a time can be created; individual variant options will contain an array of multiple values. \n* There are several examples listed below that create options, but the SKU’s are not updated and they are not a variant on the product. Variant SKUs must be created with a separate request.\n* Variant options will show on the storefront as an option that can be selected by the customer. A request like this could be used to add new choices to a variant that has already been created.\n* If more than one variant needs to be created use the [Create a Product](/api-reference/catalog/catalog-api/products/createproduct) endpoint.",
        "operationId": "createOption",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Option properties.",
                      "title": "Option Base",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numerical ID of the option, increments sequentially.\n",
                          "x-nullable": true,
                          "example": 55
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The unique numerical ID of the product to which the option belongs.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "example": 4
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The name of the option shown on the storefront.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "Add-a-$5-Donation1535042499-187"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                          "enum": [
                            "radio_buttons",
                            "rectangles",
                            "dropdown",
                            "product_list",
                            "product_list_with_images",
                            "swatch"
                          ],
                          "x-required": [
                            "post",
                            "put"
                          ]
                        },
                        "config": {
                          "type": "object",
                          "title": "Option Config",
                          "description": "The values for option config can vary based on the Modifier created.",
                          "properties": {
                            "default_value": {
                              "type": "string",
                              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                            },
                            "checked_by_default": {
                              "type": "boolean",
                              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                            },
                            "checkbox_label": {
                              "type": "string",
                              "description": "(checkbox) Label displayed for the checkbox option.\n"
                            },
                            "date_limited": {
                              "type": "boolean",
                              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                            },
                            "date_limit_mode": {
                              "type": "string",
                              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                              "enum": [
                                "earliest",
                                "range",
                                "latest"
                              ],
                              "example": "range"
                            },
                            "date_earliest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2018-08-31T05:00:00+00:00"
                            },
                            "date_latest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2019-01-01T05:00:00+00:00"
                            },
                            "file_types_mode": {
                              "type": "string",
                              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                              "enum": [
                                "specific",
                                "all"
                              ],
                              "example": "specific"
                            },
                            "file_types_supported": {
                              "type": "array",
                              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                              "example": "images, documents, other",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_types_other": {
                              "type": "array",
                              "description": "(file) A list of other file types allowed with the file upload option.\n",
                              "example": "pdf",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_max_size": {
                              "type": "integer",
                              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                              "example": 5
                            },
                            "text_characters_limited": {
                              "type": "boolean",
                              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                            },
                            "text_min_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                              "example": 1
                            },
                            "text_max_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                              "example": 55
                            },
                            "text_lines_limited": {
                              "type": "boolean",
                              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                              "example": true
                            },
                            "text_max_lines": {
                              "type": "integer",
                              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                              "example": 4
                            },
                            "number_limited": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                              "example": true
                            },
                            "number_limit_mode": {
                              "type": "string",
                              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                              "enum": [
                                "lowest",
                                "highest",
                                "range"
                              ],
                              "example": "lowest"
                            },
                            "number_lowest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                              "example": 100
                            },
                            "number_highest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                            },
                            "number_integers_only": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                              "example": false
                            },
                            "product_list_adjusts_inventory": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                            },
                            "product_list_adjusts_pricing": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                            },
                            "product_list_shipping_calc": {
                              "type": "string",
                              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                              "enum": [
                                "none",
                                "weight",
                                "package"
                              ],
                              "example": "weight"
                            }
                          }
                        },
                        "sort_order": {
                          "type": "integer",
                          "example": 1,
                          "description": "Order in which the option is displayed on the storefront. "
                        },
                        "option_values": {
                          "type": "array",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "minItems": 1,
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value properties.",
                                "title": "Option Value Base",
                                "properties": {
                                  "is_default": {
                                    "type": "boolean",
                                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                    "example": false
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": "Green"
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": 0
                                  },
                                  "value_data": {
                                    "type": "object",
                                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                  }
                                },
                                "required": [
                                  "label",
                                  "sort_order"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value"
                          }
                        },
                        "image_url": {
                          "type": "string",
                          "description": "Publicly available image url"
                        }
                      }
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
                          "example": "Add-a-$5-Donation1535042499-187"
                        }
                      }
                    }
                  ],
                  "title": "Option",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Option Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 220,
                  "product_id": 192,
                  "name": "Color (Colors only)",
                  "display_name": "Color",
                  "type": "swatch",
                  "sort_order": 0,
                  "option_values": [
                    {
                      "id": 174,
                      "label": "Beige",
                      "sort_order": 1,
                      "value_data": {
                        "colors": [
                          "#FAFAEB"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 175,
                      "label": "Grey",
                      "sort_order": 2,
                      "value_data": {
                        "colors": [
                          "#BDBDBD"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 176,
                      "label": "Black",
                      "sort_order": 3,
                      "value_data": {
                        "colors": [
                          "#000000"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 189,
                      "label": "Black-Walnut",
                      "sort_order": 4,
                      "value_data": {
                        "colors": [
                          "#e80ee8"
                        ]
                      },
                      "is_default": false
                    }
                  ],
                  "config": []
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "Option was in conflict with another option. This is the result of duplicate unique fields, such as `name`.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "Option was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Variant Option",
        "tags": [
          "Product Variant Options",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/options/{option_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "option_id",
          "description": "The ID of the `Option`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Variant Option*. Optional parameters can be passed in.",
        "operationId": "getOptionById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Option Response",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "description": "Common Option properties.",
                      "title": "Option Base",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numerical ID of the option, increments sequentially.\n",
                          "x-nullable": true,
                          "example": 55
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The unique numerical ID of the product to which the option belongs.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "example": 4
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The name of the option shown on the storefront.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "Add-a-$5-Donation1535042499-187"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                          "enum": [
                            "radio_buttons",
                            "rectangles",
                            "dropdown",
                            "product_list",
                            "product_list_with_images",
                            "swatch"
                          ],
                          "x-required": [
                            "post",
                            "put"
                          ]
                        },
                        "config": {
                          "type": "object",
                          "title": "Option Config",
                          "description": "The values for option config can vary based on the Modifier created.",
                          "properties": {
                            "default_value": {
                              "type": "string",
                              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                            },
                            "checked_by_default": {
                              "type": "boolean",
                              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                            },
                            "checkbox_label": {
                              "type": "string",
                              "description": "(checkbox) Label displayed for the checkbox option.\n"
                            },
                            "date_limited": {
                              "type": "boolean",
                              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                            },
                            "date_limit_mode": {
                              "type": "string",
                              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                              "enum": [
                                "earliest",
                                "range",
                                "latest"
                              ],
                              "example": "range"
                            },
                            "date_earliest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2018-08-31T05:00:00+00:00"
                            },
                            "date_latest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2019-01-01T05:00:00+00:00"
                            },
                            "file_types_mode": {
                              "type": "string",
                              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                              "enum": [
                                "specific",
                                "all"
                              ],
                              "example": "specific"
                            },
                            "file_types_supported": {
                              "type": "array",
                              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                              "example": "images, documents, other",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_types_other": {
                              "type": "array",
                              "description": "(file) A list of other file types allowed with the file upload option.\n",
                              "example": "pdf",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_max_size": {
                              "type": "integer",
                              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                              "example": 5
                            },
                            "text_characters_limited": {
                              "type": "boolean",
                              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                            },
                            "text_min_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                              "example": 1
                            },
                            "text_max_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                              "example": 55
                            },
                            "text_lines_limited": {
                              "type": "boolean",
                              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                              "example": true
                            },
                            "text_max_lines": {
                              "type": "integer",
                              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                              "example": 4
                            },
                            "number_limited": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                              "example": true
                            },
                            "number_limit_mode": {
                              "type": "string",
                              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                              "enum": [
                                "lowest",
                                "highest",
                                "range"
                              ],
                              "example": "lowest"
                            },
                            "number_lowest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                              "example": 100
                            },
                            "number_highest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                            },
                            "number_integers_only": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                              "example": false
                            },
                            "product_list_adjusts_inventory": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                            },
                            "product_list_adjusts_pricing": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                            },
                            "product_list_shipping_calc": {
                              "type": "string",
                              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                              "enum": [
                                "none",
                                "weight",
                                "package"
                              ],
                              "example": "weight"
                            }
                          }
                        },
                        "sort_order": {
                          "type": "integer",
                          "example": 1,
                          "description": "Order in which the option is displayed on the storefront. "
                        },
                        "option_values": {
                          "type": "array",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "minItems": 1,
                          "items": {
                            "allOf": [
                              {
                                "description": "Common Option Value properties.",
                                "title": "Option Value Base",
                                "properties": {
                                  "is_default": {
                                    "type": "boolean",
                                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                    "example": false
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": "Green"
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": 0
                                  },
                                  "value_data": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                  }
                                },
                                "required": [
                                  "label",
                                  "sort_order"
                                ]
                              },
                              {
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value",
                            "type": "object"
                          }
                        },
                        "image_url": {
                          "type": "string",
                          "description": "Publicly available image url"
                        }
                      }
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
                          "example": "Add-a-$5-Donation1535042499-187"
                        }
                      }
                    }
                  ],
                  "title": "Option",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 220,
                  "product_id": 192,
                  "name": "Color (Colors only)",
                  "display_name": "Color",
                  "type": "swatch",
                  "sort_order": 0,
                  "option_values": [
                    {
                      "id": 174,
                      "label": "Beige",
                      "sort_order": 1,
                      "value_data": {
                        "colors": [
                          "#FAFAEB"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 175,
                      "label": "Grey",
                      "sort_order": 2,
                      "value_data": {
                        "colors": [
                          "#BDBDBD"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 176,
                      "label": "Black",
                      "sort_order": 3,
                      "value_data": {
                        "colors": [
                          "#000000"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 189,
                      "label": "Black-Walnut",
                      "sort_order": 4,
                      "value_data": {
                        "colors": [
                          "#e80ee8"
                        ]
                      },
                      "is_default": false
                    }
                  ],
                  "config": []
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Variant Option",
        "tags": [
          "Product Variant Options",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Variant Option*.\n\n**Read-Only Fields**\n* id",
        "operationId": "updateOption",
        "parameters": [
          {
            "name": "option",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update options on a product.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Option properties.",
                  "title": "Option Base",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numerical ID of the option, increments sequentially.\n",
                      "x-nullable": true,
                      "example": 55
                    },
                    "product_id": {
                      "type": "integer",
                      "description": "The unique numerical ID of the product to which the option belongs.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "example": 4
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The name of the option shown on the storefront.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Add-a-$5-Donation1535042499-187"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                      "enum": [
                        "radio_buttons",
                        "rectangles",
                        "dropdown",
                        "product_list",
                        "product_list_with_images",
                        "swatch"
                      ],
                      "x-required": [
                        "post",
                        "put"
                      ]
                    },
                    "config": {
                      "type": "object",
                      "title": "Option Config",
                      "description": "The values for option config can vary based on the Modifier created.",
                      "properties": {
                        "default_value": {
                          "type": "string",
                          "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                        },
                        "checked_by_default": {
                          "type": "boolean",
                          "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                        },
                        "checkbox_label": {
                          "type": "string",
                          "description": "(checkbox) Label displayed for the checkbox option.\n"
                        },
                        "date_limited": {
                          "type": "boolean",
                          "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                        },
                        "date_limit_mode": {
                          "type": "string",
                          "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                          "enum": [
                            "earliest",
                            "range",
                            "latest"
                          ],
                          "example": "range"
                        },
                        "date_earliest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2018-08-31T05:00:00+00:00"
                        },
                        "date_latest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2019-01-01T05:00:00+00:00"
                        },
                        "file_types_mode": {
                          "type": "string",
                          "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                          "enum": [
                            "specific",
                            "all"
                          ],
                          "example": "specific"
                        },
                        "file_types_supported": {
                          "type": "array",
                          "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                          "example": "images, documents, other",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_types_other": {
                          "type": "array",
                          "description": "(file) A list of other file types allowed with the file upload option.\n",
                          "example": "pdf",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_max_size": {
                          "type": "integer",
                          "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                          "example": 5
                        },
                        "text_characters_limited": {
                          "type": "boolean",
                          "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                        },
                        "text_min_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                          "example": 1
                        },
                        "text_max_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                          "example": 55
                        },
                        "text_lines_limited": {
                          "type": "boolean",
                          "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                          "example": true
                        },
                        "text_max_lines": {
                          "type": "integer",
                          "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                          "example": 4
                        },
                        "number_limited": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                          "example": true
                        },
                        "number_limit_mode": {
                          "type": "string",
                          "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                          "enum": [
                            "lowest",
                            "highest",
                            "range"
                          ],
                          "example": "lowest"
                        },
                        "number_lowest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                          "example": 100
                        },
                        "number_highest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                        },
                        "number_integers_only": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                          "example": false
                        },
                        "product_list_adjusts_inventory": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                        },
                        "product_list_adjusts_pricing": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                        },
                        "product_list_shipping_calc": {
                          "type": "string",
                          "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                          "enum": [
                            "none",
                            "weight",
                            "package"
                          ],
                          "example": "weight"
                        }
                      }
                    },
                    "sort_order": {
                      "type": "integer",
                      "example": 1,
                      "description": "Order in which the option is displayed on the storefront. "
                    },
                    "option_values": {
                      "type": "array",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Common Option Value properties.",
                            "title": "Option Value Base",
                            "properties": {
                              "is_default": {
                                "type": "boolean",
                                "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                "example": false
                              },
                              "label": {
                                "type": "string",
                                "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                "x-required": [
                                  "post"
                                ],
                                "example": "Green"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647,
                                "x-required": [
                                  "post"
                                ],
                                "example": 0
                              },
                              "value_data": {
                                "type": "object",
                                "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                              }
                            },
                            "required": [
                              "label",
                              "sort_order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the value; increments sequentially.\n"
                              }
                            }
                          }
                        ],
                        "title": "Option Value"
                      }
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Publicly available image url"
                    }
                  }
                }
              ],
              "title": "Option Put"
            },
            "x-examples": {
              "application/json": {
                "id": 22,
                "product_id": 77,
                "display_name": "Colors",
                "type": "radio_buttons",
                "config": {
                  "default_value": "text",
                  "checked_by_default": false,
                  "date_limit_mode": "earliest",
                  "file_types_mode": "specific",
                  "file_types_supported": [],
                  "file_types_other": [],
                  "text_min_length": 15,
                  "text_max_length": 50,
                  "text_lines_limited": true,
                  "text_max_lines": 2,
                  "number_limit_mode": "lowest",
                  "product_list_adjusts_inventory": true,
                  "product_list_adjusts_pricing": true,
                  "product_list_shipping_calc": "none"
                },
                "option_values": [
                  {
                    "id": 44,
                    "label": "Pick a color",
                    "sort_order": 9,
                    "value_data": {
                      "colors": [
                        "#123c91, #FFFF00, #397a44"
                      ]
                    },
                    "is_default": false
                  }
                ]
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Option Response",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "description": "Common Option properties.",
                      "title": "Option Base",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numerical ID of the option, increments sequentially.\n",
                          "x-nullable": true,
                          "example": 55
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The unique numerical ID of the product to which the option belongs.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "example": 4
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The name of the option shown on the storefront.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "minLength": 1,
                          "maxLength": 255,
                          "example": "Add-a-$5-Donation1535042499-187"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                          "enum": [
                            "radio_buttons",
                            "rectangles",
                            "dropdown",
                            "product_list",
                            "product_list_with_images",
                            "swatch"
                          ],
                          "x-required": [
                            "post",
                            "put"
                          ]
                        },
                        "config": {
                          "type": "object",
                          "title": "Option Config",
                          "description": "The values for option config can vary based on the Modifier created.",
                          "properties": {
                            "default_value": {
                              "type": "string",
                              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                            },
                            "checked_by_default": {
                              "type": "boolean",
                              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                            },
                            "checkbox_label": {
                              "type": "string",
                              "description": "(checkbox) Label displayed for the checkbox option.\n"
                            },
                            "date_limited": {
                              "type": "boolean",
                              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                            },
                            "date_limit_mode": {
                              "type": "string",
                              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                              "enum": [
                                "earliest",
                                "range",
                                "latest"
                              ],
                              "example": "range"
                            },
                            "date_earliest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2018-08-31T05:00:00+00:00"
                            },
                            "date_latest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2019-01-01T05:00:00+00:00"
                            },
                            "file_types_mode": {
                              "type": "string",
                              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                              "enum": [
                                "specific",
                                "all"
                              ],
                              "example": "specific"
                            },
                            "file_types_supported": {
                              "type": "array",
                              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                              "example": "images, documents, other",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_types_other": {
                              "type": "array",
                              "description": "(file) A list of other file types allowed with the file upload option.\n",
                              "example": "pdf",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_max_size": {
                              "type": "integer",
                              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                              "example": 5
                            },
                            "text_characters_limited": {
                              "type": "boolean",
                              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                            },
                            "text_min_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                              "example": 1
                            },
                            "text_max_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                              "example": 55
                            },
                            "text_lines_limited": {
                              "type": "boolean",
                              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                              "example": true
                            },
                            "text_max_lines": {
                              "type": "integer",
                              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                              "example": 4
                            },
                            "number_limited": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                              "example": true
                            },
                            "number_limit_mode": {
                              "type": "string",
                              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                              "enum": [
                                "lowest",
                                "highest",
                                "range"
                              ],
                              "example": "lowest"
                            },
                            "number_lowest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                              "example": 100
                            },
                            "number_highest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                            },
                            "number_integers_only": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                              "example": false
                            },
                            "product_list_adjusts_inventory": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                            },
                            "product_list_adjusts_pricing": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                            },
                            "product_list_shipping_calc": {
                              "type": "string",
                              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                              "enum": [
                                "none",
                                "weight",
                                "package"
                              ],
                              "example": "weight"
                            }
                          }
                        },
                        "sort_order": {
                          "type": "integer",
                          "example": 1,
                          "description": "Order in which the option is displayed on the storefront. "
                        },
                        "option_values": {
                          "type": "array",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "minItems": 1,
                          "items": {
                            "allOf": [
                              {
                                "description": "Common Option Value properties.",
                                "title": "Option Value Base",
                                "properties": {
                                  "is_default": {
                                    "type": "boolean",
                                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                    "example": false
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": "Green"
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": 0
                                  },
                                  "value_data": {
                                    "type": [
                                      "object",
                                      "null"
                                    ],
                                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                  }
                                },
                                "required": [
                                  "label",
                                  "sort_order"
                                ]
                              },
                              {
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value",
                            "type": "object"
                          }
                        },
                        "image_url": {
                          "type": "string",
                          "description": "Publicly available image url"
                        }
                      }
                    },
                    {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
                          "example": "Add-a-$5-Donation1535042499-187"
                        }
                      }
                    }
                  ],
                  "title": "Option",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 220,
                  "product_id": 192,
                  "name": "Color (Colors only)",
                  "display_name": "Color",
                  "type": "swatch",
                  "sort_order": 0,
                  "option_values": [
                    {
                      "id": 174,
                      "label": "Beige",
                      "sort_order": 1,
                      "value_data": {
                        "colors": [
                          "#FAFAEB"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 175,
                      "label": "Grey",
                      "sort_order": 2,
                      "value_data": {
                        "colors": [
                          "#BDBDBD"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 176,
                      "label": "Black",
                      "sort_order": 3,
                      "value_data": {
                        "colors": [
                          "#000000"
                        ]
                      },
                      "is_default": false
                    },
                    {
                      "id": 189,
                      "label": "Black-Walnut",
                      "sort_order": 4,
                      "value_data": {
                        "colors": [
                          "#e80ee8"
                        ]
                      },
                      "is_default": false
                    }
                  ],
                  "config": []
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "The `Option` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Option` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Variant Option",
        "tags": [
          "Product Variant Options",
          "Catalog"
        ]
      },
      "delete": {
        "operationId": "deleteOptionById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Variant Option",
        "description": "Deletes a *Variant Option*.",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Variant Options",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/options/{option_id}/values": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "option_id",
          "description": "The ID of the `Option`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of all *Variant Option Values*. Optional parameters can be passed in.",
        "operationId": "getOptionValues",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Get Option Values response.",
              "type": "object",
              "title": "Option Value Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "description": "Common Option Value properties.",
                        "title": "Option Value Base",
                        "properties": {
                          "is_default": {
                            "type": "boolean",
                            "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                            "example": false
                          },
                          "label": {
                            "type": "string",
                            "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "example": "Green"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "x-required": [
                              "post"
                            ],
                            "example": 0
                          },
                          "value_data": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                          }
                        },
                        "required": [
                          "label",
                          "sort_order"
                        ]
                      },
                      {
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the value; increments sequentially.\n"
                          }
                        }
                      }
                    ],
                    "title": "Option Value",
                    "type": "object"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "title": "Collection Meta",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 174,
                    "label": "Beige",
                    "sort_order": 1,
                    "value_data": {
                      "colors": [
                        "#FAFAEB"
                      ]
                    },
                    "is_default": false
                  },
                  {
                    "id": 175,
                    "label": "Grey",
                    "sort_order": 2,
                    "value_data": {
                      "colors": [
                        "#BDBDBD"
                      ]
                    },
                    "is_default": false
                  },
                  {
                    "id": 176,
                    "label": "Black",
                    "sort_order": 3,
                    "value_data": {
                      "colors": [
                        "#000000"
                      ]
                    },
                    "is_default": false
                  },
                  {
                    "id": 189,
                    "label": "Black-Walnut",
                    "sort_order": 4,
                    "value_data": {
                      "colors": [
                        "#e80ee8"
                      ]
                    },
                    "is_default": false
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 4,
                    "count": 4,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Variant Option Values",
        "tags": [
          "Product Variant Option Values",
          "Product Variant Options",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Variant Option Value*.\n\n**Required Fields**\n* label\n* sort_order\n\n**Read-Only Fields**\n* id",
        "operationId": "createOptionValue",
        "parameters": [
          {
            "name": "OptionValue",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a POST to create option values on a product.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Option Value properties.",
                  "title": "Option Value Base",
                  "properties": {
                    "is_default": {
                      "type": "boolean",
                      "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                      "example": false
                    },
                    "label": {
                      "type": "string",
                      "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "example": "Green"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-required": [
                        "post"
                      ],
                      "example": 0
                    },
                    "value_data": {
                      "type": "object",
                      "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                    }
                  },
                  "required": [
                    "label",
                    "sort_order"
                  ]
                }
              ],
              "title": "Option Value Post"
            },
            "x-examples": {
              "application/json": {
                "is_default": true,
                "label": "Colors",
                "sort_order": 2,
                "value_data": {
                  "colors": [
                    "#123c91, #FFFF00, #397a44"
                  ]
                }
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Option Value Response",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "description": "Common Option Value properties.",
                      "title": "Option Value Base",
                      "properties": {
                        "is_default": {
                          "type": "boolean",
                          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                          "example": false
                        },
                        "label": {
                          "type": "string",
                          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ],
                          "example": "Green"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-required": [
                            "post"
                          ],
                          "example": 0
                        },
                        "value_data": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                        }
                      },
                      "required": [
                        "label",
                        "sort_order"
                      ]
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the value; increments sequentially.\n"
                        }
                      }
                    }
                  ],
                  "title": "Option Value",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 44,
                  "label": "Pick a color",
                  "sort_order": 9,
                  "value_data": {
                    "colors": [
                      "#123c91, #FFFF00, #397a44"
                    ]
                  },
                  "is_default": false
                }
              }
            }
          },
          "422": {
            "description": "The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create Variant Option Value",
        "tags": [
          "Product Variant Option Values",
          "Product Variant Options",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/options/{option_id}/values/{value_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "option_id",
          "description": "The ID of the `Option`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        },
        {
          "name": "value_id",
          "description": "The ID of the `Modifier/Option Value`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Variant Option Value*. Optional parameters can be passed in.",
        "operationId": "getOptionValueById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Option Value Response",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "description": "Common Option Value properties.",
                      "title": "Option Value Base",
                      "properties": {
                        "is_default": {
                          "type": "boolean",
                          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                          "example": false
                        },
                        "label": {
                          "type": "string",
                          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ],
                          "example": "Green"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-required": [
                            "post"
                          ],
                          "example": 0
                        },
                        "value_data": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                        }
                      },
                      "required": [
                        "label",
                        "sort_order"
                      ]
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the value; increments sequentially.\n"
                        }
                      }
                    }
                  ],
                  "title": "Option Value",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 44,
                  "label": "Pick a color",
                  "sort_order": 9,
                  "value_data": {
                    "colors": [
                      "#123c91, #FFFF00, #397a44"
                    ]
                  },
                  "is_default": false
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get Variant Option Value",
        "tags": [
          "Product Variant Option Values",
          "Product Variant Options",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Variant Option Value*.\n\n**Read-Only Fields**\n* id",
        "operationId": "updateOptionValue",
        "parameters": [
          {
            "name": "OptionValue",
            "in": "body",
            "required": true,
            "description": "A BigCommerce `OptionValue` object.\n",
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update option values on a product.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Option Value properties.",
                  "title": "Option Value Base",
                  "properties": {
                    "is_default": {
                      "type": "boolean",
                      "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                      "example": false
                    },
                    "label": {
                      "type": "string",
                      "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "example": "Green"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-required": [
                        "post"
                      ],
                      "example": 0
                    },
                    "value_data": {
                      "type": "object",
                      "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                    }
                  },
                  "required": [
                    "label",
                    "sort_order"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the value; increments sequentially.\n",
                      "x-required": [
                        "put"
                      ]
                    }
                  }
                }
              ],
              "title": "Option Value Put"
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Option Value Response",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "description": "Common Option Value properties.",
                      "title": "Option Value Base",
                      "properties": {
                        "is_default": {
                          "type": "boolean",
                          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                          "example": false
                        },
                        "label": {
                          "type": "string",
                          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ],
                          "example": "Green"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-required": [
                            "post"
                          ],
                          "example": 0
                        },
                        "value_data": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                        }
                      },
                      "required": [
                        "label",
                        "sort_order"
                      ]
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the value; increments sequentially.\n"
                        }
                      }
                    }
                  ],
                  "title": "Option Value",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 44,
                  "label": "Pick a color",
                  "sort_order": 9,
                  "value_data": {
                    "colors": [
                      "#123c91, #FFFF00, #397a44"
                    ]
                  },
                  "is_default": false
                }
              }
            }
          },
          "422": {
            "description": "The `OptionValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Variant Option Value",
        "tags": [
          "Product Variant Option Values",
          "Product Variant Options",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletea a *Variant Option Value*.",
        "operationId": "deleteOptionValueById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete Variant Option Value",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Variant Option Values",
          "Product Variant Options",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/modifiers": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of all *Product Modifiers*. Optional parameters can be passed in.",
        "operationId": "getModifiers",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Modifier Collection Response return for /GET All Modifiers.",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Modifier properties.",
                        "title": "Modifier Base",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                            "enum": [
                              "date",
                              "checkbox",
                              "file",
                              "text",
                              "multi_line_text",
                              "numbers_only_text",
                              "radio_buttons",
                              "rectangles",
                              "dropdown",
                              "product_list",
                              "product_list_with_images",
                              "swatch"
                            ],
                            "x-required": [
                              "post"
                            ]
                          },
                          "required": {
                            "type": "boolean",
                            "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                            "x-required": [
                              "post"
                            ]
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order the modifiers display on the product detail page."
                          },
                          "config": {
                            "type": "object",
                            "title": "Option Config",
                            "description": "The values for option config can vary based on the Modifier created.",
                            "properties": {
                              "default_value": {
                                "type": "string",
                                "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                              },
                              "checked_by_default": {
                                "type": "boolean",
                                "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                              },
                              "checkbox_label": {
                                "type": "string",
                                "description": "(checkbox) Label displayed for the checkbox option.\n"
                              },
                              "date_limited": {
                                "type": "boolean",
                                "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                              },
                              "date_limit_mode": {
                                "type": "string",
                                "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                                "enum": [
                                  "earliest",
                                  "range",
                                  "latest"
                                ],
                                "example": "range"
                              },
                              "date_earliest_value": {
                                "type": "string",
                                "format": "date",
                                "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                                "example": "2018-08-31T05:00:00+00:00"
                              },
                              "date_latest_value": {
                                "type": "string",
                                "format": "date",
                                "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                                "example": "2019-01-01T05:00:00+00:00"
                              },
                              "file_types_mode": {
                                "type": "string",
                                "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                                "enum": [
                                  "specific",
                                  "all"
                                ],
                                "example": "specific"
                              },
                              "file_types_supported": {
                                "type": "array",
                                "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                                "example": "images, documents, other",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_types_other": {
                                "type": "array",
                                "description": "(file) A list of other file types allowed with the file upload option.\n",
                                "example": "pdf",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "file_max_size": {
                                "type": "integer",
                                "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                                "example": 5
                              },
                              "text_characters_limited": {
                                "type": "boolean",
                                "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                              },
                              "text_min_length": {
                                "type": "integer",
                                "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                                "example": 1
                              },
                              "text_max_length": {
                                "type": "integer",
                                "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                                "example": 55
                              },
                              "text_lines_limited": {
                                "type": "boolean",
                                "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                                "example": true
                              },
                              "text_max_lines": {
                                "type": "integer",
                                "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                                "example": 4
                              },
                              "number_limited": {
                                "type": "boolean",
                                "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                                "example": true
                              },
                              "number_limit_mode": {
                                "type": "string",
                                "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                                "enum": [
                                  "lowest",
                                  "highest",
                                  "range"
                                ],
                                "example": "lowest"
                              },
                              "number_lowest_value": {
                                "type": "number",
                                "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                                "example": 100
                              },
                              "number_highest_value": {
                                "type": "number",
                                "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                              },
                              "number_integers_only": {
                                "type": "boolean",
                                "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                                "example": false
                              },
                              "product_list_adjusts_inventory": {
                                "type": "boolean",
                                "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                              },
                              "product_list_adjusts_pricing": {
                                "type": "boolean",
                                "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                              },
                              "product_list_shipping_calc": {
                                "type": "string",
                                "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                                "enum": [
                                  "none",
                                  "weight",
                                  "package"
                                ],
                                "example": "weight"
                              }
                            }
                          },
                          "option_values": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "description": "Common Option Value properties.",
                                      "title": "Option Value Base",
                                      "properties": {
                                        "is_default": {
                                          "type": "boolean",
                                          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                          "example": false
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                          "x-required": [
                                            "post"
                                          ],
                                          "example": "Green"
                                        },
                                        "sort_order": {
                                          "type": "integer",
                                          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                          "minimum": -2147483648,
                                          "maximum": 2147483647,
                                          "x-required": [
                                            "post"
                                          ],
                                          "example": 0
                                        },
                                        "value_data": {
                                          "type": "object",
                                          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                        }
                                      },
                                      "required": [
                                        "label",
                                        "sort_order"
                                      ]
                                    },
                                    {
                                      "properties": {
                                        "adjusters": {
                                          "type": "object",
                                          "properties": {
                                            "price": {
                                              "type": "object",
                                              "title": "Adjuster",
                                              "properties": {
                                                "adjuster": {
                                                  "type": "string",
                                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                  "enum": [
                                                    "relative",
                                                    "percentage"
                                                  ],
                                                  "x-nullable": true
                                                },
                                                "adjuster_value": {
                                                  "type": "number",
                                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                  "example": 5
                                                }
                                              },
                                              "description": "Adjuster for Complex Rules."
                                            },
                                            "weight": {
                                              "type": "object",
                                              "title": "Adjuster",
                                              "properties": {
                                                "adjuster": {
                                                  "type": "string",
                                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                  "enum": [
                                                    "relative",
                                                    "percentage"
                                                  ],
                                                  "x-nullable": true
                                                },
                                                "adjuster_value": {
                                                  "type": "number",
                                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                  "example": 5
                                                }
                                              },
                                              "description": "Adjuster for Complex Rules."
                                            },
                                            "image_url": {
                                              "type": "string",
                                              "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                              "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                            },
                                            "purchasing_disabled": {
                                              "type": "object",
                                              "properties": {
                                                "status": {
                                                  "type": "boolean",
                                                  "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                                },
                                                "message": {
                                                  "type": "string",
                                                  "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  ],
                                  "title": "Modifier Value Base",
                                  "type": "object"
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The unique numeric ID of the value; increments sequentially.\n"
                                    }
                                  }
                                }
                              ],
                              "title": "Modifier Value",
                              "description": "Part of Modifier Value Response "
                            }
                          }
                        },
                        "required": [
                          "type",
                          "required"
                        ]
                      },
                      {
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the modifier; increments sequentially.\n",
                            "example": 12
                          },
                          "product_id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the product to which the option belongs.\n",
                            "example": 77
                          },
                          "name": {
                            "type": "string",
                            "description": "The unique option name. Auto-generated from the display name, a timestamp, and the product ID.\n",
                            "example": "Add-a-$5-Donation1535039590-191"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The name of the option shown on the storefront.\n",
                            "example": "Donation"
                          }
                        }
                      }
                    ],
                    "title": "Modifer",
                    "description": "Product Modifier",
                    "type": "object"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Modifier Collection Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 206,
                    "product_id": 158,
                    "name": "Insurance",
                    "display_name": "Insurace",
                    "type": "checkbox",
                    "required": true,
                    "config": {
                      "checkbox_label": "$5 for insurance",
                      "checked_by_default": false
                    },
                    "option_values": [
                      {
                        "id": 183,
                        "option_id": 206,
                        "label": "Yes",
                        "sort_order": 0,
                        "value_data": {
                          "checked_value": true
                        },
                        "is_default": false,
                        "adjusters": {
                          "price": {},
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      },
                      {
                        "id": 184,
                        "option_id": 206,
                        "label": "No",
                        "sort_order": 1,
                        "value_data": {
                          "checked_value": false
                        },
                        "is_default": true,
                        "adjusters": {
                          "price": {},
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Product Modifiers",
        "tags": [
          "Product Modifiers",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Product Modifier*.\n\n**Required Fields**\n* `required`\n* `display_name`\n* `type`\n\n**Read-Only Fields**\n* `id`\n\nCreating a product modifier via API requires a minimum of two requests:\n1. a `POST` to [/catalog/products/{product_id}/modifiers](/api-reference/catalog/catalog-api/product-modifiers/createmodifier) to create the modifier, and\n2. a `POST` [/catalog/products/{product_id}/modifiers/{modifier_id}/values](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) to add values to the modifier. ",
        "operationId": "createModifier",
        "parameters": [
          {
            "name": "Modifier",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The model for a POST to create a modifier on a product.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Modifier properties.",
                  "title": "Modifier Base",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                      "enum": [
                        "date",
                        "checkbox",
                        "file",
                        "text",
                        "multi_line_text",
                        "numbers_only_text",
                        "radio_buttons",
                        "rectangles",
                        "dropdown",
                        "product_list",
                        "product_list_with_images",
                        "swatch"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                      "x-required": [
                        "post"
                      ]
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order the modifiers display on the product detail page."
                    },
                    "config": {
                      "type": "object",
                      "title": "Option Config",
                      "description": "The values for option config can vary based on the Modifier created.",
                      "properties": {
                        "default_value": {
                          "type": "string",
                          "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                        },
                        "checked_by_default": {
                          "type": "boolean",
                          "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                        },
                        "checkbox_label": {
                          "type": "string",
                          "description": "(checkbox) Label displayed for the checkbox option.\n"
                        },
                        "date_limited": {
                          "type": "boolean",
                          "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                        },
                        "date_limit_mode": {
                          "type": "string",
                          "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                          "enum": [
                            "earliest",
                            "range",
                            "latest"
                          ],
                          "example": "range"
                        },
                        "date_earliest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2018-08-31T05:00:00+00:00"
                        },
                        "date_latest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2019-01-01T05:00:00+00:00"
                        },
                        "file_types_mode": {
                          "type": "string",
                          "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                          "enum": [
                            "specific",
                            "all"
                          ],
                          "example": "specific"
                        },
                        "file_types_supported": {
                          "type": "array",
                          "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                          "example": "images, documents, other",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_types_other": {
                          "type": "array",
                          "description": "(file) A list of other file types allowed with the file upload option.\n",
                          "example": "pdf",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_max_size": {
                          "type": "integer",
                          "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                          "example": 5
                        },
                        "text_characters_limited": {
                          "type": "boolean",
                          "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                        },
                        "text_min_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                          "example": 1
                        },
                        "text_max_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                          "example": 55
                        },
                        "text_lines_limited": {
                          "type": "boolean",
                          "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                          "example": true
                        },
                        "text_max_lines": {
                          "type": "integer",
                          "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                          "example": 4
                        },
                        "number_limited": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                          "example": true
                        },
                        "number_limit_mode": {
                          "type": "string",
                          "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                          "enum": [
                            "lowest",
                            "highest",
                            "range"
                          ],
                          "example": "lowest"
                        },
                        "number_lowest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                          "example": 100
                        },
                        "number_highest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                        },
                        "number_integers_only": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                          "example": false
                        },
                        "product_list_adjusts_inventory": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                        },
                        "product_list_adjusts_pricing": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                        },
                        "product_list_shipping_calc": {
                          "type": "string",
                          "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                          "enum": [
                            "none",
                            "weight",
                            "package"
                          ],
                          "example": "weight"
                        }
                      }
                    },
                    "option_values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value properties.",
                                "title": "Option Value Base",
                                "properties": {
                                  "is_default": {
                                    "type": "boolean",
                                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                    "example": false
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": "Green"
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": 0
                                  },
                                  "value_data": {
                                    "type": "object",
                                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                  }
                                },
                                "required": [
                                  "label",
                                  "sort_order"
                                ]
                              },
                              {
                                "properties": {
                                  "adjusters": {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "title": "Adjuster",
                                        "properties": {
                                          "adjuster": {
                                            "type": "string",
                                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "enum": [
                                              "relative",
                                              "percentage"
                                            ],
                                            "x-nullable": true
                                          },
                                          "adjuster_value": {
                                            "type": "number",
                                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "example": 5
                                          }
                                        },
                                        "description": "Adjuster for Complex Rules."
                                      },
                                      "weight": {
                                        "type": "object",
                                        "title": "Adjuster",
                                        "properties": {
                                          "adjuster": {
                                            "type": "string",
                                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "enum": [
                                              "relative",
                                              "percentage"
                                            ],
                                            "x-nullable": true
                                          },
                                          "adjuster_value": {
                                            "type": "number",
                                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "example": 5
                                          }
                                        },
                                        "description": "Adjuster for Complex Rules."
                                      },
                                      "image_url": {
                                        "type": "string",
                                        "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                        "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                      },
                                      "purchasing_disabled": {
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "boolean",
                                            "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                          },
                                          "message": {
                                            "type": "string",
                                            "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "Modifier Value Base",
                            "type": "object"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the value; increments sequentially.\n"
                              }
                            }
                          }
                        ],
                        "title": "Modifier Value",
                        "description": "Part of Modifier Value Response "
                      }
                    }
                  },
                  "required": [
                    "type",
                    "required"
                  ]
                },
                {
                  "properties": {
                    "display_name": {
                      "type": "string",
                      "description": "The name of the option shown on the storefront.\n",
                      "x-required": [
                        "post"
                      ],
                      "example": "Donation"
                    }
                  },
                  "required": [
                    "display_name"
                  ]
                }
              ],
              "title": "Modifier Post",
              "type": "object"
            },
            "x-examples": {
              "application/json": {
                "type": "checkbox",
                "required": false,
                "config": {
                  "default_value": "Yes",
                  "checked_by_default": false,
                  "checkbox_label": "Check for Donation"
                },
                "display_name": "Add a $5 Donation"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Modifier properties.",
                      "title": "Modifier Base",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                          "enum": [
                            "date",
                            "checkbox",
                            "file",
                            "text",
                            "multi_line_text",
                            "numbers_only_text",
                            "radio_buttons",
                            "rectangles",
                            "dropdown",
                            "product_list",
                            "product_list_with_images",
                            "swatch"
                          ],
                          "x-required": [
                            "post"
                          ]
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ]
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order the modifiers display on the product detail page."
                        },
                        "config": {
                          "type": "object",
                          "title": "Option Config",
                          "description": "The values for option config can vary based on the Modifier created.",
                          "properties": {
                            "default_value": {
                              "type": "string",
                              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                            },
                            "checked_by_default": {
                              "type": "boolean",
                              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                            },
                            "checkbox_label": {
                              "type": "string",
                              "description": "(checkbox) Label displayed for the checkbox option.\n"
                            },
                            "date_limited": {
                              "type": "boolean",
                              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                            },
                            "date_limit_mode": {
                              "type": "string",
                              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                              "enum": [
                                "earliest",
                                "range",
                                "latest"
                              ],
                              "example": "range"
                            },
                            "date_earliest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2018-08-31T05:00:00+00:00"
                            },
                            "date_latest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2019-01-01T05:00:00+00:00"
                            },
                            "file_types_mode": {
                              "type": "string",
                              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                              "enum": [
                                "specific",
                                "all"
                              ],
                              "example": "specific"
                            },
                            "file_types_supported": {
                              "type": "array",
                              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                              "example": "images, documents, other",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_types_other": {
                              "type": "array",
                              "description": "(file) A list of other file types allowed with the file upload option.\n",
                              "example": "pdf",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_max_size": {
                              "type": "integer",
                              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                              "example": 5
                            },
                            "text_characters_limited": {
                              "type": "boolean",
                              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                            },
                            "text_min_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                              "example": 1
                            },
                            "text_max_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                              "example": 55
                            },
                            "text_lines_limited": {
                              "type": "boolean",
                              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                              "example": true
                            },
                            "text_max_lines": {
                              "type": "integer",
                              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                              "example": 4
                            },
                            "number_limited": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                              "example": true
                            },
                            "number_limit_mode": {
                              "type": "string",
                              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                              "enum": [
                                "lowest",
                                "highest",
                                "range"
                              ],
                              "example": "lowest"
                            },
                            "number_lowest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                              "example": 100
                            },
                            "number_highest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                            },
                            "number_integers_only": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                              "example": false
                            },
                            "product_list_adjusts_inventory": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                            },
                            "product_list_adjusts_pricing": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                            },
                            "product_list_shipping_calc": {
                              "type": "string",
                              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                              "enum": [
                                "none",
                                "weight",
                                "package"
                              ],
                              "example": "weight"
                            }
                          }
                        },
                        "option_values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Common Option Value properties.",
                                    "title": "Option Value Base",
                                    "properties": {
                                      "is_default": {
                                        "type": "boolean",
                                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                        "example": false
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                        "x-required": [
                                          "post"
                                        ],
                                        "example": "Green"
                                      },
                                      "sort_order": {
                                        "type": "integer",
                                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                        "minimum": -2147483648,
                                        "maximum": 2147483647,
                                        "x-required": [
                                          "post"
                                        ],
                                        "example": 0
                                      },
                                      "value_data": {
                                        "type": "object",
                                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                      }
                                    },
                                    "required": [
                                      "label",
                                      "sort_order"
                                    ]
                                  },
                                  {
                                    "properties": {
                                      "adjusters": {
                                        "type": "object",
                                        "properties": {
                                          "price": {
                                            "type": "object",
                                            "title": "Adjuster",
                                            "properties": {
                                              "adjuster": {
                                                "type": "string",
                                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "enum": [
                                                  "relative",
                                                  "percentage"
                                                ],
                                                "x-nullable": true
                                              },
                                              "adjuster_value": {
                                                "type": "number",
                                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "example": 5
                                              }
                                            },
                                            "description": "Adjuster for Complex Rules."
                                          },
                                          "weight": {
                                            "type": "object",
                                            "title": "Adjuster",
                                            "properties": {
                                              "adjuster": {
                                                "type": "string",
                                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "enum": [
                                                  "relative",
                                                  "percentage"
                                                ],
                                                "x-nullable": true
                                              },
                                              "adjuster_value": {
                                                "type": "number",
                                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "example": 5
                                              }
                                            },
                                            "description": "Adjuster for Complex Rules."
                                          },
                                          "image_url": {
                                            "type": "string",
                                            "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                            "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                          },
                                          "purchasing_disabled": {
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "boolean",
                                                "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                              },
                                              "message": {
                                                "type": "string",
                                                "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ],
                                "title": "Modifier Value Base",
                                "type": "object"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                                  }
                                }
                              }
                            ],
                            "title": "Modifier Value",
                            "description": "Part of Modifier Value Response "
                          }
                        }
                      },
                      "required": [
                        "type",
                        "required"
                      ]
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the modifier; increments sequentially.\n",
                          "example": 12
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the product to which the option belongs.\n",
                          "example": 77
                        },
                        "name": {
                          "type": "string",
                          "description": "The unique option name. Auto-generated from the display name, a timestamp, and the product ID.\n",
                          "example": "Add-a-$5-Donation1535039590-191"
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The name of the option shown on the storefront.\n",
                          "example": "Donation"
                        }
                      }
                    }
                  ],
                  "title": "Modifer",
                  "description": "Product Modifier",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Modifier Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 160,
                    "product_id": 131,
                    "name": "Add-a-$5-Donation1535039590-191",
                    "display_name": "Add a $5 Donation",
                    "type": "checkbox",
                    "required": false,
                    "config": {
                      "checkbox_label": "Check for Donation",
                      "checked_by_default": false
                    },
                    "option_values": [
                      {
                        "id": 149,
                        "option_id": 160,
                        "label": "Yes",
                        "sort_order": 0,
                        "value_data": {
                          "checked_value": true
                        },
                        "is_default": false,
                        "adjusters": {
                          "price": {
                            "adjuster": {},
                            "adjuster_value": {}
                          },
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      },
                      {
                        "id": 150,
                        "option_id": 160,
                        "label": "No",
                        "sort_order": 1,
                        "value_data": {
                          "checked_value": false
                        },
                        "is_default": true,
                        "adjusters": {
                          "price": {},
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The `Modifier` was in conflict with another option. This is the result of duplicate unique fields, such as `name`.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Product Modifier",
        "tags": [
          "Product Modifiers",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/modifiers/{modifier_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "modifier_id",
          "description": "The ID of the `Modifier`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "operationId": "getModifierById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Modifier properties.",
                      "title": "Modifier Base",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                          "enum": [
                            "date",
                            "checkbox",
                            "file",
                            "text",
                            "multi_line_text",
                            "numbers_only_text",
                            "radio_buttons",
                            "rectangles",
                            "dropdown",
                            "product_list",
                            "product_list_with_images",
                            "swatch"
                          ],
                          "x-required": [
                            "post"
                          ]
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ]
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order the modifiers display on the product detail page."
                        },
                        "config": {
                          "type": "object",
                          "title": "Option Config",
                          "description": "The values for option config can vary based on the Modifier created.",
                          "properties": {
                            "default_value": {
                              "type": "string",
                              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                            },
                            "checked_by_default": {
                              "type": "boolean",
                              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                            },
                            "checkbox_label": {
                              "type": "string",
                              "description": "(checkbox) Label displayed for the checkbox option.\n"
                            },
                            "date_limited": {
                              "type": "boolean",
                              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                            },
                            "date_limit_mode": {
                              "type": "string",
                              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                              "enum": [
                                "earliest",
                                "range",
                                "latest"
                              ],
                              "example": "range"
                            },
                            "date_earliest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2018-08-31T05:00:00+00:00"
                            },
                            "date_latest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2019-01-01T05:00:00+00:00"
                            },
                            "file_types_mode": {
                              "type": "string",
                              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                              "enum": [
                                "specific",
                                "all"
                              ],
                              "example": "specific"
                            },
                            "file_types_supported": {
                              "type": "array",
                              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                              "example": "images, documents, other",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_types_other": {
                              "type": "array",
                              "description": "(file) A list of other file types allowed with the file upload option.\n",
                              "example": "pdf",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_max_size": {
                              "type": "integer",
                              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                              "example": 5
                            },
                            "text_characters_limited": {
                              "type": "boolean",
                              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                            },
                            "text_min_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                              "example": 1
                            },
                            "text_max_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                              "example": 55
                            },
                            "text_lines_limited": {
                              "type": "boolean",
                              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                              "example": true
                            },
                            "text_max_lines": {
                              "type": "integer",
                              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                              "example": 4
                            },
                            "number_limited": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                              "example": true
                            },
                            "number_limit_mode": {
                              "type": "string",
                              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                              "enum": [
                                "lowest",
                                "highest",
                                "range"
                              ],
                              "example": "lowest"
                            },
                            "number_lowest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                              "example": 100
                            },
                            "number_highest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                            },
                            "number_integers_only": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                              "example": false
                            },
                            "product_list_adjusts_inventory": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                            },
                            "product_list_adjusts_pricing": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                            },
                            "product_list_shipping_calc": {
                              "type": "string",
                              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                              "enum": [
                                "none",
                                "weight",
                                "package"
                              ],
                              "example": "weight"
                            }
                          }
                        },
                        "option_values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Common Option Value properties.",
                                    "title": "Option Value Base",
                                    "properties": {
                                      "is_default": {
                                        "type": "boolean",
                                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                        "example": false
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                        "x-required": [
                                          "post"
                                        ],
                                        "example": "Green"
                                      },
                                      "sort_order": {
                                        "type": "integer",
                                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                        "minimum": -2147483648,
                                        "maximum": 2147483647,
                                        "x-required": [
                                          "post"
                                        ],
                                        "example": 0
                                      },
                                      "value_data": {
                                        "type": "object",
                                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                      }
                                    },
                                    "required": [
                                      "label",
                                      "sort_order"
                                    ]
                                  },
                                  {
                                    "properties": {
                                      "adjusters": {
                                        "type": "object",
                                        "properties": {
                                          "price": {
                                            "type": "object",
                                            "title": "Adjuster",
                                            "properties": {
                                              "adjuster": {
                                                "type": "string",
                                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "enum": [
                                                  "relative",
                                                  "percentage"
                                                ],
                                                "x-nullable": true
                                              },
                                              "adjuster_value": {
                                                "type": "number",
                                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "example": 5
                                              }
                                            },
                                            "description": "Adjuster for Complex Rules."
                                          },
                                          "weight": {
                                            "type": "object",
                                            "title": "Adjuster",
                                            "properties": {
                                              "adjuster": {
                                                "type": "string",
                                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "enum": [
                                                  "relative",
                                                  "percentage"
                                                ],
                                                "x-nullable": true
                                              },
                                              "adjuster_value": {
                                                "type": "number",
                                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "example": 5
                                              }
                                            },
                                            "description": "Adjuster for Complex Rules."
                                          },
                                          "image_url": {
                                            "type": "string",
                                            "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                            "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                          },
                                          "purchasing_disabled": {
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "boolean",
                                                "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                              },
                                              "message": {
                                                "type": "string",
                                                "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ],
                                "title": "Modifier Value Base",
                                "type": "object"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                                  }
                                }
                              }
                            ],
                            "title": "Modifier Value",
                            "description": "Part of Modifier Value Response "
                          }
                        }
                      },
                      "required": [
                        "type",
                        "required"
                      ]
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the modifier; increments sequentially.\n",
                          "example": 12
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the product to which the option belongs.\n",
                          "example": 77
                        },
                        "name": {
                          "type": "string",
                          "description": "The unique option name. Auto-generated from the display name, a timestamp, and the product ID.\n",
                          "example": "Add-a-$5-Donation1535039590-191"
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The name of the option shown on the storefront.\n",
                          "example": "Donation"
                        }
                      }
                    }
                  ],
                  "title": "Modifer",
                  "description": "Product Modifier",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Modifier Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 160,
                    "product_id": 131,
                    "name": "Add-a-$5-Donation1535039590-191",
                    "display_name": "Add a $5 Donation",
                    "type": "checkbox",
                    "required": false,
                    "config": {
                      "checkbox_label": "Check for Donation",
                      "checked_by_default": false
                    },
                    "option_values": [
                      {
                        "id": 149,
                        "option_id": 160,
                        "label": "Yes",
                        "sort_order": 0,
                        "value_data": {
                          "checked_value": true
                        },
                        "is_default": false,
                        "adjusters": {
                          "price": {
                            "adjuster": {},
                            "adjuster_value": {}
                          },
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      },
                      {
                        "id": 150,
                        "option_id": 160,
                        "label": "No",
                        "sort_order": 1,
                        "value_data": {
                          "checked_value": false
                        },
                        "is_default": true,
                        "adjusters": {
                          "price": {},
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Modifier",
        "description": "Returns a single *Product Modifier*. Optional parameters can be passed in.",
        "tags": [
          "Product Modifiers",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Product Modifier*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n\nThere are two steps to create a modifier. \n1. Add the modifier using the [Create Modifier](/api-reference/catalog/catalog-api/product-modifiers/createmodifier). \n2. [Update](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) the modifier values. ",
        "operationId": "updateModifier",
        "parameters": [
          {
            "name": "modifier",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update a modifier on a product.",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Modifier properties.",
                  "title": "Modifier Base",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                      "enum": [
                        "date",
                        "checkbox",
                        "file",
                        "text",
                        "multi_line_text",
                        "numbers_only_text",
                        "radio_buttons",
                        "rectangles",
                        "dropdown",
                        "product_list",
                        "product_list_with_images",
                        "swatch"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                      "x-required": [
                        "post"
                      ]
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order the modifiers display on the product detail page."
                    },
                    "config": {
                      "type": "object",
                      "title": "Option Config",
                      "description": "The values for option config can vary based on the Modifier created.",
                      "properties": {
                        "default_value": {
                          "type": "string",
                          "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                        },
                        "checked_by_default": {
                          "type": "boolean",
                          "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                        },
                        "checkbox_label": {
                          "type": "string",
                          "description": "(checkbox) Label displayed for the checkbox option.\n"
                        },
                        "date_limited": {
                          "type": "boolean",
                          "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                        },
                        "date_limit_mode": {
                          "type": "string",
                          "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                          "enum": [
                            "earliest",
                            "range",
                            "latest"
                          ],
                          "example": "range"
                        },
                        "date_earliest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2018-08-31T05:00:00+00:00"
                        },
                        "date_latest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2019-01-01T05:00:00+00:00"
                        },
                        "file_types_mode": {
                          "type": "string",
                          "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                          "enum": [
                            "specific",
                            "all"
                          ],
                          "example": "specific"
                        },
                        "file_types_supported": {
                          "type": "array",
                          "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                          "example": "images, documents, other",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_types_other": {
                          "type": "array",
                          "description": "(file) A list of other file types allowed with the file upload option.\n",
                          "example": "pdf",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_max_size": {
                          "type": "integer",
                          "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                          "example": 5
                        },
                        "text_characters_limited": {
                          "type": "boolean",
                          "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                        },
                        "text_min_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                          "example": 1
                        },
                        "text_max_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                          "example": 55
                        },
                        "text_lines_limited": {
                          "type": "boolean",
                          "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                          "example": true
                        },
                        "text_max_lines": {
                          "type": "integer",
                          "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                          "example": 4
                        },
                        "number_limited": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                          "example": true
                        },
                        "number_limit_mode": {
                          "type": "string",
                          "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                          "enum": [
                            "lowest",
                            "highest",
                            "range"
                          ],
                          "example": "lowest"
                        },
                        "number_lowest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                          "example": 100
                        },
                        "number_highest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                        },
                        "number_integers_only": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                          "example": false
                        },
                        "product_list_adjusts_inventory": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                        },
                        "product_list_adjusts_pricing": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                        },
                        "product_list_shipping_calc": {
                          "type": "string",
                          "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                          "enum": [
                            "none",
                            "weight",
                            "package"
                          ],
                          "example": "weight"
                        }
                      }
                    },
                    "option_values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value properties.",
                                "title": "Option Value Base",
                                "properties": {
                                  "is_default": {
                                    "type": "boolean",
                                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                    "example": false
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": "Green"
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": 0
                                  },
                                  "value_data": {
                                    "type": "object",
                                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                  }
                                },
                                "required": [
                                  "label",
                                  "sort_order"
                                ]
                              },
                              {
                                "properties": {
                                  "adjusters": {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "title": "Adjuster",
                                        "properties": {
                                          "adjuster": {
                                            "type": "string",
                                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "enum": [
                                              "relative",
                                              "percentage"
                                            ],
                                            "x-nullable": true
                                          },
                                          "adjuster_value": {
                                            "type": "number",
                                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "example": 5
                                          }
                                        },
                                        "description": "Adjuster for Complex Rules."
                                      },
                                      "weight": {
                                        "type": "object",
                                        "title": "Adjuster",
                                        "properties": {
                                          "adjuster": {
                                            "type": "string",
                                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "enum": [
                                              "relative",
                                              "percentage"
                                            ],
                                            "x-nullable": true
                                          },
                                          "adjuster_value": {
                                            "type": "number",
                                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "example": 5
                                          }
                                        },
                                        "description": "Adjuster for Complex Rules."
                                      },
                                      "image_url": {
                                        "type": "string",
                                        "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                        "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                      },
                                      "purchasing_disabled": {
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "boolean",
                                            "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                          },
                                          "message": {
                                            "type": "string",
                                            "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "Modifier Value Base",
                            "type": "object"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the value; increments sequentially.\n"
                              }
                            }
                          }
                        ],
                        "title": "Modifier Value",
                        "description": "Part of Modifier Value Response "
                      }
                    }
                  },
                  "required": [
                    "type",
                    "required"
                  ]
                }
              ],
              "title": "Modifier Put"
            },
            "x-examples": {
              "application/json": {
                "type": "date",
                "required": true,
                "config": {
                  "default_value": "text",
                  "checked_by_default": false,
                  "date_limit_mode": "earliest",
                  "file_types_mode": "specific",
                  "file_types_supported": [],
                  "file_types_other": [],
                  "text_min_length": 15,
                  "text_max_length": 50,
                  "text_lines_limited": true,
                  "text_max_lines": 2,
                  "number_limit_mode": "lowest",
                  "product_list_adjusts_inventory": true,
                  "product_list_adjusts_pricing": true,
                  "product_list_shipping_calc": "none"
                },
                "option_values": [
                  {
                    "id": 22,
                    "is_default": false,
                    "label": "",
                    "sort_order": 0,
                    "value_data": {
                      "colors": [
                        "#123c91, #FFFF00, #397a44"
                      ]
                    },
                    "adjusters": {
                      "price": {
                        "adjuster": "relative",
                        "adjuster_value": 6
                      },
                      "weight": {
                        "adjuster": "relative",
                        "adjuster_value": 6
                      },
                      "purchasing_disabled": {
                        "status": true,
                        "message": "This product is not available for purchase."
                      }
                    }
                  }
                ]
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Modifier properties.",
                      "title": "Modifier Base",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                          "enum": [
                            "date",
                            "checkbox",
                            "file",
                            "text",
                            "multi_line_text",
                            "numbers_only_text",
                            "radio_buttons",
                            "rectangles",
                            "dropdown",
                            "product_list",
                            "product_list_with_images",
                            "swatch"
                          ],
                          "x-required": [
                            "post"
                          ]
                        },
                        "required": {
                          "type": "boolean",
                          "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ]
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order the modifiers display on the product detail page."
                        },
                        "config": {
                          "type": "object",
                          "title": "Option Config",
                          "description": "The values for option config can vary based on the Modifier created.",
                          "properties": {
                            "default_value": {
                              "type": "string",
                              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                            },
                            "checked_by_default": {
                              "type": "boolean",
                              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                            },
                            "checkbox_label": {
                              "type": "string",
                              "description": "(checkbox) Label displayed for the checkbox option.\n"
                            },
                            "date_limited": {
                              "type": "boolean",
                              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                            },
                            "date_limit_mode": {
                              "type": "string",
                              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                              "enum": [
                                "earliest",
                                "range",
                                "latest"
                              ],
                              "example": "range"
                            },
                            "date_earliest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2018-08-31T05:00:00+00:00"
                            },
                            "date_latest_value": {
                              "type": "string",
                              "format": "date",
                              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                              "example": "2019-01-01T05:00:00+00:00"
                            },
                            "file_types_mode": {
                              "type": "string",
                              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                              "enum": [
                                "specific",
                                "all"
                              ],
                              "example": "specific"
                            },
                            "file_types_supported": {
                              "type": "array",
                              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                              "example": "images, documents, other",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_types_other": {
                              "type": "array",
                              "description": "(file) A list of other file types allowed with the file upload option.\n",
                              "example": "pdf",
                              "items": {
                                "type": "string"
                              }
                            },
                            "file_max_size": {
                              "type": "integer",
                              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                              "example": 5
                            },
                            "text_characters_limited": {
                              "type": "boolean",
                              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                            },
                            "text_min_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                              "example": 1
                            },
                            "text_max_length": {
                              "type": "integer",
                              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                              "example": 55
                            },
                            "text_lines_limited": {
                              "type": "boolean",
                              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                              "example": true
                            },
                            "text_max_lines": {
                              "type": "integer",
                              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                              "example": 4
                            },
                            "number_limited": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                              "example": true
                            },
                            "number_limit_mode": {
                              "type": "string",
                              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                              "enum": [
                                "lowest",
                                "highest",
                                "range"
                              ],
                              "example": "lowest"
                            },
                            "number_lowest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                              "example": 100
                            },
                            "number_highest_value": {
                              "type": "number",
                              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                            },
                            "number_integers_only": {
                              "type": "boolean",
                              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                              "example": false
                            },
                            "product_list_adjusts_inventory": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                            },
                            "product_list_adjusts_pricing": {
                              "type": "boolean",
                              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                            },
                            "product_list_shipping_calc": {
                              "type": "string",
                              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                              "enum": [
                                "none",
                                "weight",
                                "package"
                              ],
                              "example": "weight"
                            }
                          }
                        },
                        "option_values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Common Option Value properties.",
                                    "title": "Option Value Base",
                                    "properties": {
                                      "is_default": {
                                        "type": "boolean",
                                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                        "example": false
                                      },
                                      "label": {
                                        "type": "string",
                                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                        "x-required": [
                                          "post"
                                        ],
                                        "example": "Green"
                                      },
                                      "sort_order": {
                                        "type": "integer",
                                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                        "minimum": -2147483648,
                                        "maximum": 2147483647,
                                        "x-required": [
                                          "post"
                                        ],
                                        "example": 0
                                      },
                                      "value_data": {
                                        "type": "object",
                                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                      }
                                    },
                                    "required": [
                                      "label",
                                      "sort_order"
                                    ]
                                  },
                                  {
                                    "properties": {
                                      "adjusters": {
                                        "type": "object",
                                        "properties": {
                                          "price": {
                                            "type": "object",
                                            "title": "Adjuster",
                                            "properties": {
                                              "adjuster": {
                                                "type": "string",
                                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "enum": [
                                                  "relative",
                                                  "percentage"
                                                ],
                                                "x-nullable": true
                                              },
                                              "adjuster_value": {
                                                "type": "number",
                                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "example": 5
                                              }
                                            },
                                            "description": "Adjuster for Complex Rules."
                                          },
                                          "weight": {
                                            "type": "object",
                                            "title": "Adjuster",
                                            "properties": {
                                              "adjuster": {
                                                "type": "string",
                                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "enum": [
                                                  "relative",
                                                  "percentage"
                                                ],
                                                "x-nullable": true
                                              },
                                              "adjuster_value": {
                                                "type": "number",
                                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                                "example": 5
                                              }
                                            },
                                            "description": "Adjuster for Complex Rules."
                                          },
                                          "image_url": {
                                            "type": "string",
                                            "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                            "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                          },
                                          "purchasing_disabled": {
                                            "type": "object",
                                            "properties": {
                                              "status": {
                                                "type": "boolean",
                                                "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                              },
                                              "message": {
                                                "type": "string",
                                                "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                ],
                                "title": "Modifier Value Base",
                                "type": "object"
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer",
                                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                                  }
                                }
                              }
                            ],
                            "title": "Modifier Value",
                            "description": "Part of Modifier Value Response "
                          }
                        }
                      },
                      "required": [
                        "type",
                        "required"
                      ]
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the modifier; increments sequentially.\n",
                          "example": 12
                        },
                        "product_id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the product to which the option belongs.\n",
                          "example": 77
                        },
                        "name": {
                          "type": "string",
                          "description": "The unique option name. Auto-generated from the display name, a timestamp, and the product ID.\n",
                          "example": "Add-a-$5-Donation1535039590-191"
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The name of the option shown on the storefront.\n",
                          "example": "Donation"
                        }
                      }
                    }
                  ],
                  "title": "Modifer",
                  "description": "Product Modifier",
                  "type": "object"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Modifier Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 160,
                    "product_id": 131,
                    "name": "Add-a-$5-Donation1535039590-191",
                    "display_name": "Add a $5 Donation",
                    "type": "checkbox",
                    "required": false,
                    "config": {
                      "checkbox_label": "Check for Donation",
                      "checked_by_default": false
                    },
                    "option_values": [
                      {
                        "id": 149,
                        "option_id": 160,
                        "label": "Yes",
                        "sort_order": 0,
                        "value_data": {
                          "checked_value": true
                        },
                        "is_default": false,
                        "adjusters": {
                          "price": {
                            "adjuster": {},
                            "adjuster_value": {}
                          },
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      },
                      {
                        "id": 150,
                        "option_id": 160,
                        "label": "No",
                        "sort_order": 1,
                        "value_data": {
                          "checked_value": false
                        },
                        "is_default": true,
                        "adjusters": {
                          "price": {},
                          "weight": {},
                          "image_url": "",
                          "purchasing_disabled": {
                            "status": false,
                            "message": ""
                          }
                        }
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The `Modifier` was in conflict with another modifier or option. This is the result of duplicate unique fields, such as `name`.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Modifier` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Modifier",
        "tags": [
          "Product Modifiers",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Product Modifier*.",
        "operationId": "deleteModifierById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Modifier",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Modifiers",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/modifiers/{modifier_id}/values": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "modifier_id",
          "description": "The ID of the `Modifier`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of all product *Modifier Values*. Optional parameters can be passed in.",
        "operationId": "getModifierValues",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Common Option Value properties.",
                            "title": "Option Value Base",
                            "properties": {
                              "is_default": {
                                "type": "boolean",
                                "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                "example": false
                              },
                              "label": {
                                "type": "string",
                                "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                "x-required": [
                                  "post"
                                ],
                                "example": "Green"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647,
                                "x-required": [
                                  "post"
                                ],
                                "example": 0
                              },
                              "value_data": {
                                "type": "object",
                                "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                              }
                            },
                            "required": [
                              "label",
                              "sort_order"
                            ]
                          },
                          {
                            "properties": {
                              "adjusters": {
                                "type": "object",
                                "properties": {
                                  "price": {
                                    "type": "object",
                                    "title": "Adjuster",
                                    "properties": {
                                      "adjuster": {
                                        "type": "string",
                                        "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                        "enum": [
                                          "relative",
                                          "percentage"
                                        ],
                                        "x-nullable": true
                                      },
                                      "adjuster_value": {
                                        "type": "number",
                                        "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                        "example": 5
                                      }
                                    },
                                    "description": "Adjuster for Complex Rules."
                                  },
                                  "weight": {
                                    "type": "object",
                                    "title": "Adjuster",
                                    "properties": {
                                      "adjuster": {
                                        "type": "string",
                                        "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                        "enum": [
                                          "relative",
                                          "percentage"
                                        ],
                                        "x-nullable": true
                                      },
                                      "adjuster_value": {
                                        "type": "number",
                                        "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                        "example": 5
                                      }
                                    },
                                    "description": "Adjuster for Complex Rules."
                                  },
                                  "image_url": {
                                    "type": "string",
                                    "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                    "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                  },
                                  "purchasing_disabled": {
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "boolean",
                                        "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ],
                        "title": "Modifier Value Base",
                        "type": "object"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the value; increments sequentially.\n"
                          }
                        }
                      }
                    ],
                    "title": "Modifier Value",
                    "description": "Part of Modifier Value Response "
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Modifier Value Collection Response",
              "description": "Returns for GET All Modifier Values on a Product"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 190,
                    "option_id": 222,
                    "label": "Yes",
                    "sort_order": 0,
                    "value_data": {
                      "checked_value": true
                    },
                    "is_default": false,
                    "adjusters": {
                      "price": {
                        "adjuster": "relative",
                        "adjuster_value": 5
                      },
                      "weight": {},
                      "image_url": "",
                      "purchasing_disabled": {
                        "status": false,
                        "message": ""
                      }
                    }
                  },
                  {
                    "id": 191,
                    "option_id": 222,
                    "label": "No",
                    "sort_order": 1,
                    "value_data": {
                      "checked_value": false
                    },
                    "is_default": true,
                    "adjusters": {
                      "price": {},
                      "weight": {},
                      "image_url": "",
                      "purchasing_disabled": {
                        "status": false,
                        "message": ""
                      }
                    }
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 2,
                    "count": 2,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Modifier Values",
        "tags": [
          "Product Modifier Values",
          "Product Modifiers",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Modifier Value*.\n\n**Required Fields**\n* label\n* sort_order\n\n**Read-Only Fields**\n* id\n\nThere are two steps to create a modifier. \n1. Add the modifier using the [Create Modifier](/api-reference/catalog/catalog-api/product-modifiers/createmodifier). \n2. [Update](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) the modifier values. ",
        "operationId": "createModifierValue",
        "parameters": [
          {
            "name": "ModifierValue",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a POST to create a modifier value on a product.",
              "allOf": [
                {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Option Value properties.",
                      "title": "Option Value Base",
                      "properties": {
                        "is_default": {
                          "type": "boolean",
                          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                          "example": false
                        },
                        "label": {
                          "type": "string",
                          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ],
                          "example": "Green"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-required": [
                            "post"
                          ],
                          "example": 0
                        },
                        "value_data": {
                          "type": "object",
                          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                        }
                      },
                      "required": [
                        "label",
                        "sort_order"
                      ]
                    },
                    {
                      "properties": {
                        "adjusters": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "object",
                              "title": "Adjuster",
                              "properties": {
                                "adjuster": {
                                  "type": "string",
                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "enum": [
                                    "relative",
                                    "percentage"
                                  ],
                                  "x-nullable": true
                                },
                                "adjuster_value": {
                                  "type": "number",
                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "example": 5
                                }
                              },
                              "description": "Adjuster for Complex Rules."
                            },
                            "weight": {
                              "type": "object",
                              "title": "Adjuster",
                              "properties": {
                                "adjuster": {
                                  "type": "string",
                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "enum": [
                                    "relative",
                                    "percentage"
                                  ],
                                  "x-nullable": true
                                },
                                "adjuster_value": {
                                  "type": "number",
                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "example": 5
                                }
                              },
                              "description": "Adjuster for Complex Rules."
                            },
                            "image_url": {
                              "type": "string",
                              "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                              "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                            },
                            "purchasing_disabled": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "boolean",
                                  "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "title": "Modifier Value Base",
                  "type": "object"
                }
              ],
              "title": "Modifier Value Post"
            },
            "x-examples": {
              "application/json": {
                "is_default": false,
                "adjusters": {
                  "price": {
                    "adjuster": "relative",
                    "adjuster_value": 5
                  }
                }
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Common Option Value properties.",
                          "title": "Option Value Base",
                          "properties": {
                            "is_default": {
                              "type": "boolean",
                              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                              "example": false
                            },
                            "label": {
                              "type": "string",
                              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                              "x-required": [
                                "post"
                              ],
                              "example": "Green"
                            },
                            "sort_order": {
                              "type": "integer",
                              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "x-required": [
                                "post"
                              ],
                              "example": 0
                            },
                            "value_data": {
                              "type": "object",
                              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                            }
                          },
                          "required": [
                            "label",
                            "sort_order"
                          ]
                        },
                        {
                          "properties": {
                            "adjusters": {
                              "type": "object",
                              "properties": {
                                "price": {
                                  "type": "object",
                                  "title": "Adjuster",
                                  "properties": {
                                    "adjuster": {
                                      "type": "string",
                                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "enum": [
                                        "relative",
                                        "percentage"
                                      ],
                                      "x-nullable": true
                                    },
                                    "adjuster_value": {
                                      "type": "number",
                                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "example": 5
                                    }
                                  },
                                  "description": "Adjuster for Complex Rules."
                                },
                                "weight": {
                                  "type": "object",
                                  "title": "Adjuster",
                                  "properties": {
                                    "adjuster": {
                                      "type": "string",
                                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "enum": [
                                        "relative",
                                        "percentage"
                                      ],
                                      "x-nullable": true
                                    },
                                    "adjuster_value": {
                                      "type": "number",
                                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "example": 5
                                    }
                                  },
                                  "description": "Adjuster for Complex Rules."
                                },
                                "image_url": {
                                  "type": "string",
                                  "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                  "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                },
                                "purchasing_disabled": {
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "boolean",
                                      "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ],
                      "title": "Modifier Value Base",
                      "type": "object"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the value; increments sequentially.\n"
                        }
                      }
                    }
                  ],
                  "title": "Modifier Value",
                  "description": "Part of Modifier Value Response "
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Modifier Value Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 190,
                  "option_id": 222,
                  "label": "Yes",
                  "sort_order": 0,
                  "value_data": {},
                  "is_default": false,
                  "adjusters": {
                    "price": {
                      "adjuster": "relative",
                      "adjuster_value": 5
                    },
                    "weight": {},
                    "image_url": "",
                    "purchasing_disabled": {
                      "status": false,
                      "message": ""
                    }
                  }
                },
                "meta": {}
              }
            }
          },
          "422": {
            "description": "The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create Modifier Value",
        "tags": [
          "Product Modifier Values",
          "Product Modifiers",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "modifier_id",
          "description": "The ID of the `Modifier`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        },
        {
          "name": "value_id",
          "description": "The ID of the `Modifier/Option Value`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Modifier Value*. Optional parameters can be passed in.",
        "operationId": "getModifierValueById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Common Option Value properties.",
                          "title": "Option Value Base",
                          "properties": {
                            "is_default": {
                              "type": "boolean",
                              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                              "example": false
                            },
                            "label": {
                              "type": "string",
                              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                              "x-required": [
                                "post"
                              ],
                              "example": "Green"
                            },
                            "sort_order": {
                              "type": "integer",
                              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "x-required": [
                                "post"
                              ],
                              "example": 0
                            },
                            "value_data": {
                              "type": "object",
                              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                            }
                          },
                          "required": [
                            "label",
                            "sort_order"
                          ]
                        },
                        {
                          "properties": {
                            "adjusters": {
                              "type": "object",
                              "properties": {
                                "price": {
                                  "type": "object",
                                  "title": "Adjuster",
                                  "properties": {
                                    "adjuster": {
                                      "type": "string",
                                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "enum": [
                                        "relative",
                                        "percentage"
                                      ],
                                      "x-nullable": true
                                    },
                                    "adjuster_value": {
                                      "type": "number",
                                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "example": 5
                                    }
                                  },
                                  "description": "Adjuster for Complex Rules."
                                },
                                "weight": {
                                  "type": "object",
                                  "title": "Adjuster",
                                  "properties": {
                                    "adjuster": {
                                      "type": "string",
                                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "enum": [
                                        "relative",
                                        "percentage"
                                      ],
                                      "x-nullable": true
                                    },
                                    "adjuster_value": {
                                      "type": "number",
                                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "example": 5
                                    }
                                  },
                                  "description": "Adjuster for Complex Rules."
                                },
                                "image_url": {
                                  "type": "string",
                                  "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                  "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                },
                                "purchasing_disabled": {
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "boolean",
                                      "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ],
                      "title": "Modifier Value Base",
                      "type": "object"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the value; increments sequentially.\n"
                        }
                      }
                    }
                  ],
                  "title": "Modifier Value",
                  "description": "Part of Modifier Value Response "
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Modifier Value Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 190,
                  "option_id": 222,
                  "label": "Yes",
                  "sort_order": 0,
                  "value_data": {},
                  "is_default": false,
                  "adjusters": {
                    "price": {
                      "adjuster": "relative",
                      "adjuster_value": 5
                    },
                    "weight": {},
                    "image_url": "",
                    "purchasing_disabled": {
                      "status": false,
                      "message": ""
                    }
                  }
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Modifier Value",
        "security": [
          {
            "X-Auth-Client": []
          },
          {
            "X-Auth-Token": []
          }
        ],
        "tags": [
          "Product Modifier Values",
          "Product Modifiers",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Modifier Value*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id\n\nThere are two steps to create a modifier. \n1. Add the modifier using the [Create Modifier](/api-reference/catalog/catalog-api/product-modifiers/createmodifier). \n2. [Update](/api-reference/catalog/catalog-api/product-modifiers/updatemodifier) the modifier values. ",
        "operationId": "updateModifierValue",
        "parameters": [
          {
            "name": "ModifierValue",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update a modifier value on a product.",
              "allOf": [
                {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Option Value properties.",
                      "title": "Option Value Base",
                      "properties": {
                        "is_default": {
                          "type": "boolean",
                          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                          "example": false
                        },
                        "label": {
                          "type": "string",
                          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ],
                          "example": "Green"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-required": [
                            "post"
                          ],
                          "example": 0
                        },
                        "value_data": {
                          "type": "object",
                          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                        }
                      },
                      "required": [
                        "label",
                        "sort_order"
                      ]
                    },
                    {
                      "properties": {
                        "adjusters": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "object",
                              "title": "Adjuster",
                              "properties": {
                                "adjuster": {
                                  "type": "string",
                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "enum": [
                                    "relative",
                                    "percentage"
                                  ],
                                  "x-nullable": true
                                },
                                "adjuster_value": {
                                  "type": "number",
                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "example": 5
                                }
                              },
                              "description": "Adjuster for Complex Rules."
                            },
                            "weight": {
                              "type": "object",
                              "title": "Adjuster",
                              "properties": {
                                "adjuster": {
                                  "type": "string",
                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "enum": [
                                    "relative",
                                    "percentage"
                                  ],
                                  "x-nullable": true
                                },
                                "adjuster_value": {
                                  "type": "number",
                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "example": 5
                                }
                              },
                              "description": "Adjuster for Complex Rules."
                            },
                            "image_url": {
                              "type": "string",
                              "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                              "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                            },
                            "purchasing_disabled": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "boolean",
                                  "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "title": "Modifier Value Base",
                  "type": "object"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the value; increments sequentially.\n",
                      "x-required": [
                        "put"
                      ]
                    }
                  }
                }
              ],
              "title": "Modifier Value Put"
            },
            "x-examples": {
              "application/json": {
                "id": 190,
                "adjusters": {
                  "price": {
                    "adjuster": "relative",
                    "adjuster_value": 6
                  }
                }
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "allOf": [
                    {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Common Option Value properties.",
                          "title": "Option Value Base",
                          "properties": {
                            "is_default": {
                              "type": "boolean",
                              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                              "example": false
                            },
                            "label": {
                              "type": "string",
                              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                              "x-required": [
                                "post"
                              ],
                              "example": "Green"
                            },
                            "sort_order": {
                              "type": "integer",
                              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "x-required": [
                                "post"
                              ],
                              "example": 0
                            },
                            "value_data": {
                              "type": "object",
                              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                            }
                          },
                          "required": [
                            "label",
                            "sort_order"
                          ]
                        },
                        {
                          "properties": {
                            "adjusters": {
                              "type": "object",
                              "properties": {
                                "price": {
                                  "type": "object",
                                  "title": "Adjuster",
                                  "properties": {
                                    "adjuster": {
                                      "type": "string",
                                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "enum": [
                                        "relative",
                                        "percentage"
                                      ],
                                      "x-nullable": true
                                    },
                                    "adjuster_value": {
                                      "type": "number",
                                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "example": 5
                                    }
                                  },
                                  "description": "Adjuster for Complex Rules."
                                },
                                "weight": {
                                  "type": "object",
                                  "title": "Adjuster",
                                  "properties": {
                                    "adjuster": {
                                      "type": "string",
                                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "enum": [
                                        "relative",
                                        "percentage"
                                      ],
                                      "x-nullable": true
                                    },
                                    "adjuster_value": {
                                      "type": "number",
                                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                      "example": 5
                                    }
                                  },
                                  "description": "Adjuster for Complex Rules."
                                },
                                "image_url": {
                                  "type": "string",
                                  "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                  "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                },
                                "purchasing_disabled": {
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "boolean",
                                      "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ],
                      "title": "Modifier Value Base",
                      "type": "object"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the value; increments sequentially.\n"
                        }
                      }
                    }
                  ],
                  "title": "Modifier Value",
                  "description": "Part of Modifier Value Response "
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Modifier Value Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 190,
                  "option_id": 222,
                  "label": "Yes",
                  "sort_order": 0,
                  "value_data": {},
                  "is_default": false,
                  "adjusters": {
                    "price": {
                      "adjuster": "relative",
                      "adjuster_value": 5
                    },
                    "weight": {},
                    "image_url": "",
                    "purchasing_disabled": {
                      "status": false,
                      "message": ""
                    }
                  }
                },
                "meta": {}
              }
            }
          },
          "422": {
            "description": "The `ModifierValue` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Modifier Value",
        "tags": [
          "Product Modifier Values",
          "Product Modifiers",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Modifier Value*.",
        "operationId": "deleteModifierValueById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete Modifier Value",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Modifier Values",
          "Product Modifiers",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/modifiers/{modifier_id}/values/{value_id}/image": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "modifier_id",
          "description": "The ID of the `Modifier`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        },
        {
          "name": "value_id",
          "description": "The ID of the `Modifier`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "post": {
        "description": "Creates a *Modifier Image*.\n\nThe image will show on the storefront when the value is selected.\n\n **Required Fields**\n- image_file: Form posts are the only accepted upload option.",
        "operationId": "createModifierImage",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "formData",
            "name": "image_file",
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Image Response returns for:\n* Create Variant Image\n* Create Modifier Image\n* Create Category Image\n* Create Brand Image",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "An object containing a publicly accessible image URL, or a form post that contains an image file.",
                  "title": "Resource Image",
                  "properties": {
                    "image_url": {
                      "type": "string",
                      "description": "A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file. \n"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Image Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/product_images/attribute_rule_images/85_source_1536863430.png"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "422": {
            "description": "Modifier image was not valid. This is the result of missing `image_file` fields, or of a non-URL value for the `image_file` field. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create Modifier Image",
        "tags": [
          "Product Modifier Images",
          "Product Modifiers",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Modifier Image*.\n\nDeletes the image that was set to show when the modifier value is selected.",
        "operationId": "deleteModifierImage",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete Modifier Image",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Modifier Images",
          "Product Modifiers",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/complex-rules": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of all product *Complex Rules*. Optional parameters may be passed in.",
        "operationId": "getComplexRules",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "description": "Complex Rule Response",
              "title": "Complex Rule Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common ComplexRule properties.",
                    "title": "Complex Rule",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the rule; increments sequentially.\nRead-Only",
                        "example": 5
                      },
                      "product_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the product with which the rule is associated; increments sequentially.\n",
                        "x-nullable": true,
                        "x-required": [
                          "post",
                          "put"
                        ],
                        "example": 67
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "The priority to give this rule when making adjustments to the product properties.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "example": 0
                      },
                      "enabled": {
                        "type": "boolean",
                        "description": "Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.\n",
                        "example": true
                      },
                      "stop": {
                        "type": "boolean",
                        "description": "Flag for determining whether other rules should not be applied after this rule has been applied.\n"
                      },
                      "purchasing_disabled": {
                        "type": "boolean",
                        "description": "Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.\n"
                      },
                      "purchasing_disabled_message": {
                        "type": "string",
                        "description": "Message displayed on the storefront when a rule disables the purchasing of a product.\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "This product is not available at this time."
                      },
                      "purchasing_hidden": {
                        "type": "boolean",
                        "description": "Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.\n"
                      },
                      "image_url": {
                        "type": "string",
                        "description": "The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file. \n",
                        "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                      },
                      "price_adjuster": {
                        "type": "object",
                        "title": "Adjuster",
                        "description": "Adjuster for Complex Rules.",
                        "properties": {
                          "adjuster": {
                            "type": "string",
                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                            "enum": [
                              "relative",
                              "percentage"
                            ],
                            "x-nullable": true
                          },
                          "adjuster_value": {
                            "type": "number",
                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                            "example": 5
                          }
                        }
                      },
                      "weight_adjuster": {
                        "type": "object",
                        "title": "Adjuster",
                        "description": "Adjuster for Complex Rules.",
                        "properties": {
                          "adjuster": {
                            "type": "string",
                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                            "enum": [
                              "relative",
                              "percentage"
                            ],
                            "x-nullable": true
                          },
                          "adjuster_value": {
                            "type": "number",
                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                            "example": 5
                          }
                        }
                      },
                      "conditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`'s, or else reference a `modifier_value_id` and a `variant_id`.",
                          "title": "Complex Rule Condition",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the rule condition; increments sequentially. Read-Only\n",
                              "x-nullable": true,
                              "example": 3
                            },
                            "rule_id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the rule with which the condition is associated.\nRead-Only",
                              "x-nullable": true,
                              "example": 4
                            },
                            "modifier_id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the modifier with which the rule condition is associated.\nRequired in /POST.",
                              "x-nullable": true,
                              "example": 55
                            },
                            "modifier_value_id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the modifier value with which the rule condition is associated.\nRequired in /POST.",
                              "x-nullable": true,
                              "example": 256
                            },
                            "variant_id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the variant with which the rule condition is associated.\nRequired in /POST.",
                              "x-nullable": true,
                              "example": 1
                            },
                            "combination_id": {
                              "type": "integer",
                              "description": "(READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.\n"
                            }
                          },
                          "required": [
                            "modifier_id",
                            "modifier_value_id",
                            "variant_id"
                          ]
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "title": "Collection Meta",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 82,
                    "product_id": 195,
                    "sort_order": 0,
                    "enabled": true,
                    "stop": false,
                    "price_adjuster": {
                      "adjuster": "relative",
                      "adjuster_value": 8
                    },
                    "weight_adjuster": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "purchasing_hidden": false,
                    "image_url": "",
                    "conditions": [
                      {
                        "rule_id": 82,
                        "modifier_id": 221,
                        "modifier_value_id": 175,
                        "variant_id": {},
                        "combination_id": 0
                      }
                    ]
                  },
                  {
                    "id": 83,
                    "product_id": 195,
                    "sort_order": 1,
                    "enabled": true,
                    "stop": false,
                    "price_adjuster": {},
                    "weight_adjuster": {
                      "adjuster": "relative",
                      "adjuster_value": 3
                    },
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "purchasing_hidden": false,
                    "image_url": "",
                    "conditions": [
                      {
                        "rule_id": 83,
                        "modifier_id": 221,
                        "modifier_value_id": 174,
                        "variant_id": {},
                        "combination_id": 0
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 2,
                    "count": 2,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get Complex Rules",
        "tags": [
          "Product Complex Rules",
          "Catalog"
        ]
      },
      "post": {
        "operationId": "createComplexRule",
        "parameters": [
          {
            "name": "ComplexRule",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common ComplexRule properties.",
              "title": "Complex Rule",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the rule; increments sequentially.\nRead-Only",
                  "example": 5
                },
                "product_id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the product with which the rule is associated; increments sequentially.\n",
                  "x-nullable": true,
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "example": 67
                },
                "sort_order": {
                  "type": "integer",
                  "description": "The priority to give this rule when making adjustments to the product properties.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "example": 0
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.\n",
                  "example": true
                },
                "stop": {
                  "type": "boolean",
                  "description": "Flag for determining whether other rules should not be applied after this rule has been applied.\n"
                },
                "purchasing_disabled": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.\n"
                },
                "purchasing_disabled_message": {
                  "type": "string",
                  "description": "Message displayed on the storefront when a rule disables the purchasing of a product.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "This product is not available at this time."
                },
                "purchasing_hidden": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.\n"
                },
                "image_url": {
                  "type": "string",
                  "description": "The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file. \n",
                  "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                },
                "price_adjuster": {
                  "type": "object",
                  "title": "Adjuster",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  },
                  "description": "Adjuster for Complex Rules."
                },
                "weight_adjuster": {
                  "type": "object",
                  "title": "Adjuster",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  },
                  "description": "Adjuster for Complex Rules."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`'s, or else reference a `modifier_value_id` and a `variant_id`.",
                    "title": "Complex Rule Condition",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the rule condition; increments sequentially. Read-Only\n",
                        "x-nullable": true,
                        "example": 3
                      },
                      "rule_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the rule with which the condition is associated.\nRead-Only",
                        "x-nullable": true,
                        "example": 4
                      },
                      "modifier_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the modifier with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 55
                      },
                      "modifier_value_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the modifier value with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 256
                      },
                      "variant_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the variant with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 1
                      },
                      "combination_id": {
                        "type": "integer",
                        "description": "(READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.\n"
                      }
                    },
                    "required": [
                      "modifier_id",
                      "modifier_value_id",
                      "variant_id"
                    ]
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "product_id": 77,
                "sort_order": 0,
                "enabled": true,
                "stop": false,
                "purchasing_disabled": false,
                "purchasing_hidden": false,
                "price_adjuster": {
                  "adjuster": "relative",
                  "adjuster_value": 6
                },
                "weight_adjuster": {
                  "adjuster": "relative",
                  "adjuster_value": 6
                },
                "conditions": [
                  {
                    "id": 5,
                    "rule_id": 5,
                    "modifier_id": 123,
                    "modifier_value_id": 104
                  }
                ]
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ComplexRuleResponse"
          },
          "409": {
            "description": "The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Complex Rule",
        "description": "Creates a product *Complex Rule*.\n\n**Required Fields**\n- modifier_id\n- modifier_value_id\n- modifier_value_id\n- variant_id\n\n**Read-Only Fields**\n- complex_rule_id\n- conditions_id\n- rule_id\n- combination_id\n- id",
        "tags": [
          "Product Complex Rules",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/complex-rules/{complex_rule_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "complex_rule_id",
          "description": "The ID of the `ComplexRule`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Complex Rule*. Optional parameters can be passed in.",
        "operationId": "getComplexRuleById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ComplexRuleResponse"
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Complex Rule",
        "tags": [
          "Product Complex Rules",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Complex Rule*.\n\n**Required Fields**:\n- none\n\n**Read-Only Fields**:\n- complex_rule_id\n- conditions_id\n- rule_id\n- combination_id\n- id",
        "operationId": "updateComplexRule",
        "parameters": [
          {
            "name": "ComplexRule",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common ComplexRule properties.",
              "title": "Complex Rule",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the rule; increments sequentially.\nRead-Only",
                  "example": 5
                },
                "product_id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the product with which the rule is associated; increments sequentially.\n",
                  "x-nullable": true,
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "example": 67
                },
                "sort_order": {
                  "type": "integer",
                  "description": "The priority to give this rule when making adjustments to the product properties.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "example": 0
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.\n",
                  "example": true
                },
                "stop": {
                  "type": "boolean",
                  "description": "Flag for determining whether other rules should not be applied after this rule has been applied.\n"
                },
                "purchasing_disabled": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.\n"
                },
                "purchasing_disabled_message": {
                  "type": "string",
                  "description": "Message displayed on the storefront when a rule disables the purchasing of a product.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "This product is not available at this time."
                },
                "purchasing_hidden": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.\n"
                },
                "image_url": {
                  "type": "string",
                  "description": "The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file. \n",
                  "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                },
                "price_adjuster": {
                  "type": "object",
                  "title": "Adjuster",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  },
                  "description": "Adjuster for Complex Rules."
                },
                "weight_adjuster": {
                  "type": "object",
                  "title": "Adjuster",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  },
                  "description": "Adjuster for Complex Rules."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`'s, or else reference a `modifier_value_id` and a `variant_id`.",
                    "title": "Complex Rule Condition",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the rule condition; increments sequentially. Read-Only\n",
                        "x-nullable": true,
                        "example": 3
                      },
                      "rule_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the rule with which the condition is associated.\nRead-Only",
                        "x-nullable": true,
                        "example": 4
                      },
                      "modifier_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the modifier with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 55
                      },
                      "modifier_value_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the modifier value with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 256
                      },
                      "variant_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the variant with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 1
                      },
                      "combination_id": {
                        "type": "integer",
                        "description": "(READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.\n"
                      }
                    },
                    "required": [
                      "modifier_id",
                      "modifier_value_id",
                      "variant_id"
                    ]
                  }
                }
              }
            },
            "x-examples": {
              "application/json": {
                "product_id": 77,
                "sort_order": 0,
                "enabled": true,
                "stop": false,
                "purchasing_disabled": false,
                "purchasing_hidden": false,
                "price_adjuster": {
                  "adjuster": "relative",
                  "adjuster_value": 6
                },
                "weight_adjuster": {
                  "adjuster": "relative",
                  "adjuster_value": 6
                },
                "id": 5,
                "conditions": [
                  {
                    "id": 5,
                    "rule_id": 5,
                    "modifier_id": 123,
                    "modifier_value_id": 104
                  }
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ComplexRuleResponse"
          },
          "409": {
            "description": "The `ComplexRule` was in conflict with another `ComplexRule`. This is the result of duplicate conditions.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `ComplexRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Complex Rule",
        "tags": [
          "Product Complex Rules",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a product *Complex Rule*.",
        "operationId": "deleteComplexRuleById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Complex Rule",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Complex Rules",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/custom-fields": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of product *Custom Fields*. Optional parameters can be passed in.",
        "operationId": "getCustomFields",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                    "title": "Custom Field",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                        "minimum": 1,
                        "example": 6
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 250,
                        "example": "ISBN"
                      },
                      "value": {
                        "type": "string",
                        "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 250,
                        "example": "1234567890123"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "name": "Release year",
                    "value": "1987",
                    "id": 1
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "previous": "?page=1&limit=50",
                      "current": "?page=1&limit=50",
                      "next": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get Custom Fields",
        "tags": [
          "Product Custom Fields",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Custom Field*.\n\n**Required Fields:**\n- name\n- value\n\n**Read-Only:**\n- id",
        "operationId": "createCustomField",
        "parameters": [
          {
            "name": "CustomField",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
              "title": "Custom Field",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                  "minimum": 1,
                  "example": 6
                },
                "name": {
                  "type": "string",
                  "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 250,
                  "example": "ISBN"
                },
                "value": {
                  "type": "string",
                  "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 250,
                  "example": "1234567890123"
                }
              },
              "required": [
                "name",
                "value"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Release Year",
                "value": "1976"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                  "title": "Custom Field",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                      "minimum": 1,
                      "example": 6
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "ISBN"
                    },
                    "value": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "1234567890123"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "name": "Release Year",
                  "value": "1976",
                  "id": 2
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The parent resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "422": {
            "description": "The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Custom Fields",
        "tags": [
          "Product Custom Fields",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/custom-fields/{custom_field_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "custom_field_id",
          "description": "The ID of the `CustomField`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Custom Field*. Optional parameters can be passed in.",
        "operationId": "getCustomFieldById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                  "title": "Custom Field",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                      "minimum": 1,
                      "example": 6
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "ISBN"
                    },
                    "value": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "1234567890123"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "name": "Release Year",
                  "value": "1976",
                  "id": 2
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Custom Field",
        "tags": [
          "Product Custom Fields",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Custom Field*. \n\n**Required Fields**\n- none\n\n**Read-Only**\n- id",
        "operationId": "updateCustomField",
        "parameters": [
          {
            "name": "CustomField",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
              "title": "Custom Field",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                  "minimum": 1,
                  "example": 6
                },
                "name": {
                  "type": "string",
                  "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 250,
                  "example": "ISBN"
                },
                "value": {
                  "type": "string",
                  "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 250,
                  "example": "1234567890123"
                }
              },
              "required": [
                "name",
                "value"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Release year",
                "value": "1987"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                  "title": "Custom Field",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                      "minimum": 1,
                      "example": 6
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "ISBN"
                    },
                    "value": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "1234567890123"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "name": "Release Year",
                  "value": "1976",
                  "id": 2
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "422": {
            "description": "The `CustomField` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Custom Field",
        "tags": [
          "Product Custom Fields",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a product *Custom Field*.",
        "operationId": "deleteCustomFieldById",
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Delete a Custom Field",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Custom Fields",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/bulk-pricing-rules": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "page",
          "description": "Specifies the page number in a limited (paginated) list of products.",
          "required": false,
          "in": "query",
          "type": "integer"
        },
        {
          "name": "limit",
          "description": "Controls the number of items per page in a limited (paginated) list of products.",
          "required": false,
          "in": "query",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of *Bulk Pricing Rules*. Optional parameters can be passed in.",
        "operationId": "getBulkPricingRules",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common BulkPricingRule properties",
                    "title": "Bulk Pricing Rule",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                      },
                      "quantity_min": {
                        "type": "integer",
                        "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "example": 10
                      },
                      "quantity_max": {
                        "type": "integer",
                        "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "example": 50
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                        "x-required": [
                          "post"
                        ],
                        "enum": [
                          "price",
                          "percent",
                          "fixed"
                        ],
                        "example": "price"
                      },
                      "amount": {
                        "type": "integer",
                        "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST."
                      }
                    },
                    "required": [
                      "quantity_min",
                      "quantity_max",
                      "type",
                      "amount"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "title": "Collection Meta",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 83,
                    "quantity_min": 1,
                    "quantity_max": 3,
                    "type": "price",
                    "amount": 1
                  },
                  {
                    "id": 84,
                    "quantity_min": 4,
                    "quantity_max": 0,
                    "type": "price",
                    "amount": 1.25
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 2,
                    "count": 2,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The parent resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get All Bulk Pricing Rules",
        "tags": [
          "Product Bulk Pricing Rules",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Bulk Pricing Rule*.\n\n**Required Fields**\n- quantity_min\n- quantity_max\n- type\n- amount\n\n**Read-Only Fields**\n- id",
        "operationId": "createBulkPricingRule",
        "parameters": [
          {
            "name": "BulkPricingRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkPricingRuleBase"
            },
            "x-examples": {
              "application/json": {
                "quantity_min": 1,
                "quantity_max": 10,
                "type": "price",
                "amount": 1
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "$ref": "#/definitions/BulkPricingRuleBase"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 83,
                  "quantity_min": 1,
                  "quantity_max": 3,
                  "type": "price",
                  "amount": 1
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The parent resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "409": {
            "description": "The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Creates a Bulk Pricing Rule",
        "tags": [
          "Product Bulk Pricing Rules",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/bulk-pricing-rules/{bulk_pricing_rule_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "bulk_pricing_rule_id",
          "description": "The ID of the `BulkPricingRule`.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Bulk Pricing Rule*. Optional parameters can be passed in.",
        "operationId": "getBulkPricingRuleById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common BulkPricingRule properties",
                  "title": "Bulk Pricing Rule",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                    },
                    "quantity_min": {
                      "type": "integer",
                      "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 10
                    },
                    "quantity_max": {
                      "type": "integer",
                      "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 50
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "price",
                        "percent",
                        "fixed"
                      ],
                      "example": "price"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST."
                    }
                  },
                  "required": [
                    "quantity_min",
                    "quantity_max",
                    "type",
                    "amount"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 83,
                  "quantity_min": 1,
                  "quantity_max": 3,
                  "type": "price",
                  "amount": 1
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource or parent resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Bulk Pricing Rule",
        "tags": [
          "Product Bulk Pricing Rules",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Bulk Pricing Rule*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n- id",
        "operationId": "updateBulkPricingRule",
        "parameters": [
          {
            "name": "BulkPricingRule",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BulkPricingRuleBase"
            },
            "x-examples": {
              "application/json": {
                "quantity_min": 10,
                "quantity_max": 50,
                "type": "price",
                "amount": 10
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common BulkPricingRule properties",
                  "title": "Bulk Pricing Rule",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                    },
                    "quantity_min": {
                      "type": "integer",
                      "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 10
                    },
                    "quantity_max": {
                      "type": "integer",
                      "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 50
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "price",
                        "percent",
                        "fixed"
                      ],
                      "example": "price"
                    },
                    "amount": {
                      "type": "integer",
                      "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST."
                    }
                  },
                  "required": [
                    "quantity_min",
                    "quantity_max",
                    "type",
                    "amount"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 83,
                  "quantity_min": 1,
                  "quantity_max": 3,
                  "type": "price",
                  "amount": 1
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource or parent resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "409": {
            "description": "The `BulkPricingRule` was in conflict with another bulk pricing rule. This is the result of quantity range overlapping with existing bulk pricing rules.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `BulkPricingRule` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Bulk Pricing Rule",
        "tags": [
          "Product Bulk Pricing Rules",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Bulk Pricing Rule*.",
        "operationId": "deleteBulkPricingRuleById",
        "responses": {
          "204": {
            "description": ""
          },
          "404": {
            "description": "The resource or parent resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Delete a Bulk Pricing Rule",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Bulk Pricing Rules",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/metafields": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of *Product Metafields*. Optional parameters can be passed in.",
        "operationId": "getProductMetafieldsByProductId",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter based on a metafield's key.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Filter based on a metafield's namespace.",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Meta Field Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common Metafield properties.",
                    "title": "Metafield",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique ID of the *Metafield*. Read-Only.",
                        "example": 6
                      },
                      "permission_set": {
                        "type": "string",
                        "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                        "enum": [
                          "app_only",
                          "read",
                          "write"
                        ],
                        "x-required": [
                          "post"
                        ]
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Warehouse Locations"
                      },
                      "key": {
                        "type": "string",
                        "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Location"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 65535,
                        "example": "4HG"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description for the metafields.\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "Location in the warehouse"
                      },
                      "resource_type": {
                        "type": "string",
                        "description": "The type of resource with which the metafield is associated.\n",
                        "enum": [
                          "category",
                          "brand",
                          "product",
                          "variant"
                        ],
                        "x-required": [
                          "post"
                        ],
                        "example": "product"
                      },
                      "resource_id": {
                        "type": "integer",
                        "description": "The ID for the resource with which the metafield is associated.\n",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "maximum": 10000000000,
                        "example": 111
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of the metafield's creation. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the metafield was last updated. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      }
                    },
                    "required": [
                      "permission_set",
                      "namespace",
                      "key",
                      "value"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "read",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 3,
                    "count": 3,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get All Product Metafields",
        "tags": [
          "Product Metafields",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Product Metafield*.\n\n**Required Fields:**\n* permission_set\n* namespace\n* key\n* value\n\n**Read-Only Fields**\n* id",
        "operationId": "createProductMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                }
              ],
              "title": "Metafield Post"
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "App Namespace",
                "key": "location_id",
                "value": "Shelf 3, Bin 5",
                "description": "Where products are located"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Product Metafield",
        "tags": [
          "Product Metafields",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/metafields/{metafield_id}": {
      "parameters": [
        {
          "name": "metafield_id",
          "in": "path",
          "description": "The ID of the `Metafield`.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Product Metafield*. Optional parameters can be passed in.",
        "operationId": "getProductMetafieldByProductId",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Product Metafield",
        "tags": [
          "Product Metafields",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Product Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id",
        "operationId": "updateProductMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                }
              ],
              "title": "Metafield Post"
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "Warehouse SKUS",
                "key": "Location",
                "value": "4H",
                "description": "Location in the warehouse",
                "resource_type": "product"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update a Product Metafield",
        "tags": [
          "Product Metafields",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Product Metafield*.",
        "operationId": "deleteProductMetafieldById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Product Metafield",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Product Metafields",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/reviews": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of all *Product Reviews*. Optional parameters can be passed in.",
        "operationId": "getProductReviews",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A product review model.\n",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Product Review Base",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The title for the product review.\nRequired in /POST.",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "text": {
                            "type": "string",
                            "description": "The text for the product review.\n"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                          },
                          "rating": {
                            "type": "integer",
                            "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                          },
                          "email": {
                            "type": "string",
                            "description": "The email of the reviewer. Must be a valid email, or an empty string."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the reviewer.",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "date_reviewed": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date the product was reviewed. Required in /POST.\n"
                          }
                        },
                        "required": [
                          "title",
                          "date_reviewed"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The unique numeric ID of the product review; increments sequentially.\n",
                            "type": "integer"
                          },
                          "product_id": {
                            "description": "The unique numeric identifier for the product with which the review is associated.\n",
                            "type": "integer"
                          },
                          "date_created": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date the product review was created.\n"
                          },
                          "date_modified": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date the product review was modified.\n"
                          }
                        }
                      }
                    ],
                    "title": "Product Review"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Product Review Collection Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "title": "Great Product",
                  "text": "This product is amazing!!!",
                  "status": "approved",
                  "rating": 5,
                  "email": "janedoe@email.com",
                  "name": "Jane Doe",
                  "date_reviewed": "2018-05-07T19:37:13+00:00",
                  "id": 5,
                  "date_created": "2018-05-07T19:37:13+00:00\"",
                  "date_modified": "2018-05-07T19:38:36+00:00"
                },
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "previous": "?page=1&limit=50",
                      "current": "?page=1&limit=50",
                      "next": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "There are no reviews on this product.\n"
          },
          "404": {
            "description": "The product ID does not exist.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get Product Reviews",
        "tags": [
          "Product Reviews",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Product Review*.\n\n**Required Fields**\n- title\n- date_reviewed\n\n**Read-Only Fields**\n* id",
        "operationId": "createProductReview",
        "parameters": [
          {
            "name": "productReview",
            "in": "body",
            "required": true,
            "schema": {
              "description": "The model for a POST to create a product review.\n",
              "allOf": [
                {
                  "type": "object",
                  "title": "Product Review Base",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title for the product review.\nRequired in /POST.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "text": {
                      "type": "string",
                      "description": "The text for the product review.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                    },
                    "rating": {
                      "type": "integer",
                      "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the reviewer. Must be a valid email, or an empty string."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the reviewer.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "date_reviewed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the product was reviewed. Required in /POST.\n"
                    }
                  },
                  "required": [
                    "title",
                    "date_reviewed"
                  ]
                }
              ],
              "type": "object",
              "title": "Product Review Post"
            },
            "x-examples": {
              "application/json": {
                "title": "Great Product",
                "text": "This product is amazing!!!",
                "status": "approved",
                "rating": 5,
                "email": "janedoe@email.com",
                "name": "Jane Doe",
                "date_reviewed": "2018-05-07T19:37:13+00:00"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A product review model.\n",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Product Review Base",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title for the product review.\nRequired in /POST.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "text": {
                          "type": "string",
                          "description": "The text for the product review.\n"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                        },
                        "rating": {
                          "type": "integer",
                          "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                        },
                        "email": {
                          "type": "string",
                          "description": "The email of the reviewer. Must be a valid email, or an empty string."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the reviewer.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "date_reviewed": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product was reviewed. Required in /POST.\n"
                        }
                      },
                      "required": [
                        "title",
                        "date_reviewed"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the product review; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the review is associated.\n",
                          "type": "integer"
                        },
                        "date_created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product review was created.\n"
                        },
                        "date_modified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product review was modified.\n"
                        }
                      }
                    }
                  ],
                  "title": "Product Review"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Review Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "title": "irur",
                  "text": "anim aute",
                  "status": "Lorem ad sed voluptate",
                  "rating": -39218623,
                  "email": "esse Lorem laborum aute",
                  "name": "ut in ",
                  "date_reviewed": "2011-12-31T13:40:42.971Z",
                  "id": 82495037,
                  "product_id": 22609026,
                  "date_created": "1985-01-17T07:37:20.439Z",
                  "date_modified": "2004-09-28T14:38:21.973Z"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The product ID does not exist.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Create a Product Review",
        "tags": [
          "Product Reviews",
          "Catalog"
        ]
      }
    },
    "/catalog/products/{product_id}/reviews/{review_id}": {
      "parameters": [
        {
          "name": "product_id",
          "in": "path",
          "description": "The ID of the `Product` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "review_id",
          "description": "The ID of the `review` that is being operated on.\n",
          "required": true,
          "in": "path",
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Product Review*. Optional parameters maybe passed in.",
        "operationId": "getProductReviewById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A product review model.\n",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Product Review Base",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title for the product review.\nRequired in /POST.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "text": {
                          "type": "string",
                          "description": "The text for the product review.\n"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                        },
                        "rating": {
                          "type": "integer",
                          "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                        },
                        "email": {
                          "type": "string",
                          "description": "The email of the reviewer. Must be a valid email, or an empty string."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the reviewer.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "date_reviewed": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product was reviewed. Required in /POST.\n"
                        }
                      },
                      "required": [
                        "title",
                        "date_reviewed"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the product review; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the review is associated.\n",
                          "type": "integer"
                        },
                        "date_created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product review was created.\n"
                        },
                        "date_modified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product review was modified.\n"
                        }
                      }
                    }
                  ],
                  "title": "Product Review"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Review Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "title": "irur",
                  "text": "anim aute",
                  "status": "Lorem ad sed voluptate",
                  "rating": -39218623,
                  "email": "esse Lorem laborum aute",
                  "name": "ut in ",
                  "date_reviewed": "2011-12-31T13:40:42.971Z",
                  "id": 82495037,
                  "product_id": 22609026,
                  "date_created": "1985-01-17T07:37:20.439Z",
                  "date_modified": "2004-09-28T14:38:21.973Z"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Product Review",
        "tags": [
          "Product Reviews",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Product Review*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n* id",
        "operationId": "updateProductReview",
        "parameters": [
          {
            "name": "productReview",
            "in": "body",
            "required": true,
            "description": "A BigCommerce `ProductReview` object.\n",
            "schema": {
              "type": "object",
              "description": "The model for a PUT to update a product review.\n",
              "allOf": [
                {
                  "type": "object",
                  "title": "Product Review Base",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title for the product review.\nRequired in /POST.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "text": {
                      "type": "string",
                      "description": "The text for the product review.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                    },
                    "rating": {
                      "type": "integer",
                      "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the reviewer. Must be a valid email, or an empty string."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the reviewer.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "date_reviewed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the product was reviewed. Required in /POST.\n"
                    }
                  },
                  "required": [
                    "title",
                    "date_reviewed"
                  ]
                }
              ],
              "title": "Product Review Put"
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Response payload for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "A product review model.\n",
                  "allOf": [
                    {
                      "type": "object",
                      "title": "Product Review Base",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title for the product review.\nRequired in /POST.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "text": {
                          "type": "string",
                          "description": "The text for the product review.\n"
                        },
                        "status": {
                          "type": "string",
                          "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                        },
                        "rating": {
                          "type": "integer",
                          "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                        },
                        "email": {
                          "type": "string",
                          "description": "The email of the reviewer. Must be a valid email, or an empty string."
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the reviewer.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "date_reviewed": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product was reviewed. Required in /POST.\n"
                        }
                      },
                      "required": [
                        "title",
                        "date_reviewed"
                      ]
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the product review; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the review is associated.\n",
                          "type": "integer"
                        },
                        "date_created": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product review was created.\n"
                        },
                        "date_modified": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the product review was modified.\n"
                        }
                      }
                    }
                  ],
                  "title": "Product Review"
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Product Review Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "title": "irur",
                  "text": "anim aute",
                  "status": "Lorem ad sed voluptate",
                  "rating": -39218623,
                  "email": "esse Lorem laborum aute",
                  "name": "ut in ",
                  "date_reviewed": "2011-12-31T13:40:42.971Z",
                  "id": 82495037,
                  "product_id": 22609026,
                  "date_created": "1985-01-17T07:37:20.439Z",
                  "date_modified": "2004-09-28T14:38:21.973Z"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update a Product Review",
        "tags": [
          "Product Reviews",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Product Review*.",
        "operationId": "deleteProductReview",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Product Review",
        "tags": [
          "Product Reviews",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/categories": {
      "get": {
        "description": "Returns a list of *Cateogories*. Optional filter parameters can be passed in.",
        "operationId": "getCategories",
        "parameters": [
          {
            "name": "name",
            "description": "Filter items by name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "parent_id",
            "description": "Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. ",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "page_title",
            "description": "Filter items by page_title.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "keyword",
            "description": "Filter items by keywords. eg. new, towel, bath",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "is_visible",
            "description": "Filter items by if visible on the storefront. ",
            "required": false,
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "query",
            "name": "categories",
            "type": "string",
            "description": "To ensure that your request will retrieve products that are also cross-listed in additional categories beyond the categories you've specified, use the syntax: `categories:in=`"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Category Base",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the category; increments sequentially."
                },
                "parent_id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in /POST if creating a child category.",
                  "x-required": [
                    "post"
                  ],
                  "example": 2
                },
                "name": {
                  "type": "string",
                  "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in /POST.",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 50,
                  "example": "Bath"
                },
                "description": {
                  "type": "string",
                  "description": "The product description, which can include HTML formatting.\n",
                  "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
                },
                "views": {
                  "type": "integer",
                  "description": "Number of views the category has on the storefront.\n",
                  "example": 1050
                },
                "sort_order": {
                  "type": "integer",
                  "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "example": 3
                },
                "page_title": {
                  "type": "string",
                  "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Bath"
                },
                "search_keywords": {
                  "type": "string",
                  "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
                  "minLength": 0,
                  "maxLength": 65535
                },
                "meta_keywords": {
                  "type": "array",
                  "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
                  "items": {
                    "type": "string"
                  }
                },
                "meta_description": {
                  "type": "string",
                  "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
                  "minLength": 0,
                  "maxLength": 65535
                },
                "layout_file": {
                  "type": "string",
                  "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
                  "minLength": 0,
                  "maxLength": 500,
                  "example": "category.html"
                },
                "is_visible": {
                  "type": "boolean",
                  "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
                },
                "default_product_sort": {
                  "type": "string",
                  "description": "Determines how the products are sorted on category page load.\n",
                  "enum": [
                    "use_store_settings",
                    "featured",
                    "newest",
                    "best_selling",
                    "alpha_asc",
                    "alpha_desc",
                    "avg_customer_review",
                    "price_asc",
                    "price_desc"
                  ]
                },
                "image_url": {
                  "type": "string",
                  "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
                  "x-url": true,
                  "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                },
                "custom_url": {
                  "type": "object",
                  "description": "The custom URL for the category on the storefront.",
                  "title": "Custom Url Category",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Category URL on the storefront.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "x-url": true,
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "/shoes"
                    },
                    "is_customized": {
                      "type": "boolean",
                      "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                      "x-required": [
                        "post",
                        "put"
                      ]
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 19,
                    "parent_id": 0,
                    "name": "Garden",
                    "description": "<p>This is the garden description</p>",
                    "views": 0,
                    "sort_order": 2,
                    "page_title": "page title",
                    "meta_keywords": [
                      "meta keyword"
                    ],
                    "meta_description": "meta description",
                    "layout_file": "category.html",
                    "image_url": "",
                    "is_visible": true,
                    "search_keywords": "search keywords",
                    "default_product_sort": "use_store_settings",
                    "custom_url": {
                      "url": "/garden/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 20,
                    "parent_id": 0,
                    "name": "Publications",
                    "description": "",
                    "views": 0,
                    "sort_order": 4,
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "layout_file": "category_with_facets.html",
                    "image_url": "",
                    "is_visible": true,
                    "search_keywords": "",
                    "default_product_sort": "use_store_settings",
                    "custom_url": {
                      "url": "/publications/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 21,
                    "parent_id": 0,
                    "name": "Kitchen",
                    "description": "",
                    "views": 0,
                    "sort_order": 3,
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "layout_file": "category_with_facets.html",
                    "image_url": "",
                    "is_visible": true,
                    "search_keywords": "",
                    "default_product_sort": "use_store_settings",
                    "custom_url": {
                      "url": "/kitchen/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 22,
                    "parent_id": 0,
                    "name": "Utility",
                    "description": "",
                    "views": 0,
                    "sort_order": 5,
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "layout_file": "category_with_facets.html",
                    "image_url": "",
                    "is_visible": true,
                    "search_keywords": "",
                    "default_product_sort": "use_store_settings",
                    "custom_url": {
                      "url": "/utility/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 23,
                    "parent_id": 0,
                    "name": "Shop All",
                    "description": "",
                    "views": 0,
                    "sort_order": 0,
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "layout_file": "category_with_facets.html",
                    "image_url": "",
                    "is_visible": true,
                    "search_keywords": "",
                    "default_product_sort": "use_store_settings",
                    "custom_url": {
                      "url": "/shop-all/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 39,
                    "parent_id": 19,
                    "name": "Bath",
                    "description": "",
                    "views": 0,
                    "sort_order": 0,
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "layout_file": "category.html",
                    "image_url": "",
                    "is_visible": true,
                    "search_keywords": "",
                    "default_product_sort": "use_store_settings",
                    "custom_url": {
                      "url": "/garden/bath/",
                      "is_customized": false
                    }
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 6,
                    "count": 6,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Categories",
        "tags": [
          "Category",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Category*.\n\n**Required Fields**:\n- parent_id: \n\t- Creating a child category set the parent_id to the parent category\n\t- If create a top level category set the parent_id to 0.\n- name\n\n**Read-Only Fields**:\n- id",
        "operationId": "createCategory",
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common Category object properties.",
              "title": "Category",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Category*. Increments sequentially.\nRead-Only. "
                },
                "parent_id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in a POST if creating a child category.",
                  "x-required": [
                    "post"
                  ],
                  "example": 2
                },
                "name": {
                  "type": "string",
                  "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in a POST.",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 50,
                  "example": "Bath"
                },
                "description": {
                  "type": "string",
                  "description": "The product description, which can include HTML formatting.\n",
                  "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
                },
                "views": {
                  "type": "integer",
                  "description": "Number of views the category has on the storefront.\n",
                  "example": 1050
                },
                "sort_order": {
                  "type": "integer",
                  "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "example": 3
                },
                "page_title": {
                  "type": "string",
                  "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Bath"
                },
                "search_keywords": {
                  "type": "string",
                  "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "meta_keywords": {
                  "type": "array",
                  "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
                  "items": {
                    "type": "string"
                  }
                },
                "meta_description": {
                  "type": "string",
                  "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
                  "minLength": 0,
                  "maxLength": 65535
                },
                "layout_file": {
                  "type": "string",
                  "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
                  "minLength": 0,
                  "maxLength": 500,
                  "example": "category.html"
                },
                "is_visible": {
                  "type": "boolean",
                  "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
                },
                "default_product_sort": {
                  "type": "string",
                  "description": "Determines how the products are sorted on category page load.\n",
                  "enum": [
                    "use_store_settings",
                    "featured",
                    "newest",
                    "best_selling",
                    "alpha_asc",
                    "alpha_desc",
                    "avg_customer_review",
                    "price_asc",
                    "price_desc"
                  ]
                },
                "image_url": {
                  "type": "string",
                  "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
                  "x-url": true,
                  "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                },
                "custom_url": {
                  "type": "object",
                  "description": "The custom URL for the category on the storefront.",
                  "title": "Custom Url Category",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Category URL on the storefront.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "x-url": true,
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "/shoes"
                    },
                    "is_customized": {
                      "type": "boolean",
                      "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                      "x-required": [
                        "post",
                        "put"
                      ]
                    }
                  }
                }
              },
              "required": [
                "parent_id",
                "name"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Bath",
                "description": "<p>We offer a wide variety of products perfect for relaxing</p>",
                "views": 1050,
                "sort_order": 3,
                "meta_keywords": [],
                "layout_file": "category.html",
                "is_visible": true,
                "default_product_sort": "use_store_settings",
                "image_url": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png",
                "custom_url": {
                  "url": "/bath/",
                  "is_customized": false
                }
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Category object properties.",
                  "title": "Category",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Category*. Increments sequentially.\nRead-Only. "
                    },
                    "parent_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in a POST if creating a child category.",
                      "x-required": [
                        "post"
                      ],
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in a POST.",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 50,
                      "example": "Bath"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product description, which can include HTML formatting.\n",
                      "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
                    },
                    "views": {
                      "type": "integer",
                      "description": "Number of views the category has on the storefront.\n",
                      "example": 1050
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "example": 3
                    },
                    "page_title": {
                      "type": "string",
                      "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Bath"
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "layout_file": {
                      "type": "string",
                      "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
                      "minLength": 0,
                      "maxLength": 500,
                      "example": "category.html"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
                    },
                    "default_product_sort": {
                      "type": "string",
                      "description": "Determines how the products are sorted on category page load.\n",
                      "enum": [
                        "use_store_settings",
                        "featured",
                        "newest",
                        "best_selling",
                        "alpha_asc",
                        "alpha_desc",
                        "avg_customer_review",
                        "price_asc",
                        "price_desc"
                      ]
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
                      "x-url": true,
                      "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the category on the storefront.",
                      "title": "Custom Url Category",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Category URL on the storefront.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "x-url": true,
                          "minLength": 0,
                          "maxLength": 255,
                          "example": "/shoes"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                          "x-required": [
                            "post",
                            "put"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "parent_id",
                    "name"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Category Response"
            }
          },
          "409": {
            "description": "The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Category",
        "tags": [
          "Category",
          "Catalog"
        ]
      },
      "delete": {
        "description": "By default, it deletes all *Category* objects. A filter should be added to avoid deleting all *Category* objects in a store.\n\nDeleting the category will also delete all products in that category. If you want to keep the products, best practice is to move the products to a new category before deleting. ",
        "operationId": "deleteCategories",
        "parameters": [
          {
            "name": "name",
            "description": "Filter items by name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "parent_id",
            "description": "Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. ",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "page_title",
            "description": "Filter items by page_title.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "keyword",
            "description": "Filter items by keywords. eg. new, towel, bath",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "is_visible",
            "description": "Filter items by if visible on the storefront. ",
            "required": false,
            "in": "query",
            "type": "boolean"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete Categories",
        "tags": [
          "Category",
          "Catalog"
        ]
      }
    },
    "/catalog/categories/{category_id}": {
      "parameters": [
        {
          "name": "category_id",
          "in": "path",
          "description": "The ID of the `Category` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Category*. Optional parameters can be passed in.",
        "operationId": "getCategoryById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Category object properties.",
                  "title": "Category",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Category*. Increments sequentially.\nRead-Only. "
                    },
                    "parent_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in a POST if creating a child category.",
                      "x-required": [
                        "post"
                      ],
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in a POST.",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 50,
                      "example": "Bath"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product description, which can include HTML formatting.\n",
                      "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
                    },
                    "views": {
                      "type": "integer",
                      "description": "Number of views the category has on the storefront.\n",
                      "example": 1050
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "example": 3
                    },
                    "page_title": {
                      "type": "string",
                      "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Bath"
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "layout_file": {
                      "type": "string",
                      "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
                      "minLength": 0,
                      "maxLength": 500,
                      "example": "category.html"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
                    },
                    "default_product_sort": {
                      "type": "string",
                      "description": "Determines how the products are sorted on category page load.\n",
                      "enum": [
                        "use_store_settings",
                        "featured",
                        "newest",
                        "best_selling",
                        "alpha_asc",
                        "alpha_desc",
                        "avg_customer_review",
                        "price_asc",
                        "price_desc"
                      ]
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
                      "x-url": true,
                      "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the category on the storefront.",
                      "title": "Custom Url Category",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Category URL on the storefront.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "x-url": true,
                          "minLength": 0,
                          "maxLength": 255,
                          "example": "/shoes"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                          "x-required": [
                            "post",
                            "put"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "parent_id",
                    "name"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Category Response"
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Category",
        "tags": [
          "Category",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Category*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n- id",
        "operationId": "updateCategory",
        "parameters": [
          {
            "name": "category",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common Category object properties.",
              "title": "Category",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Category*. Increments sequentially.\nRead-Only. "
                },
                "parent_id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in a POST if creating a child category.",
                  "x-required": [
                    "post"
                  ],
                  "example": 2
                },
                "name": {
                  "type": "string",
                  "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in a POST.",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 50,
                  "example": "Bath"
                },
                "description": {
                  "type": "string",
                  "description": "The product description, which can include HTML formatting.\n",
                  "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
                },
                "views": {
                  "type": "integer",
                  "description": "Number of views the category has on the storefront.\n",
                  "example": 1050
                },
                "sort_order": {
                  "type": "integer",
                  "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "example": 3
                },
                "page_title": {
                  "type": "string",
                  "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Bath"
                },
                "search_keywords": {
                  "type": "string",
                  "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "meta_keywords": {
                  "type": "array",
                  "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
                  "items": {
                    "type": "string"
                  }
                },
                "meta_description": {
                  "type": "string",
                  "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
                  "minLength": 0,
                  "maxLength": 65535
                },
                "layout_file": {
                  "type": "string",
                  "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
                  "minLength": 0,
                  "maxLength": 500,
                  "example": "category.html"
                },
                "is_visible": {
                  "type": "boolean",
                  "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
                },
                "default_product_sort": {
                  "type": "string",
                  "description": "Determines how the products are sorted on category page load.\n",
                  "enum": [
                    "use_store_settings",
                    "featured",
                    "newest",
                    "best_selling",
                    "alpha_asc",
                    "alpha_desc",
                    "avg_customer_review",
                    "price_asc",
                    "price_desc"
                  ]
                },
                "image_url": {
                  "type": "string",
                  "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
                  "x-url": true,
                  "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                },
                "custom_url": {
                  "type": "object",
                  "description": "The custom URL for the category on the storefront.",
                  "title": "Custom Url Category",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Category URL on the storefront.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "x-url": true,
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "/shoes"
                    },
                    "is_customized": {
                      "type": "boolean",
                      "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                      "x-required": [
                        "post",
                        "put"
                      ]
                    }
                  }
                }
              },
              "required": [
                "parent_id",
                "name"
              ]
            },
            "x-examples": {
              "application/json": {
                "description": "<h1>Browse our full collection</h1>"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Category object properties.",
                  "title": "Category",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Category*. Increments sequentially.\nRead-Only. "
                    },
                    "parent_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in a POST if creating a child category.",
                      "x-required": [
                        "post"
                      ],
                      "example": 2
                    },
                    "name": {
                      "type": "string",
                      "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in a POST.",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 50,
                      "example": "Bath"
                    },
                    "description": {
                      "type": "string",
                      "description": "The product description, which can include HTML formatting.\n",
                      "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
                    },
                    "views": {
                      "type": "integer",
                      "description": "Number of views the category has on the storefront.\n",
                      "example": 1050
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "example": 3
                    },
                    "page_title": {
                      "type": "string",
                      "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Bath"
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
                      "minLength": 0,
                      "maxLength": 65535
                    },
                    "layout_file": {
                      "type": "string",
                      "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
                      "minLength": 0,
                      "maxLength": 500,
                      "example": "category.html"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
                    },
                    "default_product_sort": {
                      "type": "string",
                      "description": "Determines how the products are sorted on category page load.\n",
                      "enum": [
                        "use_store_settings",
                        "featured",
                        "newest",
                        "best_selling",
                        "alpha_asc",
                        "alpha_desc",
                        "avg_customer_review",
                        "price_asc",
                        "price_desc"
                      ]
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
                      "x-url": true,
                      "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the category on the storefront.",
                      "title": "Custom Url Category",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Category URL on the storefront.\n",
                          "x-required": [
                            "post",
                            "put"
                          ],
                          "x-url": true,
                          "minLength": 0,
                          "maxLength": 255,
                          "example": "/shoes"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                          "x-required": [
                            "post",
                            "put"
                          ]
                        }
                      }
                    }
                  },
                  "required": [
                    "parent_id",
                    "name"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Category Response"
            }
          },
          "404": {
            "description": "The resource was not found.",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "409": {
            "description": "The `Category` was in conflict with another category. This is the result of duplicate unique values, such as `name` or `custom_url`.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Category` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Category",
        "tags": [
          "Category",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Category*.",
        "operationId": "deleteCategoryById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Category",
        "tags": [
          "Category",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/categories/{category_id}/metafields": {
      "parameters": [
        {
          "name": "category_id",
          "in": "path",
          "description": "The ID of the `Category` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of *Metafields* on a *Category*. Optional filter parameters can be passed in.",
        "operationId": "getCategoryMetafieldsByCategoryId",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter based on a metafield's key.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Filter based on a metafield's namespace.",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Meta Field Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common Metafield properties.",
                    "title": "Metafield",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique ID of the *Metafield*. Read-Only.",
                        "example": 6
                      },
                      "permission_set": {
                        "type": "string",
                        "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                        "enum": [
                          "app_only",
                          "read",
                          "write"
                        ],
                        "x-required": [
                          "post"
                        ]
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Warehouse Locations"
                      },
                      "key": {
                        "type": "string",
                        "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Location"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 65535,
                        "example": "4HG"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description for the metafields.\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "Location in the warehouse"
                      },
                      "resource_type": {
                        "type": "string",
                        "description": "The type of resource with which the metafield is associated.\n",
                        "enum": [
                          "category",
                          "brand",
                          "product",
                          "variant"
                        ],
                        "x-required": [
                          "post"
                        ],
                        "example": "product"
                      },
                      "resource_id": {
                        "type": "integer",
                        "description": "The ID for the resource with which the metafield is associated.\n",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "maximum": 10000000000,
                        "example": 111
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of the metafield's creation. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the metafield was last updated. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      }
                    },
                    "required": [
                      "permission_set",
                      "namespace",
                      "key",
                      "value"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "read",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 3,
                    "count": 3,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get All Category Metafields",
        "tags": [
          "Category Metafields",
          "Category",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Cateory Metafield*.\n\n**Required Fields:**\n- permission_set\n- namespace\n- key\n- value\n\n**Read-Only Fields**\n- id",
        "operationId": "createCategoryMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common Metafield properties.",
              "title": "Metafield",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Metafield*. Read-Only.",
                  "example": 6
                },
                "permission_set": {
                  "type": "string",
                  "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                  "enum": [
                    "app_only",
                    "read",
                    "write"
                  ],
                  "x-required": [
                    "post"
                  ]
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Warehouse Locations"
                },
                "key": {
                  "type": "string",
                  "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Location"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 65535,
                  "example": "4HG"
                },
                "description": {
                  "type": "string",
                  "description": "Description for the metafields.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Location in the warehouse"
                },
                "resource_type": {
                  "type": "string",
                  "description": "The type of resource with which the metafield is associated.\n",
                  "enum": [
                    "category",
                    "brand",
                    "product",
                    "variant"
                  ],
                  "x-required": [
                    "post"
                  ],
                  "example": "product"
                },
                "resource_id": {
                  "type": "integer",
                  "description": "The ID for the resource with which the metafield is associated.\n",
                  "x-required": [
                    "post"
                  ],
                  "minimum": 0,
                  "maximum": 10000000000,
                  "example": 111
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time of the metafield's creation. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the metafield was last updated. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                }
              },
              "required": [
                "permission_set",
                "namespace",
                "key",
                "value"
              ]
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "App Namespace",
                "key": "location_id",
                "value": "Shelf 3, Bin 5",
                "description": "Where products are located",
                "resource_type": "category",
                "resource_id": 111
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate, unique key combinations of the app's client id, namespace, key, resource_type, and resource_id.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Category Metafield",
        "tags": [
          "Category Metafields",
          "Category",
          "Catalog"
        ]
      }
    },
    "/catalog/categories/{category_id}/metafields/{metafield_id}": {
      "parameters": [
        {
          "name": "metafield_id",
          "in": "path",
          "description": "The ID of the `Metafield`.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "category_id",
          "in": "path",
          "description": "The ID of the `Category` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Category Metafield*. Optional parameters can be passed in.",
        "operationId": "getCategoryMetafieldByCategoryId",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Category Metafield",
        "tags": [
          "Category Metafields",
          "Category",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Category Metafield*.\n\n**Required Fields**\n* none\n\n**Read-Only Fields**\n- id",
        "operationId": "updateCategoryMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common Metafield properties.",
              "title": "Metafield",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Metafield*. Read-Only.",
                  "example": 6
                },
                "permission_set": {
                  "type": "string",
                  "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                  "enum": [
                    "app_only",
                    "read",
                    "write"
                  ],
                  "x-required": [
                    "post"
                  ]
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Warehouse Locations"
                },
                "key": {
                  "type": "string",
                  "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Location"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 65535,
                  "example": "4HG"
                },
                "description": {
                  "type": "string",
                  "description": "Description for the metafields.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Location in the warehouse"
                },
                "resource_type": {
                  "type": "string",
                  "description": "The type of resource with which the metafield is associated.\n",
                  "enum": [
                    "category",
                    "brand",
                    "product",
                    "variant"
                  ],
                  "x-required": [
                    "post"
                  ],
                  "example": "product"
                },
                "resource_id": {
                  "type": "integer",
                  "description": "The ID for the resource with which the metafield is associated.\n",
                  "x-required": [
                    "post"
                  ],
                  "minimum": 0,
                  "maximum": 10000000000,
                  "example": 111
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time of the metafield's creation. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the metafield was last updated. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                }
              },
              "required": [
                "permission_set",
                "namespace",
                "key",
                "value"
              ]
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "Warehouse SKUS",
                "key": "Location",
                "value": "4H",
                "description": "Location in the warehouse",
                "resource_type": "category",
                "resource_id": 111
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update a Category Metafield",
        "tags": [
          "Category Metafields",
          "Category",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Category Metafield*.",
        "operationId": "deleteCategoryMetafieldById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Category Metafield",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Category Metafields",
          "Category",
          "Catalog"
        ]
      }
    },
    "/catalog/categories/{category_id}/image": {
      "parameters": [
        {
          "name": "category_id",
          "in": "path",
          "description": "The ID of the `Category` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "formData",
            "name": "image_file",
            "type": "file"
          }
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Create a *Category Image*.\n\n **Required Fields**\n- image_file: Form posts are the only accepted upload option.\n\nOnly one image at a time can be created. \nLimit image size to 1MB.  \nTo update a *Category Image*, use the [PUT Categories](/api-reference/catalog/catalog-api/category/updatecategory) and an `image_url`. ",
        "operationId": "createCategoryImage",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "image_url": {
                      "type": "string"
                    }
                  }
                },
                "meta": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "image_url": "https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "422": {
            "description": "Image was not valid. This is the result of a missing `image_file` field or an incorrect file type. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Category Image",
        "tags": [
          "Category Images",
          "Category",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Cateogory Image*.",
        "operationId": "deleteCategoryImage",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Category Image",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Category Images",
          "Category",
          "Catalog"
        ]
      }
    },
    "/catalog/categories/tree": {
      "get": {
        "description": "Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.",
        "operationId": "getCategoryTree",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.\n",
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Used to reflect parent <> child category relationships. Used by Category Tree.",
                    "title": "Category Node",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the category; increments sequentially.\n",
                        "example": 26
                      },
                      "parent_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\n",
                        "example": 25
                      },
                      "name": {
                        "type": "string",
                        "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\n",
                        "example": "Bath"
                      },
                      "is_visible": {
                        "type": "boolean",
                        "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n",
                        "example": true
                      },
                      "url": {
                        "type": "string",
                        "description": "The custom URL for the category on the storefront.\n",
                        "example": "/towels/bath-towels/"
                      },
                      "children": {
                        "type": "array",
                        "description": "The list of children of the category.\n",
                        "items": {
                          "type": "object",
                          "description": "Used to reflect parent <> child category relationships. Used by Category Tree.",
                          "title": "Category Node",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the category; increments sequentially.\n",
                              "example": 26
                            },
                            "parent_id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\n",
                              "example": 25
                            },
                            "name": {
                              "type": "string",
                              "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\n",
                              "example": "Bath"
                            },
                            "is_visible": {
                              "type": "boolean",
                              "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n",
                              "example": true
                            },
                            "url": {
                              "type": "string",
                              "description": "The custom URL for the category on the storefront.\n",
                              "example": "/towels/bath-towels/"
                            },
                            "children": {
                              "type": "array",
                              "description": "The list of children of the category.\n",
                              "items": {
                                "$ref": "#/definitions/CategoryNode"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Category Tree Collection Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 23,
                    "parent_id": 0,
                    "name": "Shop All",
                    "is_visible": true,
                    "url": "/shop-all/",
                    "children": []
                  },
                  {
                    "id": 19,
                    "parent_id": 0,
                    "name": "Garden",
                    "is_visible": true,
                    "url": "/garden/",
                    "children": [
                      {
                        "id": 39,
                        "parent_id": 19,
                        "name": "Bath",
                        "is_visible": true,
                        "url": "/garden/bath/",
                        "children": []
                      }
                    ]
                  },
                  {
                    "id": 21,
                    "parent_id": 0,
                    "name": "Kitchen",
                    "is_visible": true,
                    "url": "/kitchen/",
                    "children": []
                  },
                  {
                    "id": 20,
                    "parent_id": 0,
                    "name": "Publications",
                    "is_visible": true,
                    "url": "/publications/",
                    "children": []
                  },
                  {
                    "id": 22,
                    "parent_id": 0,
                    "name": "Utility",
                    "is_visible": true,
                    "url": "/utility/",
                    "children": []
                  }
                ],
                "meta": {}
              }
            }
          }
        },
        "summary": "Get Category Tree",
        "tags": [
          "Category",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/brands": {
      "get": {
        "description": "Returns a list of *Brands*. Optional filter parameters can be passed in.",
        "operationId": "getBrands",
        "parameters": [
          {
            "name": "name",
            "description": "Filter items by name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "page_title",
            "description": "Filter items by page_title.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Brand Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common Brand properties.",
                    "title": "Brand",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique ID of the *Brand*. Read-Only."
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the brand. Must be unique.\nRequired in POST.",
                        "x-required": [
                          "post",
                          "put"
                        ],
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "Common Good"
                      },
                      "page_title": {
                        "type": "string",
                        "description": "The title shown in the browser while viewing the brand.\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "Common Good"
                      },
                      "meta_keywords": {
                        "type": "array",
                        "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                        "example": "modern, clean, contemporary",
                        "items": {
                          "type": "string"
                        }
                      },
                      "meta_description": {
                        "type": "string",
                        "description": "A meta description to include.\n",
                        "minLength": 0,
                        "maxLength": 65535,
                        "example": "Common Good is a modern brand."
                      },
                      "search_keywords": {
                        "type": "string",
                        "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                        "minLength": 0,
                        "maxLength": 65535,
                        "example": "kitchen, laundry, cart, storage"
                      },
                      "image_url": {
                        "type": "string",
                        "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                        "x-url": true,
                        "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
                      },
                      "custom_url": {
                        "type": "object",
                        "description": "The custom URL for the brand on the storefront.",
                        "title": "Custom Url Brand",
                        "properties": {
                          "url": {
                            "type": "string",
                            "description": "Brand URL on the storefront.\n",
                            "x-url": true,
                            "example": "/shoes"
                          },
                          "is_customized": {
                            "type": "boolean",
                            "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                            "example": true
                          }
                        }
                      }
                    },
                    "required": [
                      "name"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 35,
                    "name": "Sagaform",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/brands/Sagaform.html",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 36,
                    "name": "OFS",
                    "page_title": "OFS",
                    "meta_keywords": [
                      "modern",
                      " clean",
                      " contemporary"
                    ],
                    "meta_description": "OFS is a modern brand.",
                    "image_url": "",
                    "search_keywords": "kitchen, laundry, cart, storage",
                    "custom_url": {
                      "url": "/brands/OFS.html",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 37,
                    "name": "Common Good",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/k/screen%20shot%202018-05-07%20at%2012.24.24%20pm_1525785365__65102.png",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/brands/Common-Good.html",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 38,
                    "name": "BigCommerce",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/bigcommerce/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 39,
                    "name": "Test Brand One",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/q/apihqggzm__53766.jpg",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/test-brand-one/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 40,
                    "name": "Fog Linen Work",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/fog-linen-work/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 41,
                    "name": "Barr-Co.",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/barr-co/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 42,
                    "name": "Thames & Hudson",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/thames-hudson/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 43,
                    "name": "Able Brewing",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/able-brewing/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 44,
                    "name": "Chemex",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/chemex/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 45,
                    "name": "Kinfolk",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/kinfolk/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 46,
                    "name": "Iris Hantverk",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/iris-hantverk/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 47,
                    "name": "Gather Journal",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/gather-journal/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 48,
                    "name": "Openhouse Magazine",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/openhouse-magazine/",
                      "is_customized": false
                    }
                  },
                  {
                    "id": 49,
                    "name": "Smith Journal",
                    "page_title": "",
                    "meta_keywords": [
                      ""
                    ],
                    "meta_description": {},
                    "image_url": "",
                    "search_keywords": "",
                    "custom_url": {
                      "url": "/smith-journal/",
                      "is_customized": false
                    }
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 15,
                    "count": 15,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Get All Brands",
        "tags": [
          "Brands",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Brand*.\n\n**Required Fields**\n- name\n\n**Read-Only Fields**\n- id",
        "operationId": "createBrand",
        "parameters": [
          {
            "name": "Brand",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common Brand properties.",
              "title": "Brand",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Brand*. Read-Only."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the brand. Must be unique.\nRequired in POST.",
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "Common Good"
                },
                "page_title": {
                  "type": "string",
                  "description": "The title shown in the browser while viewing the brand.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Common Good"
                },
                "meta_keywords": {
                  "type": "array",
                  "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                  "example": "modern, clean, contemporary",
                  "items": {
                    "type": "string"
                  }
                },
                "meta_description": {
                  "type": "string",
                  "description": "A meta description to include.\n",
                  "minLength": 0,
                  "maxLength": 65535,
                  "example": "Common Good is a modern brand."
                },
                "search_keywords": {
                  "type": "string",
                  "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                  "minLength": 0,
                  "maxLength": 65535,
                  "example": "kitchen, laundry, cart, storage"
                },
                "image_url": {
                  "type": "string",
                  "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                  "x-url": true,
                  "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
                },
                "custom_url": {
                  "type": "object",
                  "description": "The custom URL for the brand on the storefront.",
                  "title": "Custom Url Brand",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Brand URL on the storefront.\n",
                      "x-url": true,
                      "example": "/shoes"
                    },
                    "is_customized": {
                      "type": "boolean",
                      "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                      "example": true
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Common Good",
                "meta_keywords": [],
                "image_url": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png",
                "custom_url": {
                  "url": "/brands/Common-Good.html"
                }
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Brand Response returns for:\n* Create Brand\n* Get Brand by Id\n* Update Brand by Id",
              "type": "object",
              "title": "Brand Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Brand properties.",
                  "title": "Brand",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Brand*. Read-Only."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the brand. Must be unique.\nRequired in POST.",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Common Good"
                    },
                    "page_title": {
                      "type": "string",
                      "description": "The title shown in the browser while viewing the brand.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Common Good"
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                      "example": "modern, clean, contemporary",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "A meta description to include.\n",
                      "minLength": 0,
                      "maxLength": 65535,
                      "example": "Common Good is a modern brand."
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                      "minLength": 0,
                      "maxLength": 65535,
                      "example": "kitchen, laundry, cart, storage"
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                      "x-url": true,
                      "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the brand on the storefront.",
                      "title": "Custom Url Brand",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Brand URL on the storefront.\n",
                          "x-url": true,
                          "example": "/shoes"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                          "example": true
                        }
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 50,
                  "name": "Common Good",
                  "meta_keywords": [
                    "modern, clean, contemporary"
                  ],
                  "meta_description": "Common Good is a modern brand",
                  "image_url": "",
                  "search_keywords": "kitchen, laundry, cart, storage",
                  "custom_url": {
                    "url": "/brands/Common-Good.html",
                    "is_customized": false
                  }
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "Brand was in conflict with another brand. This is the result of duplicate unique fields such as name.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "Brand was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Brand",
        "tags": [
          "Brands",
          "Catalog"
        ]
      },
      "delete": {
        "description": "By default, it deletes all *Brand* objects. A filter should be added to avoid deleting all *Brand* objects in a store.",
        "operationId": "deleteBrands",
        "parameters": [
          {
            "name": "name",
            "description": "Filter items by name.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "page_title",
            "description": "Filter items by page_title.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "Brands",
          "Catalog"
        ],
        "summary": "Delete Brands"
      }
    },
    "/catalog/brands/{brand_id}": {
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "description": "The ID of the `Brand` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a single *Brand*. Optional filter parameters can be passed in.",
        "operationId": "getBrandById",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Brand Response returns for:\n* Create Brand\n* Get Brand by Id\n* Update Brand by Id",
              "type": "object",
              "title": "Brand Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Brand properties.",
                  "title": "Brand",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Brand*. Read-Only."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the brand. Must be unique.\nRequired in POST.",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Common Good"
                    },
                    "page_title": {
                      "type": "string",
                      "description": "The title shown in the browser while viewing the brand.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Common Good"
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                      "example": "modern, clean, contemporary",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "A meta description to include.\n",
                      "minLength": 0,
                      "maxLength": 65535,
                      "example": "Common Good is a modern brand."
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                      "minLength": 0,
                      "maxLength": 65535,
                      "example": "kitchen, laundry, cart, storage"
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                      "x-url": true,
                      "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the brand on the storefront.",
                      "title": "Custom Url Brand",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Brand URL on the storefront.\n",
                          "x-url": true,
                          "example": "/shoes"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                          "example": true
                        }
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 50,
                  "name": "Common Good",
                  "meta_keywords": [
                    "modern, clean, contemporary"
                  ],
                  "meta_description": "Common Good is a modern brand",
                  "image_url": "",
                  "search_keywords": "kitchen, laundry, cart, storage",
                  "custom_url": {
                    "url": "/brands/Common-Good.html",
                    "is_customized": false
                  }
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Brand",
        "tags": [
          "Brands",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Brand*.\n\n**Required Fields**\n- None\n\n**Read-Only Fields**\n- id\n\nTo update a *Brand Image*, send a request with an `image_url`.",
        "operationId": "updateBrand",
        "parameters": [
          {
            "name": "brand",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common Brand properties.",
              "title": "Brand",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Brand*. Read-Only."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the brand. Must be unique.\nRequired in POST.",
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "Common Good"
                },
                "page_title": {
                  "type": "string",
                  "description": "The title shown in the browser while viewing the brand.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Common Good"
                },
                "meta_keywords": {
                  "type": "array",
                  "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                  "example": "modern, clean, contemporary",
                  "items": {
                    "type": "string"
                  }
                },
                "meta_description": {
                  "type": "string",
                  "description": "A meta description to include.\n",
                  "minLength": 0,
                  "maxLength": 65535,
                  "example": "Common Good is a modern brand."
                },
                "search_keywords": {
                  "type": "string",
                  "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                  "minLength": 0,
                  "maxLength": 65535,
                  "example": "kitchen, laundry, cart, storage"
                },
                "image_url": {
                  "type": "string",
                  "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                  "x-url": true,
                  "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
                },
                "custom_url": {
                  "type": "object",
                  "description": "The custom URL for the brand on the storefront.",
                  "title": "Custom Url Brand",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Brand URL on the storefront.\n",
                      "x-url": true,
                      "example": "/shoes"
                    },
                    "is_customized": {
                      "type": "boolean",
                      "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                      "example": true
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Common Good",
                "meta_keywords": [
                  "modern, clean, contemporary"
                ],
                "search_keywords": "kitchen, laundry, cart, storage",
                "image_url": "\"https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
              },
              "application/json 2": {
                "name": "Common Good"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "description": "Brand Response returns for:\n* Create Brand\n* Get Brand by Id\n* Update Brand by Id",
              "type": "object",
              "title": "Brand Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Brand properties.",
                  "title": "Brand",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Brand*. Read-Only."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the brand. Must be unique.\nRequired in POST.",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Common Good"
                    },
                    "page_title": {
                      "type": "string",
                      "description": "The title shown in the browser while viewing the brand.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Common Good"
                    },
                    "meta_keywords": {
                      "type": "array",
                      "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                      "example": "modern, clean, contemporary",
                      "items": {
                        "type": "string"
                      }
                    },
                    "meta_description": {
                      "type": "string",
                      "description": "A meta description to include.\n",
                      "minLength": 0,
                      "maxLength": 65535,
                      "example": "Common Good is a modern brand."
                    },
                    "search_keywords": {
                      "type": "string",
                      "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                      "minLength": 0,
                      "maxLength": 65535,
                      "example": "kitchen, laundry, cart, storage"
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                      "x-url": true,
                      "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
                    },
                    "custom_url": {
                      "type": "object",
                      "description": "The custom URL for the brand on the storefront.",
                      "title": "Custom Url Brand",
                      "properties": {
                        "url": {
                          "type": "string",
                          "description": "Brand URL on the storefront.\n",
                          "x-url": true,
                          "example": "/shoes"
                        },
                        "is_customized": {
                          "type": "boolean",
                          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                          "example": true
                        }
                      }
                    }
                  },
                  "required": [
                    "name"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 50,
                  "name": "Common Good",
                  "meta_keywords": [
                    "modern, clean, contemporary"
                  ],
                  "meta_description": "Common Good is a modern brand",
                  "image_url": "",
                  "search_keywords": "kitchen, laundry, cart, storage",
                  "custom_url": {
                    "url": "/brands/Common-Good.html",
                    "is_customized": false
                  }
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "409": {
            "description": "The `Brand` was in conflict with another product. This is the result of duplicate unique values, such as `name`.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Brand` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Update a Brand",
        "tags": [
          "Brands",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Brand*.",
        "operationId": "deleteBrandById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Brand",
        "tags": [
          "Brands",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/brands/{brand_id}/metafields": {
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "description": "The ID of the `Brand` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a list of *Brand Metafields*. Optional filter parameters can be passed in. ",
        "operationId": "getBrandMetafieldsByBrandId",
        "parameters": [
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "key",
            "in": "query",
            "description": "Filter based on a metafield's key.\n",
            "required": false,
            "type": "string"
          },
          {
            "name": "namespace",
            "in": "query",
            "description": "Filter based on a metafield's namespace.",
            "required": false,
            "type": "string"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Meta Field Collection Response",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common Metafield properties.",
                    "title": "Metafield",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique ID of the *Metafield*. Read-Only.",
                        "example": 6
                      },
                      "permission_set": {
                        "type": "string",
                        "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                        "enum": [
                          "app_only",
                          "read",
                          "write"
                        ],
                        "x-required": [
                          "post"
                        ]
                      },
                      "namespace": {
                        "type": "string",
                        "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Warehouse Locations"
                      },
                      "key": {
                        "type": "string",
                        "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 64,
                        "example": "Location"
                      },
                      "value": {
                        "type": "string",
                        "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 65535,
                        "example": "4HG"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description for the metafields.\n",
                        "minLength": 0,
                        "maxLength": 255,
                        "example": "Location in the warehouse"
                      },
                      "resource_type": {
                        "type": "string",
                        "description": "The type of resource with which the metafield is associated.\n",
                        "enum": [
                          "category",
                          "brand",
                          "product",
                          "variant"
                        ],
                        "x-required": [
                          "post"
                        ],
                        "example": "product"
                      },
                      "resource_id": {
                        "type": "integer",
                        "description": "The ID for the resource with which the metafield is associated.\n",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "maximum": 10000000000,
                        "example": 111
                      },
                      "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time of the metafield's creation. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      },
                      "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Date and time when the metafield was last updated. Read-Only.\n",
                        "example": "2018-05-07T20:14:17+00:00"
                      }
                    },
                    "required": [
                      "permission_set",
                      "namespace",
                      "key",
                      "value"
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "read",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  },
                  {
                    "permission_set": "app_only",
                    "namespace": "Warehouse Locations",
                    "key": "Location",
                    "value": "4HG",
                    "description": "Location in the warehouse",
                    "resource_type": "brand",
                    "resource_id": 111,
                    "id": 6,
                    "created_at": "1973-01-20T21:34:57.903Z",
                    "updated_at": "1990-12-30T00:29:23.515Z"
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 3,
                    "count": 3,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get All Brand Metafields",
        "tags": [
          "Brand Metafields",
          "Brands",
          "Catalog"
        ]
      },
      "post": {
        "description": "Creates a *Brand Metafield*.\n\n**Required Fields**\n- permission_set\n- namespace\n- key\n- value\n\n**Read-Only Fields**\n- id",
        "operationId": "createBrandMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                }
              ],
              "title": "Metafield Post"
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "App Namespace",
                "key": "location_id",
                "value": "Shelf 3, Bin 5",
                "description": "Product Location",
                "resource_type": "brand"
              }
            }
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "409": {
            "description": "The `Metafield` was in conflict with another `Metafield`. This can be the result of duplicate unique key combination of the app's client id, namespace, key, resource_type, and resource_id.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          },
          "422": {
            "description": "The `Metafield` was not valid. This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            }
          }
        },
        "summary": "Create a Brand Metafield",
        "tags": [
          "Brand Metafields",
          "Brands",
          "Catalog"
        ]
      }
    },
    "/catalog/brands/{brand_id}/metafields/{metafield_id}": {
      "parameters": [
        {
          "name": "metafield_id",
          "in": "path",
          "description": "The ID of the `Metafield`.\n",
          "required": true,
          "type": "integer"
        },
        {
          "name": "brand_id",
          "in": "path",
          "description": "The ID of the `Brand` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "description": "Returns a *Brand Metafield*. Optional filter parameters can be passed in.",
        "operationId": "getBrandMetafieldByBrandId",
        "parameters": [
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get a Brand Metafields",
        "tags": [
          "Brand Metafields",
          "Brands",
          "Catalog"
        ]
      },
      "put": {
        "description": "Updates a *Brand Metafield*.\n\n**Required Fields**  \n* none\n\n**Read-Only Fields**\n- id",
        "operationId": "updateBrandMetafield",
        "parameters": [
          {
            "name": "Metafield",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Common Metafield properties.",
              "title": "Metafield",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Metafield*. Read-Only.",
                  "example": 6
                },
                "permission_set": {
                  "type": "string",
                  "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                  "enum": [
                    "app_only",
                    "read",
                    "write"
                  ],
                  "x-required": [
                    "post"
                  ]
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Warehouse Locations"
                },
                "key": {
                  "type": "string",
                  "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Location"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 65535,
                  "example": "4HG"
                },
                "description": {
                  "type": "string",
                  "description": "Description for the metafields.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Location in the warehouse"
                },
                "resource_type": {
                  "type": "string",
                  "description": "The type of resource with which the metafield is associated.\n",
                  "enum": [
                    "category",
                    "brand",
                    "product",
                    "variant"
                  ],
                  "x-required": [
                    "post"
                  ],
                  "example": "product"
                },
                "resource_id": {
                  "type": "integer",
                  "description": "The ID for the resource with which the metafield is associated.\n",
                  "x-required": [
                    "post"
                  ],
                  "minimum": 0,
                  "maximum": 10000000000,
                  "example": 111
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time of the metafield's creation. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the metafield was last updated. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                }
              },
              "required": [
                "permission_set",
                "namespace",
                "key",
                "value"
              ]
            },
            "x-examples": {
              "application/json": {
                "permission_set": "app_only",
                "namespace": "Warehouse SKUS",
                "key": "Location",
                "value": "4H",
                "description": "Location in the warehouse",
                "resource_type": "brand"
              }
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "title": "Metafield Response",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Common Metafield properties.",
                  "title": "Metafield",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Metafield*. Read-Only.",
                      "example": 6
                    },
                    "permission_set": {
                      "type": "string",
                      "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                      "enum": [
                        "app_only",
                        "read",
                        "write"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "namespace": {
                      "type": "string",
                      "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Warehouse Locations"
                    },
                    "key": {
                      "type": "string",
                      "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 64,
                      "example": "Location"
                    },
                    "value": {
                      "type": "string",
                      "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 65535,
                      "example": "4HG"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description for the metafields.\n",
                      "minLength": 0,
                      "maxLength": 255,
                      "example": "Location in the warehouse"
                    },
                    "resource_type": {
                      "type": "string",
                      "description": "The type of resource with which the metafield is associated.\n",
                      "enum": [
                        "category",
                        "brand",
                        "product",
                        "variant"
                      ],
                      "x-required": [
                        "post"
                      ],
                      "example": "product"
                    },
                    "resource_id": {
                      "type": "integer",
                      "description": "The ID for the resource with which the metafield is associated.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "maximum": 10000000000,
                      "example": 111
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time of the metafield's creation. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date and time when the metafield was last updated. Read-Only.\n",
                      "example": "2018-05-07T20:14:17+00:00"
                    }
                  },
                  "required": [
                    "permission_set",
                    "namespace",
                    "key",
                    "value"
                  ]
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "id": 8,
                  "key": "location_id",
                  "value": "Shelf 3, Bin 5",
                  "namespace": "Inventory Namespace",
                  "permission_set": "read",
                  "resource_type": "product",
                  "resource_id": 158,
                  "description": "Where products are located",
                  "date_created": "2018-09-13T16:42:37+00:00",
                  "date_modified": "2018-09-13T16:42:37+00:00"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Update a Brand Metafield",
        "tags": [
          "Brand Metafields",
          "Brands",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Brand Metafield*.",
        "operationId": "deleteBrandMetafieldById",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Brand Metafield",
        "tags": [
          "Brand Metafields",
          "Brands",
          "Catalog"
        ],
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ]
      }
    },
    "/catalog/brands/{brand_id}/image": {
      "parameters": [
        {
          "name": "brand_id",
          "in": "path",
          "description": "The ID of the `Brand` to which the resource belongs.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "post": {
        "description": "Creates a *Brand Image*. \n\n**Required Fields**\n- image_file: Form posts are the only accepted upload option.\n\n**Read-Only Fields**\n- id\n\nOnly one image at a time can be created. To update a *Brand Image*, use the [PUT Brands](/api-reference/catalog/catalog-api/brands/updatebrand) and an `image_url`. ",
        "operationId": "createBrandImage",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "formData",
            "name": "image_file",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "properties": {
                    "image_url": {
                      "type": "string"
                    }
                  }
                },
                "meta": {
                  "type": "object"
                }
              }
            },
            "examples": {
              "application/json": {
                "data": {
                  "image_url": "https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png"
                },
                "meta": {}
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          },
          "422": {
            "description": "Image was not valid. This is the result of a missing `image_file` field, or of an incorrect file type. See the response for more details.",
            "schema": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Error payload for the BigCommerce API.\n",
                  "properties": {
                    "status": {
                      "description": "The HTTP status code.\n",
                      "type": "integer"
                    },
                    "title": {
                      "description": "The error title describing the particular error.\n",
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "instance": {
                      "type": "string"
                    }
                  },
                  "title": "Base Error"
                },
                {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "object",
                      "title": "Detailed Errors",
                      "properties": {
                        "additionalProperties": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              ],
              "title": "Error Response"
            },
            "examples": {}
          }
        },
        "summary": "Create a Brand Image",
        "consumes": [
          "multipart/form-data"
        ],
        "tags": [
          "Brand Images",
          "Brands",
          "Catalog"
        ]
      },
      "delete": {
        "description": "Deletes a *Brand Image*.",
        "operationId": "deleteBrandImage",
        "responses": {
          "204": {
            "description": ""
          }
        },
        "summary": "Delete a Brand Image",
        "parameters": [
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          }
        ],
        "tags": [
          "Brand Images",
          "Brands",
          "Catalog"
        ]
      }
    },
    "/catalog/variants": {
      "get": {
        "description": "Returns a list of all variants in your catalog. Optional parameters can be passed in.",
        "operationId": "getVariants",
        "parameters": [
          {
            "name": "id",
            "description": "Filter items by id.\n",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "sku",
            "description": "Filter items by sku.\n",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "description": "Specifies the page number in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "description": "Controls the number of items per page in a limited (paginated) list of products.",
            "required": false,
            "in": "query",
            "type": "integer"
          },
          {
            "name": "include_fields",
            "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "name": "exclude_fields",
            "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
            "required": false,
            "in": "query",
            "type": "string"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "name": "product_id",
            "in": "query",
            "type": "string",
            "description": "A comma-separated list of ids of Products whose prices were requested. For example:\n`?product_id=:id`\n`?product_id:in=77,80,81`"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Variant properties.",
                        "title": "Variant Base",
                        "properties": {
                          "cost_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost price of the variant. Not affected by Price List prices.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "sale_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "retail_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "weight": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "width": {
                            "type": "number",
                            "format": "double",
                            "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "height": {
                            "type": "number",
                            "format": "double",
                            "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "depth": {
                            "type": "number",
                            "format": "double",
                            "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "is_free_shipping": {
                            "type": "boolean",
                            "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                          },
                          "fixed_cost_shipping_price": {
                            "type": "number",
                            "format": "double",
                            "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "purchasing_disabled": {
                            "type": "boolean",
                            "description": "If `true`, this variant will not be purchasable on the storefront."
                          },
                          "purchasing_disabled_message": {
                            "type": "string",
                            "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "upc": {
                            "type": "string",
                            "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                            "x-nullable": true
                          },
                          "inventory_level": {
                            "type": "integer",
                            "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                            "x-nullable": true
                          },
                          "inventory_warning_level": {
                            "type": "integer",
                            "description": "When the variant hits this inventory level, it is considered low stock.",
                            "x-nullable": true
                          },
                          "bin_picking_number": {
                            "type": "string",
                            "description": "Identifies where in a warehouse the variant is located.",
                            "x-nullable": true,
                            "minLength": 0,
                            "maxLength": 255
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "product_id": {
                            "type": "integer"
                          },
                          "sku": {
                            "type": "string"
                          },
                          "sku_id": {
                            "type": "integer",
                            "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                            "x-nullable": true
                          },
                          "option_values": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "description": "Common Option Value Product properties.",
                                  "title": "Option Value Product Base",
                                  "properties": {
                                    "option_display_name": {
                                      "type": "string",
                                      "description": "The name of the option.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Color"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label of the option value.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Beige"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "option_id": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              ],
                              "title": "Option Value Variant"
                            },
                            "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                          },
                          "calculated_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                          }
                        }
                      }
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Variant Collection Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 364,
                    "product_id": 184,
                    "sku": "SMA-RED",
                    "sku_id": 330,
                    "price": 15.99,
                    "calculated_price": 15.99,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": 15,
                    "calculated_weight": 15,
                    "width": 4,
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 497,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 177,
                        "label": "Small",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 180,
                        "label": "Red",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 365,
                    "product_id": 184,
                    "sku": "MED-RED",
                    "sku_id": 331,
                    "price": 555,
                    "calculated_price": 555,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 500,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 178,
                        "label": "Medium",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 180,
                        "label": "Red",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 366,
                    "product_id": 184,
                    "sku": "LAR-RED",
                    "sku_id": 332,
                    "price": {},
                    "calculated_price": 253.99,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 500,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 179,
                        "label": "Large",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 180,
                        "label": "Red",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 367,
                    "product_id": 184,
                    "sku": "SMA-GRE",
                    "sku_id": 333,
                    "price": {},
                    "calculated_price": 249,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 177,
                        "label": "Small",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 181,
                        "label": "Green",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 368,
                    "product_id": 184,
                    "sku": "MED-GRE",
                    "sku_id": 334,
                    "price": {},
                    "calculated_price": 249,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 178,
                        "label": "Medium",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 181,
                        "label": "Green",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 369,
                    "product_id": 184,
                    "sku": "LAR-GRE",
                    "sku_id": 335,
                    "price": {},
                    "calculated_price": 253.99,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 179,
                        "label": "Large",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 181,
                        "label": "Green",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 370,
                    "product_id": 184,
                    "sku": "SMA-BLU",
                    "sku_id": 336,
                    "price": {},
                    "calculated_price": 249,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 177,
                        "label": "Small",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 182,
                        "label": "Blue",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 371,
                    "product_id": 184,
                    "sku": "MED-BLU",
                    "sku_id": 337,
                    "price": {},
                    "calculated_price": 249,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 178,
                        "label": "Medium",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 182,
                        "label": "Blue",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 372,
                    "product_id": 184,
                    "sku": "LAR-BLU",
                    "sku_id": 338,
                    "price": {},
                    "calculated_price": 253.99,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 15,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 179,
                        "label": "Large",
                        "option_id": 199,
                        "option_display_name": "Size"
                      },
                      {
                        "id": 182,
                        "label": "Blue",
                        "option_id": 200,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 376,
                    "product_id": 158,
                    "sku": "SKU-A0C8A203",
                    "sku_id": 342,
                    "price": {},
                    "calculated_price": 49.99,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 174,
                        "label": "Beige",
                        "option_id": 207,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 377,
                    "product_id": 158,
                    "sku": "SKU-E628145D",
                    "sku_id": 343,
                    "price": {},
                    "calculated_price": 49.99,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 175,
                        "label": "Grey",
                        "option_id": 207,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 378,
                    "product_id": 158,
                    "sku": "SKU-E898ABC0",
                    "sku_id": 344,
                    "price": {},
                    "calculated_price": 49.99,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 176,
                        "label": "Black",
                        "option_id": 207,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 382,
                    "product_id": 192,
                    "sku": "SMIT",
                    "sku_id": 348,
                    "price": 10,
                    "calculated_price": 10,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 2,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 174,
                        "label": "Beige",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 383,
                    "product_id": 192,
                    "sku": "SMIT-1",
                    "sku_id": 349,
                    "price": {},
                    "calculated_price": 25,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 175,
                        "label": "Grey",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 384,
                    "product_id": 192,
                    "sku": "SMIT-2",
                    "sku_id": 350,
                    "price": {},
                    "calculated_price": 25,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 176,
                        "label": "Black",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 325,
                    "product_id": 157,
                    "sku": "",
                    "sku_id": {},
                    "price": 66,
                    "calculated_price": 66,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/157/images/379/showerwhite3_1024x1024_1024x1024__77046__53871.1534344510.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 330,
                    "product_id": 159,
                    "sku": "",
                    "sku_id": {},
                    "price": 34,
                    "calculated_price": 34,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/159/images/384/BARRhandcream1_1024x1024_1024x1024__91787__18352.1534344511.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 331,
                    "product_id": 160,
                    "sku": "",
                    "sku_id": {},
                    "price": 28,
                    "calculated_price": 28,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/160/images/386/barr_coroomspray_1024x1024__43836__61957.1534344512.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 332,
                    "product_id": 161,
                    "sku": "",
                    "sku_id": {},
                    "price": 109,
                    "calculated_price": 109,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/161/images/387/roundterrariumlarge_1024x1024__12432__22764.1534344513.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 333,
                    "product_id": 162,
                    "sku": "",
                    "sku_id": {},
                    "price": 89,
                    "calculated_price": 89,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/162/images/389/roundterrariumsmall_1024x1024__05749__31860.1534344513.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 3000,
                    "inventory_warning_level": 3,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 334,
                    "product_id": 163,
                    "sku": "",
                    "sku_id": {},
                    "price": 32,
                    "calculated_price": 32,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/163/images/391/twinestand3_1024x1024_1024x1024__17689__50909.1534344514.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 335,
                    "product_id": 164,
                    "sku": "",
                    "sku_id": {},
                    "price": 8,
                    "calculated_price": 8,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/164/images/395/naturaltwine_1024x1024_1024x1024__72720__85337.1534344514.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 336,
                    "product_id": 165,
                    "sku": "",
                    "sku_id": {},
                    "price": 10.95,
                    "calculated_price": 10.95,
                    "sale_price": 0,
                    "retail_price": 15,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/165/images/396/barrsalve1_1024x1024_1024x1024__06826__26118.1534344515.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 337,
                    "product_id": 166,
                    "sku": "",
                    "sku_id": {},
                    "price": 28,
                    "calculated_price": 28,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/166/images/397/livingwithplants_grande__26452__28114.1534344515.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 338,
                    "product_id": 167,
                    "sku": "",
                    "sku_id": {},
                    "price": 225,
                    "calculated_price": 225,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/167/images/398/ablebrewingsystem4_1024x1024__07155__93974.1534344516.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 339,
                    "product_id": 168,
                    "sku": "",
                    "sku_id": {},
                    "price": 55,
                    "calculated_price": 55,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/168/images/402/chemex6cup_1024x1024_1024x1024__84712__11834.1534344517.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 340,
                    "product_id": 169,
                    "sku": "",
                    "sku_id": {},
                    "price": 44.95,
                    "calculated_price": 44.95,
                    "sale_price": 0,
                    "retail_price": 50,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/169/images/406/3cupchemex5_1024x1024__40463__59678.1534344521.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 341,
                    "product_id": 170,
                    "sku": "",
                    "sku_id": {},
                    "price": 25,
                    "calculated_price": 25,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 342,
                    "product_id": 171,
                    "sku": "",
                    "sku_id": {},
                    "price": 70,
                    "calculated_price": 70,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/171/images/414/japanesekettle1_1024x1024_1024x1024__83765__86479.1534344523.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 343,
                    "product_id": 172,
                    "sku": "",
                    "sku_id": {},
                    "price": 48,
                    "calculated_price": 48,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/172/images/419/thekinfolktablecover_1024x1024__80715__29685.1534344525.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 344,
                    "product_id": 173,
                    "sku": "",
                    "sku_id": {},
                    "price": 18,
                    "calculated_price": 18,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/173/images/424/measuringspoons1_1024x1024__22102__55079.1534344525.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 345,
                    "product_id": 174,
                    "sku": "",
                    "sku_id": {},
                    "price": 7.95,
                    "calculated_price": 7.95,
                    "sale_price": 0,
                    "retail_price": 10,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 346,
                    "product_id": 175,
                    "sku": "",
                    "sku_id": {},
                    "price": 35,
                    "calculated_price": 35,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/175/images/428/oakcheesegrater2_1024x1024__03905__19286.1534344527.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 347,
                    "product_id": 176,
                    "sku": "",
                    "sku_id": {},
                    "price": 59,
                    "calculated_price": 59,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/176/images/432/milkandcreamer1_1024x1024__69117__81345.1534344528.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 348,
                    "product_id": 177,
                    "sku": "",
                    "sku_id": {},
                    "price": 7,
                    "calculated_price": 7,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/177/images/434/scrubbrush2_1024x1024_1024x1024__81254__82103.1534344529.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 349,
                    "product_id": 178,
                    "sku": "",
                    "sku_id": {},
                    "price": 120,
                    "calculated_price": 120,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/178/images/436/tieredbasket_1024x1024__81717__38751.1534344530.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 350,
                    "product_id": 179,
                    "sku": "",
                    "sku_id": {},
                    "price": 30,
                    "calculated_price": 30,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/179/images/440/CommonGoodLaundrySoap_1024x1024__31999__28799.1534344531.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 351,
                    "product_id": 180,
                    "sku": "",
                    "sku_id": {},
                    "price": 20,
                    "calculated_price": 20,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/180/images/441/CommonGoodFloorCleaner_grande__73674__83339.1534344531.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 352,
                    "product_id": 181,
                    "sku": "",
                    "sku_id": {},
                    "price": 15,
                    "calculated_price": 15,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/181/images/442/CommonGoodAllPurposeCleaner_d37aa1e8_e16f_4309_bddd_8fae0d94efc7_1024x1024__40180__66527.1534344531.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 353,
                    "product_id": 182,
                    "sku": "",
                    "sku_id": {},
                    "price": 15,
                    "calculated_price": 15,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/182/images/443/CommonGoodHandSoap_1024x1024__94874__52907.1534344532.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 354,
                    "product_id": 183,
                    "sku": "",
                    "sku_id": {},
                    "price": 15,
                    "calculated_price": 15,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/183/images/444/CommonGoodDishSoap_1024x1024__74820__62808.1534344532.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 356,
                    "product_id": 185,
                    "sku": "",
                    "sku_id": {},
                    "price": 46,
                    "calculated_price": 46,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/185/images/449/utilitybucket1_1024x1024__78563__75042.1534344535.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 498,
                    "inventory_warning_level": 3,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 357,
                    "product_id": 186,
                    "sku": "",
                    "sku_id": {},
                    "price": 17,
                    "calculated_price": 17,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/186/images/454/SshapedScrubBrush2_1024x1024__94308__40283.1534344536.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 358,
                    "product_id": 187,
                    "sku": "",
                    "sku_id": {},
                    "price": 26,
                    "calculated_price": 26,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/187/images/458/featherduster_1024x1024__94858__16221.1534344537.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 359,
                    "product_id": 188,
                    "sku": "",
                    "sku_id": {},
                    "price": 31.95,
                    "calculated_price": 31.95,
                    "sale_price": 0,
                    "retail_price": 35,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 360,
                    "product_id": 189,
                    "sku": "",
                    "sku_id": {},
                    "price": 18.95,
                    "calculated_price": 18.95,
                    "sale_price": 0,
                    "retail_price": 22,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/189/images/465/gather_1024x1024__17195__82620.1534344540.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 361,
                    "product_id": 190,
                    "sku": "",
                    "sku_id": {},
                    "price": 23,
                    "calculated_price": 23,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/190/images/470/kinfolkessentialissue_1024x1024__22507__36871.1534344542.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 362,
                    "product_id": 191,
                    "sku": "",
                    "sku_id": {},
                    "price": 27.95,
                    "calculated_price": 27.95,
                    "sale_price": 0,
                    "retail_price": 30,
                    "map_price": 0,
                    "weight": 1,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 1,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.560.850.jpg?c=2",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 385,
                    "product_id": 193,
                    "sku": "",
                    "sku_id": {},
                    "price": 10,
                    "calculated_price": 10,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 4,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 4,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  },
                  {
                    "id": 386,
                    "product_id": 194,
                    "sku": "",
                    "sku_id": {},
                    "price": 11,
                    "calculated_price": 11,
                    "sale_price": 0,
                    "retail_price": 0,
                    "map_price": 0,
                    "weight": 3,
                    "width": 0,
                    "height": 0,
                    "depth": 0,
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": 0,
                    "calculated_weight": 3,
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": []
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 54,
                    "count": 50,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 2,
                    "links": {
                      "next": "?page=2&limit=50",
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The resource was not found.",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get All Variants",
        "tags": [
          "Variants",
          "Catalog"
        ]
      },
      "put": {
        "tags": [
          "Variants",
          "Catalog"
        ],
        "description": "Creates or updates a batch of `Variant` objects. At the time of writing, the current limit is `50` variants. This limit is subject to change.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "The model for a PUT to update variants on a product.\n",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Common Variant properties.",
                    "title": "Variant Base",
                    "properties": {
                      "cost_price": {
                        "type": "number",
                        "format": "double",
                        "description": "The cost price of the variant. Not affected by Price List prices.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "sale_price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "retail_price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "weight": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "width": {
                        "type": "number",
                        "format": "double",
                        "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "height": {
                        "type": "number",
                        "format": "double",
                        "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "depth": {
                        "type": "number",
                        "format": "double",
                        "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "is_free_shipping": {
                        "type": "boolean",
                        "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                      },
                      "fixed_cost_shipping_price": {
                        "type": "number",
                        "format": "double",
                        "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "purchasing_disabled": {
                        "type": "boolean",
                        "description": "If `true`, this variant will not be purchasable on the storefront."
                      },
                      "purchasing_disabled_message": {
                        "type": "string",
                        "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "upc": {
                        "type": "string",
                        "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                        "x-nullable": true
                      },
                      "inventory_level": {
                        "type": "integer",
                        "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                        "x-nullable": true
                      },
                      "inventory_warning_level": {
                        "type": "integer",
                        "description": "When the variant hits this inventory level, it is considered low stock.",
                        "x-nullable": true
                      },
                      "bin_picking_number": {
                        "type": "string",
                        "description": "Identifies where in a warehouse the variant is located.",
                        "x-nullable": true,
                        "minLength": 0,
                        "maxLength": 255
                      }
                    }
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "x-required": [
                          "put"
                        ]
                      }
                    }
                  }
                ],
                "title": "Variant Put"
              },
              "title": "Variants Collection Put"
            },
            "x-examples": {
              "application/json": [
                {
                  "cost_price": 63599689.8928447,
                  "price": 41229029.881314784,
                  "sale_price": 2863532.325876994,
                  "retail_price": 78557760.73687708,
                  "weight": 8233430.509392225,
                  "width": 15522592.332765006,
                  "height": 67324763.42158969,
                  "depth": 95721544.44945797,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 27475846.30904605,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "laboris",
                  "upc": "ut incididunt nisi nulla",
                  "inventory_level": 71919981,
                  "inventory_warning_level": -47386573,
                  "bin_picking_number": "ea ven",
                  "id": -21224868
                },
                {
                  "cost_price": 2629705.704322216,
                  "price": 98510349.99683635,
                  "sale_price": 86311554.0111681,
                  "retail_price": 80176776.82051563,
                  "weight": 67915970.1146769,
                  "width": 39904655.82216873,
                  "height": 62133295.61420449,
                  "depth": 17627039.49503679,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 87783178.96985069,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "in ",
                  "upc": "voluptate ut",
                  "inventory_level": 21835258,
                  "inventory_warning_level": 31973844,
                  "bin_picking_number": "ea aliquip",
                  "id": 82334636
                },
                {
                  "cost_price": 34987255.40589398,
                  "price": 18898472.864651006,
                  "sale_price": 58821861.73017028,
                  "retail_price": 54871256.51357499,
                  "weight": 26234733.81498107,
                  "width": 89161836.81170118,
                  "height": 92564678.7011854,
                  "depth": 85987982.92678806,
                  "is_free_shipping": true,
                  "fixed_cost_shipping_price": 45450525.0069474,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "Excepte",
                  "upc": "culpa labore nostrud sint",
                  "inventory_level": 88530708,
                  "inventory_warning_level": 91163552,
                  "bin_picking_number": "i",
                  "id": 94818628
                },
                {
                  "cost_price": 95722845.97861576,
                  "price": 12323637.506454844,
                  "sale_price": 94958927.09508549,
                  "retail_price": 47544524.73431809,
                  "weight": 62776019.18067384,
                  "width": 23627233.58684149,
                  "height": 97088483.19481897,
                  "depth": 42447563.60366368,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 86184803.65546553,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "ea non",
                  "upc": "occaecat Excepteur anim sed quis",
                  "inventory_level": -41022541,
                  "inventory_warning_level": 9815248,
                  "bin_picking_number": "ex l",
                  "id": -26057570
                },
                {
                  "cost_price": 1092294.7381004633,
                  "price": 98648346.4623603,
                  "sale_price": 96277076.89170715,
                  "retail_price": 70225721.54583451,
                  "weight": 98657479.29540771,
                  "width": 18700928.746040057,
                  "height": 88948727.21077323,
                  "depth": 96471368.82757257,
                  "is_free_shipping": true,
                  "fixed_cost_shipping_price": 22116843.374772042,
                  "purchasing_disabled": true,
                  "purchasing_disabled_message": "de",
                  "upc": "mollit cillum id ",
                  "inventory_level": -26047787,
                  "inventory_warning_level": 8118284,
                  "bin_picking_number": "commodo c",
                  "id": -28043109
                }
              ]
            }
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Variant properties.",
                        "title": "Variant Base",
                        "properties": {
                          "cost_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost price of the variant. Not affected by Price List prices.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "sale_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "retail_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "weight": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "width": {
                            "type": "number",
                            "format": "double",
                            "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "height": {
                            "type": "number",
                            "format": "double",
                            "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "depth": {
                            "type": "number",
                            "format": "double",
                            "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "is_free_shipping": {
                            "type": "boolean",
                            "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                          },
                          "fixed_cost_shipping_price": {
                            "type": "number",
                            "format": "double",
                            "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "purchasing_disabled": {
                            "type": "boolean",
                            "description": "If `true`, this variant will not be purchasable on the storefront."
                          },
                          "purchasing_disabled_message": {
                            "type": "string",
                            "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "upc": {
                            "type": "string",
                            "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                            "x-nullable": true
                          },
                          "inventory_level": {
                            "type": "integer",
                            "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                            "x-nullable": true
                          },
                          "inventory_warning_level": {
                            "type": "integer",
                            "description": "When the variant hits this inventory level, it is considered low stock.",
                            "x-nullable": true
                          },
                          "bin_picking_number": {
                            "type": "string",
                            "description": "Identifies where in a warehouse the variant is located.",
                            "x-nullable": true,
                            "minLength": 0,
                            "maxLength": 255
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "product_id": {
                            "type": "integer"
                          },
                          "sku": {
                            "type": "string"
                          },
                          "sku_id": {
                            "type": "integer",
                            "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                            "x-nullable": true
                          },
                          "option_values": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "description": "Common Option Value Product properties.",
                                  "title": "Option Value Product Base",
                                  "properties": {
                                    "option_display_name": {
                                      "type": "string",
                                      "description": "The name of the option.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Color"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label of the option value.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Beige"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "option_id": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              ],
                              "title": "Option Value Variant"
                            },
                            "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                          },
                          "calculated_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                          }
                        }
                      }
                    ]
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Variant Collection Response"
            },
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 382,
                    "product_id": 192,
                    "sku": "SMIT",
                    "sku_id": 348,
                    "price": 10,
                    "calculated_price": 10,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 2,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": 0,
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 174,
                        "label": "Beige",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 383,
                    "product_id": 192,
                    "sku": "SMIT-1",
                    "sku_id": 349,
                    "price": {},
                    "calculated_price": 25,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 175,
                        "label": "Grey",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  },
                  {
                    "id": 384,
                    "product_id": 192,
                    "sku": "SMIT-2",
                    "sku_id": 350,
                    "price": {},
                    "calculated_price": 25,
                    "sale_price": {},
                    "retail_price": {},
                    "map_price": {},
                    "weight": {},
                    "calculated_weight": 1,
                    "width": {},
                    "height": {},
                    "depth": {},
                    "is_free_shipping": false,
                    "fixed_cost_shipping_price": {},
                    "purchasing_disabled": false,
                    "purchasing_disabled_message": "",
                    "image_url": "",
                    "cost_price": {},
                    "upc": "",
                    "mpn": "",
                    "gtin": "",
                    "inventory_level": 0,
                    "inventory_warning_level": 0,
                    "bin_picking_number": "",
                    "option_values": [
                      {
                        "id": 176,
                        "label": "Black",
                        "option_id": 220,
                        "option_display_name": "Color"
                      }
                    ]
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 3,
                    "count": 3,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "413": {
            "description": "",
            "examples": {
              "application/json": {
                "errors": {},
                "status": 413,
                "title": "The request payload is too large. The maximum items allowed in the array is 50",
                "type": "https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes"
              }
            }
          },
          "422": {
            "description": "This is the result of missing required fields, or of invalid data. See the response for more details.\n",
            "schema": {
              "description": "Errors during batch usage for the BigCommerce API.\n",
              "type": "object",
              "properties": {
                "batch_errors": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Error payload for the BigCommerce API.\n",
                        "properties": {
                          "status": {
                            "description": "The HTTP status code.\n",
                            "type": "integer"
                          },
                          "title": {
                            "description": "The error title describing the particular error.\n",
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "instance": {
                            "type": "string"
                          }
                        },
                        "title": "Base Error"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "errors": {
                            "type": "object",
                            "title": "Detailed Errors",
                            "properties": {
                              "additionalProperties": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "title": "Error Response"
                  }
                }
              },
              "title": "Variants Batch Error Response"
            }
          }
        },
        "summary": "Update Variants (Batch)",
        "operationId": "updateVariantsBatch",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/catalog/summary": {
      "get": {
        "tags": [
          "Summary"
        ],
        "description": "Returns a lightweight inventory summary from the BigCommerce Catalog.\n\nThe inventory summary includes:\n* \"inventory_count\"\n* \"variant_count\"\n* \"inventory_value\"\n* \"highest_variant_price\"\n* \"average_variant_price\"\n* \"lowest_variant_price\"\n* \"oldest_variant_date\"\n* \"newest_variant_date\"\n* \"primary_category_id\"\n* \"primary_category_name\"",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "object",
                  "description": "Catalog Summary object describes a lightweight summary of the catalog.",
                  "title": "Catalog Summary",
                  "properties": {
                    "inventory_count": {
                      "type": "integer",
                      "description": "A count of all inventory items in the catalog.\n",
                      "example": 2000
                    },
                    "inventory_value": {
                      "type": "number",
                      "format": "double",
                      "description": "Total value of store's inventory.\n",
                      "example": 267000
                    },
                    "primary_category_id": {
                      "type": "integer",
                      "description": "ID of the category containing the most products.\n",
                      "example": 23
                    },
                    "primary_category_name": {
                      "type": "string",
                      "description": "Name of the category containing the most products.\n",
                      "example": "Shop All"
                    },
                    "variant_count": {
                      "type": "integer",
                      "description": "Total number of variants",
                      "example": 46
                    },
                    "highest_variant_price": {
                      "type": "number",
                      "format": "double",
                      "description": "Highest priced variant",
                      "example": 249
                    },
                    "average_variant_price": {
                      "type": "number",
                      "format": "double",
                      "example": 83.07978261,
                      "description": "Average price of all variants"
                    },
                    "lowest_variant_price": {
                      "type": "string",
                      "example": "7",
                      "description": "Lowest priced variant in the store"
                    },
                    "oldest_variant_date": {
                      "type": "string",
                      "example": "2018-08-15"
                    },
                    "newest_variant_date": {
                      "type": "string",
                      "example": "2018-08-16"
                    }
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Empty meta object; may be used later.",
                  "title": "Meta"
                }
              },
              "title": "Catalog Summary Response"
            },
            "examples": {
              "application/json": {
                "data": {
                  "inventory_count": 4995,
                  "variant_count": 54,
                  "inventory_value": 702350.03,
                  "highest_variant_price": 555,
                  "average_variant_price": 74.40055556,
                  "lowest_variant_price": 7,
                  "oldest_variant_date": "2018-08-15",
                  "newest_variant_date": "2018-09-07",
                  "primary_category_id": 23,
                  "primary_category_name": "Shop All"
                },
                "meta": {}
              }
            }
          }
        },
        "summary": "Get a Catalog Summary",
        "parameters": [
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json",
            "required": true
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json",
            "required": true
          }
        ],
        "operationId": "getCatalogSummary"
      }
    }
  },
  "parameters": {
    "FilterTemplateFileParam": {
      "in": "query",
      "name": "template_file",
      "description": "The template file, for example: `pages/home`.",
      "type": "string",
      "required": false
    },
    "FilterIdParam": {
      "name": "id",
      "description": "Filter items by id.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterSkuParam": {
      "name": "sku",
      "description": "Filter items by sku.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterNameParam": {
      "name": "name",
      "description": "Filter items by name.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterEmailParam": {
      "name": "email",
      "description": "Filter items by email.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterSourceParam": {
      "name": "source",
      "description": "Filter items by source.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterOrderIdParam": {
      "name": "order_id",
      "description": "Filter items by order_id.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterUpcParam": {
      "name": "upc",
      "description": "Filter items by upc.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterPriceParam": {
      "name": "price",
      "description": "Filter items by price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterSalePriceParam": {
      "name": "sale_price",
      "description": "Filter items by sale_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterRetailPriceParam": {
      "name": "retail_price",
      "description": "Filter items by retail_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterMapPriceParam": {
      "name": "map_price",
      "description": "Filter items by map_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterCalculatedPriceParam": {
      "name": "calculated_price",
      "description": "Filter items by calculated_price.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterWeightParam": {
      "name": "weight",
      "description": "Filter items by weight.\n",
      "required": false,
      "in": "query",
      "type": "number"
    },
    "FilterConditionParam": {
      "name": "condition",
      "description": "Filter items by condition.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "new",
        "used",
        "refurbished"
      ]
    },
    "FilterBrandIdParam": {
      "name": "brand_id",
      "description": "Filter items by brand_id.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterDateModifiedParam": {
      "name": "date_modified",
      "description": "Filter items by date_modified. For example `v3/catalog/products?date_modified:min=2018-06-15`",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "FilterDateCreatedParam": {
      "name": "date_created",
      "description": "Filter items by date_created.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "FilterDateLastImportedParam": {
      "name": "date_last_imported",
      "description": "Filter items by date_last_imported. For example `v3/catalog/products?date_last_imported:min=2018-06-15`",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "FilterIsVisibleParam": {
      "name": "is_visible",
      "description": "Filter items by if visible on the storefront. ",
      "required": false,
      "in": "query",
      "type": "boolean"
    },
    "FilterIsFeaturedParam": {
      "name": "is_featured",
      "description": "Filter items by is_featured.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterIsFreeShippingParam": {
      "name": "is_free_shipping",
      "description": "Filter items by is_free_shipping.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterInventoryLevelParam": {
      "name": "inventory_level",
      "description": "Filter items by inventory_level.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterInventoryLowParam": {
      "name": "inventory_low",
      "description": "Filter items by inventory_low. Values: 1, 0.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterOutOfStockParam": {
      "name": "out_of_stock",
      "description": "Filter items by out_of_stock. To enable the filter, pass `out_of_stock`=`1`.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterTotalSoldParam": {
      "name": "total_sold",
      "description": "Filter items by total_sold.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "ProductFilterTypeParam": {
      "name": "type",
      "description": "Filter items by type: `physical` or `digital`.",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "digital",
        "physical"
      ]
    },
    "FilterCategoriesParam": {
      "name": "categories",
      "description": "Filter items by categories.\n If a product is in more than one category, using this query will not return the product. Instead use `categories:in=12`.",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterKeywordParam": {
      "name": "keyword",
      "description": "Filter items by keywords. eg. new, towel, bath",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "ProductFilterKeywordParam": {
      "name": "keyword",
      "description": "Filter items by keywords found in the `name`, `description`, or `sku` fields, or in the brand name.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "ProductFilterKeywordContextParam": {
      "name": "keyword_context",
      "description": "Set context for a product search.",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "shopper",
        "merchant"
      ]
    },
    "FilterStatusParam": {
      "name": "status",
      "description": "Filter items by status.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterIncludeParam": {
      "name": "include",
      "description": "Sub-resources to include on a product, in a comma-separated list. If `options` or `modifiers` is used, results are limited to 10 per page.",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "variants",
        "images",
        "custom_fields",
        "bulk_pricing_rules",
        "primary_image",
        "modifiers",
        "options",
        "videos"
      ]
    },
    "FilterIncludeFieldsParam": {
      "name": "include_fields",
      "description": "Fields to include, in a comma-separated list. The ID and the specified fields will be returned.",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterExcludeFieldsParam": {
      "name": "exclude_fields",
      "description": "Fields to exclude, in a comma-separated list. The specified fields will be excluded from a response. The ID cannot be excluded.",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterParentIdParam": {
      "name": "parent_id",
      "description": "Filter items by parent_id. If the category is a child or sub category it can be filtered with the parent_id. ",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterPageTitleParam": {
      "name": "page_title",
      "description": "Filter items by page_title.\n",
      "required": false,
      "in": "query",
      "type": "string"
    },
    "FilterAvailabilityParam": {
      "name": "availability",
      "description": "Filter items by availability. Values are: available, disabled, preorder.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "available",
        "disabled",
        "preorder"
      ]
    },
    "FilterPriceListIdParam": {
      "name": "price_list_id",
      "description": "This filter returns the product pricing with the *Price List* pricing instead. To use: \n`?price_list_id=1`.\nIf there are variants use:\n`?price_list_id=1&include=variants`",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "FilterProductIdParam": {
      "type": "string",
      "name": "product_id",
      "in": "query",
      "required": false,
      "description": "A comma-separated list of ids of `Product`s whose prices were requested.\n"
    },
    "FilterVariantIdParam": {
      "type": "integer",
      "name": "variant_id",
      "in": "query",
      "required": false,
      "description": "The ID of the `Variant` whose prices were requested.\n"
    },
    "FilterCurrencyParam": {
      "name": "currency",
      "description": "Filter items by currency.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "format": "ISO-4217"
    },
    "PageParam": {
      "name": "page",
      "description": "Specifies the page number in a limited (paginated) list of products.",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "LimitParam": {
      "name": "limit",
      "description": "Controls the number of items per page in a limited (paginated) list of products.",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "DirectionParam": {
      "name": "direction",
      "description": "Sort direction. Acceptable values are: `asc`, `desc`.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "asc",
        "desc"
      ]
    },
    "ProductSortParam": {
      "name": "sort",
      "description": "Field name to sort by.\n",
      "required": false,
      "in": "query",
      "type": "string",
      "enum": [
        "id",
        "name",
        "sku",
        "price",
        "date_modified",
        "date_last_imported",
        "inventory_level",
        "is_visible",
        "total_sold"
      ]
    },
    "ProductIdParam": {
      "name": "product_id",
      "in": "path",
      "description": "The ID of the `Product` to which the resource belongs.\n",
      "required": true,
      "type": "integer"
    },
    "ReviewIdParam": {
      "name": "review_id",
      "description": "The ID of the `review` that is being operated on.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ImageIdParam": {
      "name": "image_id",
      "description": "The ID of the `Image` that is being operated on.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "VideoIdParam": {
      "name": "id",
      "description": "The BigCommerce ID of the `Video`",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ComplexRuleIdParam": {
      "name": "complex_rule_id",
      "description": "The ID of the `ComplexRule`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ConfigurableFieldIdParam": {
      "name": "configurable_field_id",
      "description": "The ID of the `ConfigurableField`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "CustomFieldIdParam": {
      "name": "custom_field_id",
      "description": "The ID of the `CustomField`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "BulkPricingRuleIdParam": {
      "name": "bulk_pricing_rule_id",
      "description": "The ID of the `BulkPricingRule`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ModifierIdParam": {
      "name": "modifier_id",
      "description": "The ID of the `Modifier`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "ValueIdParam": {
      "name": "value_id",
      "description": "The ID of the `Modifier/Option Value`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "OptionIdParam": {
      "name": "option_id",
      "description": "The ID of the `Option`.\n",
      "required": true,
      "in": "path",
      "type": "integer"
    },
    "VariantIdParam": {
      "name": "variant_id",
      "in": "path",
      "description": "ID of the variant on a product, or on an associated Price List Record.\n",
      "required": true,
      "type": "integer"
    },
    "CategoryIdParam": {
      "name": "category_id",
      "in": "path",
      "description": "The ID of the `Category` to which the resource belongs.\n",
      "required": true,
      "type": "integer"
    },
    "BrandIdParam": {
      "name": "brand_id",
      "in": "path",
      "description": "The ID of the `Brand` to which the resource belongs.\n",
      "required": true,
      "type": "integer"
    },
    "MetafieldIdParam": {
      "name": "metafield_id",
      "in": "path",
      "description": "The ID of the `Metafield`.\n",
      "required": true,
      "type": "integer"
    },
    "MetafieldKeyParam": {
      "name": "key",
      "in": "query",
      "description": "Filter based on a metafield's key.\n",
      "required": false,
      "type": "string"
    },
    "MetafieldNamespaceParam": {
      "name": "namespace",
      "in": "query",
      "description": "Filter based on a metafield's namespace.",
      "required": false,
      "type": "string"
    },
    "ImageFileParam": {
      "name": "image_file",
      "description": "An image file. Supported MIME types include GIF, JPEG, and PNG.\n",
      "required": true,
      "in": "formData",
      "type": "file"
    },
    "OrderIdParam": {
      "name": "order_id",
      "in": "path",
      "description": "The ID of the `Order` to which the transactions belong.\n",
      "required": true,
      "type": "integer"
    },
    "Accept": {
      "in": "header",
      "type": "string",
      "name": "Accept",
      "default": "application/json",
      "required": true
    },
    "Content-Type": {
      "name": "Content-Type",
      "in": "header",
      "type": "string",
      "default": "application/json",
      "required": true
    },
    "product_id": {
      "name": "product_id",
      "in": "query",
      "type": "string",
      "description": "A comma-separated list of ids of Products whose prices were requested. For example:\n`?product_id=:id`\n`?product_id:in=77,80,81`"
    }
  },
  "definitions": {
    "ModifierBase": {
      "type": "object",
      "description": "Common Modifier properties.",
      "title": "Modifier Base",
      "properties": {
        "type": {
          "type": "string",
          "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
          "enum": [
            "date",
            "checkbox",
            "file",
            "text",
            "multi_line_text",
            "numbers_only_text",
            "radio_buttons",
            "rectangles",
            "dropdown",
            "product_list",
            "product_list_with_images",
            "swatch"
          ],
          "x-required": [
            "post"
          ]
        },
        "required": {
          "type": "boolean",
          "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
          "x-required": [
            "post"
          ]
        },
        "sort_order": {
          "type": "integer",
          "description": "The order the modifiers display on the product detail page."
        },
        "config": {
          "type": "object",
          "title": "Option Config",
          "description": "The values for option config can vary based on the Modifier created.",
          "properties": {
            "default_value": {
              "type": "string",
              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
            },
            "checked_by_default": {
              "type": "boolean",
              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
            },
            "checkbox_label": {
              "type": "string",
              "description": "(checkbox) Label displayed for the checkbox option.\n"
            },
            "date_limited": {
              "type": "boolean",
              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
            },
            "date_limit_mode": {
              "type": "string",
              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
              "enum": [
                "earliest",
                "range",
                "latest"
              ],
              "example": "range"
            },
            "date_earliest_value": {
              "type": "string",
              "format": "date",
              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
              "example": "2018-08-31T05:00:00+00:00"
            },
            "date_latest_value": {
              "type": "string",
              "format": "date",
              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
              "example": "2019-01-01T05:00:00+00:00"
            },
            "file_types_mode": {
              "type": "string",
              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
              "enum": [
                "specific",
                "all"
              ],
              "example": "specific"
            },
            "file_types_supported": {
              "type": "array",
              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
              "example": "images, documents, other",
              "items": {
                "type": "string"
              }
            },
            "file_types_other": {
              "type": "array",
              "description": "(file) A list of other file types allowed with the file upload option.\n",
              "example": "pdf",
              "items": {
                "type": "string"
              }
            },
            "file_max_size": {
              "type": "integer",
              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
              "example": 5
            },
            "text_characters_limited": {
              "type": "boolean",
              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
            },
            "text_min_length": {
              "type": "integer",
              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
              "example": 1
            },
            "text_max_length": {
              "type": "integer",
              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
              "example": 55
            },
            "text_lines_limited": {
              "type": "boolean",
              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
              "example": true
            },
            "text_max_lines": {
              "type": "integer",
              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
              "example": 4
            },
            "number_limited": {
              "type": "boolean",
              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
              "example": true
            },
            "number_limit_mode": {
              "type": "string",
              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
              "enum": [
                "lowest",
                "highest",
                "range"
              ],
              "example": "lowest"
            },
            "number_lowest_value": {
              "type": "number",
              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
              "example": 100
            },
            "number_highest_value": {
              "type": "number",
              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
            },
            "number_integers_only": {
              "type": "boolean",
              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
              "example": false
            },
            "product_list_adjusts_inventory": {
              "type": "boolean",
              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
            },
            "product_list_adjusts_pricing": {
              "type": "boolean",
              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
            },
            "product_list_shipping_calc": {
              "type": "string",
              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
              "enum": [
                "none",
                "weight",
                "package"
              ],
              "example": "weight"
            }
          }
        },
        "option_values": {
          "type": "array",
          "items": {
            "type": "object",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "description": "Common Option Value properties.",
                    "title": "Option Value Base",
                    "properties": {
                      "is_default": {
                        "type": "boolean",
                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                        "example": false
                      },
                      "label": {
                        "type": "string",
                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "example": "Green"
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-required": [
                          "post"
                        ],
                        "example": 0
                      },
                      "value_data": {
                        "type": "object",
                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                      }
                    },
                    "required": [
                      "label",
                      "sort_order"
                    ]
                  },
                  {
                    "properties": {
                      "adjusters": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "object",
                            "title": "Adjuster",
                            "properties": {
                              "adjuster": {
                                "type": "string",
                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "enum": [
                                  "relative",
                                  "percentage"
                                ],
                                "x-nullable": true
                              },
                              "adjuster_value": {
                                "type": "number",
                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "example": 5
                              }
                            },
                            "description": "Adjuster for Complex Rules."
                          },
                          "weight": {
                            "type": "object",
                            "title": "Adjuster",
                            "properties": {
                              "adjuster": {
                                "type": "string",
                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "enum": [
                                  "relative",
                                  "percentage"
                                ],
                                "x-nullable": true
                              },
                              "adjuster_value": {
                                "type": "number",
                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "example": 5
                              }
                            },
                            "description": "Adjuster for Complex Rules."
                          },
                          "image_url": {
                            "type": "string",
                            "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                            "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                          },
                          "purchasing_disabled": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "boolean",
                                "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                              },
                              "message": {
                                "type": "string",
                                "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "title": "Modifier Value Base",
                "type": "object"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                  }
                }
              }
            ],
            "title": "Modifier Value",
            "description": "Part of Modifier Value Response "
          }
        }
      },
      "required": [
        "type",
        "required"
      ]
    },
    "Modifier": {
      "allOf": [
        {
          "type": "object",
          "description": "Common Modifier properties.",
          "title": "Modifier Base",
          "properties": {
            "type": {
              "type": "string",
              "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
              "enum": [
                "date",
                "checkbox",
                "file",
                "text",
                "multi_line_text",
                "numbers_only_text",
                "radio_buttons",
                "rectangles",
                "dropdown",
                "product_list",
                "product_list_with_images",
                "swatch"
              ],
              "x-required": [
                "post"
              ]
            },
            "required": {
              "type": "boolean",
              "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
              "x-required": [
                "post"
              ]
            },
            "sort_order": {
              "type": "integer",
              "description": "The order the modifiers display on the product detail page."
            },
            "config": {
              "type": "object",
              "title": "Option Config",
              "description": "The values for option config can vary based on the Modifier created.",
              "properties": {
                "default_value": {
                  "type": "string",
                  "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                },
                "checked_by_default": {
                  "type": "boolean",
                  "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                },
                "checkbox_label": {
                  "type": "string",
                  "description": "(checkbox) Label displayed for the checkbox option.\n"
                },
                "date_limited": {
                  "type": "boolean",
                  "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                },
                "date_limit_mode": {
                  "type": "string",
                  "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                  "enum": [
                    "earliest",
                    "range",
                    "latest"
                  ],
                  "example": "range"
                },
                "date_earliest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2018-08-31T05:00:00+00:00"
                },
                "date_latest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2019-01-01T05:00:00+00:00"
                },
                "file_types_mode": {
                  "type": "string",
                  "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                  "enum": [
                    "specific",
                    "all"
                  ],
                  "example": "specific"
                },
                "file_types_supported": {
                  "type": "array",
                  "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                  "example": "images, documents, other",
                  "items": {
                    "type": "string"
                  }
                },
                "file_types_other": {
                  "type": "array",
                  "description": "(file) A list of other file types allowed with the file upload option.\n",
                  "example": "pdf",
                  "items": {
                    "type": "string"
                  }
                },
                "file_max_size": {
                  "type": "integer",
                  "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                  "example": 5
                },
                "text_characters_limited": {
                  "type": "boolean",
                  "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                },
                "text_min_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                  "example": 1
                },
                "text_max_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                  "example": 55
                },
                "text_lines_limited": {
                  "type": "boolean",
                  "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                  "example": true
                },
                "text_max_lines": {
                  "type": "integer",
                  "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                  "example": 4
                },
                "number_limited": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                  "example": true
                },
                "number_limit_mode": {
                  "type": "string",
                  "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                  "enum": [
                    "lowest",
                    "highest",
                    "range"
                  ],
                  "example": "lowest"
                },
                "number_lowest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                  "example": 100
                },
                "number_highest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                },
                "number_integers_only": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                  "example": false
                },
                "product_list_adjusts_inventory": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                },
                "product_list_adjusts_pricing": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                },
                "product_list_shipping_calc": {
                  "type": "string",
                  "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                  "enum": [
                    "none",
                    "weight",
                    "package"
                  ],
                  "example": "weight"
                }
              }
            },
            "option_values": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Option Value properties.",
                        "title": "Option Value Base",
                        "properties": {
                          "is_default": {
                            "type": "boolean",
                            "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                            "example": false
                          },
                          "label": {
                            "type": "string",
                            "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "example": "Green"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "x-required": [
                              "post"
                            ],
                            "example": 0
                          },
                          "value_data": {
                            "type": "object",
                            "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                          }
                        },
                        "required": [
                          "label",
                          "sort_order"
                        ]
                      },
                      {
                        "properties": {
                          "adjusters": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "object",
                                "title": "Adjuster",
                                "properties": {
                                  "adjuster": {
                                    "type": "string",
                                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "enum": [
                                      "relative",
                                      "percentage"
                                    ],
                                    "x-nullable": true
                                  },
                                  "adjuster_value": {
                                    "type": "number",
                                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "example": 5
                                  }
                                },
                                "description": "Adjuster for Complex Rules."
                              },
                              "weight": {
                                "type": "object",
                                "title": "Adjuster",
                                "properties": {
                                  "adjuster": {
                                    "type": "string",
                                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "enum": [
                                      "relative",
                                      "percentage"
                                    ],
                                    "x-nullable": true
                                  },
                                  "adjuster_value": {
                                    "type": "number",
                                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "example": 5
                                  }
                                },
                                "description": "Adjuster for Complex Rules."
                              },
                              "image_url": {
                                "type": "string",
                                "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                              },
                              "purchasing_disabled": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "boolean",
                                    "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "title": "Modifier Value Base",
                    "type": "object"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the value; increments sequentially.\n"
                      }
                    }
                  }
                ],
                "title": "Modifier Value",
                "description": "Part of Modifier Value Response "
              }
            }
          },
          "required": [
            "type",
            "required"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the modifier; increments sequentially.\n",
              "example": 12
            },
            "product_id": {
              "type": "integer",
              "description": "The unique numeric ID of the product to which the option belongs.\n",
              "example": 77
            },
            "name": {
              "type": "string",
              "description": "The unique option name. Auto-generated from the display name, a timestamp, and the product ID.\n",
              "example": "Add-a-$5-Donation1535039590-191"
            },
            "display_name": {
              "type": "string",
              "description": "The name of the option shown on the storefront.\n",
              "example": "Donation"
            }
          }
        }
      ],
      "title": "Modifer",
      "description": "Product Modifier",
      "type": "object"
    },
    "ModifierPost": {
      "description": "The model for a POST to create a modifier on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Common Modifier properties.",
          "title": "Modifier Base",
          "properties": {
            "type": {
              "type": "string",
              "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
              "enum": [
                "date",
                "checkbox",
                "file",
                "text",
                "multi_line_text",
                "numbers_only_text",
                "radio_buttons",
                "rectangles",
                "dropdown",
                "product_list",
                "product_list_with_images",
                "swatch"
              ],
              "x-required": [
                "post"
              ]
            },
            "required": {
              "type": "boolean",
              "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
              "x-required": [
                "post"
              ]
            },
            "sort_order": {
              "type": "integer",
              "description": "The order the modifiers display on the product detail page."
            },
            "config": {
              "type": "object",
              "title": "Option Config",
              "description": "The values for option config can vary based on the Modifier created.",
              "properties": {
                "default_value": {
                  "type": "string",
                  "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                },
                "checked_by_default": {
                  "type": "boolean",
                  "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                },
                "checkbox_label": {
                  "type": "string",
                  "description": "(checkbox) Label displayed for the checkbox option.\n"
                },
                "date_limited": {
                  "type": "boolean",
                  "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                },
                "date_limit_mode": {
                  "type": "string",
                  "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                  "enum": [
                    "earliest",
                    "range",
                    "latest"
                  ],
                  "example": "range"
                },
                "date_earliest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2018-08-31T05:00:00+00:00"
                },
                "date_latest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2019-01-01T05:00:00+00:00"
                },
                "file_types_mode": {
                  "type": "string",
                  "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                  "enum": [
                    "specific",
                    "all"
                  ],
                  "example": "specific"
                },
                "file_types_supported": {
                  "type": "array",
                  "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                  "example": "images, documents, other",
                  "items": {
                    "type": "string"
                  }
                },
                "file_types_other": {
                  "type": "array",
                  "description": "(file) A list of other file types allowed with the file upload option.\n",
                  "example": "pdf",
                  "items": {
                    "type": "string"
                  }
                },
                "file_max_size": {
                  "type": "integer",
                  "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                  "example": 5
                },
                "text_characters_limited": {
                  "type": "boolean",
                  "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                },
                "text_min_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                  "example": 1
                },
                "text_max_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                  "example": 55
                },
                "text_lines_limited": {
                  "type": "boolean",
                  "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                  "example": true
                },
                "text_max_lines": {
                  "type": "integer",
                  "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                  "example": 4
                },
                "number_limited": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                  "example": true
                },
                "number_limit_mode": {
                  "type": "string",
                  "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                  "enum": [
                    "lowest",
                    "highest",
                    "range"
                  ],
                  "example": "lowest"
                },
                "number_lowest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                  "example": 100
                },
                "number_highest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                },
                "number_integers_only": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                  "example": false
                },
                "product_list_adjusts_inventory": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                },
                "product_list_adjusts_pricing": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                },
                "product_list_shipping_calc": {
                  "type": "string",
                  "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                  "enum": [
                    "none",
                    "weight",
                    "package"
                  ],
                  "example": "weight"
                }
              }
            },
            "option_values": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Option Value properties.",
                        "title": "Option Value Base",
                        "properties": {
                          "is_default": {
                            "type": "boolean",
                            "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                            "example": false
                          },
                          "label": {
                            "type": "string",
                            "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "example": "Green"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "x-required": [
                              "post"
                            ],
                            "example": 0
                          },
                          "value_data": {
                            "type": "object",
                            "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                          }
                        },
                        "required": [
                          "label",
                          "sort_order"
                        ]
                      },
                      {
                        "properties": {
                          "adjusters": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "object",
                                "title": "Adjuster",
                                "properties": {
                                  "adjuster": {
                                    "type": "string",
                                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "enum": [
                                      "relative",
                                      "percentage"
                                    ],
                                    "x-nullable": true
                                  },
                                  "adjuster_value": {
                                    "type": "number",
                                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "example": 5
                                  }
                                },
                                "description": "Adjuster for Complex Rules."
                              },
                              "weight": {
                                "type": "object",
                                "title": "Adjuster",
                                "properties": {
                                  "adjuster": {
                                    "type": "string",
                                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "enum": [
                                      "relative",
                                      "percentage"
                                    ],
                                    "x-nullable": true
                                  },
                                  "adjuster_value": {
                                    "type": "number",
                                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "example": 5
                                  }
                                },
                                "description": "Adjuster for Complex Rules."
                              },
                              "image_url": {
                                "type": "string",
                                "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                              },
                              "purchasing_disabled": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "boolean",
                                    "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "title": "Modifier Value Base",
                    "type": "object"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the value; increments sequentially.\n"
                      }
                    }
                  }
                ],
                "title": "Modifier Value",
                "description": "Part of Modifier Value Response "
              }
            }
          },
          "required": [
            "type",
            "required"
          ]
        },
        {
          "properties": {
            "display_name": {
              "type": "string",
              "description": "The name of the option shown on the storefront.\n",
              "x-required": [
                "post"
              ],
              "example": "Donation"
            }
          },
          "required": [
            "display_name"
          ]
        }
      ],
      "title": "Modifier Post",
      "type": "object"
    },
    "ModifierPut": {
      "type": "object",
      "description": "The model for a PUT to update a modifier on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Common Modifier properties.",
          "title": "Modifier Base",
          "properties": {
            "type": {
              "type": "string",
              "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
              "enum": [
                "date",
                "checkbox",
                "file",
                "text",
                "multi_line_text",
                "numbers_only_text",
                "radio_buttons",
                "rectangles",
                "dropdown",
                "product_list",
                "product_list_with_images",
                "swatch"
              ],
              "x-required": [
                "post"
              ]
            },
            "required": {
              "type": "boolean",
              "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
              "x-required": [
                "post"
              ]
            },
            "sort_order": {
              "type": "integer",
              "description": "The order the modifiers display on the product detail page."
            },
            "config": {
              "type": "object",
              "title": "Option Config",
              "description": "The values for option config can vary based on the Modifier created.",
              "properties": {
                "default_value": {
                  "type": "string",
                  "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                },
                "checked_by_default": {
                  "type": "boolean",
                  "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                },
                "checkbox_label": {
                  "type": "string",
                  "description": "(checkbox) Label displayed for the checkbox option.\n"
                },
                "date_limited": {
                  "type": "boolean",
                  "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                },
                "date_limit_mode": {
                  "type": "string",
                  "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                  "enum": [
                    "earliest",
                    "range",
                    "latest"
                  ],
                  "example": "range"
                },
                "date_earliest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2018-08-31T05:00:00+00:00"
                },
                "date_latest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2019-01-01T05:00:00+00:00"
                },
                "file_types_mode": {
                  "type": "string",
                  "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                  "enum": [
                    "specific",
                    "all"
                  ],
                  "example": "specific"
                },
                "file_types_supported": {
                  "type": "array",
                  "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                  "example": "images, documents, other",
                  "items": {
                    "type": "string"
                  }
                },
                "file_types_other": {
                  "type": "array",
                  "description": "(file) A list of other file types allowed with the file upload option.\n",
                  "example": "pdf",
                  "items": {
                    "type": "string"
                  }
                },
                "file_max_size": {
                  "type": "integer",
                  "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                  "example": 5
                },
                "text_characters_limited": {
                  "type": "boolean",
                  "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                },
                "text_min_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                  "example": 1
                },
                "text_max_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                  "example": 55
                },
                "text_lines_limited": {
                  "type": "boolean",
                  "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                  "example": true
                },
                "text_max_lines": {
                  "type": "integer",
                  "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                  "example": 4
                },
                "number_limited": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                  "example": true
                },
                "number_limit_mode": {
                  "type": "string",
                  "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                  "enum": [
                    "lowest",
                    "highest",
                    "range"
                  ],
                  "example": "lowest"
                },
                "number_lowest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                  "example": 100
                },
                "number_highest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                },
                "number_integers_only": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                  "example": false
                },
                "product_list_adjusts_inventory": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                },
                "product_list_adjusts_pricing": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                },
                "product_list_shipping_calc": {
                  "type": "string",
                  "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                  "enum": [
                    "none",
                    "weight",
                    "package"
                  ],
                  "example": "weight"
                }
              }
            },
            "option_values": {
              "type": "array",
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Option Value properties.",
                        "title": "Option Value Base",
                        "properties": {
                          "is_default": {
                            "type": "boolean",
                            "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                            "example": false
                          },
                          "label": {
                            "type": "string",
                            "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "example": "Green"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "x-required": [
                              "post"
                            ],
                            "example": 0
                          },
                          "value_data": {
                            "type": "object",
                            "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                          }
                        },
                        "required": [
                          "label",
                          "sort_order"
                        ]
                      },
                      {
                        "properties": {
                          "adjusters": {
                            "type": "object",
                            "properties": {
                              "price": {
                                "type": "object",
                                "title": "Adjuster",
                                "properties": {
                                  "adjuster": {
                                    "type": "string",
                                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "enum": [
                                      "relative",
                                      "percentage"
                                    ],
                                    "x-nullable": true
                                  },
                                  "adjuster_value": {
                                    "type": "number",
                                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "example": 5
                                  }
                                },
                                "description": "Adjuster for Complex Rules."
                              },
                              "weight": {
                                "type": "object",
                                "title": "Adjuster",
                                "properties": {
                                  "adjuster": {
                                    "type": "string",
                                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "enum": [
                                      "relative",
                                      "percentage"
                                    ],
                                    "x-nullable": true
                                  },
                                  "adjuster_value": {
                                    "type": "number",
                                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                    "example": 5
                                  }
                                },
                                "description": "Adjuster for Complex Rules."
                              },
                              "image_url": {
                                "type": "string",
                                "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                              },
                              "purchasing_disabled": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "boolean",
                                    "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    ],
                    "title": "Modifier Value Base",
                    "type": "object"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the value; increments sequentially.\n"
                      }
                    }
                  }
                ],
                "title": "Modifier Value",
                "description": "Part of Modifier Value Response "
              }
            }
          },
          "required": [
            "type",
            "required"
          ]
        }
      ],
      "title": "Modifier Put"
    },
    "ModifierValueBase": {
      "allOf": [
        {
          "description": "Common Option Value properties.",
          "title": "Option Value Base",
          "properties": {
            "is_default": {
              "type": "boolean",
              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
              "example": false
            },
            "label": {
              "type": "string",
              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
              "x-required": [
                "post"
              ],
              "example": "Green"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
              "minimum": -2147483648,
              "maximum": 2147483647,
              "x-required": [
                "post"
              ],
              "example": 0
            },
            "value_data": {
              "type": [
                "object",
                "null"
              ],
              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.\n\n"
            }
          },
          "required": [
            "label",
            "sort_order"
          ]
        },
        {
          "properties": {
            "adjusters": {
              "type": "object",
              "properties": {
                "price": {
                  "type": "object",
                  "title": "Adjuster",
                  "description": "Adjuster for Complex Rules.",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  }
                },
                "weight": {
                  "type": "object",
                  "title": "Adjuster",
                  "description": "Adjuster for Complex Rules.",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  }
                },
                "image_url": {
                  "type": "string",
                  "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                  "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                },
                "purchasing_disabled": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "boolean",
                      "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                    },
                    "message": {
                      "type": "string",
                      "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "title": "Modifier Value Base",
      "type": "object"
    },
    "ModifierValue": {
      "allOf": [
        {
          "allOf": [
            {
              "description": "Common Option Value properties.",
              "title": "Option Value Base",
              "properties": {
                "is_default": {
                  "type": "boolean",
                  "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                  "example": false
                },
                "label": {
                  "type": "string",
                  "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "example": "Green"
                },
                "sort_order": {
                  "type": "integer",
                  "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-required": [
                    "post"
                  ],
                  "example": 0
                },
                "value_data": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.\n",
                  "properties": {}
                }
              },
              "required": [
                "label",
                "sort_order"
              ]
            },
            {
              "properties": {
                "adjusters": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "object",
                      "title": "Adjuster",
                      "description": "Adjuster for Complex Rules.",
                      "properties": {
                        "adjuster": {
                          "type": "string",
                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "enum": [
                            "relative",
                            "percentage"
                          ],
                          "x-nullable": true
                        },
                        "adjuster_value": {
                          "type": "number",
                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "example": 5
                        }
                      }
                    },
                    "weight": {
                      "type": "object",
                      "title": "Adjuster",
                      "description": "Adjuster for Complex Rules.",
                      "properties": {
                        "adjuster": {
                          "type": "string",
                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "enum": [
                            "relative",
                            "percentage"
                          ],
                          "x-nullable": true
                        },
                        "adjuster_value": {
                          "type": "number",
                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "example": 5
                        }
                      }
                    },
                    "image_url": {
                      "type": "string",
                      "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                      "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                    },
                    "purchasing_disabled": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean",
                          "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                        },
                        "message": {
                          "type": "string",
                          "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "title": "Modifier Value Base"
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the value; increments sequentially.\n"
            }
          }
        }
      ],
      "title": "Modifier Value",
      "description": "Part of Modifier Value Response ",
      "type": "object"
    },
    "ModifierValuePost": {
      "type": "object",
      "description": "The model for a POST to create a modifier value on a product.",
      "allOf": [
        {
          "allOf": [
            {
              "type": "object",
              "description": "Common Option Value properties.",
              "title": "Option Value Base",
              "properties": {
                "is_default": {
                  "type": "boolean",
                  "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                  "example": false
                },
                "label": {
                  "type": "string",
                  "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "example": "Green"
                },
                "sort_order": {
                  "type": "integer",
                  "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-required": [
                    "post"
                  ],
                  "example": 0
                },
                "value_data": {
                  "type": "object",
                  "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                }
              },
              "required": [
                "label",
                "sort_order"
              ]
            },
            {
              "properties": {
                "adjusters": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "object",
                      "title": "Adjuster",
                      "properties": {
                        "adjuster": {
                          "type": "string",
                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "enum": [
                            "relative",
                            "percentage"
                          ],
                          "x-nullable": true
                        },
                        "adjuster_value": {
                          "type": "number",
                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "example": 5
                        }
                      },
                      "description": "Adjuster for Complex Rules."
                    },
                    "weight": {
                      "type": "object",
                      "title": "Adjuster",
                      "properties": {
                        "adjuster": {
                          "type": "string",
                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "enum": [
                            "relative",
                            "percentage"
                          ],
                          "x-nullable": true
                        },
                        "adjuster_value": {
                          "type": "number",
                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "example": 5
                        }
                      },
                      "description": "Adjuster for Complex Rules."
                    },
                    "image_url": {
                      "type": "string",
                      "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                      "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                    },
                    "purchasing_disabled": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean",
                          "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                        },
                        "message": {
                          "type": "string",
                          "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "title": "Modifier Value Base",
          "type": "object"
        }
      ],
      "title": "Modifier Value Post"
    },
    "ModifierValuePut": {
      "type": "object",
      "description": "The model for a PUT to update a modifier value on a product.",
      "allOf": [
        {
          "allOf": [
            {
              "type": "object",
              "description": "Common Option Value properties.",
              "title": "Option Value Base",
              "properties": {
                "is_default": {
                  "type": "boolean",
                  "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                  "example": false
                },
                "label": {
                  "type": "string",
                  "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "example": "Green"
                },
                "sort_order": {
                  "type": "integer",
                  "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-required": [
                    "post"
                  ],
                  "example": 0
                },
                "value_data": {
                  "type": "object",
                  "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                }
              },
              "required": [
                "label",
                "sort_order"
              ]
            },
            {
              "properties": {
                "adjusters": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "object",
                      "title": "Adjuster",
                      "properties": {
                        "adjuster": {
                          "type": "string",
                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "enum": [
                            "relative",
                            "percentage"
                          ],
                          "x-nullable": true
                        },
                        "adjuster_value": {
                          "type": "number",
                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "example": 5
                        }
                      },
                      "description": "Adjuster for Complex Rules."
                    },
                    "weight": {
                      "type": "object",
                      "title": "Adjuster",
                      "properties": {
                        "adjuster": {
                          "type": "string",
                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "enum": [
                            "relative",
                            "percentage"
                          ],
                          "x-nullable": true
                        },
                        "adjuster_value": {
                          "type": "number",
                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                          "example": 5
                        }
                      },
                      "description": "Adjuster for Complex Rules."
                    },
                    "image_url": {
                      "type": "string",
                      "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                      "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                    },
                    "purchasing_disabled": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean",
                          "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                        },
                        "message": {
                          "type": "string",
                          "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                        }
                      }
                    }
                  }
                }
              }
            }
          ],
          "title": "Modifier Value Base",
          "type": "object"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the value; increments sequentially.\n",
              "x-required": [
                "put"
              ]
            }
          }
        }
      ],
      "title": "Modifier Value Put"
    },
    "OptionResponse": {
      "type": "object",
      "title": "Option Response",
      "properties": {
        "data": {
          "allOf": [
            {
              "description": "Common Option properties.",
              "title": "Option Base",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numerical ID of the option, increments sequentially.\n",
                  "x-nullable": true,
                  "example": 55
                },
                "product_id": {
                  "type": "integer",
                  "description": "The unique numerical ID of the product to which the option belongs.\n",
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "example": 4
                },
                "display_name": {
                  "type": "string",
                  "description": "The name of the option shown on the storefront.\n",
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "Add-a-$5-Donation1535042499-187"
                },
                "type": {
                  "type": "string",
                  "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                  "enum": [
                    "radio_buttons",
                    "rectangles",
                    "dropdown",
                    "product_list",
                    "product_list_with_images",
                    "swatch"
                  ],
                  "x-required": [
                    "post",
                    "put"
                  ]
                },
                "config": {
                  "type": "object",
                  "title": "Option Config",
                  "description": "The values for option config can vary based on the Modifier created.",
                  "properties": {
                    "default_value": {
                      "type": "string",
                      "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                    },
                    "checked_by_default": {
                      "type": "boolean",
                      "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                    },
                    "checkbox_label": {
                      "type": "string",
                      "description": "(checkbox) Label displayed for the checkbox option.\n"
                    },
                    "date_limited": {
                      "type": "boolean",
                      "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                    },
                    "date_limit_mode": {
                      "type": "string",
                      "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                      "enum": [
                        "earliest",
                        "range",
                        "latest"
                      ],
                      "example": "range"
                    },
                    "date_earliest_value": {
                      "type": "string",
                      "format": "date",
                      "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                      "example": "2018-08-31T05:00:00+00:00"
                    },
                    "date_latest_value": {
                      "type": "string",
                      "format": "date",
                      "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                      "example": "2019-01-01T05:00:00+00:00"
                    },
                    "file_types_mode": {
                      "type": "string",
                      "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                      "enum": [
                        "specific",
                        "all"
                      ],
                      "example": "specific"
                    },
                    "file_types_supported": {
                      "type": "array",
                      "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                      "example": "images, documents, other",
                      "items": {
                        "type": "string"
                      }
                    },
                    "file_types_other": {
                      "type": "array",
                      "description": "(file) A list of other file types allowed with the file upload option.\n",
                      "example": "pdf",
                      "items": {
                        "type": "string"
                      }
                    },
                    "file_max_size": {
                      "type": "integer",
                      "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                      "example": 5
                    },
                    "text_characters_limited": {
                      "type": "boolean",
                      "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                    },
                    "text_min_length": {
                      "type": "integer",
                      "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                      "example": 1
                    },
                    "text_max_length": {
                      "type": "integer",
                      "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                      "example": 55
                    },
                    "text_lines_limited": {
                      "type": "boolean",
                      "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                      "example": true
                    },
                    "text_max_lines": {
                      "type": "integer",
                      "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                      "example": 4
                    },
                    "number_limited": {
                      "type": "boolean",
                      "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                      "example": true
                    },
                    "number_limit_mode": {
                      "type": "string",
                      "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                      "enum": [
                        "lowest",
                        "highest",
                        "range"
                      ],
                      "example": "lowest"
                    },
                    "number_lowest_value": {
                      "type": "number",
                      "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                      "example": 100
                    },
                    "number_highest_value": {
                      "type": "number",
                      "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                    },
                    "number_integers_only": {
                      "type": "boolean",
                      "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                      "example": false
                    },
                    "product_list_adjusts_inventory": {
                      "type": "boolean",
                      "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                    },
                    "product_list_adjusts_pricing": {
                      "type": "boolean",
                      "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                    },
                    "product_list_shipping_calc": {
                      "type": "string",
                      "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                      "enum": [
                        "none",
                        "weight",
                        "package"
                      ],
                      "example": "weight"
                    }
                  }
                },
                "sort_order": {
                  "type": "integer",
                  "example": 1,
                  "description": "Order in which the option is displayed on the storefront. "
                },
                "option_values": {
                  "type": "array",
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "minItems": 1,
                  "items": {
                    "allOf": [
                      {
                        "description": "Common Option Value properties.",
                        "title": "Option Value Base",
                        "properties": {
                          "is_default": {
                            "type": "boolean",
                            "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                            "example": false
                          },
                          "label": {
                            "type": "string",
                            "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                            "x-required": [
                              "post"
                            ],
                            "example": "Green"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647,
                            "x-required": [
                              "post"
                            ],
                            "example": 0
                          },
                          "value_data": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.\n\n"
                          }
                        },
                        "required": [
                          "label",
                          "sort_order"
                        ]
                      },
                      {
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the value; increments sequentially.\n"
                          }
                        }
                      }
                    ],
                    "title": "Option Value",
                    "type": "object"
                  }
                },
                "image_url": {
                  "type": "string",
                  "description": "Publicly available image url"
                }
              }
            },
            {
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
                  "example": "Add-a-$5-Donation1535042499-187"
                }
              }
            }
          ],
          "title": "Option",
          "type": "object"
        },
        "meta": {
          "type": "object",
          "description": "Empty meta object; may be used later.",
          "title": "Meta"
        }
      }
    },
    "OptionBase": {
      "type": "object",
      "description": "Common Option properties.",
      "title": "Option Base",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique numerical ID of the option, increments sequentially.\n",
          "x-nullable": true,
          "example": 55
        },
        "product_id": {
          "type": "integer",
          "description": "The unique numerical ID of the product to which the option belongs.\n",
          "x-required": [
            "post",
            "put"
          ],
          "example": 4
        },
        "display_name": {
          "type": "string",
          "description": "The name of the option shown on the storefront.\n",
          "x-required": [
            "post",
            "put"
          ],
          "minLength": 1,
          "maxLength": 255,
          "example": "Add-a-$5-Donation1535042499-187"
        },
        "type": {
          "type": "string",
          "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
          "enum": [
            "radio_buttons",
            "rectangles",
            "dropdown",
            "product_list",
            "product_list_with_images",
            "swatch"
          ],
          "x-required": [
            "post",
            "put"
          ]
        },
        "config": {
          "type": "object",
          "title": "Option Config",
          "description": "The values for option config can vary based on the Modifier created.",
          "properties": {
            "default_value": {
              "type": "string",
              "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
            },
            "checked_by_default": {
              "type": "boolean",
              "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
            },
            "checkbox_label": {
              "type": "string",
              "description": "(checkbox) Label displayed for the checkbox option.\n"
            },
            "date_limited": {
              "type": "boolean",
              "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
            },
            "date_limit_mode": {
              "type": "string",
              "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
              "enum": [
                "earliest",
                "range",
                "latest"
              ],
              "example": "range"
            },
            "date_earliest_value": {
              "type": "string",
              "format": "date",
              "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
              "example": "2018-08-31T05:00:00+00:00"
            },
            "date_latest_value": {
              "type": "string",
              "format": "date",
              "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
              "example": "2019-01-01T05:00:00+00:00"
            },
            "file_types_mode": {
              "type": "string",
              "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
              "enum": [
                "specific",
                "all"
              ],
              "example": "specific"
            },
            "file_types_supported": {
              "type": "array",
              "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
              "example": "images, documents, other",
              "items": {
                "type": "string"
              }
            },
            "file_types_other": {
              "type": "array",
              "description": "(file) A list of other file types allowed with the file upload option.\n",
              "example": "pdf",
              "items": {
                "type": "string"
              }
            },
            "file_max_size": {
              "type": "integer",
              "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
              "example": 5
            },
            "text_characters_limited": {
              "type": "boolean",
              "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
            },
            "text_min_length": {
              "type": "integer",
              "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
              "example": 1
            },
            "text_max_length": {
              "type": "integer",
              "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
              "example": 55
            },
            "text_lines_limited": {
              "type": "boolean",
              "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
              "example": true
            },
            "text_max_lines": {
              "type": "integer",
              "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
              "example": 4
            },
            "number_limited": {
              "type": "boolean",
              "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
              "example": true
            },
            "number_limit_mode": {
              "type": "string",
              "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
              "enum": [
                "lowest",
                "highest",
                "range"
              ],
              "example": "lowest"
            },
            "number_lowest_value": {
              "type": "number",
              "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
              "example": 100
            },
            "number_highest_value": {
              "type": "number",
              "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
            },
            "number_integers_only": {
              "type": "boolean",
              "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
              "example": false
            },
            "product_list_adjusts_inventory": {
              "type": "boolean",
              "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
            },
            "product_list_adjusts_pricing": {
              "type": "boolean",
              "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
            },
            "product_list_shipping_calc": {
              "type": "string",
              "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
              "enum": [
                "none",
                "weight",
                "package"
              ],
              "example": "weight"
            }
          }
        },
        "sort_order": {
          "type": "integer",
          "example": 1,
          "description": "Order in which the option is displayed on the storefront. "
        },
        "option_values": {
          "type": "array",
          "x-required": [
            "post",
            "put"
          ],
          "minItems": 1,
          "items": {
            "allOf": [
              {
                "description": "Common Option Value properties.",
                "title": "Option Value Base",
                "properties": {
                  "is_default": {
                    "type": "boolean",
                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                    "example": false
                  },
                  "label": {
                    "type": "string",
                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                    "x-required": [
                      "post"
                    ],
                    "example": "Green"
                  },
                  "sort_order": {
                    "type": "integer",
                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-required": [
                      "post"
                    ],
                    "example": 0
                  },
                  "value_data": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.\n"
                  }
                },
                "required": [
                  "label",
                  "sort_order"
                ]
              },
              {
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                  }
                }
              }
            ],
            "title": "Option Value",
            "type": "object"
          }
        },
        "image_url": {
          "type": "string",
          "description": "Publicly available image url"
        }
      }
    },
    "Option": {
      "allOf": [
        {
          "description": "Common Option properties.",
          "title": "Option Base",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numerical ID of the option, increments sequentially.\n",
              "x-nullable": true,
              "example": 55
            },
            "product_id": {
              "type": "integer",
              "description": "The unique numerical ID of the product to which the option belongs.\n",
              "x-required": [
                "post",
                "put"
              ],
              "example": 4
            },
            "display_name": {
              "type": "string",
              "description": "The name of the option shown on the storefront.\n",
              "x-required": [
                "post",
                "put"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Add-a-$5-Donation1535042499-187"
            },
            "type": {
              "type": "string",
              "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
              "enum": [
                "radio_buttons",
                "rectangles",
                "dropdown",
                "product_list",
                "product_list_with_images",
                "swatch"
              ],
              "x-required": [
                "post",
                "put"
              ]
            },
            "config": {
              "type": "object",
              "title": "Option Config",
              "description": "The values for option config can vary based on the Modifier created.",
              "properties": {
                "default_value": {
                  "type": "string",
                  "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                },
                "checked_by_default": {
                  "type": "boolean",
                  "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                },
                "checkbox_label": {
                  "type": "string",
                  "description": "(checkbox) Label displayed for the checkbox option.\n"
                },
                "date_limited": {
                  "type": "boolean",
                  "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                },
                "date_limit_mode": {
                  "type": "string",
                  "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                  "enum": [
                    "earliest",
                    "range",
                    "latest"
                  ],
                  "example": "range"
                },
                "date_earliest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2018-08-31T05:00:00+00:00"
                },
                "date_latest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2019-01-01T05:00:00+00:00"
                },
                "file_types_mode": {
                  "type": "string",
                  "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                  "enum": [
                    "specific",
                    "all"
                  ],
                  "example": "specific"
                },
                "file_types_supported": {
                  "type": "array",
                  "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                  "example": "images, documents, other",
                  "items": {
                    "type": "string"
                  }
                },
                "file_types_other": {
                  "type": "array",
                  "description": "(file) A list of other file types allowed with the file upload option.\n",
                  "example": "pdf",
                  "items": {
                    "type": "string"
                  }
                },
                "file_max_size": {
                  "type": "integer",
                  "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                  "example": 5
                },
                "text_characters_limited": {
                  "type": "boolean",
                  "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                },
                "text_min_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                  "example": 1
                },
                "text_max_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                  "example": 55
                },
                "text_lines_limited": {
                  "type": "boolean",
                  "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                  "example": true
                },
                "text_max_lines": {
                  "type": "integer",
                  "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                  "example": 4
                },
                "number_limited": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                  "example": true
                },
                "number_limit_mode": {
                  "type": "string",
                  "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                  "enum": [
                    "lowest",
                    "highest",
                    "range"
                  ],
                  "example": "lowest"
                },
                "number_lowest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                  "example": 100
                },
                "number_highest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                },
                "number_integers_only": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                  "example": false
                },
                "product_list_adjusts_inventory": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                },
                "product_list_adjusts_pricing": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                },
                "product_list_shipping_calc": {
                  "type": "string",
                  "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                  "enum": [
                    "none",
                    "weight",
                    "package"
                  ],
                  "example": "weight"
                }
              }
            },
            "sort_order": {
              "type": "integer",
              "example": 1,
              "description": "Order in which the option is displayed on the storefront. "
            },
            "option_values": {
              "type": "array",
              "x-required": [
                "post",
                "put"
              ],
              "minItems": 1,
              "items": {
                "allOf": [
                  {
                    "description": "Common Option Value properties.",
                    "title": "Option Value Base",
                    "properties": {
                      "is_default": {
                        "type": "boolean",
                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                        "example": false
                      },
                      "label": {
                        "type": "string",
                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "example": "Green"
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-required": [
                          "post"
                        ],
                        "example": 0
                      },
                      "value_data": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\nIf no data is available, returns `null`."
                      }
                    },
                    "required": [
                      "label",
                      "sort_order"
                    ]
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the value; increments sequentially.\n"
                      }
                    }
                  }
                ],
                "title": "Option Value",
                "type": "object"
              }
            },
            "image_url": {
              "type": "string",
              "description": "Publicly available image url"
            }
          }
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
              "example": "Add-a-$5-Donation1535042499-187"
            }
          }
        }
      ],
      "title": "Option",
      "type": "object"
    },
    "OptionPost": {
      "type": "object",
      "description": "The model for a POST to create options on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Common Option properties.",
          "title": "Option Base",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numerical ID of the option, increments sequentially.\n",
              "x-nullable": true,
              "example": 55
            },
            "product_id": {
              "type": "integer",
              "description": "The unique numerical ID of the product to which the option belongs.\n",
              "x-required": [
                "post",
                "put"
              ],
              "example": 4
            },
            "display_name": {
              "type": "string",
              "description": "The name of the option shown on the storefront.\n",
              "x-required": [
                "post",
                "put"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Add-a-$5-Donation1535042499-187"
            },
            "type": {
              "type": "string",
              "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
              "enum": [
                "radio_buttons",
                "rectangles",
                "dropdown",
                "product_list",
                "product_list_with_images",
                "swatch"
              ],
              "x-required": [
                "post",
                "put"
              ]
            },
            "config": {
              "type": "object",
              "title": "Option Config",
              "description": "The values for option config can vary based on the Modifier created.",
              "properties": {
                "default_value": {
                  "type": "string",
                  "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                },
                "checked_by_default": {
                  "type": "boolean",
                  "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                },
                "checkbox_label": {
                  "type": "string",
                  "description": "(checkbox) Label displayed for the checkbox option.\n"
                },
                "date_limited": {
                  "type": "boolean",
                  "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                },
                "date_limit_mode": {
                  "type": "string",
                  "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                  "enum": [
                    "earliest",
                    "range",
                    "latest"
                  ],
                  "example": "range"
                },
                "date_earliest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2018-08-31T05:00:00+00:00"
                },
                "date_latest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2019-01-01T05:00:00+00:00"
                },
                "file_types_mode": {
                  "type": "string",
                  "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                  "enum": [
                    "specific",
                    "all"
                  ],
                  "example": "specific"
                },
                "file_types_supported": {
                  "type": "array",
                  "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                  "example": "images, documents, other",
                  "items": {
                    "type": "string"
                  }
                },
                "file_types_other": {
                  "type": "array",
                  "description": "(file) A list of other file types allowed with the file upload option.\n",
                  "example": "pdf",
                  "items": {
                    "type": "string"
                  }
                },
                "file_max_size": {
                  "type": "integer",
                  "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                  "example": 5
                },
                "text_characters_limited": {
                  "type": "boolean",
                  "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                },
                "text_min_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                  "example": 1
                },
                "text_max_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                  "example": 55
                },
                "text_lines_limited": {
                  "type": "boolean",
                  "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                  "example": true
                },
                "text_max_lines": {
                  "type": "integer",
                  "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                  "example": 4
                },
                "number_limited": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                  "example": true
                },
                "number_limit_mode": {
                  "type": "string",
                  "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                  "enum": [
                    "lowest",
                    "highest",
                    "range"
                  ],
                  "example": "lowest"
                },
                "number_lowest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                  "example": 100
                },
                "number_highest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                },
                "number_integers_only": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                  "example": false
                },
                "product_list_adjusts_inventory": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                },
                "product_list_adjusts_pricing": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                },
                "product_list_shipping_calc": {
                  "type": "string",
                  "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                  "enum": [
                    "none",
                    "weight",
                    "package"
                  ],
                  "example": "weight"
                }
              }
            },
            "sort_order": {
              "type": "integer",
              "example": 1,
              "description": "Order in which the option is displayed on the storefront. "
            },
            "option_values": {
              "type": "array",
              "x-required": [
                "post",
                "put"
              ],
              "minItems": 1,
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Common Option Value properties.",
                    "title": "Option Value Base",
                    "properties": {
                      "is_default": {
                        "type": "boolean",
                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                        "example": false
                      },
                      "label": {
                        "type": "string",
                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "example": "Green"
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-required": [
                          "post"
                        ],
                        "example": 0
                      },
                      "value_data": {
                        "type": "object",
                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                      }
                    },
                    "required": [
                      "label",
                      "sort_order"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the value; increments sequentially.\n"
                      }
                    }
                  }
                ],
                "title": "Option Value"
              }
            },
            "image_url": {
              "type": "string",
              "description": "Publicly available image url"
            }
          }
        }
      ],
      "title": "Option Post"
    },
    "OptionPut": {
      "type": "object",
      "description": "The model for a PUT to update options on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Common Option properties.",
          "title": "Option Base",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numerical ID of the option, increments sequentially.\n",
              "x-nullable": true,
              "example": 55
            },
            "product_id": {
              "type": "integer",
              "description": "The unique numerical ID of the product to which the option belongs.\n",
              "x-required": [
                "post",
                "put"
              ],
              "example": 4
            },
            "display_name": {
              "type": "string",
              "description": "The name of the option shown on the storefront.\n",
              "x-required": [
                "post",
                "put"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Add-a-$5-Donation1535042499-187"
            },
            "type": {
              "type": "string",
              "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
              "enum": [
                "radio_buttons",
                "rectangles",
                "dropdown",
                "product_list",
                "product_list_with_images",
                "swatch"
              ],
              "x-required": [
                "post",
                "put"
              ]
            },
            "config": {
              "type": "object",
              "title": "Option Config",
              "description": "The values for option config can vary based on the Modifier created.",
              "properties": {
                "default_value": {
                  "type": "string",
                  "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                },
                "checked_by_default": {
                  "type": "boolean",
                  "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                },
                "checkbox_label": {
                  "type": "string",
                  "description": "(checkbox) Label displayed for the checkbox option.\n"
                },
                "date_limited": {
                  "type": "boolean",
                  "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                },
                "date_limit_mode": {
                  "type": "string",
                  "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                  "enum": [
                    "earliest",
                    "range",
                    "latest"
                  ],
                  "example": "range"
                },
                "date_earliest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2018-08-31T05:00:00+00:00"
                },
                "date_latest_value": {
                  "type": "string",
                  "format": "date",
                  "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                  "example": "2019-01-01T05:00:00+00:00"
                },
                "file_types_mode": {
                  "type": "string",
                  "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                  "enum": [
                    "specific",
                    "all"
                  ],
                  "example": "specific"
                },
                "file_types_supported": {
                  "type": "array",
                  "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                  "example": "images, documents, other",
                  "items": {
                    "type": "string"
                  }
                },
                "file_types_other": {
                  "type": "array",
                  "description": "(file) A list of other file types allowed with the file upload option.\n",
                  "example": "pdf",
                  "items": {
                    "type": "string"
                  }
                },
                "file_max_size": {
                  "type": "integer",
                  "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                  "example": 5
                },
                "text_characters_limited": {
                  "type": "boolean",
                  "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                },
                "text_min_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                  "example": 1
                },
                "text_max_length": {
                  "type": "integer",
                  "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                  "example": 55
                },
                "text_lines_limited": {
                  "type": "boolean",
                  "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                  "example": true
                },
                "text_max_lines": {
                  "type": "integer",
                  "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                  "example": 4
                },
                "number_limited": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                  "example": true
                },
                "number_limit_mode": {
                  "type": "string",
                  "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                  "enum": [
                    "lowest",
                    "highest",
                    "range"
                  ],
                  "example": "lowest"
                },
                "number_lowest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                  "example": 100
                },
                "number_highest_value": {
                  "type": "number",
                  "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                },
                "number_integers_only": {
                  "type": "boolean",
                  "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                  "example": false
                },
                "product_list_adjusts_inventory": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                },
                "product_list_adjusts_pricing": {
                  "type": "boolean",
                  "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                },
                "product_list_shipping_calc": {
                  "type": "string",
                  "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                  "enum": [
                    "none",
                    "weight",
                    "package"
                  ],
                  "example": "weight"
                }
              }
            },
            "sort_order": {
              "type": "integer",
              "example": 1,
              "description": "Order in which the option is displayed on the storefront. "
            },
            "option_values": {
              "type": "array",
              "x-required": [
                "post",
                "put"
              ],
              "minItems": 1,
              "items": {
                "type": "object",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Common Option Value properties.",
                    "title": "Option Value Base",
                    "properties": {
                      "is_default": {
                        "type": "boolean",
                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                        "example": false
                      },
                      "label": {
                        "type": "string",
                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "example": "Green"
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-required": [
                          "post"
                        ],
                        "example": 0
                      },
                      "value_data": {
                        "type": "object",
                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                      }
                    },
                    "required": [
                      "label",
                      "sort_order"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the value; increments sequentially.\n"
                      }
                    }
                  }
                ],
                "title": "Option Value"
              }
            },
            "image_url": {
              "type": "string",
              "description": "Publicly available image url"
            }
          }
        }
      ],
      "title": "Option Put"
    },
    "CategoryTreeCollectionResponse": {
      "description": "Returns the categories tree, a nested lineage of the categories with parent->child relationship. The Category objects returned are simplified versions of the category objects returned in the rest of this API.\n",
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Used to reflect parent <> child category relationships. Used by Category Tree.",
            "title": "Category Node",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique numeric ID of the category; increments sequentially.\n",
                "example": 26
              },
              "parent_id": {
                "type": "integer",
                "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\n",
                "example": 25
              },
              "name": {
                "type": "string",
                "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\n",
                "example": "Bath"
              },
              "is_visible": {
                "type": "boolean",
                "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n",
                "example": true
              },
              "url": {
                "type": "string",
                "description": "The custom URL for the category on the storefront.\n",
                "example": "/towels/bath-towels/"
              },
              "children": {
                "type": "array",
                "description": "The list of children of the category.\n",
                "items": {
                  "type": "object",
                  "description": "Used to reflect parent <> child category relationships. Used by Category Tree.",
                  "title": "Category Node",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the category; increments sequentially.\n",
                      "example": 26
                    },
                    "parent_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\n",
                      "example": 25
                    },
                    "name": {
                      "type": "string",
                      "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\n",
                      "example": "Bath"
                    },
                    "is_visible": {
                      "type": "boolean",
                      "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n",
                      "example": true
                    },
                    "url": {
                      "type": "string",
                      "description": "The custom URL for the category on the storefront.\n",
                      "example": "/towels/bath-towels/"
                    },
                    "children": {
                      "type": "array",
                      "description": "The list of children of the category.\n",
                      "items": {
                        "$ref": "#/definitions/CategoryNode"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "meta": {
          "type": "object",
          "description": "Data about the response, including pagination and collection totals.",
          "properties": {
            "pagination": {
              "type": "object",
              "description": "Data about the response, including pagination and collection totals.",
              "title": "Pagination",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "Total number of items in the result set.\n",
                  "example": 36
                },
                "count": {
                  "type": "integer",
                  "description": "Total number of items in the collection response.\n",
                  "example": 36
                },
                "per_page": {
                  "type": "integer",
                  "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                  "example": 50
                },
                "current_page": {
                  "type": "integer",
                  "description": "The page you are currently on within the collection.\n",
                  "example": 1
                },
                "total_pages": {
                  "type": "integer",
                  "description": "The total number of pages in the collection.\n",
                  "example": 1
                },
                "links": {
                  "type": "object",
                  "description": "Pagination links for the previous and next parts of the whole collection.\n",
                  "properties": {
                    "previous": {
                      "type": "string",
                      "description": "Link to the previous page returned in the response.\n"
                    },
                    "current": {
                      "type": "string",
                      "description": "Link to the current page returned in the response.\n",
                      "example": "?page=1&limit=50"
                    },
                    "next": {
                      "type": "string",
                      "description": "Link to the next page returned in the response.\n"
                    }
                  }
                }
              }
            }
          },
          "title": "Collection Meta"
        }
      },
      "title": "Category Tree Collection Response"
    },
    "CategoryNode": {
      "type": "object",
      "description": "Used to reflect parent <> child category relationships. Used by Category Tree.",
      "title": "Category Node",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique numeric ID of the category; increments sequentially.\n",
          "example": 26
        },
        "parent_id": {
          "type": "integer",
          "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\n",
          "example": 25
        },
        "name": {
          "type": "string",
          "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\n",
          "example": "Bath"
        },
        "is_visible": {
          "type": "boolean",
          "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n",
          "example": true
        },
        "url": {
          "type": "string",
          "description": "The custom URL for the category on the storefront.\n",
          "example": "/towels/bath-towels/"
        },
        "children": {
          "type": "array",
          "description": "The list of children of the category.\n",
          "items": {
            "$ref": "#/definitions/CategoryNode"
          }
        }
      }
    },
    "CategoryBase": {
      "type": "object",
      "description": "Common Category object properties.",
      "title": "Category",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique ID of the *Category*. Increments sequentially.\nRead-Only. "
        },
        "parent_id": {
          "type": "integer",
          "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in a POST if creating a child category.",
          "x-required": [
            "post"
          ],
          "example": 2
        },
        "name": {
          "type": "string",
          "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in a POST.",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 50,
          "example": "Bath"
        },
        "description": {
          "type": "string",
          "description": "The product description, which can include HTML formatting.\n",
          "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
        },
        "views": {
          "type": "integer",
          "description": "Number of views the category has on the storefront.\n",
          "example": 1050
        },
        "sort_order": {
          "type": "integer",
          "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "example": 3
        },
        "page_title": {
          "type": "string",
          "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
          "minLength": 0,
          "maxLength": 255,
          "example": "Bath"
        },
        "search_keywords": {
          "type": "string",
          "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "meta_keywords": {
          "type": "array",
          "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
          "items": {
            "type": "string"
          }
        },
        "meta_description": {
          "type": "string",
          "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
          "minLength": 0,
          "maxLength": 65535
        },
        "layout_file": {
          "type": "string",
          "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
          "minLength": 0,
          "maxLength": 500,
          "example": "category.html"
        },
        "is_visible": {
          "type": "boolean",
          "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
        },
        "default_product_sort": {
          "type": "string",
          "description": "Determines how the products are sorted on category page load.\n",
          "enum": [
            "use_store_settings",
            "featured",
            "newest",
            "best_selling",
            "alpha_asc",
            "alpha_desc",
            "avg_customer_review",
            "price_asc",
            "price_desc"
          ]
        },
        "image_url": {
          "type": "string",
          "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
          "x-url": true,
          "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
        },
        "custom_url": {
          "type": "object",
          "description": "The custom URL for the category on the storefront.",
          "title": "Custom Url Category",
          "properties": {
            "url": {
              "type": "string",
              "description": "Category URL on the storefront.\n",
              "x-required": [
                "post",
                "put"
              ],
              "x-url": true,
              "minLength": 0,
              "maxLength": 255,
              "example": "/shoes"
            },
            "is_customized": {
              "type": "boolean",
              "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
              "x-required": [
                "post",
                "put"
              ]
            }
          }
        }
      },
      "required": [
        "parent_id",
        "name"
      ]
    },
    "BrandBase": {
      "type": "object",
      "description": "Common Brand properties.",
      "title": "Brand",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique ID of the *Brand*. Read-Only."
        },
        "name": {
          "type": "string",
          "description": "The name of the brand. Must be unique.\nRequired in POST.",
          "x-required": [
            "post",
            "put"
          ],
          "minLength": 1,
          "maxLength": 255,
          "example": "Common Good"
        },
        "page_title": {
          "type": "string",
          "description": "The title shown in the browser while viewing the brand.\n",
          "minLength": 0,
          "maxLength": 255,
          "example": "Common Good"
        },
        "meta_keywords": {
          "type": "array",
          "description": "Comma-separated list of meta keywords to include in the HTML.\n",
          "example": "modern, clean, contemporary",
          "items": {
            "type": "string"
          }
        },
        "meta_description": {
          "type": "string",
          "description": "A meta description to include.\n",
          "minLength": 0,
          "maxLength": 65535,
          "example": "Common Good is a modern brand."
        },
        "search_keywords": {
          "type": "string",
          "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
          "minLength": 0,
          "maxLength": 65535,
          "example": "kitchen, laundry, cart, storage"
        },
        "image_url": {
          "type": "string",
          "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
          "x-url": true,
          "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
        },
        "custom_url": {
          "type": "object",
          "description": "The custom URL for the brand on the storefront.",
          "title": "Custom Url Brand",
          "properties": {
            "url": {
              "type": "string",
              "description": "Brand URL on the storefront.\n",
              "x-url": true,
              "example": "/shoes"
            },
            "is_customized": {
              "type": "boolean",
              "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
              "example": true
            }
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "VariantBase": {
      "type": "object",
      "description": "Common Variant properties.",
      "title": "Variant Base",
      "properties": {
        "cost_price": {
          "type": "number",
          "format": "double",
          "description": "The cost price of the variant. Not affected by Price List prices.",
          "x-nullable": true,
          "minimum": 0
        },
        "price": {
          "type": "number",
          "format": "double",
          "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
          "x-nullable": true,
          "minimum": 0
        },
        "sale_price": {
          "type": "number",
          "format": "double",
          "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
          "x-nullable": true,
          "minimum": 0
        },
        "retail_price": {
          "type": "number",
          "format": "double",
          "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
          "x-nullable": true,
          "minimum": 0
        },
        "weight": {
          "type": "number",
          "format": "double",
          "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
          "x-nullable": true,
          "minimum": 0
        },
        "width": {
          "type": "number",
          "format": "double",
          "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
          "x-nullable": true,
          "minimum": 0
        },
        "height": {
          "type": "number",
          "format": "double",
          "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
          "x-nullable": true,
          "minimum": 0
        },
        "depth": {
          "type": "number",
          "format": "double",
          "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
          "x-nullable": true,
          "minimum": 0
        },
        "is_free_shipping": {
          "type": "boolean",
          "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
        },
        "fixed_cost_shipping_price": {
          "type": "number",
          "format": "double",
          "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
          "x-nullable": true,
          "minimum": 0
        },
        "purchasing_disabled": {
          "type": "boolean",
          "description": "If `true`, this variant will not be purchasable on the storefront."
        },
        "purchasing_disabled_message": {
          "type": "string",
          "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
          "minLength": 0,
          "maxLength": 255
        },
        "upc": {
          "type": "string",
          "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
          "x-nullable": true
        },
        "inventory_level": {
          "type": "integer",
          "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
          "x-nullable": true
        },
        "inventory_warning_level": {
          "type": "integer",
          "description": "When the variant hits this inventory level, it is considered low stock.",
          "x-nullable": true
        },
        "bin_picking_number": {
          "type": "string",
          "description": "Identifies where in a warehouse the variant is located.",
          "x-nullable": true,
          "minLength": 0,
          "maxLength": 255
        }
      }
    },
    "Variant": {
      "allOf": [
        {
          "description": "Common Variant properties.",
          "title": "Variant Base",
          "properties": {
            "cost_price": {
              "type": "number",
              "format": "double",
              "description": "The cost price of the variant. Not affected by Price List prices.",
              "x-nullable": true,
              "minimum": 0
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
              "x-nullable": true,
              "minimum": 0
            },
            "sale_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
              "x-nullable": true,
              "minimum": 0
            },
            "retail_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
              "x-nullable": true,
              "minimum": 0
            },
            "weight": {
              "type": "number",
              "format": "double",
              "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
              "x-nullable": true,
              "minimum": 0
            },
            "width": {
              "type": "number",
              "format": "double",
              "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "height": {
              "type": "number",
              "format": "double",
              "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "depth": {
              "type": "number",
              "format": "double",
              "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "is_free_shipping": {
              "type": "boolean",
              "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
            },
            "fixed_cost_shipping_price": {
              "type": "number",
              "format": "double",
              "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "purchasing_disabled": {
              "type": "boolean",
              "description": "If `true`, this variant will not be purchasable on the storefront."
            },
            "purchasing_disabled_message": {
              "type": "string",
              "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
              "minLength": 0,
              "maxLength": 255
            },
            "upc": {
              "type": "string",
              "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
              "x-nullable": true
            },
            "inventory_level": {
              "type": "integer",
              "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
              "x-nullable": true
            },
            "inventory_warning_level": {
              "type": "integer",
              "description": "When the variant hits this inventory level, it is considered low stock.",
              "x-nullable": true
            },
            "bin_picking_number": {
              "type": "string",
              "description": "Identifies where in a warehouse the variant is located.",
              "x-nullable": true,
              "minLength": 0,
              "maxLength": 255
            }
          }
        },
        {
          "properties": {
            "id": {
              "type": "integer"
            },
            "product_id": {
              "type": "integer"
            },
            "sku": {
              "type": "string"
            },
            "sku_id": {
              "type": "integer",
              "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
              "x-nullable": true
            },
            "option_values": {
              "type": "array",
              "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
              "items": {
                "allOf": [
                  {
                    "description": "Common Option Value Product properties.",
                    "title": "Option Value Product Base",
                    "properties": {
                      "option_display_name": {
                        "type": "string",
                        "description": "The name of the option.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "Color"
                      },
                      "label": {
                        "type": "string",
                        "description": "The label of the option value.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "Beige"
                      }
                    }
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "option_id": {
                        "type": "integer"
                      }
                    }
                  }
                ],
                "title": "Option Value Variant",
                "type": "object"
              }
            },
            "calculated_price": {
              "type": "number",
              "format": "double",
              "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
            }
          }
        }
      ],
      "type": "object"
    },
    "VariantPost": {
      "description": "The model for a POST to create variants on a product.\n",
      "allOf": [
        {
          "type": "object",
          "description": "Common Variant properties.",
          "title": "Variant Base",
          "properties": {
            "cost_price": {
              "type": "number",
              "format": "double",
              "description": "The cost price of the variant. Not affected by Price List prices.",
              "x-nullable": true,
              "minimum": 0
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
              "x-nullable": true,
              "minimum": 0
            },
            "sale_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
              "x-nullable": true,
              "minimum": 0
            },
            "retail_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
              "x-nullable": true,
              "minimum": 0
            },
            "weight": {
              "type": "number",
              "format": "double",
              "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
              "x-nullable": true,
              "minimum": 0
            },
            "width": {
              "type": "number",
              "format": "double",
              "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "height": {
              "type": "number",
              "format": "double",
              "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "depth": {
              "type": "number",
              "format": "double",
              "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "is_free_shipping": {
              "type": "boolean",
              "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
            },
            "fixed_cost_shipping_price": {
              "type": "number",
              "format": "double",
              "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "purchasing_disabled": {
              "type": "boolean",
              "description": "If `true`, this variant will not be purchasable on the storefront."
            },
            "purchasing_disabled_message": {
              "type": "string",
              "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
              "minLength": 0,
              "maxLength": 255
            },
            "upc": {
              "type": "string",
              "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
              "x-nullable": true
            },
            "inventory_level": {
              "type": "integer",
              "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
              "x-nullable": true
            },
            "inventory_warning_level": {
              "type": "integer",
              "description": "When the variant hits this inventory level, it is considered low stock.",
              "x-nullable": true
            },
            "bin_picking_number": {
              "type": "string",
              "description": "Identifies where in a warehouse the variant is located.",
              "x-nullable": true,
              "minLength": 0,
              "maxLength": 255
            }
          }
        },
        {
          "properties": {
            "product_id": {
              "type": "integer",
              "x-required": [
                "post"
              ]
            },
            "sku": {
              "type": "string",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 255
            },
            "option_values": {
              "type": "array",
              "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
              "x-required": [
                "post"
              ],
              "items": {
                "type": "object",
                "description": "The model for a POST to create option values on a variant.",
                "properties": {
                  "id": {
                    "type": "integer",
                    "x-required": [
                      "post"
                    ]
                  },
                  "option_id": {
                    "type": "integer",
                    "x-required": [
                      "post"
                    ]
                  }
                },
                "title": "Option Value Variant Post"
              }
            }
          }
        }
      ],
      "title": "Variant Post",
      "type": "object"
    },
    "VariantsCollectionPut": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "The model for a PUT to update variants on a product.\n",
        "allOf": [
          {
            "type": "object",
            "description": "Common Variant properties.",
            "title": "Variant Base",
            "properties": {
              "cost_price": {
                "type": "number",
                "format": "double",
                "description": "The cost price of the variant. Not affected by Price List prices.",
                "x-nullable": true,
                "minimum": 0
              },
              "price": {
                "type": "number",
                "format": "double",
                "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                "x-nullable": true,
                "minimum": 0
              },
              "sale_price": {
                "type": "number",
                "format": "double",
                "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                "x-nullable": true,
                "minimum": 0
              },
              "retail_price": {
                "type": "number",
                "format": "double",
                "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                "x-nullable": true,
                "minimum": 0
              },
              "weight": {
                "type": "number",
                "format": "double",
                "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                "x-nullable": true,
                "minimum": 0
              },
              "width": {
                "type": "number",
                "format": "double",
                "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                "x-nullable": true,
                "minimum": 0
              },
              "height": {
                "type": "number",
                "format": "double",
                "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                "x-nullable": true,
                "minimum": 0
              },
              "depth": {
                "type": "number",
                "format": "double",
                "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                "x-nullable": true,
                "minimum": 0
              },
              "is_free_shipping": {
                "type": "boolean",
                "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
              },
              "fixed_cost_shipping_price": {
                "type": "number",
                "format": "double",
                "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                "x-nullable": true,
                "minimum": 0
              },
              "purchasing_disabled": {
                "type": "boolean",
                "description": "If `true`, this variant will not be purchasable on the storefront."
              },
              "purchasing_disabled_message": {
                "type": "string",
                "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                "minLength": 0,
                "maxLength": 255
              },
              "upc": {
                "type": "string",
                "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                "x-nullable": true
              },
              "inventory_level": {
                "type": "integer",
                "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                "x-nullable": true
              },
              "inventory_warning_level": {
                "type": "integer",
                "description": "When the variant hits this inventory level, it is considered low stock.",
                "x-nullable": true
              },
              "bin_picking_number": {
                "type": "string",
                "description": "Identifies where in a warehouse the variant is located.",
                "x-nullable": true,
                "minLength": 0,
                "maxLength": 255
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "x-required": [
                  "put"
                ]
              }
            }
          }
        ],
        "title": "Variant Put"
      },
      "title": "Variants Collection Put"
    },
    "VariantPut": {
      "type": "object",
      "description": "The model for a PUT to update variants on a product.\n",
      "allOf": [
        {
          "type": "object",
          "description": "Common Variant properties.",
          "title": "Variant Base",
          "properties": {
            "cost_price": {
              "type": "number",
              "format": "double",
              "description": "The cost price of the variant. Not affected by Price List prices.",
              "x-nullable": true,
              "minimum": 0
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
              "x-nullable": true,
              "minimum": 0
            },
            "sale_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
              "x-nullable": true,
              "minimum": 0
            },
            "retail_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
              "x-nullable": true,
              "minimum": 0
            },
            "weight": {
              "type": "number",
              "format": "double",
              "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
              "x-nullable": true,
              "minimum": 0
            },
            "width": {
              "type": "number",
              "format": "double",
              "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "height": {
              "type": "number",
              "format": "double",
              "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "depth": {
              "type": "number",
              "format": "double",
              "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "is_free_shipping": {
              "type": "boolean",
              "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
            },
            "fixed_cost_shipping_price": {
              "type": "number",
              "format": "double",
              "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "purchasing_disabled": {
              "type": "boolean",
              "description": "If `true`, this variant will not be purchasable on the storefront."
            },
            "purchasing_disabled_message": {
              "type": "string",
              "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
              "minLength": 0,
              "maxLength": 255
            },
            "upc": {
              "type": "string",
              "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
              "x-nullable": true
            },
            "inventory_level": {
              "type": "integer",
              "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
              "x-nullable": true
            },
            "inventory_warning_level": {
              "type": "integer",
              "description": "When the variant hits this inventory level, it is considered low stock.",
              "x-nullable": true
            },
            "bin_picking_number": {
              "type": "string",
              "description": "Identifies where in a warehouse the variant is located.",
              "x-nullable": true,
              "minLength": 0,
              "maxLength": 255
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "x-required": [
                "put"
              ]
            }
          }
        }
      ],
      "title": "Variant Put"
    },
    "VariantProductPost": {
      "type": "object",
      "description": "The model for a POST to create variants on a product.\n",
      "allOf": [
        {
          "type": "object",
          "description": "Common Variant properties.",
          "title": "Variant Base",
          "properties": {
            "cost_price": {
              "type": "number",
              "format": "double",
              "description": "The cost price of the variant. Not affected by Price List prices.",
              "x-nullable": true,
              "minimum": 0
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
              "x-nullable": true,
              "minimum": 0
            },
            "sale_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
              "x-nullable": true,
              "minimum": 0
            },
            "retail_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
              "x-nullable": true,
              "minimum": 0
            },
            "weight": {
              "type": "number",
              "format": "double",
              "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
              "x-nullable": true,
              "minimum": 0
            },
            "width": {
              "type": "number",
              "format": "double",
              "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "height": {
              "type": "number",
              "format": "double",
              "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "depth": {
              "type": "number",
              "format": "double",
              "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "is_free_shipping": {
              "type": "boolean",
              "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
            },
            "fixed_cost_shipping_price": {
              "type": "number",
              "format": "double",
              "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "purchasing_disabled": {
              "type": "boolean",
              "description": "If `true`, this variant will not be purchasable on the storefront."
            },
            "purchasing_disabled_message": {
              "type": "string",
              "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
              "minLength": 0,
              "maxLength": 255
            },
            "upc": {
              "type": "string",
              "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
              "x-nullable": true
            },
            "inventory_level": {
              "type": "integer",
              "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
              "x-nullable": true
            },
            "inventory_warning_level": {
              "type": "integer",
              "description": "When the variant hits this inventory level, it is considered low stock.",
              "x-nullable": true
            },
            "bin_picking_number": {
              "type": "string",
              "description": "Identifies where in a warehouse the variant is located.",
              "x-nullable": true,
              "minLength": 0,
              "maxLength": 255
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "integer"
            },
            "sku": {
              "type": "string",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 255
            },
            "option_values": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "The model for a POST to create option values on a product.",
                "allOf": [
                  {
                    "type": "object",
                    "description": "Common Option Value Product properties.",
                    "title": "Option Value Product Base",
                    "properties": {
                      "option_display_name": {
                        "type": "string",
                        "description": "The name of the option.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "Color"
                      },
                      "label": {
                        "type": "string",
                        "description": "The label of the option value.\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 255,
                        "example": "Beige"
                      }
                    }
                  }
                ],
                "title": "Option Value Product Post"
              },
              "x-required": [
                "post"
              ]
            }
          }
        }
      ],
      "title": "Variant Product Post"
    },
    "VariantProductPut": {
      "type": "object",
      "description": "The model for a PUT to update variants on a product.\n",
      "allOf": [
        {
          "type": "object",
          "description": "Common Variant properties.",
          "title": "Variant Base",
          "properties": {
            "cost_price": {
              "type": "number",
              "format": "double",
              "description": "The cost price of the variant. Not affected by Price List prices.",
              "x-nullable": true,
              "minimum": 0
            },
            "price": {
              "type": "number",
              "format": "double",
              "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
              "x-nullable": true,
              "minimum": 0
            },
            "sale_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
              "x-nullable": true,
              "minimum": 0
            },
            "retail_price": {
              "type": "number",
              "format": "double",
              "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
              "x-nullable": true,
              "minimum": 0
            },
            "weight": {
              "type": "number",
              "format": "double",
              "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
              "x-nullable": true,
              "minimum": 0
            },
            "width": {
              "type": "number",
              "format": "double",
              "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "height": {
              "type": "number",
              "format": "double",
              "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "depth": {
              "type": "number",
              "format": "double",
              "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "is_free_shipping": {
              "type": "boolean",
              "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
            },
            "fixed_cost_shipping_price": {
              "type": "number",
              "format": "double",
              "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
              "x-nullable": true,
              "minimum": 0
            },
            "purchasing_disabled": {
              "type": "boolean",
              "description": "If `true`, this variant will not be purchasable on the storefront."
            },
            "purchasing_disabled_message": {
              "type": "string",
              "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
              "minLength": 0,
              "maxLength": 255
            },
            "upc": {
              "type": "string",
              "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
              "x-nullable": true
            },
            "inventory_level": {
              "type": "integer",
              "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
              "x-nullable": true
            },
            "inventory_warning_level": {
              "type": "integer",
              "description": "When the variant hits this inventory level, it is considered low stock.",
              "x-nullable": true
            },
            "bin_picking_number": {
              "type": "string",
              "description": "Identifies where in a warehouse the variant is located.",
              "x-nullable": true,
              "minLength": 0,
              "maxLength": 255
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "product_id": {
              "type": "integer"
            },
            "sku": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            }
          }
        }
      ],
      "title": "Variant Product Put"
    },
    "OptionValueProductBase": {
      "type": "object",
      "description": "Common Option Value Product properties.",
      "title": "Option Value Product Base",
      "properties": {
        "option_display_name": {
          "type": "string",
          "description": "The name of the option.\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 255,
          "example": "Color"
        },
        "label": {
          "type": "string",
          "description": "The label of the option value.\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 255,
          "example": "Beige"
        }
      }
    },
    "OptionValueProductPost": {
      "type": "object",
      "description": "The model for a POST to create option values on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Common Option Value Product properties.",
          "title": "Option Value Product Base",
          "properties": {
            "option_display_name": {
              "type": "string",
              "description": "The name of the option.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Color"
            },
            "label": {
              "type": "string",
              "description": "The label of the option value.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Beige"
            }
          }
        }
      ],
      "title": "Option Value Product Post"
    },
    "OptionValueVariant": {
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "description": "Common Option Value Product properties.",
          "title": "Option Value Product Base",
          "properties": {
            "option_display_name": {
              "type": "string",
              "description": "The name of the option.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Color"
            },
            "label": {
              "type": "string",
              "description": "The label of the option value.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Beige"
            }
          }
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer"
            },
            "option_id": {
              "type": "integer"
            }
          }
        }
      ],
      "title": "Option Value Variant"
    },
    "OptionValueVariantPost": {
      "type": "object",
      "description": "The model for a POST to create option values on a variant.",
      "properties": {
        "id": {
          "type": "integer",
          "x-required": [
            "post"
          ]
        },
        "option_id": {
          "type": "integer",
          "x-required": [
            "post"
          ]
        }
      },
      "title": "Option Value Variant Post"
    },
    "OptionValueResponse": {
      "type": "object",
      "title": "Option Value Response",
      "properties": {
        "data": {
          "allOf": [
            {
              "description": "Common Option Value properties.",
              "title": "Option Value Base",
              "properties": {
                "is_default": {
                  "type": "boolean",
                  "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                  "example": false
                },
                "label": {
                  "type": "string",
                  "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "example": "Green"
                },
                "sort_order": {
                  "type": "integer",
                  "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "x-required": [
                    "post"
                  ],
                  "example": 0
                },
                "value_data": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.\n\n"
                }
              },
              "required": [
                "label",
                "sort_order"
              ]
            },
            {
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the value; increments sequentially.\n"
                }
              }
            }
          ],
          "title": "Option Value",
          "type": "object"
        },
        "meta": {
          "type": "object",
          "description": "Empty meta object; may be used later.",
          "title": "Meta"
        }
      }
    },
    "OptionValueBase": {
      "type": "object",
      "description": "Common Option Value properties.",
      "title": "Option Value Base",
      "properties": {
        "is_default": {
          "type": "boolean",
          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
          "example": false
        },
        "label": {
          "type": "string",
          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
          "x-required": [
            "post"
          ],
          "example": "Green"
        },
        "sort_order": {
          "type": "integer",
          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "x-required": [
            "post"
          ],
          "example": 0
        },
        "value_data": {
          "type": [
            "object",
            "null"
          ],
          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.\n\n"
        }
      },
      "required": [
        "label",
        "sort_order"
      ]
    },
    "OptionValue": {
      "allOf": [
        {
          "description": "Common Option Value properties.",
          "title": "Option Value Base",
          "properties": {
            "is_default": {
              "type": "boolean",
              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
              "example": false
            },
            "label": {
              "type": "string",
              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
              "x-required": [
                "post"
              ],
              "example": "Green"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
              "minimum": -2147483648,
              "maximum": 2147483647,
              "x-required": [
                "post"
              ],
              "example": 0
            },
            "value_data": {
              "type": [
                "object",
                "null"
              ],
              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state. If no data is available, returns `null`.\n\n"
            }
          },
          "required": [
            "label",
            "sort_order"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the value; increments sequentially.\n"
            }
          }
        }
      ],
      "title": "Option Value",
      "type": "object"
    },
    "OptionValuePost": {
      "description": "The model for a POST to create option values on a product.",
      "allOf": [
        {
          "description": "Common Option Value properties.",
          "title": "Option Value Base",
          "properties": {
            "is_default": {
              "type": "boolean",
              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
              "example": false
            },
            "label": {
              "type": "string",
              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
              "x-required": [
                "post"
              ],
              "example": "Green"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
              "minimum": -2147483648,
              "maximum": 2147483647,
              "x-required": [
                "post"
              ],
              "example": 0
            },
            "value_data": {
              "type": "object",
              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
            }
          },
          "required": [
            "label",
            "sort_order"
          ]
        }
      ],
      "title": "Option Value Post",
      "type": "object"
    },
    "OptionValuePut": {
      "description": "The model for a PUT to update option values on a product.",
      "allOf": [
        {
          "description": "Common Option Value properties.",
          "title": "Option Value Base",
          "properties": {
            "is_default": {
              "type": "boolean",
              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
              "example": false
            },
            "label": {
              "type": "string",
              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
              "x-required": [
                "post"
              ],
              "example": "Green"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
              "minimum": -2147483648,
              "maximum": 2147483647,
              "x-required": [
                "post"
              ],
              "example": 0
            },
            "value_data": {
              "type": "object",
              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
            }
          },
          "required": [
            "label",
            "sort_order"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the value; increments sequentially.\n",
              "x-required": [
                "put"
              ]
            }
          }
        }
      ],
      "title": "Option Value Put",
      "type": "object"
    },
    "ProductImageBase": {
      "type": "object",
      "description": "Common ProductImage properties.",
      "properties": {
        "id": {
          "description": "The unique numeric ID of the image; increments sequentially.\n",
          "type": "integer"
        },
        "product_id": {
          "description": "The unique numeric identifier for the product with which the image is associated.\n",
          "type": "integer"
        },
        "image_file": {
          "description": "The local path to the original image file uploaded to BigCommerce.\n",
          "type": "string"
        },
        "url_zoom": {
          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
          "type": "string"
        },
        "url_standard": {
          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
          "type": "string"
        },
        "url_thumbnail": {
          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
          "type": "string"
        },
        "url_tiny": {
          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
          "type": "string"
        },
        "date_modified": {
          "format": "date-time",
          "description": "The date on which the product image was modified.\n",
          "type": "string"
        },
        "is_thumbnail": {
          "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
          "type": "boolean"
        },
        "sort_order": {
          "type": "integer",
          "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "description": {
          "description": "The description for the image.\n",
          "type": "string"
        }
      },
      "title": "Product Image Base"
    },
    "ProductImagePost": {
      "description": "The model for a POST to create an image on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Common ProductImage properties.",
          "properties": {
            "id": {
              "description": "The unique numeric ID of the image; increments sequentially.\n",
              "type": "integer"
            },
            "product_id": {
              "description": "The unique numeric identifier for the product with which the image is associated.\n",
              "type": "integer"
            },
            "image_file": {
              "description": "The local path to the original image file uploaded to BigCommerce.\n",
              "type": "string"
            },
            "url_zoom": {
              "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
              "type": "string"
            },
            "url_standard": {
              "description": "The standard URL for this image. By default, this is used for product-page images.\n",
              "type": "string"
            },
            "url_thumbnail": {
              "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
              "type": "string"
            },
            "url_tiny": {
              "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
              "type": "string"
            },
            "date_modified": {
              "format": "date-time",
              "description": "The date on which the product image was modified.\n",
              "type": "string"
            },
            "is_thumbnail": {
              "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
              "type": "boolean"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "description": {
              "description": "The description for the image.\n",
              "type": "string"
            }
          },
          "title": "Product Image Base"
        },
        {
          "properties": {
            "image_url": {
              "description": "Must be a fully qualified URL path, including protocol. Limit of 8MB per file. \n",
              "type": "string"
            },
            "image_file": {
              "description": "Must be sent as a multipart/form-data field in the request body.\n",
              "type": "string"
            }
          }
        }
      ],
      "title": "Product Image Post",
      "type": "object"
    },
    "ProductImagePut": {
      "type": "object",
      "description": "The model for a PUT to update applicable Product Image fields.",
      "allOf": [
        {
          "type": "object",
          "description": "Common ProductImage properties.",
          "properties": {
            "id": {
              "description": "The unique numeric ID of the image; increments sequentially.\n",
              "type": "integer"
            },
            "product_id": {
              "description": "The unique numeric identifier for the product with which the image is associated.\n",
              "type": "integer"
            },
            "image_file": {
              "description": "The local path to the original image file uploaded to BigCommerce.\n",
              "type": "string"
            },
            "url_zoom": {
              "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
              "type": "string"
            },
            "url_standard": {
              "description": "The standard URL for this image. By default, this is used for product-page images.\n",
              "type": "string"
            },
            "url_thumbnail": {
              "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
              "type": "string"
            },
            "url_tiny": {
              "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
              "type": "string"
            },
            "date_modified": {
              "format": "date-time",
              "description": "The date on which the product image was modified.\n",
              "type": "string"
            },
            "is_thumbnail": {
              "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
              "type": "boolean"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "description": {
              "description": "The description for the image.\n",
              "type": "string"
            }
          },
          "title": "Product Image Base"
        }
      ],
      "title": "Product Image Put"
    },
    "ProductVideoBase": {
      "type": "object",
      "description": "The model for a POST to create a video on a product.\n",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "description": {
          "type": "string",
          "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
        },
        "sort_order": {
          "type": "integer",
          "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "type": {
          "type": "string",
          "description": "The video type (a short name of a host site).\n",
          "enum": [
            "youtube"
          ]
        }
      },
      "title": "Product Video Base"
    },
    "ProductVideo": {
      "type": "object",
      "description": "A product video model.\n",
      "allOf": [
        {
          "type": "object",
          "description": "Common ProductVideo properties.",
          "properties": {
            "title": {
              "type": "string",
              "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "description": {
              "type": "string",
              "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "type": {
              "type": "string",
              "description": "The video type (a short name of a host site).\n",
              "enum": [
                "youtube"
              ]
            }
          },
          "title": "Product Video Base"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the product video; increments sequentially.\n"
            },
            "video_id": {
              "description": "The ID of the video on a host site.\n",
              "type": "string"
            },
            "product_id": {
              "description": "The unique numeric identifier for the product with which the image is associated.\n",
              "type": "integer"
            },
            "length": {
              "description": "Length of the video. This will be filled in according to data on a host site.\n",
              "type": "string"
            }
          }
        }
      ],
      "title": "Product Video"
    },
    "ProductVideoPost": {
      "type": "object",
      "description": "The model for a POST to create a video on a product.\n",
      "allOf": [
        {
          "type": "object",
          "description": "Common ProductVideo properties.",
          "properties": {
            "title": {
              "type": "string",
              "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "description": {
              "type": "string",
              "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "type": {
              "type": "string",
              "description": "The video type (a short name of a host site).\n",
              "enum": [
                "youtube"
              ]
            }
          },
          "title": "Product Video Base"
        },
        {
          "type": "object",
          "properties": {
            "video_id": {
              "type": "string",
              "description": "The ID of the video on a host site.\n",
              "x-required": [
                "post"
              ],
              "minLength": 0,
              "maxLength": 25
            }
          }
        }
      ],
      "title": "Product Video Post"
    },
    "ProductVideoPut": {
      "type": "object",
      "description": "The model for a PUT to update a video on a product.\n",
      "allOf": [
        {
          "type": "object",
          "description": "Common ProductVideo properties.",
          "properties": {
            "title": {
              "type": "string",
              "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "description": {
              "type": "string",
              "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "type": {
              "type": "string",
              "description": "The video type (a short name of a host site).\n",
              "enum": [
                "youtube"
              ]
            }
          },
          "title": "Product Video Base"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the product video; increments sequentially.\n",
              "x-required": [
                "put"
              ]
            }
          }
        }
      ],
      "title": "Product Video Put"
    },
    "ProductReviewBase": {
      "type": "object",
      "title": "Product Review Base",
      "properties": {
        "title": {
          "type": "string",
          "description": "The title for the product review.\nRequired in /POST.",
          "minLength": 0,
          "maxLength": 255
        },
        "text": {
          "type": "string",
          "description": "The text for the product review.\n"
        },
        "status": {
          "type": "string",
          "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
        },
        "rating": {
          "type": "integer",
          "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
        },
        "email": {
          "type": "string",
          "description": "The email of the reviewer. Must be a valid email, or an empty string."
        },
        "name": {
          "type": "string",
          "description": "The name of the reviewer.",
          "minLength": 0,
          "maxLength": 255
        },
        "date_reviewed": {
          "type": "string",
          "format": "date-time",
          "description": "Date the product was reviewed. Required in /POST.\n"
        }
      },
      "required": [
        "title",
        "date_reviewed"
      ]
    },
    "ProductReview": {
      "type": "object",
      "description": "A product review model.\n",
      "allOf": [
        {
          "type": "object",
          "title": "Product Review Base",
          "properties": {
            "title": {
              "type": "string",
              "description": "The title for the product review.\nRequired in /POST.",
              "minLength": 0,
              "maxLength": 255
            },
            "text": {
              "type": "string",
              "description": "The text for the product review.\n"
            },
            "status": {
              "type": "string",
              "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
            },
            "rating": {
              "type": "integer",
              "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
            },
            "email": {
              "type": "string",
              "description": "The email of the reviewer. Must be a valid email, or an empty string."
            },
            "name": {
              "type": "string",
              "description": "The name of the reviewer.",
              "minLength": 0,
              "maxLength": 255
            },
            "date_reviewed": {
              "type": "string",
              "format": "date-time",
              "description": "Date the product was reviewed. Required in /POST.\n"
            }
          },
          "required": [
            "title",
            "date_reviewed"
          ]
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "The unique numeric ID of the product review; increments sequentially.\n",
              "type": "integer"
            },
            "product_id": {
              "description": "The unique numeric identifier for the product with which the review is associated.\n",
              "type": "integer"
            },
            "date_created": {
              "type": "string",
              "format": "date-time",
              "description": "Date the product review was created.\n"
            },
            "date_modified": {
              "type": "string",
              "format": "date-time",
              "description": "Date the product review was modified.\n"
            }
          }
        }
      ],
      "title": "Product Review"
    },
    "ProductReviewPost": {
      "description": "The model for a POST to create a product review.\n",
      "allOf": [
        {
          "type": "object",
          "title": "Product Review Base",
          "properties": {
            "title": {
              "type": "string",
              "description": "The title for the product review.\nRequired in /POST.",
              "minLength": 0,
              "maxLength": 255
            },
            "text": {
              "type": "string",
              "description": "The text for the product review.\n"
            },
            "status": {
              "type": "string",
              "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
            },
            "rating": {
              "type": "integer",
              "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
            },
            "email": {
              "type": "string",
              "description": "The email of the reviewer. Must be a valid email, or an empty string."
            },
            "name": {
              "type": "string",
              "description": "The name of the reviewer.",
              "minLength": 0,
              "maxLength": 255
            },
            "date_reviewed": {
              "type": "string",
              "format": "date-time",
              "description": "Date the product was reviewed. Required in /POST.\n"
            }
          },
          "required": [
            "title",
            "date_reviewed"
          ]
        }
      ],
      "type": "object",
      "title": "Product Review Post"
    },
    "ProductReviewPut": {
      "type": "object",
      "description": "The model for a PUT to update a product review.\n",
      "allOf": [
        {
          "type": "object",
          "title": "Product Review Base",
          "properties": {
            "title": {
              "type": "string",
              "description": "The title for the product review.\nRequired in /POST.",
              "minLength": 0,
              "maxLength": 255
            },
            "text": {
              "type": "string",
              "description": "The text for the product review.\n"
            },
            "status": {
              "type": "string",
              "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
            },
            "rating": {
              "type": "integer",
              "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
            },
            "email": {
              "type": "string",
              "description": "The email of the reviewer. Must be a valid email, or an empty string."
            },
            "name": {
              "type": "string",
              "description": "The name of the reviewer.",
              "minLength": 0,
              "maxLength": 255
            },
            "date_reviewed": {
              "type": "string",
              "format": "date-time",
              "description": "Date the product was reviewed. Required in /POST.\n"
            }
          },
          "required": [
            "title",
            "date_reviewed"
          ]
        }
      ],
      "title": "Product Review Put"
    },
    "ImageResponse": {
      "description": "Image Response returns for:\n* Create Variant Image\n* Create Modifier Image\n* Create Category Image\n* Create Brand Image",
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "description": "An object containing a publicly accessible image URL, or a form post that contains an image file.",
          "title": "Resource Image",
          "properties": {
            "image_url": {
              "type": "string",
              "description": "A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file. \n"
            }
          }
        },
        "meta": {
          "type": "object",
          "description": "Empty meta object; may be used later.",
          "title": "Meta"
        }
      },
      "title": "Image Response"
    },
    "ResourceImage": {
      "type": "object",
      "description": "An object containing a publicly accessible image URL, or a form post that contains an image file.",
      "title": "Resource Image",
      "properties": {
        "image_url": {
          "type": "string",
          "description": "A public URL for a GIF, JPEG, or PNG image. Limit of 8MB per file. \n"
        }
      }
    },
    "ProductPost": {
      "type": "object",
      "description": "Common Product properties.",
      "title": "Product",
      "properties": {
        "name": {
          "type": "string",
          "description": "The product name.\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 255,
          "example": "Smith Journal 13"
        },
        "type": {
          "type": "string",
          "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
          "x-required": [
            "post"
          ],
          "enum": [
            "physical",
            "digital"
          ],
          "example": "physical"
        },
        "sku": {
          "type": "string",
          "description": "User defined product code/stock keeping unit (SKU).\n",
          "minLength": 0,
          "maxLength": 255,
          "example": "SM-13"
        },
        "description": {
          "type": "string",
          "description": "The product description, which can include HTML formatting.\n",
          "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
        },
        "weight": {
          "type": "number",
          "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "width": {
          "type": "number",
          "description": "Width of the product, which can be used when calculating shipping costs.\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "depth": {
          "type": "number",
          "description": "Depth of the product, which can be used when calculating shipping costs.\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "height": {
          "type": "number",
          "description": "Height of the product, which can be used when calculating shipping costs.\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "price": {
          "type": "number",
          "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
          "format": "float",
          "minimum": 0
        },
        "cost_price": {
          "type": "number",
          "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
          "format": "float",
          "minimum": 0
        },
        "retail_price": {
          "type": "number",
          "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
          "format": "float",
          "minimum": 0
        },
        "sale_price": {
          "type": "number",
          "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
          "format": "float",
          "minimum": 0
        },
        "tax_class_id": {
          "type": "integer",
          "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "product_tax_code": {
          "type": "string",
          "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "categories": {
          "type": "array",
          "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
          "x-required": [
            "post"
          ],
          "items": {
            "type": "integer"
          }
        },
        "brand_id": {
          "type": "integer",
          "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "inventory_level": {
          "type": "integer",
          "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "inventory_warning_level": {
          "type": "integer",
          "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "inventory_tracking": {
          "type": "string",
          "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
          "enum": [
            "none",
            "product",
            "variant"
          ]
        },
        "fixed_cost_shipping_price": {
          "type": "number",
          "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
          "format": "float",
          "minimum": 0
        },
        "is_free_shipping": {
          "type": "boolean",
          "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
        },
        "is_visible": {
          "type": "boolean",
          "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
        },
        "is_featured": {
          "type": "boolean",
          "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
        },
        "related_products": {
          "type": "array",
          "description": "An array of IDs for the related products.\n",
          "items": {
            "type": "integer"
          }
        },
        "warranty": {
          "type": "string",
          "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
          "minLength": 0,
          "maxLength": 65535
        },
        "bin_picking_number": {
          "type": "string",
          "description": "The BIN picking number for the product.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "layout_file": {
          "type": "string",
          "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
          "minLength": 0,
          "maxLength": 500
        },
        "upc": {
          "type": "string",
          "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "search_keywords": {
          "type": "string",
          "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
          "minLength": 0,
          "maxLength": 65535
        },
        "availability": {
          "type": "string",
          "enum": [
            "available",
            "disabled",
            "preorder"
          ],
          "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
        },
        "availability_description": {
          "type": "string",
          "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
          "minLength": 0,
          "maxLength": 255
        },
        "gift_wrapping_options_type": {
          "type": "string",
          "enum": [
            "any",
            "none",
            "list"
          ],
          "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
        },
        "gift_wrapping_options_list": {
          "type": "array",
          "description": "A list of gift-wrapping option IDs.\n",
          "items": {
            "type": "integer"
          }
        },
        "sort_order": {
          "type": "integer",
          "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "condition": {
          "type": "string",
          "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
          "enum": [
            "New",
            "Used",
            "Refurbished"
          ]
        },
        "is_condition_shown": {
          "type": "boolean",
          "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
        },
        "order_quantity_minimum": {
          "type": "integer",
          "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "order_quantity_maximum": {
          "type": "integer",
          "description": "The maximum quantity an order can contain when purchasing the product.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "page_title": {
          "type": "string",
          "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "meta_keywords": {
          "type": "array",
          "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
          "items": {
            "type": "string"
          }
        },
        "meta_description": {
          "type": "string",
          "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
          "minLength": 0,
          "maxLength": 65535
        },
        "view_count": {
          "type": "integer",
          "description": "The number of times the product has been viewed.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "preorder_release_date": {
          "type": "string",
          "format": "date-time",
          "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
          "x-nullable": true
        },
        "preorder_message": {
          "type": "string",
          "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "is_preorder_only": {
          "type": "boolean",
          "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
        },
        "is_price_hidden": {
          "type": "boolean",
          "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
        },
        "price_hidden_label": {
          "type": "string",
          "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
          "minLength": 0,
          "maxLength": 200
        },
        "custom_url": {
          "type": "object",
          "description": "The custom URL for the product on the storefront.",
          "title": "Custom Url Product",
          "properties": {
            "url": {
              "type": "string",
              "description": "Product URL on the storefront.\n",
              "x-url": true,
              "example": "/red-large-shirt"
            },
            "is_customized": {
              "type": "boolean",
              "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
            }
          }
        },
        "open_graph_type": {
          "type": "string",
          "description": "Type of product, defaults to `product`.\n",
          "enum": [
            "product",
            "album",
            "book",
            "drink",
            "food",
            "game",
            "movie",
            "song",
            "tv_show"
          ]
        },
        "open_graph_title": {
          "type": "string",
          "description": "Title of the product, if not specified the product name will be used instead.\n"
        },
        "open_graph_description": {
          "type": "string",
          "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
        },
        "open_graph_use_meta_description": {
          "type": "boolean",
          "description": "Flag to determine if product description or open graph description is used.\n"
        },
        "open_graph_use_product_name": {
          "type": "boolean",
          "description": "Flag to determine if product name or open graph name is used.\n"
        },
        "open_graph_use_image": {
          "type": "boolean",
          "description": "Flag to determine if product image or open graph image is used.\n"
        },
        "brand_name or brand_id": {
          "type": "string",
          "example": "Common Good",
          "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number"
        },
        "mpn": {
          "type": "string",
          "description": "Manufacturer Part Number"
        },
        "calculated_price": {
          "type": "number",
          "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
          "format": "float"
        },
        "reviews_rating_sum": {
          "type": "integer",
          "description": "The total rating for the product.\n",
          "example": 3.2
        },
        "reviews_count": {
          "type": "integer",
          "description": "The number of times the product has been rated.\n",
          "example": 4
        },
        "total_sold": {
          "type": "integer",
          "description": "The total quantity of this product sold.\n",
          "example": 80
        },
        "custom_fields": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
            "title": "Custom Field",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                "minimum": 1,
                "example": 6
              },
              "name": {
                "type": "string",
                "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 250,
                "example": "ISBN"
              },
              "value": {
                "type": "string",
                "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 250,
                "example": "1234567890123"
              }
            },
            "required": [
              "name",
              "value"
            ]
          }
        },
        "bulk_pricing_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkPricingRuleBase"
          }
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which the product was created.\n",
          "example": "2018-08-15T14:49:05+00:00"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which the product was modified.\n",
          "example": "2018-08-24T14:41:00+00:00"
        },
        "variants": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "description": "Common Variant properties.",
                "title": "Variant Base",
                "properties": {
                  "cost_price": {
                    "type": "number",
                    "format": "double",
                    "description": "The cost price of the variant. Not affected by Price List prices.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "sale_price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "retail_price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "weight": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "width": {
                    "type": "number",
                    "format": "double",
                    "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "height": {
                    "type": "number",
                    "format": "double",
                    "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "depth": {
                    "type": "number",
                    "format": "double",
                    "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "is_free_shipping": {
                    "type": "boolean",
                    "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                  },
                  "fixed_cost_shipping_price": {
                    "type": "number",
                    "format": "double",
                    "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "purchasing_disabled": {
                    "type": "boolean",
                    "description": "If `true`, this variant will not be purchasable on the storefront."
                  },
                  "purchasing_disabled_message": {
                    "type": "string",
                    "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                    "minLength": 0,
                    "maxLength": 255
                  },
                  "upc": {
                    "type": "string",
                    "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                    "x-nullable": true
                  },
                  "inventory_level": {
                    "type": "integer",
                    "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                    "x-nullable": true
                  },
                  "inventory_warning_level": {
                    "type": "integer",
                    "description": "When the variant hits this inventory level, it is considered low stock.",
                    "x-nullable": true
                  },
                  "bin_picking_number": {
                    "type": "string",
                    "description": "Identifies where in a warehouse the variant is located.",
                    "x-nullable": true,
                    "minLength": 0,
                    "maxLength": 255
                  }
                }
              },
              {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "sku_id": {
                    "type": "integer",
                    "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                    "x-nullable": true
                  },
                  "option_values": {
                    "type": "array",
                    "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Common Option Value Product properties.",
                          "title": "Option Value Product Base",
                          "properties": {
                            "option_display_name": {
                              "type": "string",
                              "description": "The name of the option.\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "Color"
                            },
                            "label": {
                              "type": "string",
                              "description": "The label of the option value.\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "Beige"
                            }
                          }
                        },
                        {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "option_id": {
                              "type": "integer"
                            }
                          }
                        }
                      ],
                      "title": "Option Value Variant",
                      "type": "object"
                    }
                  },
                  "calculated_price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                  }
                }
              }
            ],
            "type": "object"
          }
        },
        "base_variant_id": {
          "type": "integer",
          "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
          "example": 363
        },
        "id": {
          "type": "integer",
          "description": "ID of the product. Read Only"
        }
      }
    },
    "ProductPut": {
      "description": "The model for a PUT to update a product.",
      "allOf": [
        {
          "description": "Common Product properties.",
          "title": "Product",
          "properties": {
            "name": {
              "type": "string",
              "description": "The product name.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 255,
              "example": "Smith Journal 13"
            },
            "type": {
              "type": "string",
              "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
              "x-required": [
                "post"
              ],
              "enum": [
                "physical",
                "digital"
              ],
              "example": "physical"
            },
            "sku": {
              "type": "string",
              "description": "User defined product code/stock keeping unit (SKU).\n",
              "minLength": 0,
              "maxLength": 255,
              "example": "SM-13"
            },
            "description": {
              "type": "string",
              "description": "The product description, which can include HTML formatting.\n",
              "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
            },
            "weight": {
              "type": "number",
              "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
              "format": "float",
              "minimum": 0,
              "maximum": 9999999999
            },
            "width": {
              "type": "number",
              "description": "Width of the product, which can be used when calculating shipping costs.\n",
              "format": "float",
              "minimum": 0,
              "maximum": 9999999999
            },
            "depth": {
              "type": "number",
              "description": "Depth of the product, which can be used when calculating shipping costs.\n",
              "format": "float",
              "minimum": 0,
              "maximum": 9999999999
            },
            "height": {
              "type": "number",
              "description": "Height of the product, which can be used when calculating shipping costs.\n",
              "format": "float",
              "minimum": 0,
              "maximum": 9999999999
            },
            "price": {
              "type": "number",
              "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
              "format": "float",
              "minimum": 0
            },
            "cost_price": {
              "type": "number",
              "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
              "format": "float",
              "minimum": 0
            },
            "retail_price": {
              "type": "number",
              "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
              "format": "float",
              "minimum": 0
            },
            "sale_price": {
              "type": "number",
              "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
              "format": "float",
              "minimum": 0
            },
            "tax_class_id": {
              "type": "integer",
              "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
              "minimum": 0,
              "maximum": 1000000000
            },
            "product_tax_code": {
              "type": "string",
              "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "categories": {
              "type": "array",
              "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
              "x-required": [
                "post"
              ],
              "items": {
                "type": "integer"
              }
            },
            "brand_id": {
              "type": "integer",
              "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
              "minimum": 0,
              "maximum": 1000000000
            },
            "inventory_level": {
              "type": "integer",
              "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
              "minimum": 0,
              "maximum": 1000000000
            },
            "inventory_warning_level": {
              "type": "integer",
              "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
              "minimum": 0,
              "maximum": 1000000000
            },
            "inventory_tracking": {
              "type": "string",
              "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
              "enum": [
                "none",
                "product",
                "variant"
              ]
            },
            "fixed_cost_shipping_price": {
              "type": "number",
              "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
              "format": "float",
              "minimum": 0
            },
            "is_free_shipping": {
              "type": "boolean",
              "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
            },
            "is_visible": {
              "type": "boolean",
              "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
            },
            "is_featured": {
              "type": "boolean",
              "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
            },
            "related_products": {
              "type": "array",
              "description": "An array of IDs for the related products.\n",
              "items": {
                "type": "integer"
              }
            },
            "warranty": {
              "type": "string",
              "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
              "minLength": 0,
              "maxLength": 65535
            },
            "bin_picking_number": {
              "type": "string",
              "description": "The BIN picking number for the product.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "layout_file": {
              "type": "string",
              "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
              "minLength": 0,
              "maxLength": 500
            },
            "upc": {
              "type": "string",
              "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "search_keywords": {
              "type": "string",
              "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
              "minLength": 0,
              "maxLength": 65535
            },
            "availability": {
              "type": "string",
              "enum": [
                "available",
                "disabled",
                "preorder"
              ],
              "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
            },
            "availability_description": {
              "type": "string",
              "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
              "minLength": 0,
              "maxLength": 255
            },
            "gift_wrapping_options_type": {
              "type": "string",
              "enum": [
                "any",
                "none",
                "list"
              ],
              "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
            },
            "gift_wrapping_options_list": {
              "type": "array",
              "description": "A list of gift-wrapping option IDs.\n",
              "items": {
                "type": "integer"
              }
            },
            "sort_order": {
              "type": "integer",
              "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "condition": {
              "type": "string",
              "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
              "enum": [
                "New",
                "Used",
                "Refurbished"
              ]
            },
            "is_condition_shown": {
              "type": "boolean",
              "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
            },
            "order_quantity_minimum": {
              "type": "integer",
              "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
              "minimum": 0,
              "maximum": 1000000000
            },
            "order_quantity_maximum": {
              "type": "integer",
              "description": "The maximum quantity an order can contain when purchasing the product.\n",
              "minimum": 0,
              "maximum": 1000000000
            },
            "page_title": {
              "type": "string",
              "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "meta_keywords": {
              "type": "array",
              "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
              "items": {
                "type": "string"
              }
            },
            "meta_description": {
              "type": "string",
              "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
              "minLength": 0,
              "maxLength": 65535
            },
            "view_count": {
              "type": "integer",
              "description": "The number of times the product has been viewed.\n",
              "minimum": 0,
              "maximum": 1000000000
            },
            "preorder_release_date": {
              "type": "string",
              "format": "date-time",
              "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
              "x-nullable": true
            },
            "preorder_message": {
              "type": "string",
              "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
              "minLength": 0,
              "maxLength": 255
            },
            "is_preorder_only": {
              "type": "boolean",
              "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
            },
            "is_price_hidden": {
              "type": "boolean",
              "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
            },
            "price_hidden_label": {
              "type": "string",
              "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
              "minLength": 0,
              "maxLength": 200
            },
            "custom_url": {
              "type": "object",
              "description": "The custom URL for the product on the storefront.",
              "title": "Custom Url Product",
              "properties": {
                "url": {
                  "type": "string",
                  "description": "Product URL on the storefront.\n",
                  "x-url": true,
                  "example": "/red-large-shirt"
                },
                "is_customized": {
                  "type": "boolean",
                  "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                }
              }
            },
            "open_graph_type": {
              "type": "string",
              "description": "Type of product, defaults to `product`.\n",
              "enum": [
                "product",
                "album",
                "book",
                "drink",
                "food",
                "game",
                "movie",
                "song",
                "tv_show"
              ]
            },
            "open_graph_title": {
              "type": "string",
              "description": "Title of the product, if not specified the product name will be used instead.\n"
            },
            "open_graph_description": {
              "type": "string",
              "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
            },
            "open_graph_use_meta_description": {
              "type": "boolean",
              "description": "Flag to determine if product description or open graph description is used.\n"
            },
            "open_graph_use_product_name": {
              "type": "boolean",
              "description": "Flag to determine if product name or open graph name is used.\n"
            },
            "open_graph_use_image": {
              "type": "boolean",
              "description": "Flag to determine if product image or open graph image is used.\n"
            },
            "brand_name or brand_id": {
              "type": "string",
              "example": "Common Good",
              "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
            },
            "gtin": {
              "type": "string",
              "description": "Global Trade Item Number"
            },
            "mpn": {
              "type": "string",
              "description": "Manufacturer Part Number"
            },
            "calculated_price": {
              "type": "number",
              "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
              "format": "float"
            },
            "reviews_rating_sum": {
              "type": "integer",
              "description": "The total rating for the product.\n",
              "example": 3.2
            },
            "reviews_count": {
              "type": "integer",
              "description": "The number of times the product has been rated.\n",
              "example": 4
            },
            "total_sold": {
              "type": "integer",
              "description": "The total quantity of this product sold.\n",
              "example": 80
            },
            "custom_fields": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                "title": "Custom Field",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                    "minimum": 1,
                    "example": 6
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                    "x-required": [
                      "post"
                    ],
                    "minLength": 1,
                    "maxLength": 250,
                    "example": "ISBN"
                  },
                  "value": {
                    "type": "string",
                    "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                    "x-required": [
                      "post"
                    ],
                    "minLength": 1,
                    "maxLength": 250,
                    "example": "1234567890123"
                  }
                },
                "required": [
                  "name",
                  "value"
                ]
              }
            },
            "bulk_pricing_rules": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BulkPricingRuleBase"
              }
            },
            "date_created": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which the product was created.\n",
              "example": "2018-08-15T14:49:05+00:00"
            },
            "date_modified": {
              "type": "string",
              "format": "date-time",
              "description": "The date on which the product was modified.\n",
              "example": "2018-08-24T14:41:00+00:00"
            },
            "variants": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "description": "Common Variant properties.",
                    "title": "Variant Base",
                    "properties": {
                      "cost_price": {
                        "type": "number",
                        "format": "double",
                        "description": "The cost price of the variant. Not affected by Price List prices.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "sale_price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "retail_price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "weight": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "width": {
                        "type": "number",
                        "format": "double",
                        "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "height": {
                        "type": "number",
                        "format": "double",
                        "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "depth": {
                        "type": "number",
                        "format": "double",
                        "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "is_free_shipping": {
                        "type": "boolean",
                        "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                      },
                      "fixed_cost_shipping_price": {
                        "type": "number",
                        "format": "double",
                        "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "purchasing_disabled": {
                        "type": "boolean",
                        "description": "If `true`, this variant will not be purchasable on the storefront."
                      },
                      "purchasing_disabled_message": {
                        "type": "string",
                        "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "upc": {
                        "type": "string",
                        "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                        "x-nullable": true
                      },
                      "inventory_level": {
                        "type": "integer",
                        "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                        "x-nullable": true
                      },
                      "inventory_warning_level": {
                        "type": "integer",
                        "description": "When the variant hits this inventory level, it is considered low stock.",
                        "x-nullable": true
                      },
                      "bin_picking_number": {
                        "type": "string",
                        "description": "Identifies where in a warehouse the variant is located.",
                        "x-nullable": true,
                        "minLength": 0,
                        "maxLength": 255
                      }
                    }
                  },
                  {
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "product_id": {
                        "type": "integer"
                      },
                      "sku": {
                        "type": "string"
                      },
                      "sku_id": {
                        "type": "integer",
                        "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                        "x-nullable": true
                      },
                      "option_values": {
                        "type": "array",
                        "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                        "items": {
                          "allOf": [
                            {
                              "description": "Common Option Value Product properties.",
                              "title": "Option Value Product Base",
                              "properties": {
                                "option_display_name": {
                                  "type": "string",
                                  "description": "The name of the option.\n",
                                  "x-required": [
                                    "post"
                                  ],
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "example": "Color"
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The label of the option value.\n",
                                  "x-required": [
                                    "post"
                                  ],
                                  "minLength": 1,
                                  "maxLength": 255,
                                  "example": "Beige"
                                }
                              }
                            },
                            {
                              "properties": {
                                "id": {
                                  "type": "integer"
                                },
                                "option_id": {
                                  "type": "integer"
                                }
                              }
                            }
                          ],
                          "title": "Option Value Variant",
                          "type": "object"
                        }
                      },
                      "calculated_price": {
                        "type": "number",
                        "format": "double",
                        "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                      }
                    }
                  }
                ],
                "type": "object"
              }
            },
            "base_variant_id": {
              "type": "integer",
              "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
              "example": 363
            },
            "id": {
              "type": "integer",
              "description": "ID of the product. Read Only"
            }
          }
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numerical ID of the product; increments sequentially.\n",
              "x-required": [
                "put"
              ]
            },
            "custom_fields": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                "title": "Custom Field",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                    "minimum": 1,
                    "example": 6
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                    "x-required": [
                      "post"
                    ],
                    "minLength": 1,
                    "maxLength": 250,
                    "example": "ISBN"
                  },
                  "value": {
                    "type": "string",
                    "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                    "x-required": [
                      "post"
                    ],
                    "minLength": 1,
                    "maxLength": 250,
                    "example": "1234567890123"
                  }
                },
                "required": [
                  "name",
                  "value"
                ]
              }
            },
            "bulk_pricing_rules": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Common BulkPricingRule properties",
                "title": "Bulk Pricing Rule",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                  },
                  "quantity_min": {
                    "type": "integer",
                    "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                    "x-required": [
                      "post"
                    ],
                    "minimum": 0,
                    "example": 10
                  },
                  "quantity_max": {
                    "type": "integer",
                    "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                    "x-required": [
                      "post"
                    ],
                    "minimum": 0,
                    "example": 50
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                    "x-required": [
                      "post"
                    ],
                    "enum": [
                      "price",
                      "percent",
                      "fixed"
                    ],
                    "example": "price"
                  },
                  "amount": {
                    "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
                    "example": 10,
                    "type": "integer"
                  }
                },
                "required": [
                  "quantity_min",
                  "quantity_max",
                  "type",
                  "amount"
                ]
              }
            },
            "variants": {
              "type": "array",
              "items": {
                "description": "The model for a PUT to update variants on a product.\n",
                "allOf": [
                  {
                    "description": "Common Variant properties.",
                    "title": "Variant Base",
                    "properties": {
                      "cost_price": {
                        "type": "number",
                        "format": "double",
                        "description": "The cost price of the variant. Not affected by Price List prices.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "sale_price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "retail_price": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "weight": {
                        "type": "number",
                        "format": "double",
                        "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "width": {
                        "type": "number",
                        "format": "double",
                        "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "height": {
                        "type": "number",
                        "format": "double",
                        "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "depth": {
                        "type": "number",
                        "format": "double",
                        "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "is_free_shipping": {
                        "type": "boolean",
                        "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                      },
                      "fixed_cost_shipping_price": {
                        "type": "number",
                        "format": "double",
                        "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                        "x-nullable": true,
                        "minimum": 0
                      },
                      "purchasing_disabled": {
                        "type": "boolean",
                        "description": "If `true`, this variant will not be purchasable on the storefront."
                      },
                      "purchasing_disabled_message": {
                        "type": "string",
                        "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                        "minLength": 0,
                        "maxLength": 255
                      },
                      "upc": {
                        "type": "string",
                        "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                        "x-nullable": true
                      },
                      "inventory_level": {
                        "type": "integer",
                        "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                        "x-nullable": true
                      },
                      "inventory_warning_level": {
                        "type": "integer",
                        "description": "When the variant hits this inventory level, it is considered low stock.",
                        "x-nullable": true
                      },
                      "bin_picking_number": {
                        "type": "string",
                        "description": "Identifies where in a warehouse the variant is located.",
                        "x-nullable": true,
                        "minLength": 0,
                        "maxLength": 255
                      }
                    }
                  },
                  {
                    "properties": {
                      "product_id": {
                        "type": "integer"
                      },
                      "sku": {
                        "type": "string",
                        "minLength": 1,
                        "maxLength": 255
                      }
                    }
                  }
                ],
                "title": "Variant Product Put",
                "type": "object"
              }
            }
          }
        }
      ],
      "title": "Product Put",
      "type": "object"
    },
    "CatalogSummary": {
      "type": "object",
      "description": "Catalog Summary object describes a lightweight summary of the catalog.",
      "title": "Catalog Summary",
      "properties": {
        "inventory_count": {
          "type": "integer",
          "description": "A count of all inventory items in the catalog.\n",
          "example": 2000
        },
        "inventory_value": {
          "type": "number",
          "format": "double",
          "description": "Total value of store's inventory.\n",
          "example": 267000
        },
        "primary_category_id": {
          "type": "integer",
          "description": "ID of the category containing the most products.\n",
          "example": 23
        },
        "primary_category_name": {
          "type": "string",
          "description": "Name of the category containing the most products.\n",
          "example": "Shop All"
        },
        "variant_count": {
          "type": "integer",
          "description": "Total number of variants",
          "example": 46
        },
        "highest_variant_price": {
          "type": "number",
          "format": "double",
          "description": "Highest priced variant",
          "example": 249
        },
        "average_variant_price": {
          "type": "number",
          "format": "double",
          "example": 83.07978261,
          "description": "Average price of all variants"
        },
        "lowest_variant_price": {
          "type": "string",
          "example": "7",
          "description": "Lowest priced variant in the store"
        },
        "oldest_variant_date": {
          "type": "string",
          "example": "2018-08-15"
        },
        "newest_variant_date": {
          "type": "string",
          "example": "2018-08-16"
        }
      }
    },
    "MetafieldBase": {
      "type": "object",
      "description": "Common Metafield properties.",
      "title": "Metafield",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique ID of the *Metafield*. Read-Only.",
          "example": 6
        },
        "permission_set": {
          "type": "string",
          "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
          "enum": [
            "app_only",
            "read",
            "write"
          ],
          "x-required": [
            "post"
          ]
        },
        "namespace": {
          "type": "string",
          "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 64,
          "example": "Warehouse Locations"
        },
        "key": {
          "type": "string",
          "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 64,
          "example": "Location"
        },
        "value": {
          "type": "string",
          "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 65535,
          "example": "4HG"
        },
        "description": {
          "type": "string",
          "description": "Description for the metafields.\n",
          "minLength": 0,
          "maxLength": 255,
          "example": "Location in the warehouse"
        },
        "resource_type": {
          "type": "string",
          "description": "The type of resource with which the metafield is associated.\n",
          "enum": [
            "category",
            "brand",
            "product",
            "variant"
          ],
          "x-required": [
            "post"
          ],
          "example": "product"
        },
        "resource_id": {
          "type": "integer",
          "description": "The ID for the resource with which the metafield is associated.\n",
          "x-required": [
            "post"
          ],
          "minimum": 0,
          "maximum": 10000000000,
          "example": 111
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time of the metafield's creation. Read-Only.\n",
          "example": "2018-05-07T20:14:17+00:00"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Date and time when the metafield was last updated. Read-Only.\n",
          "example": "2018-05-07T20:14:17+00:00"
        }
      },
      "required": [
        "permission_set",
        "namespace",
        "key",
        "value"
      ]
    },
    "ComplexRuleBase": {
      "type": "object",
      "description": "Common ComplexRule properties.",
      "title": "Complex Rule",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique numeric ID of the rule; increments sequentially.\nRead-Only",
          "example": 5
        },
        "product_id": {
          "type": "integer",
          "description": "The unique numeric ID of the product with which the rule is associated; increments sequentially.\n",
          "x-nullable": true,
          "x-required": [
            "post",
            "put"
          ],
          "example": 67
        },
        "sort_order": {
          "type": "integer",
          "description": "The priority to give this rule when making adjustments to the product properties.\n",
          "minimum": -2147483648,
          "maximum": 2147483647,
          "example": 0
        },
        "enabled": {
          "type": "boolean",
          "description": "Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.\n",
          "example": true
        },
        "stop": {
          "type": "boolean",
          "description": "Flag for determining whether other rules should not be applied after this rule has been applied.\n"
        },
        "purchasing_disabled": {
          "type": "boolean",
          "description": "Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.\n"
        },
        "purchasing_disabled_message": {
          "type": "string",
          "description": "Message displayed on the storefront when a rule disables the purchasing of a product.\n",
          "minLength": 0,
          "maxLength": 255,
          "example": "This product is not available at this time."
        },
        "purchasing_hidden": {
          "type": "boolean",
          "description": "Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.\n"
        },
        "image_url": {
          "type": "string",
          "description": "The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file. \n",
          "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
        },
        "price_adjuster": {
          "type": "object",
          "title": "Adjuster",
          "properties": {
            "adjuster": {
              "type": "string",
              "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
              "enum": [
                "relative",
                "percentage"
              ],
              "x-nullable": true
            },
            "adjuster_value": {
              "type": "number",
              "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
              "example": 5
            }
          },
          "description": "Adjuster for Complex Rules."
        },
        "weight_adjuster": {
          "type": "object",
          "title": "Adjuster",
          "properties": {
            "adjuster": {
              "type": "string",
              "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
              "enum": [
                "relative",
                "percentage"
              ],
              "x-nullable": true
            },
            "adjuster_value": {
              "type": "number",
              "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
              "example": 5
            }
          },
          "description": "Adjuster for Complex Rules."
        },
        "conditions": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`'s, or else reference a `modifier_value_id` and a `variant_id`.",
            "title": "Complex Rule Condition",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique numeric ID of the rule condition; increments sequentially. Read-Only\n",
                "x-nullable": true,
                "example": 3
              },
              "rule_id": {
                "type": "integer",
                "description": "The unique numeric ID of the rule with which the condition is associated.\nRead-Only",
                "x-nullable": true,
                "example": 4
              },
              "modifier_id": {
                "type": "integer",
                "description": "The unique numeric ID of the modifier with which the rule condition is associated.\nRequired in /POST.",
                "x-nullable": true,
                "example": 55
              },
              "modifier_value_id": {
                "type": "integer",
                "description": "The unique numeric ID of the modifier value with which the rule condition is associated.\nRequired in /POST.",
                "x-nullable": true,
                "example": 256
              },
              "variant_id": {
                "type": "integer",
                "description": "The unique numeric ID of the variant with which the rule condition is associated.\nRequired in /POST.",
                "x-nullable": true,
                "example": 1
              },
              "combination_id": {
                "type": "integer",
                "description": "(READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.\n"
              }
            },
            "required": [
              "modifier_id",
              "modifier_value_id",
              "variant_id"
            ]
          }
        }
      }
    },
    "CustomFieldBase": {
      "type": "object",
      "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
      "title": "Custom Field",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
          "minimum": 1,
          "example": 6
        },
        "name": {
          "type": "string",
          "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 250,
          "example": "ISBN"
        },
        "value": {
          "type": "string",
          "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 250,
          "example": "1234567890123"
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "CustomFieldPost": {
      "type": "object",
      "description": "The model for a POST to create a custom field on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
          "title": "Custom Field",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
              "minimum": 1,
              "example": 6
            },
            "name": {
              "type": "string",
              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 250,
              "example": "ISBN"
            },
            "value": {
              "type": "string",
              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 250,
              "example": "1234567890123"
            }
          },
          "required": [
            "name",
            "value"
          ]
        }
      ],
      "title": "Custom Field Post"
    },
    "CustomFieldPut": {
      "type": "object",
      "description": "The model for a PUT to update a custom field on a product.",
      "allOf": [
        {
          "type": "object",
          "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
          "title": "Custom Field",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
              "minimum": 1,
              "example": 6
            },
            "name": {
              "type": "string",
              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 250,
              "example": "ISBN"
            },
            "value": {
              "type": "string",
              "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 250,
              "example": "1234567890123"
            }
          },
          "required": [
            "name",
            "value"
          ]
        }
      ],
      "title": "Custom Field Put"
    },
    "ComplexRuleConditionBase": {
      "type": "object",
      "description": "Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`'s, or else reference a `modifier_value_id` and a `variant_id`.",
      "title": "Complex Rule Condition",
      "properties": {
        "id": {
          "type": "integer",
          "description": "The unique numeric ID of the rule condition; increments sequentially. Read-Only\n",
          "x-nullable": true,
          "example": 3
        },
        "rule_id": {
          "type": "integer",
          "description": "The unique numeric ID of the rule with which the condition is associated.\nRead-Only",
          "x-nullable": true,
          "example": 4
        },
        "modifier_id": {
          "type": "integer",
          "description": "The unique numeric ID of the modifier with which the rule condition is associated.\nRequired in /POST.",
          "x-nullable": true,
          "example": 55
        },
        "modifier_value_id": {
          "type": "integer",
          "description": "The unique numeric ID of the modifier value with which the rule condition is associated.\nRequired in /POST.",
          "x-nullable": true,
          "example": 256
        },
        "variant_id": {
          "type": "integer",
          "description": "The unique numeric ID of the variant with which the rule condition is associated.\nRequired in /POST.",
          "x-nullable": true,
          "example": 1
        },
        "combination_id": {
          "type": "integer",
          "description": "(READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.\n"
        }
      },
      "required": [
        "modifier_id",
        "modifier_value_id",
        "variant_id"
      ]
    },
    "CustomUrlProduct": {
      "type": "object",
      "description": "The custom URL for the product on the storefront.",
      "title": "Custom Url Product",
      "properties": {
        "url": {
          "type": "string",
          "description": "Product URL on the storefront.\n",
          "x-url": true,
          "example": "/red-large-shirt"
        },
        "is_customized": {
          "type": "boolean",
          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
        }
      }
    },
    "CustomUrlBrand": {
      "type": "object",
      "description": "The custom URL for the brand on the storefront.",
      "title": "Custom Url Brand",
      "properties": {
        "url": {
          "type": "string",
          "description": "Brand URL on the storefront.\n",
          "x-url": true,
          "example": "/shoes"
        },
        "is_customized": {
          "type": "boolean",
          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
          "example": true
        }
      }
    },
    "CustomUrlCategory": {
      "type": "object",
      "description": "The custom URL for the category on the storefront.",
      "title": "Custom Url Category",
      "properties": {
        "url": {
          "type": "string",
          "description": "Category URL on the storefront.\n",
          "x-required": [
            "post",
            "put"
          ],
          "x-url": true,
          "minLength": 0,
          "maxLength": 255,
          "example": "/shoes"
        },
        "is_customized": {
          "type": "boolean",
          "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
          "x-required": [
            "post",
            "put"
          ]
        }
      }
    },
    "BulkPricingRuleBase": {
      "type": "object",
      "description": "Common Bulk Pricing Rule properties",
      "title": "Bulk Pricing Rule",
      "properties": {
        "id": {
          "type": "integer",
          "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
        },
        "quantity_min": {
          "type": "integer",
          "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
          "x-required": [
            "post"
          ],
          "minimum": 0,
          "example": 10
        },
        "quantity_max": {
          "type": "integer",
          "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
          "x-required": [
            "post"
          ],
          "minimum": 0,
          "example": 50
        },
        "type": {
          "type": "string",
          "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
          "x-required": [
            "post"
          ],
          "enum": [
            "price",
            "percent",
            "fixed"
          ],
          "example": "price"
        },
        "amount": {
          "type": "integer",
          "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
          "example": 10
        }
      },
      "required": [
        "quantity_min",
        "quantity_max",
        "type",
        "amount"
      ]
    },
    "OptionConfig": {
      "type": "object",
      "title": "Option Config",
      "description": "The values for option config can vary based on the Modifier created.",
      "properties": {
        "default_value": {
          "type": "string",
          "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
        },
        "checked_by_default": {
          "type": "boolean",
          "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
        },
        "checkbox_label": {
          "type": "string",
          "description": "(checkbox) Label displayed for the checkbox option.\n"
        },
        "date_limited": {
          "type": "boolean",
          "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
        },
        "date_limit_mode": {
          "type": "string",
          "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
          "enum": [
            "earliest",
            "range",
            "latest"
          ],
          "example": "range"
        },
        "date_earliest_value": {
          "type": "string",
          "format": "date",
          "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
          "example": "2018-08-31T05:00:00+00:00"
        },
        "date_latest_value": {
          "type": "string",
          "format": "date",
          "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
          "example": "2019-01-01T05:00:00+00:00"
        },
        "file_types_mode": {
          "type": "string",
          "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
          "enum": [
            "specific",
            "all"
          ],
          "example": "specific"
        },
        "file_types_supported": {
          "type": "array",
          "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
          "example": "images, documents, other",
          "items": {
            "type": "string"
          }
        },
        "file_types_other": {
          "type": "array",
          "description": "(file) A list of other file types allowed with the file upload option.\n",
          "example": "pdf",
          "items": {
            "type": "string"
          }
        },
        "file_max_size": {
          "type": "integer",
          "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
          "example": 5
        },
        "text_characters_limited": {
          "type": "boolean",
          "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
        },
        "text_min_length": {
          "type": "integer",
          "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
          "example": 1
        },
        "text_max_length": {
          "type": "integer",
          "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
          "example": 55
        },
        "text_lines_limited": {
          "type": "boolean",
          "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
          "example": true
        },
        "text_max_lines": {
          "type": "integer",
          "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
          "example": 4
        },
        "number_limited": {
          "type": "boolean",
          "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
          "example": true
        },
        "number_limit_mode": {
          "type": "string",
          "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
          "enum": [
            "lowest",
            "highest",
            "range"
          ],
          "example": "lowest"
        },
        "number_lowest_value": {
          "type": "number",
          "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
          "example": 100
        },
        "number_highest_value": {
          "type": "number",
          "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
        },
        "number_integers_only": {
          "type": "boolean",
          "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
          "example": false
        },
        "product_list_adjusts_inventory": {
          "type": "boolean",
          "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
        },
        "product_list_adjusts_pricing": {
          "type": "boolean",
          "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
        },
        "product_list_shipping_calc": {
          "type": "string",
          "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
          "enum": [
            "none",
            "weight",
            "package"
          ],
          "example": "weight"
        }
      }
    },
    "Adjuster": {
      "type": "object",
      "title": "Adjuster",
      "properties": {
        "adjuster": {
          "type": "string",
          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
          "enum": [
            "relative",
            "percentage"
          ],
          "x-nullable": true
        },
        "adjuster_value": {
          "type": "number",
          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
          "example": 5
        }
      },
      "description": "Adjuster for Complex Rules."
    },
    "VariantsBatchErrorResponse": {
      "description": "Errors during batch usage for the BigCommerce API.\n",
      "type": "object",
      "properties": {
        "batch_errors": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "type": "object",
                "description": "Error payload for the BigCommerce API.\n",
                "properties": {
                  "status": {
                    "description": "The HTTP status code.\n",
                    "type": "integer"
                  },
                  "title": {
                    "description": "The error title describing the particular error.\n",
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "instance": {
                    "type": "string"
                  }
                },
                "title": "Base Error"
              },
              {
                "type": "object",
                "properties": {
                  "errors": {
                    "type": "object",
                    "title": "Detailed Errors",
                    "properties": {
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            ],
            "title": "Error Response"
          }
        }
      },
      "title": "Variants Batch Error Response"
    },
    "CollectionMeta": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.",
      "properties": {
        "pagination": {
          "type": "object",
          "description": "Data about the response, including pagination and collection totals.",
          "title": "Pagination",
          "properties": {
            "total": {
              "type": "integer",
              "description": "Total number of items in the result set.\n",
              "example": 36
            },
            "count": {
              "type": "integer",
              "description": "Total number of items in the collection response.\n",
              "example": 36
            },
            "per_page": {
              "type": "integer",
              "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
              "example": 50
            },
            "current_page": {
              "type": "integer",
              "description": "The page you are currently on within the collection.\n",
              "example": 1
            },
            "total_pages": {
              "type": "integer",
              "description": "The total number of pages in the collection.\n",
              "example": 1
            },
            "links": {
              "type": "object",
              "description": "Pagination links for the previous and next parts of the whole collection.\n",
              "properties": {
                "previous": {
                  "type": "string",
                  "description": "Link to the previous page returned in the response.\n"
                },
                "current": {
                  "type": "string",
                  "description": "Link to the current page returned in the response.\n",
                  "example": "?page=1&limit=50"
                },
                "next": {
                  "type": "string",
                  "description": "Link to the next page returned in the response.\n"
                }
              }
            }
          }
        }
      },
      "title": "Collection Meta"
    },
    "Pagination": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.",
      "title": "Pagination",
      "properties": {
        "total": {
          "type": "integer",
          "description": "Total number of items in the result set.\n",
          "example": 36
        },
        "count": {
          "type": "integer",
          "description": "Total number of items in the collection response.\n",
          "example": 36
        },
        "per_page": {
          "type": "integer",
          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
          "example": 50
        },
        "current_page": {
          "type": "integer",
          "description": "The page you are currently on within the collection.\n",
          "example": 1
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages in the collection.\n",
          "example": 1
        },
        "links": {
          "type": "object",
          "description": "Pagination links for the previous and next parts of the whole collection.\n",
          "properties": {
            "previous": {
              "type": "string",
              "description": "Link to the previous page returned in the response.\n"
            },
            "current": {
              "type": "string",
              "description": "Link to the current page returned in the response.\n",
              "example": "?page=1&limit=50"
            },
            "next": {
              "type": "string",
              "description": "Link to the next page returned in the response.\n"
            }
          }
        }
      }
    },
    "Meta": {
      "type": "object",
      "description": "Empty meta object; may be used later.",
      "title": "Meta"
    },
    "ErrorResponse": {
      "allOf": [
        {
          "type": "object",
          "description": "Error payload for the BigCommerce API.\n",
          "properties": {
            "status": {
              "description": "The HTTP status code.\n",
              "type": "integer"
            },
            "title": {
              "description": "The error title describing the particular error.\n",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "instance": {
              "type": "string"
            }
          },
          "title": "Base Error"
        },
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "object",
              "title": "Detailed Errors",
              "properties": {
                "additionalProperties": {
                  "type": "string"
                }
              }
            }
          }
        }
      ],
      "title": "Error Response"
    },
    "BaseError": {
      "type": "object",
      "description": "Error payload for the BigCommerce API.\n",
      "properties": {
        "status": {
          "description": "The HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the particular error.\n",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "Base Error"
    },
    "NotFound": {
      "description": "Error payload for the BigCommerce API.",
      "type": "object",
      "properties": {
        "status": {
          "description": "404 HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the particular error.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "Not Found"
    },
    "GiftCertificate": {
      "type": "object",
      "description": "A gift-certificate model.",
      "title": "Gift Certificate",
      "properties": {
        "code": {
          "description": "The gift-certificate code.\n",
          "type": "string",
          "example": "MB345"
        },
        "original_balance": {
          "description": "The balance on a gift certificate when it was purchased.\n",
          "type": "number",
          "format": "float",
          "example": 100
        },
        "starting_balance": {
          "description": "The balance on a gift certificate at the time of this purchase.\n",
          "type": "number",
          "format": "float",
          "example": 100
        },
        "remaining_balance": {
          "description": "The remaining balance on a gift certificate.\n",
          "type": "number",
          "format": "float",
          "example": 35.42
        },
        "status": {
          "description": "The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.\n",
          "type": "string",
          "enum": [
            "active",
            "pending",
            "disabled",
            "expired"
          ]
        }
      }
    },
    "NoContent": {
      "description": "No-content response for the BigCommerce API.",
      "type": "object",
      "properties": {
        "status": {
          "description": "204 HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the situation.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "No Content"
    },
    "DetailedErrors": {
      "type": "object",
      "title": "Detailed Errors",
      "properties": {
        "additionalProperties": {
          "type": "string"
        }
      }
    },
    "Product": {
      "type": "object",
      "description": "Common Product properties.",
      "title": "Product",
      "properties": {
        "name": {
          "type": "string",
          "description": "The product name.\n",
          "x-required": [
            "post"
          ],
          "minLength": 1,
          "maxLength": 255,
          "example": "Smith Journal 13"
        },
        "type": {
          "type": "string",
          "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
          "x-required": [
            "post"
          ],
          "enum": [
            "physical",
            "digital"
          ],
          "example": "physical"
        },
        "sku": {
          "type": "string",
          "description": "User defined product code/stock keeping unit (SKU).\n",
          "minLength": 0,
          "maxLength": 255,
          "example": "SM-13"
        },
        "description": {
          "type": "string",
          "description": "The product description, which can include HTML formatting.\n",
          "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
        },
        "weight": {
          "type": "number",
          "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "width": {
          "type": "number",
          "description": "Width of the product, which can be used when calculating shipping costs.\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "depth": {
          "type": "number",
          "description": "Depth of the product, which can be used when calculating shipping costs.\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "height": {
          "type": "number",
          "description": "Height of the product, which can be used when calculating shipping costs.\n",
          "format": "float",
          "minimum": 0,
          "maximum": 9999999999
        },
        "price": {
          "type": "number",
          "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
          "format": "float",
          "minimum": 0
        },
        "cost_price": {
          "type": "number",
          "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
          "format": "float",
          "minimum": 0
        },
        "retail_price": {
          "type": "number",
          "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
          "format": "float",
          "minimum": 0
        },
        "sale_price": {
          "type": "number",
          "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
          "format": "float",
          "minimum": 0
        },
        "tax_class_id": {
          "type": "integer",
          "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "product_tax_code": {
          "type": "string",
          "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "categories": {
          "type": "array",
          "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
          "x-required": [
            "post"
          ],
          "items": {
            "type": "integer"
          }
        },
        "brand_id": {
          "type": "integer",
          "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "inventory_level": {
          "type": "integer",
          "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "inventory_warning_level": {
          "type": "integer",
          "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "inventory_tracking": {
          "type": "string",
          "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
          "enum": [
            "none",
            "product",
            "variant"
          ]
        },
        "fixed_cost_shipping_price": {
          "type": "number",
          "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
          "format": "float",
          "minimum": 0
        },
        "is_free_shipping": {
          "type": "boolean",
          "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
        },
        "is_visible": {
          "type": "boolean",
          "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
        },
        "is_featured": {
          "type": "boolean",
          "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
        },
        "related_products": {
          "type": "array",
          "description": "An array of IDs for the related products.\n",
          "items": {
            "type": "integer"
          }
        },
        "warranty": {
          "type": "string",
          "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
          "minLength": 0,
          "maxLength": 65535
        },
        "bin_picking_number": {
          "type": "string",
          "description": "The BIN picking number for the product.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "layout_file": {
          "type": "string",
          "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
          "minLength": 0,
          "maxLength": 500
        },
        "upc": {
          "type": "string",
          "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "search_keywords": {
          "type": "string",
          "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
          "minLength": 0,
          "maxLength": 65535
        },
        "availability": {
          "type": "string",
          "enum": [
            "available",
            "disabled",
            "preorder"
          ],
          "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
        },
        "availability_description": {
          "type": "string",
          "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
          "minLength": 0,
          "maxLength": 255
        },
        "gift_wrapping_options_type": {
          "type": "string",
          "enum": [
            "any",
            "none",
            "list"
          ],
          "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
        },
        "gift_wrapping_options_list": {
          "type": "array",
          "description": "A list of gift-wrapping option IDs.\n",
          "items": {
            "type": "integer"
          }
        },
        "sort_order": {
          "type": "integer",
          "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "condition": {
          "type": "string",
          "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
          "enum": [
            "New",
            "Used",
            "Refurbished"
          ]
        },
        "is_condition_shown": {
          "type": "boolean",
          "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
        },
        "order_quantity_minimum": {
          "type": "integer",
          "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "order_quantity_maximum": {
          "type": "integer",
          "description": "The maximum quantity an order can contain when purchasing the product.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "page_title": {
          "type": "string",
          "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "meta_keywords": {
          "type": "array",
          "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
          "items": {
            "type": "string"
          }
        },
        "meta_description": {
          "type": "string",
          "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
          "minLength": 0,
          "maxLength": 65535
        },
        "view_count": {
          "type": "integer",
          "description": "The number of times the product has been viewed.\n",
          "minimum": 0,
          "maximum": 1000000000
        },
        "preorder_release_date": {
          "type": "string",
          "format": "date-time",
          "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
          "x-nullable": true
        },
        "preorder_message": {
          "type": "string",
          "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
          "minLength": 0,
          "maxLength": 255
        },
        "is_preorder_only": {
          "type": "boolean",
          "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
        },
        "is_price_hidden": {
          "type": "boolean",
          "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
        },
        "price_hidden_label": {
          "type": "string",
          "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
          "minLength": 0,
          "maxLength": 200
        },
        "custom_url": {
          "type": "object",
          "description": "The custom URL for the product on the storefront.",
          "title": "Custom Url Product",
          "properties": {
            "url": {
              "type": "string",
              "description": "Product URL on the storefront.\n",
              "x-url": true,
              "example": "/red-large-shirt"
            },
            "is_customized": {
              "type": "boolean",
              "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
            }
          }
        },
        "open_graph_type": {
          "type": "string",
          "description": "Type of product, defaults to `product`.\n",
          "enum": [
            "product",
            "album",
            "book",
            "drink",
            "food",
            "game",
            "movie",
            "song",
            "tv_show"
          ]
        },
        "open_graph_title": {
          "type": "string",
          "description": "Title of the product, if not specified the product name will be used instead.\n"
        },
        "open_graph_description": {
          "type": "string",
          "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
        },
        "open_graph_use_meta_description": {
          "type": "boolean",
          "description": "Flag to determine if product description or open graph description is used.\n"
        },
        "open_graph_use_product_name": {
          "type": "boolean",
          "description": "Flag to determine if product name or open graph name is used.\n"
        },
        "open_graph_use_image": {
          "type": "boolean",
          "description": "Flag to determine if product image or open graph image is used.\n"
        },
        "brand_name or brand_id": {
          "type": "string",
          "example": "Common Good",
          "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
        },
        "gtin": {
          "type": "string",
          "description": "Global Trade Item Number"
        },
        "mpn": {
          "type": "string",
          "description": "Manufacturer Part Number"
        },
        "calculated_price": {
          "type": "number",
          "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
          "format": "float"
        },
        "reviews_rating_sum": {
          "type": "integer",
          "description": "The total rating for the product.\n",
          "example": 3.2
        },
        "reviews_count": {
          "type": "integer",
          "description": "The number of times the product has been rated.\n",
          "example": 4
        },
        "total_sold": {
          "type": "integer",
          "description": "The total quantity of this product sold.\n",
          "example": 80
        },
        "custom_fields": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
            "title": "Custom Field",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                "minimum": 1,
                "example": 6
              },
              "name": {
                "type": "string",
                "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 250,
                "example": "ISBN"
              },
              "value": {
                "type": "string",
                "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 250,
                "example": "1234567890123"
              }
            },
            "required": [
              "name",
              "value"
            ]
          }
        },
        "bulk_pricing_rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BulkPricingRuleBase"
          }
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which the product was created.\n",
          "example": "2018-08-15T14:49:05+00:00"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "The date on which the product was modified.\n",
          "example": "2018-08-24T14:41:00+00:00"
        },
        "images": {
          "type": "array",
          "items": {
            "title": "Product Image",
            "allOf": [
              {
                "description": "Common ProductImage properties.",
                "title": "Product Image Base",
                "properties": {
                  "id": {
                    "description": "The unique numeric ID of the image; increments sequentially.\n",
                    "type": "integer"
                  },
                  "product_id": {
                    "description": "The unique numeric identifier for the product with which the image is associated.\n",
                    "type": "integer"
                  },
                  "image_file": {
                    "description": "The local path to the original image file uploaded to BigCommerce.\n",
                    "type": "string"
                  },
                  "url_zoom": {
                    "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                    "type": "string"
                  },
                  "url_standard": {
                    "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                    "type": "string"
                  },
                  "url_thumbnail": {
                    "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                    "type": "string"
                  },
                  "url_tiny": {
                    "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                    "type": "string"
                  },
                  "date_modified": {
                    "format": "date-time",
                    "description": "The date on which the product image was modified.\n",
                    "type": "string"
                  },
                  "is_thumbnail": {
                    "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                    "type": "boolean"
                  },
                  "sort_order": {
                    "type": "integer",
                    "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  "description": {
                    "description": "The description for the image.\n",
                    "type": "string"
                  }
                }
              },
              {
                "properties": {
                  "id": {
                    "description": "The unique numeric ID of the image; increments sequentially.\n",
                    "type": "integer"
                  },
                  "product_id": {
                    "description": "The unique numeric identifier for the product with which the image is associated.\n",
                    "type": "integer"
                  },
                  "image_file": {
                    "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                    "type": "string"
                  },
                  "url_zoom": {
                    "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                    "type": "string"
                  },
                  "url_standard": {
                    "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                    "type": "string"
                  },
                  "url_thumbnail": {
                    "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                    "type": "string"
                  },
                  "url_tiny": {
                    "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                    "type": "string"
                  },
                  "date_modified": {
                    "format": "date-time",
                    "description": "The date on which the product image was modified.\n",
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string",
                    "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                    "description": "Publically available URL. \nUse the image_url when creating a product. "
                  }
                }
              }
            ],
            "type": "object"
          }
        },
        "videos": {
          "type": "array",
          "items": {
            "description": "A product video model.\n",
            "allOf": [
              {
                "description": "Common ProductVideo properties.",
                "title": "Product Video Base",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                    "minLength": 0,
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string",
                    "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                  },
                  "sort_order": {
                    "type": "integer",
                    "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  "type": {
                    "type": "string",
                    "description": "The video type (a short name of a host site).\n",
                    "enum": [
                      "youtube"
                    ]
                  }
                }
              },
              {
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the product video; increments sequentially.\n"
                  },
                  "video_id": {
                    "description": "The ID of the video on a host site.\n",
                    "type": "string"
                  },
                  "product_id": {
                    "description": "The unique numeric identifier for the product with which the image is associated.\n",
                    "type": "integer"
                  },
                  "length": {
                    "description": "Length of the video. This will be filled in according to data on a host site.\n",
                    "type": "string"
                  }
                }
              }
            ],
            "title": "Product Video",
            "type": "object"
          }
        },
        "variants": {
          "type": "array",
          "items": {
            "allOf": [
              {
                "description": "Common Variant properties.",
                "title": "Variant Base",
                "properties": {
                  "cost_price": {
                    "type": "number",
                    "format": "double",
                    "description": "The cost price of the variant. Not affected by Price List prices.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "sale_price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "retail_price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "weight": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "width": {
                    "type": "number",
                    "format": "double",
                    "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "height": {
                    "type": "number",
                    "format": "double",
                    "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "depth": {
                    "type": "number",
                    "format": "double",
                    "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "is_free_shipping": {
                    "type": "boolean",
                    "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                  },
                  "fixed_cost_shipping_price": {
                    "type": "number",
                    "format": "double",
                    "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "purchasing_disabled": {
                    "type": "boolean",
                    "description": "If `true`, this variant will not be purchasable on the storefront."
                  },
                  "purchasing_disabled_message": {
                    "type": "string",
                    "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                    "minLength": 0,
                    "maxLength": 255
                  },
                  "upc": {
                    "type": "string",
                    "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                    "x-nullable": true
                  },
                  "inventory_level": {
                    "type": "integer",
                    "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                    "x-nullable": true
                  },
                  "inventory_warning_level": {
                    "type": "integer",
                    "description": "When the variant hits this inventory level, it is considered low stock.",
                    "x-nullable": true
                  },
                  "bin_picking_number": {
                    "type": "string",
                    "description": "Identifies where in a warehouse the variant is located.",
                    "x-nullable": true,
                    "minLength": 0,
                    "maxLength": 255
                  }
                }
              },
              {
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "sku_id": {
                    "type": "integer",
                    "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                    "x-nullable": true
                  },
                  "option_values": {
                    "type": "array",
                    "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                    "items": {
                      "allOf": [
                        {
                          "description": "Common Option Value Product properties.",
                          "title": "Option Value Product Base",
                          "properties": {
                            "option_display_name": {
                              "type": "string",
                              "description": "The name of the option.\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "Color"
                            },
                            "label": {
                              "type": "string",
                              "description": "The label of the option value.\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "Beige"
                            }
                          }
                        },
                        {
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "option_id": {
                              "type": "integer"
                            }
                          }
                        }
                      ],
                      "title": "Option Value Variant",
                      "type": "object"
                    }
                  },
                  "calculated_price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                  }
                }
              }
            ],
            "type": "object"
          }
        },
        "base_variant_id": {
          "type": "integer",
          "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
          "example": 363
        },
        "id": {
          "type": "integer",
          "description": "ID of the product. Read Only"
        }
      }
    },
    "ProductImage": {
      "title": "Product Image",
      "allOf": [
        {
          "type": "object",
          "description": "Common ProductImage properties.",
          "properties": {
            "id": {
              "description": "The unique numeric ID of the image; increments sequentially.\n",
              "type": "integer"
            },
            "product_id": {
              "description": "The unique numeric identifier for the product with which the image is associated.\n",
              "type": "integer"
            },
            "image_file": {
              "description": "The local path to the original image file uploaded to BigCommerce.\n",
              "type": "string"
            },
            "url_zoom": {
              "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
              "type": "string"
            },
            "url_standard": {
              "description": "The standard URL for this image. By default, this is used for product-page images.\n",
              "type": "string"
            },
            "url_thumbnail": {
              "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
              "type": "string"
            },
            "url_tiny": {
              "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
              "type": "string"
            },
            "date_modified": {
              "format": "date-time",
              "description": "The date on which the product image was modified.\n",
              "type": "string"
            },
            "is_thumbnail": {
              "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
              "type": "boolean"
            },
            "sort_order": {
              "type": "integer",
              "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
              "minimum": -2147483648,
              "maximum": 2147483647
            },
            "description": {
              "description": "The description for the image.\n",
              "type": "string"
            }
          },
          "title": "Product Image Base"
        },
        {
          "type": "object",
          "properties": {
            "id": {
              "description": "The unique numeric ID of the image; increments sequentially.\n",
              "type": "integer"
            },
            "product_id": {
              "description": "The unique numeric identifier for the product with which the image is associated.\n",
              "type": "integer"
            },
            "image_file": {
              "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
              "type": "string"
            },
            "url_zoom": {
              "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
              "type": "string"
            },
            "url_standard": {
              "description": "The standard URL for this image. By default, this is used for product-page images.\n",
              "type": "string"
            },
            "url_thumbnail": {
              "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
              "type": "string"
            },
            "url_tiny": {
              "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
              "type": "string"
            },
            "date_modified": {
              "format": "date-time",
              "description": "The date on which the product image was modified.\n",
              "type": "string"
            },
            "image_url": {
              "type": "string",
              "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
              "description": "Publically available URL. \nUse the image_url when creating a product. "
            }
          }
        }
      ]
    },
    "MetafieldPost": {
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "description": "Common Metafield properties.",
          "title": "Metafield",
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique ID of the *Metafield*. Read-Only.",
              "example": 6
            },
            "permission_set": {
              "type": "string",
              "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
              "enum": [
                "app_only",
                "read",
                "write"
              ],
              "x-required": [
                "post"
              ]
            },
            "namespace": {
              "type": "string",
              "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 64,
              "example": "Warehouse Locations"
            },
            "key": {
              "type": "string",
              "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 64,
              "example": "Location"
            },
            "value": {
              "type": "string",
              "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
              "x-required": [
                "post"
              ],
              "minLength": 1,
              "maxLength": 65535,
              "example": "4HG"
            },
            "description": {
              "type": "string",
              "description": "Description for the metafields.\n",
              "minLength": 0,
              "maxLength": 255,
              "example": "Location in the warehouse"
            },
            "resource_type": {
              "type": "string",
              "description": "The type of resource with which the metafield is associated.\n",
              "enum": [
                "category",
                "brand",
                "product",
                "variant"
              ],
              "x-required": [
                "post"
              ],
              "example": "product"
            },
            "resource_id": {
              "type": "integer",
              "description": "The ID for the resource with which the metafield is associated.\n",
              "x-required": [
                "post"
              ],
              "minimum": 0,
              "maximum": 10000000000,
              "example": 111
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time of the metafield's creation. Read-Only.\n",
              "example": "2018-05-07T20:14:17+00:00"
            },
            "updated_at": {
              "type": "string",
              "format": "date-time",
              "description": "Date and time when the metafield was last updated. Read-Only.\n",
              "example": "2018-05-07T20:14:17+00:00"
            }
          },
          "required": [
            "permission_set",
            "namespace",
            "key",
            "value"
          ]
        }
      ],
      "title": "Metafield Post"
    },
    "productCollectionPut": {
      "title": "Product Collection Put",
      "type": "array",
      "items": {
        "description": "The model for a PUT to update a product.",
        "allOf": [
          {
            "type": "object",
            "description": "Common Product properties.",
            "title": "Product",
            "properties": {
              "name": {
                "type": "string",
                "description": "The product name.\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 255,
                "example": "Smith Journal 13"
              },
              "type": {
                "type": "string",
                "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                "x-required": [
                  "post"
                ],
                "enum": [
                  "physical",
                  "digital"
                ],
                "example": "physical"
              },
              "sku": {
                "type": "string",
                "description": "User defined product code/stock keeping unit (SKU).\n",
                "minLength": 0,
                "maxLength": 255,
                "example": "SM-13"
              },
              "description": {
                "type": "string",
                "description": "The product description, which can include HTML formatting.\n",
                "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
              },
              "weight": {
                "type": "number",
                "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "width": {
                "type": "number",
                "description": "Width of the product, which can be used when calculating shipping costs.\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "depth": {
                "type": "number",
                "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "height": {
                "type": "number",
                "description": "Height of the product, which can be used when calculating shipping costs.\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "price": {
                "type": "number",
                "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                "format": "float",
                "minimum": 0
              },
              "cost_price": {
                "type": "number",
                "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                "format": "float",
                "minimum": 0
              },
              "retail_price": {
                "type": "number",
                "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                "format": "float",
                "minimum": 0
              },
              "sale_price": {
                "type": "number",
                "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                "format": "float",
                "minimum": 0
              },
              "tax_class_id": {
                "type": "integer",
                "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "product_tax_code": {
                "type": "string",
                "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "categories": {
                "type": "array",
                "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                "x-required": [
                  "post"
                ],
                "items": {
                  "type": "integer"
                }
              },
              "brand_id": {
                "type": "integer",
                "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "inventory_level": {
                "type": "integer",
                "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "inventory_warning_level": {
                "type": "integer",
                "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "inventory_tracking": {
                "type": "string",
                "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                "enum": [
                  "none",
                  "product",
                  "variant"
                ]
              },
              "fixed_cost_shipping_price": {
                "type": "number",
                "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                "format": "float",
                "minimum": 0
              },
              "is_free_shipping": {
                "type": "boolean",
                "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
              },
              "is_visible": {
                "type": "boolean",
                "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
              },
              "is_featured": {
                "type": "boolean",
                "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
              },
              "related_products": {
                "type": "array",
                "description": "An array of IDs for the related products.\n",
                "items": {
                  "type": "integer"
                }
              },
              "warranty": {
                "type": "string",
                "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                "minLength": 0,
                "maxLength": 65535
              },
              "bin_picking_number": {
                "type": "string",
                "description": "The BIN picking number for the product.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "layout_file": {
                "type": "string",
                "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                "minLength": 0,
                "maxLength": 500
              },
              "upc": {
                "type": "string",
                "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "search_keywords": {
                "type": "string",
                "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                "minLength": 0,
                "maxLength": 65535
              },
              "availability": {
                "type": "string",
                "enum": [
                  "available",
                  "disabled",
                  "preorder"
                ],
                "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
              },
              "availability_description": {
                "type": "string",
                "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                "minLength": 0,
                "maxLength": 255
              },
              "gift_wrapping_options_type": {
                "type": "string",
                "enum": [
                  "any",
                  "none",
                  "list"
                ],
                "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
              },
              "gift_wrapping_options_list": {
                "type": "array",
                "description": "A list of gift-wrapping option IDs.\n",
                "items": {
                  "type": "integer"
                }
              },
              "sort_order": {
                "type": "integer",
                "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                "minimum": -2147483648,
                "maximum": 2147483647
              },
              "condition": {
                "type": "string",
                "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                "enum": [
                  "New",
                  "Used",
                  "Refurbished"
                ]
              },
              "is_condition_shown": {
                "type": "boolean",
                "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
              },
              "order_quantity_minimum": {
                "type": "integer",
                "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "order_quantity_maximum": {
                "type": "integer",
                "description": "The maximum quantity an order can contain when purchasing the product.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "page_title": {
                "type": "string",
                "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "meta_keywords": {
                "type": "array",
                "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                "items": {
                  "type": "string"
                }
              },
              "meta_description": {
                "type": "string",
                "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                "minLength": 0,
                "maxLength": 65535
              },
              "view_count": {
                "type": "integer",
                "description": "The number of times the product has been viewed.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "preorder_release_date": {
                "type": "string",
                "format": "date-time",
                "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                "x-nullable": true
              },
              "preorder_message": {
                "type": "string",
                "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "is_preorder_only": {
                "type": "boolean",
                "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
              },
              "is_price_hidden": {
                "type": "boolean",
                "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
              },
              "price_hidden_label": {
                "type": "string",
                "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                "minLength": 0,
                "maxLength": 200
              },
              "custom_url": {
                "type": "object",
                "description": "The custom URL for the product on the storefront.",
                "title": "Custom Url Product",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Product URL on the storefront.\n",
                    "x-url": true,
                    "example": "/red-large-shirt"
                  },
                  "is_customized": {
                    "type": "boolean",
                    "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                  }
                }
              },
              "open_graph_type": {
                "type": "string",
                "description": "Type of product, defaults to `product`.\n",
                "enum": [
                  "product",
                  "album",
                  "book",
                  "drink",
                  "food",
                  "game",
                  "movie",
                  "song",
                  "tv_show"
                ]
              },
              "open_graph_title": {
                "type": "string",
                "description": "Title of the product, if not specified the product name will be used instead.\n"
              },
              "open_graph_description": {
                "type": "string",
                "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
              },
              "open_graph_use_meta_description": {
                "type": "boolean",
                "description": "Flag to determine if product description or open graph description is used.\n"
              },
              "open_graph_use_product_name": {
                "type": "boolean",
                "description": "Flag to determine if product name or open graph name is used.\n"
              },
              "open_graph_use_image": {
                "type": "boolean",
                "description": "Flag to determine if product image or open graph image is used.\n"
              },
              "brand_name or brand_id": {
                "type": "string",
                "example": "Common Good",
                "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
              },
              "gtin": {
                "type": "string",
                "description": "Global Trade Item Number"
              },
              "mpn": {
                "type": "string",
                "description": "Manufacturer Part Number"
              },
              "calculated_price": {
                "type": "number",
                "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                "format": "float"
              },
              "reviews_rating_sum": {
                "type": "integer",
                "description": "The total rating for the product.\n",
                "example": 3.2
              },
              "reviews_count": {
                "type": "integer",
                "description": "The number of times the product has been rated.\n",
                "example": 4
              },
              "total_sold": {
                "type": "integer",
                "description": "The total quantity of this product sold.\n",
                "example": 80
              },
              "custom_fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                  "title": "Custom Field",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                      "minimum": 1,
                      "example": 6
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "ISBN"
                    },
                    "value": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "1234567890123"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              },
              "bulk_pricing_rules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Common BulkPricingRule properties",
                  "title": "Bulk Pricing Rule",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                    },
                    "quantity_min": {
                      "type": "integer",
                      "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 10
                    },
                    "quantity_max": {
                      "type": "integer",
                      "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 50
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "price",
                        "percent",
                        "fixed"
                      ],
                      "example": "price"
                    },
                    "amount": {
                      "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
                      "example": 10,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "quantity_min",
                    "quantity_max",
                    "type",
                    "amount"
                  ]
                }
              },
              "date_created": {
                "type": "string",
                "format": "date-time",
                "description": "The date on which the product was created.\n",
                "example": "2018-08-15T14:49:05+00:00"
              },
              "date_modified": {
                "type": "string",
                "format": "date-time",
                "description": "The date on which the product was modified.\n",
                "example": "2018-08-24T14:41:00+00:00"
              },
              "images": {
                "type": "array",
                "items": {
                  "title": "Product Image",
                  "allOf": [
                    {
                      "description": "Common ProductImage properties.",
                      "title": "Product Image Base",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "is_thumbnail": {
                          "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                          "type": "boolean"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "description": {
                          "description": "The description for the image.\n",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string",
                          "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                          "description": "Publically available URL. \nUse the image_url when creating a product. "
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              },
              "videos": {
                "$ref": "#/definitions/ProductVideoBase"
              },
              "variants": {
                "type": "array",
                "items": {
                  "allOf": [
                    {
                      "description": "Common Variant properties.",
                      "title": "Variant Base",
                      "properties": {
                        "cost_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost price of the variant. Not affected by Price List prices.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "sale_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "retail_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "weight": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "depth": {
                          "type": "number",
                          "format": "double",
                          "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "is_free_shipping": {
                          "type": "boolean",
                          "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                        },
                        "fixed_cost_shipping_price": {
                          "type": "number",
                          "format": "double",
                          "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "purchasing_disabled": {
                          "type": "boolean",
                          "description": "If `true`, this variant will not be purchasable on the storefront."
                        },
                        "purchasing_disabled_message": {
                          "type": "string",
                          "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "upc": {
                          "type": "string",
                          "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                          "x-nullable": true
                        },
                        "inventory_level": {
                          "type": "integer",
                          "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                          "x-nullable": true
                        },
                        "inventory_warning_level": {
                          "type": "integer",
                          "description": "When the variant hits this inventory level, it is considered low stock.",
                          "x-nullable": true
                        },
                        "bin_picking_number": {
                          "type": "string",
                          "description": "Identifies where in a warehouse the variant is located.",
                          "x-nullable": true,
                          "minLength": 0,
                          "maxLength": 255
                        }
                      }
                    },
                    {
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "product_id": {
                          "type": "integer"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "sku_id": {
                          "type": "integer",
                          "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                          "x-nullable": true
                        },
                        "option_values": {
                          "type": "array",
                          "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant.",
                          "items": {
                            "allOf": [
                              {
                                "description": "Common Option Value Product properties.",
                                "title": "Option Value Product Base",
                                "properties": {
                                  "option_display_name": {
                                    "type": "string",
                                    "description": "The name of the option.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Color"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The label of the option value.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Beige"
                                  }
                                }
                              },
                              {
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "option_id": {
                                    "type": "integer"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value Variant",
                            "type": "object"
                          }
                        },
                        "calculated_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                        }
                      }
                    }
                  ],
                  "type": "object"
                }
              },
              "base_variant_id": {
                "type": "integer",
                "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                "example": 363
              },
              "id": {
                "type": "integer",
                "description": "ID of the product. Read Only"
              }
            }
          },
          {
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique numerical ID of the product; increments sequentially.\n",
                "x-required": [
                  "put"
                ]
              },
              "custom_fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                  "title": "Custom Field",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                      "minimum": 1,
                      "example": 6
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "ISBN"
                    },
                    "value": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "1234567890123"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              },
              "bulk_pricing_rules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Common BulkPricingRule properties",
                  "title": "Bulk Pricing Rule",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                    },
                    "quantity_min": {
                      "type": "integer",
                      "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 10
                    },
                    "quantity_max": {
                      "type": "integer",
                      "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 50
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "price",
                        "percent",
                        "fixed"
                      ],
                      "example": "price"
                    },
                    "amount": {
                      "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
                      "example": 10,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "quantity_min",
                    "quantity_max",
                    "type",
                    "amount"
                  ]
                }
              },
              "variants": {
                "type": "array",
                "items": {
                  "description": "The model for a PUT to update variants on a product.\n",
                  "allOf": [
                    {
                      "description": "Common Variant properties.",
                      "title": "Variant Base",
                      "properties": {
                        "cost_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost price of the variant. Not affected by Price List prices.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "sale_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "retail_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "weight": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "depth": {
                          "type": "number",
                          "format": "double",
                          "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "is_free_shipping": {
                          "type": "boolean",
                          "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                        },
                        "fixed_cost_shipping_price": {
                          "type": "number",
                          "format": "double",
                          "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "purchasing_disabled": {
                          "type": "boolean",
                          "description": "If `true`, this variant will not be purchasable on the storefront."
                        },
                        "purchasing_disabled_message": {
                          "type": "string",
                          "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "upc": {
                          "type": "string",
                          "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                          "x-nullable": true
                        },
                        "inventory_level": {
                          "type": "integer",
                          "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                          "x-nullable": true
                        },
                        "inventory_warning_level": {
                          "type": "integer",
                          "description": "When the variant hits this inventory level, it is considered low stock.",
                          "x-nullable": true
                        },
                        "bin_picking_number": {
                          "type": "string",
                          "description": "Identifies where in a warehouse the variant is located.",
                          "x-nullable": true,
                          "minLength": 0,
                          "maxLength": 255
                        }
                      }
                    },
                    {
                      "properties": {
                        "product_id": {
                          "type": "integer"
                        },
                        "sku": {
                          "type": "string",
                          "minLength": 1,
                          "maxLength": 255
                        }
                      }
                    }
                  ],
                  "title": "Variant Product Put",
                  "type": "object"
                }
              }
            }
          }
        ],
        "title": "Product Put",
        "type": "object"
      }
    }
  },
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header"
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    },
    "OAuth": {
      "flow": "application",
      "tokenUrl": "https://login.bigcommerce.com/oauth2/token",
      "scopes": {
        "store_v2_products": "modify",
        "store_v2_products_read_only": "read-only"
      },
      "type": "oauth2"
    }
  },
  "security": [
    {
      "X-Auth-Client": []
    },
    {
      "X-Auth-Token": []
    },
    {
      "OAuth": [
        "store_v2_products",
        "store_v2_products_read_only"
      ]
    }
  ],
  "responses": {
    "ProductCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Common Product properties.",
              "title": "Product",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The product name.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "Smith Journal 13"
                },
                "type": {
                  "type": "string",
                  "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                  "x-required": [
                    "post"
                  ],
                  "enum": [
                    "physical",
                    "digital"
                  ],
                  "example": "physical"
                },
                "sku": {
                  "type": "string",
                  "description": "User defined product code/stock keeping unit (SKU).\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "SM-13"
                },
                "description": {
                  "type": "string",
                  "description": "The product description, which can include HTML formatting.\n",
                  "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
                },
                "weight": {
                  "type": "number",
                  "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 9999999999
                },
                "width": {
                  "type": "number",
                  "description": "Width of the product, which can be used when calculating shipping costs.\n",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 9999999999
                },
                "depth": {
                  "type": "number",
                  "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 9999999999
                },
                "height": {
                  "type": "number",
                  "description": "Height of the product, which can be used when calculating shipping costs.\n",
                  "format": "float",
                  "minimum": 0,
                  "maximum": 9999999999
                },
                "price": {
                  "type": "number",
                  "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                  "format": "float",
                  "minimum": 0
                },
                "cost_price": {
                  "type": "number",
                  "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                  "format": "float",
                  "minimum": 0
                },
                "retail_price": {
                  "type": "number",
                  "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                  "format": "float",
                  "minimum": 0
                },
                "sale_price": {
                  "type": "number",
                  "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                  "format": "float",
                  "minimum": 0
                },
                "tax_class_id": {
                  "type": "integer",
                  "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                  "minimum": 0,
                  "maximum": 1000000000
                },
                "product_tax_code": {
                  "type": "string",
                  "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "categories": {
                  "type": "array",
                  "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                  "x-required": [
                    "post"
                  ],
                  "items": {
                    "type": "integer"
                  }
                },
                "brand_id": {
                  "type": "integer",
                  "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                  "minimum": 0,
                  "maximum": 1000000000
                },
                "inventory_level": {
                  "type": "integer",
                  "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                  "minimum": 0,
                  "maximum": 1000000000
                },
                "inventory_warning_level": {
                  "type": "integer",
                  "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                  "minimum": 0,
                  "maximum": 1000000000
                },
                "inventory_tracking": {
                  "type": "string",
                  "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                  "enum": [
                    "none",
                    "product",
                    "variant"
                  ]
                },
                "fixed_cost_shipping_price": {
                  "type": "number",
                  "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                  "format": "float",
                  "minimum": 0
                },
                "is_free_shipping": {
                  "type": "boolean",
                  "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
                },
                "is_visible": {
                  "type": "boolean",
                  "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
                },
                "is_featured": {
                  "type": "boolean",
                  "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
                },
                "related_products": {
                  "type": "array",
                  "description": "An array of IDs for the related products.\n",
                  "items": {
                    "type": "integer"
                  }
                },
                "warranty": {
                  "type": "string",
                  "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                  "minLength": 0,
                  "maxLength": 65535
                },
                "bin_picking_number": {
                  "type": "string",
                  "description": "The BIN picking number for the product.\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "layout_file": {
                  "type": "string",
                  "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                  "minLength": 0,
                  "maxLength": 500
                },
                "upc": {
                  "type": "string",
                  "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "search_keywords": {
                  "type": "string",
                  "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                  "minLength": 0,
                  "maxLength": 65535
                },
                "availability": {
                  "type": "string",
                  "enum": [
                    "available",
                    "disabled",
                    "preorder"
                  ],
                  "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
                },
                "availability_description": {
                  "type": "string",
                  "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "gift_wrapping_options_type": {
                  "type": "string",
                  "enum": [
                    "any",
                    "none",
                    "list"
                  ],
                  "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
                },
                "gift_wrapping_options_list": {
                  "type": "array",
                  "description": "A list of gift-wrapping option IDs.\n",
                  "items": {
                    "type": "integer"
                  }
                },
                "sort_order": {
                  "type": "integer",
                  "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647
                },
                "condition": {
                  "type": "string",
                  "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                  "enum": [
                    "New",
                    "Used",
                    "Refurbished"
                  ]
                },
                "is_condition_shown": {
                  "type": "boolean",
                  "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
                },
                "order_quantity_minimum": {
                  "type": "integer",
                  "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                  "minimum": 0,
                  "maximum": 1000000000
                },
                "order_quantity_maximum": {
                  "type": "integer",
                  "description": "The maximum quantity an order can contain when purchasing the product.\n",
                  "minimum": 0,
                  "maximum": 1000000000
                },
                "page_title": {
                  "type": "string",
                  "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "meta_keywords": {
                  "type": "array",
                  "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                  "items": {
                    "type": "string"
                  }
                },
                "meta_description": {
                  "type": "string",
                  "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                  "minLength": 0,
                  "maxLength": 65535
                },
                "view_count": {
                  "type": "integer",
                  "description": "The number of times the product has been viewed.\n",
                  "minimum": 0,
                  "maximum": 1000000000
                },
                "preorder_release_date": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                  "x-nullable": true
                },
                "preorder_message": {
                  "type": "string",
                  "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                  "minLength": 0,
                  "maxLength": 255
                },
                "is_preorder_only": {
                  "type": "boolean",
                  "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
                },
                "is_price_hidden": {
                  "type": "boolean",
                  "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
                },
                "price_hidden_label": {
                  "type": "string",
                  "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                  "minLength": 0,
                  "maxLength": 200
                },
                "custom_url": {
                  "type": "object",
                  "description": "The custom URL for the product on the storefront.",
                  "title": "Custom Url Product",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Product URL on the storefront.\n",
                      "x-url": true,
                      "example": "/red-large-shirt"
                    },
                    "is_customized": {
                      "type": "boolean",
                      "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                    }
                  }
                },
                "open_graph_type": {
                  "type": "string",
                  "description": "Type of product, defaults to `product`.\n",
                  "enum": [
                    "product",
                    "album",
                    "book",
                    "drink",
                    "food",
                    "game",
                    "movie",
                    "song",
                    "tv_show"
                  ]
                },
                "open_graph_title": {
                  "type": "string",
                  "description": "Title of the product, if not specified the product name will be used instead.\n"
                },
                "open_graph_description": {
                  "type": "string",
                  "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
                },
                "open_graph_use_meta_description": {
                  "type": "boolean",
                  "description": "Flag to determine if product description or open graph description is used.\n"
                },
                "open_graph_use_product_name": {
                  "type": "boolean",
                  "description": "Flag to determine if product name or open graph name is used.\n"
                },
                "open_graph_use_image": {
                  "type": "boolean",
                  "description": "Flag to determine if product image or open graph image is used.\n"
                },
                "brand_name or brand_id": {
                  "type": "string",
                  "example": "Common Good",
                  "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
                },
                "gtin": {
                  "type": "string",
                  "description": "Global Trade Item Number"
                },
                "mpn": {
                  "type": "string",
                  "description": "Manufacturer Part Number"
                },
                "calculated_price": {
                  "type": "number",
                  "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                  "format": "float"
                },
                "reviews_rating_sum": {
                  "type": "integer",
                  "description": "The total rating for the product.\n",
                  "example": 3.2
                },
                "reviews_count": {
                  "type": "integer",
                  "description": "The number of times the product has been rated.\n",
                  "example": 4
                },
                "total_sold": {
                  "type": "integer",
                  "description": "The total quantity of this product sold.\n",
                  "example": 80
                },
                "custom_fields": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                    "title": "Custom Field",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                        "minimum": 1,
                        "example": 6
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 250,
                        "example": "ISBN"
                      },
                      "value": {
                        "type": "string",
                        "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                        "x-required": [
                          "post"
                        ],
                        "minLength": 1,
                        "maxLength": 250,
                        "example": "1234567890123"
                      }
                    },
                    "required": [
                      "name",
                      "value"
                    ]
                  }
                },
                "bulk_pricing_rules": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Common BulkPricingRule properties",
                    "title": "Bulk Pricing Rule",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                      },
                      "quantity_min": {
                        "type": "integer",
                        "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "example": 10
                      },
                      "quantity_max": {
                        "type": "integer",
                        "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                        "x-required": [
                          "post"
                        ],
                        "minimum": 0,
                        "example": 50
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                        "x-required": [
                          "post"
                        ],
                        "enum": [
                          "price",
                          "percent",
                          "fixed"
                        ],
                        "example": "price"
                      },
                      "amount": {
                        "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
                        "example": 10,
                        "type": "integer"
                      }
                    },
                    "required": [
                      "quantity_min",
                      "quantity_max",
                      "type",
                      "amount"
                    ]
                  }
                },
                "date_created": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date on which the product was created.\n",
                  "example": "2018-08-15T14:49:05+00:00"
                },
                "date_modified": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date on which the product was modified.\n",
                  "example": "2018-08-24T14:41:00+00:00"
                },
                "images": {
                  "type": "array",
                  "items": {
                    "title": "Product Image",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common ProductImage properties.",
                        "properties": {
                          "id": {
                            "description": "The unique numeric ID of the image; increments sequentially.\n",
                            "type": "integer"
                          },
                          "product_id": {
                            "description": "The unique numeric identifier for the product with which the image is associated.\n",
                            "type": "integer"
                          },
                          "image_file": {
                            "description": "The local path to the original image file uploaded to BigCommerce.\n",
                            "type": "string"
                          },
                          "url_zoom": {
                            "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                            "type": "string"
                          },
                          "url_standard": {
                            "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                            "type": "string"
                          },
                          "url_thumbnail": {
                            "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                            "type": "string"
                          },
                          "url_tiny": {
                            "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                            "type": "string"
                          },
                          "date_modified": {
                            "format": "date-time",
                            "description": "The date on which the product image was modified.\n",
                            "type": "string"
                          },
                          "is_thumbnail": {
                            "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                            "type": "boolean"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647
                          },
                          "description": {
                            "description": "The description for the image.\n",
                            "type": "string"
                          }
                        },
                        "title": "Product Image Base"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "description": "The unique numeric ID of the image; increments sequentially.\n",
                            "type": "integer"
                          },
                          "product_id": {
                            "description": "The unique numeric identifier for the product with which the image is associated.\n",
                            "type": "integer"
                          },
                          "image_file": {
                            "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                            "type": "string"
                          },
                          "url_zoom": {
                            "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                            "type": "string"
                          },
                          "url_standard": {
                            "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                            "type": "string"
                          },
                          "url_thumbnail": {
                            "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                            "type": "string"
                          },
                          "url_tiny": {
                            "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                            "type": "string"
                          },
                          "date_modified": {
                            "format": "date-time",
                            "description": "The date on which the product image was modified.\n",
                            "type": "string"
                          },
                          "image_url": {
                            "type": "string",
                            "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                            "description": "Publically available URL. \nUse the image_url when creating a product. "
                          }
                        }
                      }
                    ]
                  }
                },
                "videos": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A product video model.\n",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common ProductVideo properties.",
                        "properties": {
                          "title": {
                            "type": "string",
                            "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                          },
                          "sort_order": {
                            "type": "integer",
                            "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                            "minimum": -2147483648,
                            "maximum": 2147483647
                          },
                          "type": {
                            "type": "string",
                            "description": "The video type (a short name of a host site).\n",
                            "enum": [
                              "youtube"
                            ]
                          }
                        },
                        "title": "Product Video Base"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "The unique numeric ID of the product video; increments sequentially.\n"
                          },
                          "video_id": {
                            "description": "The ID of the video on a host site.\n",
                            "type": "string"
                          },
                          "product_id": {
                            "description": "The unique numeric identifier for the product with which the image is associated.\n",
                            "type": "integer"
                          },
                          "length": {
                            "description": "Length of the video. This will be filled in according to data on a host site.\n",
                            "type": "string"
                          }
                        }
                      }
                    ],
                    "title": "Product Video"
                  }
                },
                "variants": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Common Variant properties.",
                        "title": "Variant Base",
                        "properties": {
                          "cost_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The cost price of the variant. Not affected by Price List prices.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "sale_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "retail_price": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "weight": {
                            "type": "number",
                            "format": "double",
                            "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "width": {
                            "type": "number",
                            "format": "double",
                            "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "height": {
                            "type": "number",
                            "format": "double",
                            "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "depth": {
                            "type": "number",
                            "format": "double",
                            "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "is_free_shipping": {
                            "type": "boolean",
                            "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                          },
                          "fixed_cost_shipping_price": {
                            "type": "number",
                            "format": "double",
                            "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                            "x-nullable": true,
                            "minimum": 0
                          },
                          "purchasing_disabled": {
                            "type": "boolean",
                            "description": "If `true`, this variant will not be purchasable on the storefront."
                          },
                          "purchasing_disabled_message": {
                            "type": "string",
                            "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                            "minLength": 0,
                            "maxLength": 255
                          },
                          "upc": {
                            "type": "string",
                            "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                            "x-nullable": true
                          },
                          "inventory_level": {
                            "type": "integer",
                            "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                            "x-nullable": true
                          },
                          "inventory_warning_level": {
                            "type": "integer",
                            "description": "When the variant hits this inventory level, it is considered low stock.",
                            "x-nullable": true
                          },
                          "bin_picking_number": {
                            "type": "string",
                            "description": "Identifies where in a warehouse the variant is located.",
                            "x-nullable": true,
                            "minLength": 0,
                            "maxLength": 255
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "product_id": {
                            "type": "integer"
                          },
                          "sku": {
                            "type": "string"
                          },
                          "sku_id": {
                            "type": "integer",
                            "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                            "x-nullable": true
                          },
                          "option_values": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "allOf": [
                                {
                                  "type": "object",
                                  "description": "Common Option Value Product properties.",
                                  "title": "Option Value Product Base",
                                  "properties": {
                                    "option_display_name": {
                                      "type": "string",
                                      "description": "The name of the option.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Color"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label of the option value.\n",
                                      "x-required": [
                                        "post"
                                      ],
                                      "minLength": 1,
                                      "maxLength": 255,
                                      "example": "Beige"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer"
                                    },
                                    "option_id": {
                                      "type": "integer"
                                    }
                                  }
                                }
                              ],
                              "title": "Option Value Variant"
                            },
                            "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                          },
                          "calculated_price": {
                            "type": "number",
                            "format": "double",
                            "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                          }
                        }
                      }
                    ]
                  }
                },
                "base_variant_id": {
                  "type": "integer",
                  "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                  "example": 363
                },
                "id": {
                  "type": "integer",
                  "description": "ID of the product. Read Only"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 174,
              "name": "1L Le Parfait Jar",
              "type": "physical",
              "sku": "",
              "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
              "weight": 1,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 7.95,
              "cost_price": 0,
              "retail_price": 10,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 7.95,
              "categories": [
                23,
                21
              ],
              "brand_id": 36,
              "option_set_id": {},
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 7,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "jar, glass",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-08-15T14:48:46+00:00",
              "date_modified": "2018-09-05T20:42:07+00:00",
              "view_count": 10,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/all/1l-le-parfait-jar/",
                "is_customized": true
              },
              "base_variant_id": 345,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 345,
                  "product_id": 174,
                  "sku": "",
                  "sku_id": {},
                  "price": 7.95,
                  "calculated_price": 7.95,
                  "sale_price": 0,
                  "retail_price": 10,
                  "map_price": 0,
                  "weight": 1,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 1,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.560.850.jpg?c=2",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            },
            {
              "id": 167,
              "name": "Able Brewing System",
              "type": "physical",
              "sku": "",
              "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
              "weight": 1,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 225,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 225,
              "categories": [
                23,
                21
              ],
              "brand_id": 43,
              "option_set_id": 52,
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 2,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-08-15T14:48:36+00:00",
              "date_modified": "2018-08-20T15:11:17+00:00",
              "view_count": 21,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/all/able-brewing-system/",
                "is_customized": true
              },
              "base_variant_id": 338,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 338,
                  "product_id": 167,
                  "sku": "",
                  "sku_id": {},
                  "price": 225,
                  "calculated_price": 225,
                  "sale_price": 0,
                  "retail_price": 0,
                  "map_price": 0,
                  "weight": 1,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 1,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/167/images/398/ablebrewingsystem4_1024x1024__07155__93974.1534344516.560.850.jpg?c=2",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            },
            {
              "id": 181,
              "name": "All Purpose Cleaner",
              "type": "physical",
              "sku": "",
              "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
              "weight": 1,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 15,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 15,
              "categories": [
                21,
                22
              ],
              "brand_id": 37,
              "option_set_id": {},
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 0,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-08-15T14:48:51+00:00",
              "date_modified": "2018-08-15T15:01:15+00:00",
              "view_count": 0,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/all/all-purpose-cleaner/",
                "is_customized": true
              },
              "base_variant_id": 352,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 352,
                  "product_id": 181,
                  "sku": "",
                  "sku_id": {},
                  "price": 15,
                  "calculated_price": 15,
                  "sale_price": 0,
                  "retail_price": 0,
                  "map_price": 0,
                  "weight": 1,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 1,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/181/images/442/CommonGoodAllPurposeCleaner_d37aa1e8_e16f_4309_bddd_8fae0d94efc7_1024x1024__40180__66527.1534344531.560.850.jpg?c=2",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            },
            {
              "id": 193,
              "name": "BigCommerce Coffee Mug",
              "type": "physical",
              "sku": "",
              "description": "",
              "weight": 4,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 10,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 10,
              "categories": [
                21
              ],
              "brand_id": 38,
              "option_set_id": {},
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 0,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-09-05T20:19:06+00:00",
              "date_modified": "2018-09-05T20:19:06+00:00",
              "view_count": 0,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/bigcommerce-coffee-mug/",
                "is_customized": false
              },
              "base_variant_id": 385,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 385,
                  "product_id": 193,
                  "sku": "",
                  "sku_id": {},
                  "price": 10,
                  "calculated_price": 10,
                  "sale_price": 0,
                  "retail_price": 0,
                  "map_price": 0,
                  "weight": 4,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 4,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            },
            {
              "id": 194,
              "name": "BigCommerce Coffee Mug_2",
              "type": "physical",
              "sku": "",
              "description": "",
              "weight": 3,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 11,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 11,
              "categories": [
                21
              ],
              "brand_id": 38,
              "option_set_id": {},
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 0,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-09-05T20:20:47+00:00",
              "date_modified": "2018-09-05T20:20:47+00:00",
              "view_count": 0,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/bigcommerce-coffee-mug_2/",
                "is_customized": false
              },
              "base_variant_id": 386,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 386,
                  "product_id": 194,
                  "sku": "",
                  "sku_id": {},
                  "price": 11,
                  "calculated_price": 11,
                  "sale_price": 0,
                  "retail_price": 0,
                  "map_price": 0,
                  "weight": 3,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 3,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            },
            {
              "id": 195,
              "name": "BigCommerce Coffee Mug_3",
              "type": "physical",
              "sku": "",
              "description": "",
              "weight": 3,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 11,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 11,
              "categories": [
                21
              ],
              "brand_id": 38,
              "option_set_id": 50,
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 0,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-09-05T20:22:19+00:00",
              "date_modified": "2018-09-07T20:01:26+00:00",
              "view_count": 0,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/bigcommerce-coffee-mug_3/",
                "is_customized": false
              },
              "base_variant_id": {},
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 388,
                  "product_id": 195,
                  "sku": "SKU-4484A834",
                  "sku_id": 351,
                  "price": {},
                  "calculated_price": 11,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 3,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 174,
                      "label": "Beige",
                      "option_id": 221,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 389,
                  "product_id": 195,
                  "sku": "SKU-9E932372",
                  "sku_id": 352,
                  "price": {},
                  "calculated_price": 11,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 3,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 175,
                      "label": "Grey",
                      "option_id": 221,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 390,
                  "product_id": 195,
                  "sku": "SKU-29CE333F",
                  "sku_id": 353,
                  "price": {},
                  "calculated_price": 11,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 3,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 176,
                      "label": "Black",
                      "option_id": 221,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 391,
                  "product_id": 195,
                  "sku": "SKU-02FBF02A",
                  "sku_id": 354,
                  "price": {},
                  "calculated_price": 11,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 3,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 189,
                      "label": "Black-Walnut",
                      "option_id": 221,
                      "option_display_name": "Color"
                    }
                  ]
                }
              ]
            },
            {
              "id": 184,
              "name": "Canvas Laundry Cart",
              "type": "physical",
              "sku": "",
              "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
              "weight": 15,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 249,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 249,
              "categories": [
                23,
                22
              ],
              "brand_id": 36,
              "option_set_id": 51,
              "option_set_display": "right",
              "inventory_level": 1497,
              "inventory_warning_level": 0,
              "inventory_tracking": "variant",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 6,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-08-15T14:48:53+00:00",
              "date_modified": "2018-08-28T19:02:11+00:00",
              "view_count": 22,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/all/canvas-laundry-cart/",
                "is_customized": true
              },
              "base_variant_id": {},
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 364,
                  "product_id": 184,
                  "sku": "SMA-RED",
                  "sku_id": 330,
                  "price": 15.99,
                  "calculated_price": 15.99,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": 15,
                  "calculated_weight": 15,
                  "width": 4,
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 497,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 177,
                      "label": "Small",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 180,
                      "label": "Red",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 365,
                  "product_id": 184,
                  "sku": "MED-RED",
                  "sku_id": 331,
                  "price": 555,
                  "calculated_price": 555,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 500,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 178,
                      "label": "Medium",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 180,
                      "label": "Red",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 366,
                  "product_id": 184,
                  "sku": "LAR-RED",
                  "sku_id": 332,
                  "price": {},
                  "calculated_price": 253.99,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 500,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 179,
                      "label": "Large",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 180,
                      "label": "Red",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 367,
                  "product_id": 184,
                  "sku": "SMA-GRE",
                  "sku_id": 333,
                  "price": {},
                  "calculated_price": 249,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 177,
                      "label": "Small",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 181,
                      "label": "Green",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 368,
                  "product_id": 184,
                  "sku": "MED-GRE",
                  "sku_id": 334,
                  "price": {},
                  "calculated_price": 249,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 178,
                      "label": "Medium",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 181,
                      "label": "Green",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 369,
                  "product_id": 184,
                  "sku": "LAR-GRE",
                  "sku_id": 335,
                  "price": {},
                  "calculated_price": 253.99,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 179,
                      "label": "Large",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 181,
                      "label": "Green",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 370,
                  "product_id": 184,
                  "sku": "SMA-BLU",
                  "sku_id": 336,
                  "price": {},
                  "calculated_price": 249,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 177,
                      "label": "Small",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 182,
                      "label": "Blue",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 371,
                  "product_id": 184,
                  "sku": "MED-BLU",
                  "sku_id": 337,
                  "price": {},
                  "calculated_price": 249,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 178,
                      "label": "Medium",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 182,
                      "label": "Blue",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                },
                {
                  "id": 372,
                  "product_id": 184,
                  "sku": "LAR-BLU",
                  "sku_id": 338,
                  "price": {},
                  "calculated_price": 253.99,
                  "sale_price": {},
                  "retail_price": {},
                  "map_price": {},
                  "weight": {},
                  "calculated_weight": 15,
                  "width": {},
                  "height": {},
                  "depth": {},
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": {},
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": [
                    {
                      "id": 179,
                      "label": "Large",
                      "option_id": 199,
                      "option_display_name": "Size"
                    },
                    {
                      "id": 182,
                      "label": "Blue",
                      "option_id": 200,
                      "option_display_name": "Color"
                    }
                  ]
                }
              ]
            },
            {
              "id": 173,
              "name": "Ceramic Measuring Spoon Set",
              "type": "physical",
              "sku": "",
              "description": "<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</p>",
              "weight": 1,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 18,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 18,
              "categories": [
                23,
                21
              ],
              "brand_id": 36,
              "option_set_id": {},
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 1,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-08-15T14:48:45+00:00",
              "date_modified": "2018-08-20T15:14:23+00:00",
              "view_count": 0,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/all/ceramic-measuring-spoon-set/",
                "is_customized": true
              },
              "base_variant_id": 344,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 344,
                  "product_id": 173,
                  "sku": "",
                  "sku_id": {},
                  "price": 18,
                  "calculated_price": 18,
                  "sale_price": 0,
                  "retail_price": 0,
                  "map_price": 0,
                  "weight": 1,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 1,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/173/images/424/measuringspoons1_1024x1024__22102__55079.1534344525.560.850.jpg?c=2",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            },
            {
              "id": 170,
              "name": "Ceramic Measuring Spoons",
              "type": "physical",
              "sku": "",
              "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
              "weight": 1,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 25,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 25,
              "categories": [
                23,
                21
              ],
              "brand_id": 36,
              "option_set_id": {},
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 0,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-08-15T14:48:42+00:00",
              "date_modified": "2018-08-15T15:01:15+00:00",
              "view_count": 0,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/all/ceramic-measuring-spoons/",
                "is_customized": true
              },
              "base_variant_id": 341,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 341,
                  "product_id": 170,
                  "sku": "",
                  "sku_id": {},
                  "price": 25,
                  "calculated_price": 25,
                  "sale_price": 0,
                  "retail_price": 0,
                  "map_price": 0,
                  "weight": 1,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 1,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.560.850.jpg?c=2",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            },
            {
              "id": 176,
              "name": "Ceramic Sugar & Creamer Set",
              "type": "physical",
              "sku": "",
              "description": "<div data-position=\"description\"> <div class=\"description\"> <div class=\"rte-content\"> <p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p> </div> </div> </div>",
              "weight": 1,
              "width": 0,
              "depth": 0,
              "height": 0,
              "price": 59,
              "cost_price": 0,
              "retail_price": 0,
              "sale_price": 0,
              "map_price": 0,
              "tax_class_id": 0,
              "product_tax_code": "",
              "calculated_price": 59,
              "categories": [
                23,
                21
              ],
              "brand_id": 36,
              "option_set_id": {},
              "option_set_display": "right",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "inventory_tracking": "none",
              "reviews_rating_sum": 0,
              "reviews_count": 0,
              "total_sold": 1,
              "fixed_cost_shipping_price": 0,
              "is_free_shipping": false,
              "is_visible": true,
              "is_featured": false,
              "related_products": [
                -1
              ],
              "warranty": "",
              "bin_picking_number": "",
              "layout_file": "product.html",
              "upc": "",
              "mpn": "",
              "gtin": "",
              "search_keywords": "",
              "availability": "available",
              "availability_description": "",
              "gift_wrapping_options_type": "any",
              "gift_wrapping_options_list": [],
              "sort_order": 0,
              "condition": "New",
              "is_condition_shown": false,
              "order_quantity_minimum": 0,
              "order_quantity_maximum": 0,
              "page_title": "",
              "meta_keywords": [],
              "meta_description": "",
              "date_created": "2018-08-15T14:48:48+00:00",
              "date_modified": "2018-08-31T15:19:27+00:00",
              "view_count": 0,
              "preorder_release_date": {},
              "preorder_message": "",
              "is_preorder_only": false,
              "is_price_hidden": false,
              "price_hidden_label": "",
              "custom_url": {
                "url": "/all/ceramic-sugar-creamer-set/",
                "is_customized": true
              },
              "base_variant_id": 347,
              "open_graph_type": "product",
              "open_graph_title": "",
              "open_graph_description": "",
              "open_graph_use_meta_description": true,
              "open_graph_use_product_name": true,
              "open_graph_use_image": true,
              "variants": [
                {
                  "id": 347,
                  "product_id": 176,
                  "sku": "",
                  "sku_id": {},
                  "price": 59,
                  "calculated_price": 59,
                  "sale_price": 0,
                  "retail_price": 0,
                  "map_price": 0,
                  "weight": 1,
                  "width": 0,
                  "height": 0,
                  "depth": 0,
                  "is_free_shipping": false,
                  "fixed_cost_shipping_price": 0,
                  "calculated_weight": 1,
                  "purchasing_disabled": false,
                  "purchasing_disabled_message": "",
                  "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/products/176/images/432/milkandcreamer1_1024x1024__69117__81345.1534344528.560.850.jpg?c=2",
                  "cost_price": 0,
                  "upc": "",
                  "mpn": "",
                  "gtin": "",
                  "inventory_level": 0,
                  "inventory_warning_level": 0,
                  "bin_picking_number": "",
                  "option_values": []
                }
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 39,
              "count": 10,
              "per_page": 10,
              "current_page": 1,
              "total_pages": 4,
              "links": {
                "next": "?sort=name&include=variants&limit=10&page=2",
                "current": "?sort=name&include=variants&limit=10&page=1"
              },
              "too_many": false
            }
          }
        }
      }
    },
    "BrandResponse": {
      "description": "",
      "schema": {
        "description": "Brand Response returns for:\n* Create Brand\n* Get Brand by Id\n* Update Brand by Id",
        "type": "object",
        "title": "Brand Response",
        "properties": {
          "data": {
            "type": "object",
            "description": "Common Brand properties.",
            "title": "Brand",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique ID of the *Brand*. Read-Only."
              },
              "name": {
                "type": "string",
                "description": "The name of the brand. Must be unique.\nRequired in POST.",
                "x-required": [
                  "post",
                  "put"
                ],
                "minLength": 1,
                "maxLength": 255,
                "example": "Common Good"
              },
              "page_title": {
                "type": "string",
                "description": "The title shown in the browser while viewing the brand.\n",
                "minLength": 0,
                "maxLength": 255,
                "example": "Common Good"
              },
              "meta_keywords": {
                "type": "array",
                "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                "example": "modern, clean, contemporary",
                "items": {
                  "type": "string"
                }
              },
              "meta_description": {
                "type": "string",
                "description": "A meta description to include.\n",
                "minLength": 0,
                "maxLength": 65535,
                "example": "Common Good is a modern brand."
              },
              "search_keywords": {
                "type": "string",
                "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                "minLength": 0,
                "maxLength": 65535,
                "example": "kitchen, laundry, cart, storage"
              },
              "image_url": {
                "type": "string",
                "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                "x-url": true,
                "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
              },
              "custom_url": {
                "type": "object",
                "description": "The custom URL for the brand on the storefront.",
                "title": "Custom Url Brand",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Brand URL on the storefront.\n",
                    "x-url": true,
                    "example": "/shoes"
                  },
                  "is_customized": {
                    "type": "boolean",
                    "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                    "example": true
                  }
                }
              }
            },
            "required": [
              "name"
            ]
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 50,
            "name": "Common Good",
            "meta_keywords": [
              "modern, clean, contemporary"
            ],
            "meta_description": "Common Good is a modern brand",
            "image_url": "",
            "search_keywords": "kitchen, laundry, cart, storage",
            "custom_url": {
              "url": "/brands/Common-Good.html",
              "is_customized": false
            }
          },
          "meta": {}
        }
      }
    },
    "BrandCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "title": "Brand Collection Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Common Brand properties.",
              "title": "Brand",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Brand*. Read-Only."
                },
                "name": {
                  "type": "string",
                  "description": "The name of the brand. Must be unique.\nRequired in POST.",
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "minLength": 1,
                  "maxLength": 255,
                  "example": "Common Good"
                },
                "page_title": {
                  "type": "string",
                  "description": "The title shown in the browser while viewing the brand.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Common Good"
                },
                "meta_keywords": {
                  "type": "array",
                  "description": "Comma-separated list of meta keywords to include in the HTML.\n",
                  "example": "modern, clean, contemporary",
                  "items": {
                    "type": "string"
                  }
                },
                "meta_description": {
                  "type": "string",
                  "description": "A meta description to include.\n",
                  "minLength": 0,
                  "maxLength": 65535,
                  "example": "Common Good is a modern brand."
                },
                "search_keywords": {
                  "type": "string",
                  "description": "A comma-separated list of keywords that can be used to locate this brand.\n",
                  "minLength": 0,
                  "maxLength": 65535,
                  "example": "kitchen, laundry, cart, storage"
                },
                "image_url": {
                  "type": "string",
                  "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/brands/{brandId}/image`, or by providing a publicly accessible URL in this field.\n",
                  "x-url": true,
                  "example": "https://cdn8.bigcommerce.com/s-12345/product_images/k/your-image-name.png"
                },
                "custom_url": {
                  "type": "object",
                  "description": "The custom URL for the brand on the storefront.",
                  "title": "Custom Url Brand",
                  "properties": {
                    "url": {
                      "type": "string",
                      "description": "Brand URL on the storefront.\n",
                      "x-url": true,
                      "example": "/shoes"
                    },
                    "is_customized": {
                      "type": "boolean",
                      "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                      "example": true
                    }
                  }
                }
              },
              "required": [
                "name"
              ]
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 35,
              "name": "Sagaform",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/brands/Sagaform.html",
                "is_customized": false
              }
            },
            {
              "id": 36,
              "name": "OFS",
              "page_title": "OFS",
              "meta_keywords": [
                "modern",
                " clean",
                " contemporary"
              ],
              "meta_description": "OFS is a modern brand.",
              "image_url": "",
              "search_keywords": "kitchen, laundry, cart, storage",
              "custom_url": {
                "url": "/brands/OFS.html",
                "is_customized": false
              }
            },
            {
              "id": 37,
              "name": "Common Good",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/k/screen%20shot%202018-05-07%20at%2012.24.24%20pm_1525785365__65102.png",
              "search_keywords": "",
              "custom_url": {
                "url": "/brands/Common-Good.html",
                "is_customized": false
              }
            },
            {
              "id": 38,
              "name": "BigCommerce",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/bigcommerce/",
                "is_customized": false
              }
            },
            {
              "id": 39,
              "name": "Test Brand One",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "image_url": "https://cdn8.bigcommerce.com/s-jrah6gmn/product_images/q/apihqggzm__53766.jpg",
              "search_keywords": "",
              "custom_url": {
                "url": "/test-brand-one/",
                "is_customized": false
              }
            },
            {
              "id": 40,
              "name": "Fog Linen Work",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/fog-linen-work/",
                "is_customized": false
              }
            },
            {
              "id": 41,
              "name": "Barr-Co.",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/barr-co/",
                "is_customized": false
              }
            },
            {
              "id": 42,
              "name": "Thames & Hudson",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/thames-hudson/",
                "is_customized": false
              }
            },
            {
              "id": 43,
              "name": "Able Brewing",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/able-brewing/",
                "is_customized": false
              }
            },
            {
              "id": 44,
              "name": "Chemex",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/chemex/",
                "is_customized": false
              }
            },
            {
              "id": 45,
              "name": "Kinfolk",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/kinfolk/",
                "is_customized": false
              }
            },
            {
              "id": 46,
              "name": "Iris Hantverk",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/iris-hantverk/",
                "is_customized": false
              }
            },
            {
              "id": 47,
              "name": "Gather Journal",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/gather-journal/",
                "is_customized": false
              }
            },
            {
              "id": 48,
              "name": "Openhouse Magazine",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/openhouse-magazine/",
                "is_customized": false
              }
            },
            {
              "id": 49,
              "name": "Smith Journal",
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": {},
              "image_url": "",
              "search_keywords": "",
              "custom_url": {
                "url": "/smith-journal/",
                "is_customized": false
              }
            }
          ],
          "meta": {
            "pagination": {
              "total": 15,
              "count": 15,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "BrandImageUpload": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "image_url": {
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": {
            "image_url": "https://cdn11.bigcommerce.com/s-{store_hash}/product_images/k/group_1545334669__76009.png"
          },
          "meta": {}
        }
      }
    },
    "MetafieldCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "title": "Meta Field Collection Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Common Metafield properties.",
              "title": "Metafield",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique ID of the *Metafield*. Read-Only.",
                  "example": 6
                },
                "permission_set": {
                  "type": "string",
                  "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                  "enum": [
                    "app_only",
                    "read",
                    "write"
                  ],
                  "x-required": [
                    "post"
                  ]
                },
                "namespace": {
                  "type": "string",
                  "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Warehouse Locations"
                },
                "key": {
                  "type": "string",
                  "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 64,
                  "example": "Location"
                },
                "value": {
                  "type": "string",
                  "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 65535,
                  "example": "4HG"
                },
                "description": {
                  "type": "string",
                  "description": "Description for the metafields.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "Location in the warehouse"
                },
                "resource_type": {
                  "type": "string",
                  "description": "The type of resource with which the metafield is associated.\n",
                  "enum": [
                    "category",
                    "brand",
                    "product",
                    "variant"
                  ],
                  "x-required": [
                    "post"
                  ],
                  "example": "product"
                },
                "resource_id": {
                  "type": "integer",
                  "description": "The ID for the resource with which the metafield is associated.\n",
                  "x-required": [
                    "post"
                  ],
                  "minimum": 0,
                  "maximum": 10000000000,
                  "example": 111
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time of the metafield's creation. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                },
                "updated_at": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Date and time when the metafield was last updated. Read-Only.\n",
                  "example": "2018-05-07T20:14:17+00:00"
                }
              },
              "required": [
                "permission_set",
                "namespace",
                "key",
                "value"
              ]
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "permission_set": "app_only",
              "namespace": "Warehouse Locations",
              "key": "Location",
              "value": "4HG",
              "description": "Location in the warehouse",
              "resource_type": "brand",
              "resource_id": 111,
              "id": 6,
              "created_at": "1973-01-20T21:34:57.903Z",
              "updated_at": "1990-12-30T00:29:23.515Z"
            },
            {
              "permission_set": "read",
              "namespace": "Warehouse Locations",
              "key": "Location",
              "value": "4HG",
              "description": "Location in the warehouse",
              "resource_type": "brand",
              "resource_id": 111,
              "id": 6,
              "created_at": "1973-01-20T21:34:57.903Z",
              "updated_at": "1990-12-30T00:29:23.515Z"
            },
            {
              "permission_set": "app_only",
              "namespace": "Warehouse Locations",
              "key": "Location",
              "value": "4HG",
              "description": "Location in the warehouse",
              "resource_type": "brand",
              "resource_id": 111,
              "id": 6,
              "created_at": "1973-01-20T21:34:57.903Z",
              "updated_at": "1990-12-30T00:29:23.515Z"
            }
          ],
          "meta": {
            "pagination": {
              "total": 3,
              "count": 3,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "MetafieldResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "title": "Metafield Response",
        "properties": {
          "data": {
            "type": "object",
            "description": "Common Metafield properties.",
            "title": "Metafield",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique ID of the *Metafield*. Read-Only.",
                "example": 6
              },
              "permission_set": {
                "type": "string",
                "description": "Determines whether the field is completely private to the app that owns the field (`app_only`), or visible to other API consumers (`read`), or completely open for reading and writing to other apps (`write`). Required for POST.\n",
                "enum": [
                  "app_only",
                  "read",
                  "write"
                ],
                "x-required": [
                  "post"
                ]
              },
              "namespace": {
                "type": "string",
                "description": "Namespace for the metafield, for organizational purposes. This is set set by the developer. Required for POST.\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 64,
                "example": "Warehouse Locations"
              },
              "key": {
                "type": "string",
                "description": "The name of the field, for example: `location_id`, `color`. Required for POST.\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 64,
                "example": "Location"
              },
              "value": {
                "type": "string",
                "description": "The value of the field, for example: `1`, `blue`. Required for POST.\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 65535,
                "example": "4HG"
              },
              "description": {
                "type": "string",
                "description": "Description for the metafields.\n",
                "minLength": 0,
                "maxLength": 255,
                "example": "Location in the warehouse"
              },
              "resource_type": {
                "type": "string",
                "description": "The type of resource with which the metafield is associated.\n",
                "enum": [
                  "category",
                  "brand",
                  "product",
                  "variant"
                ],
                "x-required": [
                  "post"
                ],
                "example": "product"
              },
              "resource_id": {
                "type": "integer",
                "description": "The ID for the resource with which the metafield is associated.\n",
                "x-required": [
                  "post"
                ],
                "minimum": 0,
                "maximum": 10000000000,
                "example": 111
              },
              "created_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time of the metafield's creation. Read-Only.\n",
                "example": "2018-05-07T20:14:17+00:00"
              },
              "updated_at": {
                "type": "string",
                "format": "date-time",
                "description": "Date and time when the metafield was last updated. Read-Only.\n",
                "example": "2018-05-07T20:14:17+00:00"
              }
            },
            "required": [
              "permission_set",
              "namespace",
              "key",
              "value"
            ]
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 8,
            "key": "location_id",
            "value": "Shelf 3, Bin 5",
            "namespace": "Inventory Namespace",
            "permission_set": "read",
            "resource_type": "product",
            "resource_id": 158,
            "description": "Where products are located",
            "date_created": "2018-09-13T16:42:37+00:00",
            "date_modified": "2018-09-13T16:42:37+00:00"
          },
          "meta": {}
        }
      }
    },
    "CategoryCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "title": "Category Base",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The unique numeric ID of the category; increments sequentially."
          },
          "parent_id": {
            "type": "integer",
            "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in /POST if creating a child category.",
            "x-required": [
              "post"
            ],
            "example": 2
          },
          "name": {
            "type": "string",
            "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in /POST.",
            "x-required": [
              "post"
            ],
            "minLength": 1,
            "maxLength": 50,
            "example": "Bath"
          },
          "description": {
            "type": "string",
            "description": "The product description, which can include HTML formatting.\n",
            "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
          },
          "views": {
            "type": "integer",
            "description": "Number of views the category has on the storefront.\n",
            "example": 1050
          },
          "sort_order": {
            "type": "integer",
            "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
            "minimum": -2147483648,
            "maximum": 2147483647,
            "example": 3
          },
          "page_title": {
            "type": "string",
            "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
            "minLength": 0,
            "maxLength": 255,
            "example": "Bath"
          },
          "search_keywords": {
            "type": "string",
            "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
            "minLength": 0,
            "maxLength": 65535
          },
          "meta_keywords": {
            "type": "array",
            "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
            "items": {
              "type": "string"
            }
          },
          "meta_description": {
            "type": "string",
            "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
            "minLength": 0,
            "maxLength": 65535
          },
          "layout_file": {
            "type": "string",
            "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
            "minLength": 0,
            "maxLength": 500,
            "example": "category.html"
          },
          "is_visible": {
            "type": "boolean",
            "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
          },
          "default_product_sort": {
            "type": "string",
            "description": "Determines how the products are sorted on category page load.\n",
            "enum": [
              "use_store_settings",
              "featured",
              "newest",
              "best_selling",
              "alpha_asc",
              "alpha_desc",
              "avg_customer_review",
              "price_asc",
              "price_desc"
            ]
          },
          "image_url": {
            "type": "string",
            "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
            "x-url": true,
            "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
          },
          "custom_url": {
            "type": "object",
            "description": "The custom URL for the category on the storefront.",
            "title": "Custom Url Category",
            "properties": {
              "url": {
                "type": "string",
                "description": "Category URL on the storefront.\n",
                "x-required": [
                  "post",
                  "put"
                ],
                "x-url": true,
                "minLength": 0,
                "maxLength": 255,
                "example": "/shoes"
              },
              "is_customized": {
                "type": "boolean",
                "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                "x-required": [
                  "post",
                  "put"
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 19,
              "parent_id": 0,
              "name": "Garden",
              "description": "<p>This is the garden description</p>",
              "views": 0,
              "sort_order": 2,
              "page_title": "page title",
              "meta_keywords": [
                "meta keyword"
              ],
              "meta_description": "meta description",
              "layout_file": "category.html",
              "image_url": "",
              "is_visible": true,
              "search_keywords": "search keywords",
              "default_product_sort": "use_store_settings",
              "custom_url": {
                "url": "/garden/",
                "is_customized": false
              }
            },
            {
              "id": 20,
              "parent_id": 0,
              "name": "Publications",
              "description": "",
              "views": 0,
              "sort_order": 4,
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "layout_file": "category_with_facets.html",
              "image_url": "",
              "is_visible": true,
              "search_keywords": "",
              "default_product_sort": "use_store_settings",
              "custom_url": {
                "url": "/publications/",
                "is_customized": false
              }
            },
            {
              "id": 21,
              "parent_id": 0,
              "name": "Kitchen",
              "description": "",
              "views": 0,
              "sort_order": 3,
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "layout_file": "category_with_facets.html",
              "image_url": "",
              "is_visible": true,
              "search_keywords": "",
              "default_product_sort": "use_store_settings",
              "custom_url": {
                "url": "/kitchen/",
                "is_customized": false
              }
            },
            {
              "id": 22,
              "parent_id": 0,
              "name": "Utility",
              "description": "",
              "views": 0,
              "sort_order": 5,
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "layout_file": "category_with_facets.html",
              "image_url": "",
              "is_visible": true,
              "search_keywords": "",
              "default_product_sort": "use_store_settings",
              "custom_url": {
                "url": "/utility/",
                "is_customized": false
              }
            },
            {
              "id": 23,
              "parent_id": 0,
              "name": "Shop All",
              "description": "",
              "views": 0,
              "sort_order": 0,
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "layout_file": "category_with_facets.html",
              "image_url": "",
              "is_visible": true,
              "search_keywords": "",
              "default_product_sort": "use_store_settings",
              "custom_url": {
                "url": "/shop-all/",
                "is_customized": false
              }
            },
            {
              "id": 39,
              "parent_id": 19,
              "name": "Bath",
              "description": "",
              "views": 0,
              "sort_order": 0,
              "page_title": "",
              "meta_keywords": [
                ""
              ],
              "meta_description": "",
              "layout_file": "category.html",
              "image_url": "",
              "is_visible": true,
              "search_keywords": "",
              "default_product_sort": "use_store_settings",
              "custom_url": {
                "url": "/garden/bath/",
                "is_customized": false
              }
            }
          ],
          "meta": {
            "pagination": {
              "total": 6,
              "count": 6,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "CategoryResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Common Category object properties.",
            "title": "Category",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique ID of the *Category*. Increments sequentially.\nRead-Only. "
              },
              "parent_id": {
                "type": "integer",
                "description": "The unique numeric ID of the category's parent. This field controls where the category sits in the tree of categories that organize the catalog.\nRequired in a POST if creating a child category.",
                "x-required": [
                  "post"
                ],
                "example": 2
              },
              "name": {
                "type": "string",
                "description": "The name displayed for the category. Name is unique with respect to the category's siblings.\nRequired in a POST.",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 50,
                "example": "Bath"
              },
              "description": {
                "type": "string",
                "description": "The product description, which can include HTML formatting.\n",
                "example": "<p>We offer a wide variety of products perfect for relaxing</p>"
              },
              "views": {
                "type": "integer",
                "description": "Number of views the category has on the storefront.\n",
                "example": 1050
              },
              "sort_order": {
                "type": "integer",
                "description": "Priority this category will be given when included in the menu and category pages. The lower the number, the closer to the top of the results the category will be.\n",
                "minimum": -2147483648,
                "maximum": 2147483647,
                "example": 3
              },
              "page_title": {
                "type": "string",
                "description": "Custom title for the category page. If not defined, the category name will be used as the meta title.\n",
                "minLength": 0,
                "maxLength": 255,
                "example": "Bath"
              },
              "search_keywords": {
                "type": "string",
                "description": "A comma-separated list of keywords that can be used to locate the category when searching the store.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "meta_keywords": {
                "type": "array",
                "description": "Custom meta keywords for the category page. If not defined, the store's default keywords will be used. Must post as an array like: [\"awesome\",\"sauce\"].\n",
                "items": {
                  "type": "string"
                }
              },
              "meta_description": {
                "type": "string",
                "description": "Custom meta description for the category page. If not defined, the store's default meta description will be used.\n",
                "minLength": 0,
                "maxLength": 65535
              },
              "layout_file": {
                "type": "string",
                "description": "A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied.\n",
                "minLength": 0,
                "maxLength": 500,
                "example": "category.html"
              },
              "is_visible": {
                "type": "boolean",
                "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the category will be displayed. If `false`, the category will be hidden from view.\n"
              },
              "default_product_sort": {
                "type": "string",
                "description": "Determines how the products are sorted on category page load.\n",
                "enum": [
                  "use_store_settings",
                  "featured",
                  "newest",
                  "best_selling",
                  "alpha_asc",
                  "alpha_desc",
                  "avg_customer_review",
                  "price_asc",
                  "price_desc"
                ]
              },
              "image_url": {
                "type": "string",
                "description": "Image URL used for this category on the storefront. Images can be uploaded via form file post to `/categories/{categoryId}/image`, or by providing a publicly accessible URL in this field.\n",
                "x-url": true,
                "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
              },
              "custom_url": {
                "type": "object",
                "description": "The custom URL for the category on the storefront.",
                "title": "Custom Url Category",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Category URL on the storefront.\n",
                    "x-required": [
                      "post",
                      "put"
                    ],
                    "x-url": true,
                    "minLength": 0,
                    "maxLength": 255,
                    "example": "/shoes"
                  },
                  "is_customized": {
                    "type": "boolean",
                    "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n",
                    "x-required": [
                      "post",
                      "put"
                    ]
                  }
                }
              }
            },
            "required": [
              "parent_id",
              "name"
            ]
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Category Response"
      }
    },
    "ProductResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Common Product properties.",
            "title": "Product",
            "properties": {
              "name": {
                "type": "string",
                "description": "The product name.\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 255,
                "example": "Smith Journal 13"
              },
              "type": {
                "type": "string",
                "description": "The product type. One of: `physical` - a physical stock unit, `digital` - a digital download.\n",
                "x-required": [
                  "post"
                ],
                "enum": [
                  "physical",
                  "digital"
                ],
                "example": "physical"
              },
              "sku": {
                "type": "string",
                "description": "User defined product code/stock keeping unit (SKU).\n",
                "minLength": 0,
                "maxLength": 255,
                "example": "SM-13"
              },
              "description": {
                "type": "string",
                "description": "The product description, which can include HTML formatting.\n",
                "example": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>"
              },
              "weight": {
                "type": "number",
                "description": "Weight of the product, which can be used when calculating shipping costs. This is based on the unit set on the store\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "width": {
                "type": "number",
                "description": "Width of the product, which can be used when calculating shipping costs.\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "depth": {
                "type": "number",
                "description": "Depth of the product, which can be used when calculating shipping costs.\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "height": {
                "type": "number",
                "description": "Height of the product, which can be used when calculating shipping costs.\n",
                "format": "float",
                "minimum": 0,
                "maximum": 9999999999
              },
              "price": {
                "type": "number",
                "description": "The price of the product. The price should include or exclude tax, based on the store settings.\n",
                "format": "float",
                "minimum": 0
              },
              "cost_price": {
                "type": "number",
                "description": "The cost price of the product. Stored for reference only; it is not used or displayed anywhere on the store.\n",
                "format": "float",
                "minimum": 0
              },
              "retail_price": {
                "type": "number",
                "description": "The retail cost of the product. If entered, the retail cost price will be shown on the product page.\n",
                "format": "float",
                "minimum": 0
              },
              "sale_price": {
                "type": "number",
                "description": "If entered, the sale price will be used instead of value in the price field when calculating the product's cost.\n",
                "format": "float",
                "minimum": 0
              },
              "tax_class_id": {
                "type": "integer",
                "description": "The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.)\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "product_tax_code": {
                "type": "string",
                "description": "Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to BigCommerce's Avalara Premium integration can calculate sales taxes more accurately. Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive. For details, please see Avalara's documentation.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "categories": {
                "type": "array",
                "description": "An array of IDs for the categories to which this product belongs. When updating a product, if an array of categories is supplied, all product categories will be overwritten. Does not accept more than 1,000 ID values.\n",
                "x-required": [
                  "post"
                ],
                "items": {
                  "type": "integer"
                }
              },
              "brand_id": {
                "type": "integer",
                "description": "A product can be added to an existing brand during a product /PUT or /POST.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "inventory_level": {
                "type": "integer",
                "description": "Current inventory level of the product. Simple inventory tracking must be enabled (See the `inventory_tracking` field) for this to take any effect.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "inventory_warning_level": {
                "type": "integer",
                "description": "Inventory warning level for the product. When the product's inventory level drops below the warning level, the store owner will be informed. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take any effect.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "inventory_tracking": {
                "type": "string",
                "description": "The type of inventory tracking for the product. Values are: `none` - inventory levels will not be tracked; `product` - inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields; `variant` - inventory levels will be tracked based on variants, which maintain their own warning levels and inventory levels.\n",
                "enum": [
                  "none",
                  "product",
                  "variant"
                ]
              },
              "fixed_cost_shipping_price": {
                "type": "number",
                "description": "A fixed shipping cost for the product. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                "format": "float",
                "minimum": 0
              },
              "is_free_shipping": {
                "type": "boolean",
                "description": "Flag used to indicate whether the product has free shipping. If `true`, the shipping cost for the product will be zero.\n"
              },
              "is_visible": {
                "type": "boolean",
                "description": "Flag to determine whether the product should be displayed to customers browsing the store. If `true`, the product will be displayed. If `false`, the product will be hidden from view.\n"
              },
              "is_featured": {
                "type": "boolean",
                "description": "Flag to determine whether the product should be included in the `featured products` panel when viewing the store.\n"
              },
              "related_products": {
                "type": "array",
                "description": "An array of IDs for the related products.\n",
                "items": {
                  "type": "integer"
                }
              },
              "warranty": {
                "type": "string",
                "description": "Warranty information displayed on the product page. Can include HTML formatting.\n",
                "minLength": 0,
                "maxLength": 65535
              },
              "bin_picking_number": {
                "type": "string",
                "description": "The BIN picking number for the product.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "layout_file": {
                "type": "string",
                "description": "The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied.\n",
                "minLength": 0,
                "maxLength": 500
              },
              "upc": {
                "type": "string",
                "description": "The product UPC code, which is used in feeds for shopping comparison sites and external channel integrations.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "search_keywords": {
                "type": "string",
                "description": "A comma-separated list of keywords that can be used to locate the product when searching the store.\n",
                "minLength": 0,
                "maxLength": 65535
              },
              "availability": {
                "type": "string",
                "enum": [
                  "available",
                  "disabled",
                  "preorder"
                ],
                "description": "Availability of the product. Availability options are: `available` - the product can be purchased on the storefront; `disabled` - the product is listed in the storefront, but cannot be purchased; `preorder` - the product is listed for pre-orders.\n"
              },
              "availability_description": {
                "type": "string",
                "description": "Availability text displayed on the checkout page, under the product title. Tells the customer how long it will normally take to ship this product, such as: 'Usually ships in 24 hours.'\n",
                "minLength": 0,
                "maxLength": 255
              },
              "gift_wrapping_options_type": {
                "type": "string",
                "enum": [
                  "any",
                  "none",
                  "list"
                ],
                "description": "Type of gift-wrapping options. Values: `any` - allow any gift-wrapping options in the store; `none` - disallow gift-wrapping on the product; `list` – provide a list of IDs in the `gift_wrapping_options_list` field.\n"
              },
              "gift_wrapping_options_list": {
                "type": "array",
                "description": "A list of gift-wrapping option IDs.\n",
                "items": {
                  "type": "integer"
                }
              },
              "sort_order": {
                "type": "integer",
                "description": "Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results.\n",
                "minimum": -2147483648,
                "maximum": 2147483647
              },
              "condition": {
                "type": "string",
                "description": "The product condition. Will be shown on the product page if the `is_condition_shown` field's value is `true`. Possible values: `New`, `Used`, `Refurbished`.\n",
                "enum": [
                  "New",
                  "Used",
                  "Refurbished"
                ]
              },
              "is_condition_shown": {
                "type": "boolean",
                "description": "Flag used to determine whether the product condition is shown to the customer on the product page.\n"
              },
              "order_quantity_minimum": {
                "type": "integer",
                "description": "The minimum quantity an order must contain, to be eligible to purchase this product.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "order_quantity_maximum": {
                "type": "integer",
                "description": "The maximum quantity an order can contain when purchasing the product.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "page_title": {
                "type": "string",
                "description": "Custom title for the product page. If not defined, the product name will be used as the meta title.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "meta_keywords": {
                "type": "array",
                "description": "Custom meta keywords for the product page. If not defined, the store's default keywords will be used.\n",
                "items": {
                  "type": "string"
                }
              },
              "meta_description": {
                "type": "string",
                "description": "Custom meta description for the product page. If not defined, the store's default meta description will be used.\n",
                "minLength": 0,
                "maxLength": 65535
              },
              "view_count": {
                "type": "integer",
                "description": "The number of times the product has been viewed.\n",
                "minimum": 0,
                "maximum": 1000000000
              },
              "preorder_release_date": {
                "type": "string",
                "format": "date-time",
                "description": "Pre-order release date. See the `availability` field for details on setting a product's availability to accept pre-orders.\n",
                "x-nullable": true
              },
              "preorder_message": {
                "type": "string",
                "description": "Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be substituted for the release date.\n",
                "minLength": 0,
                "maxLength": 255
              },
              "is_preorder_only": {
                "type": "boolean",
                "description": "If set to true then on the preorder release date the preorder status will automatically be removed.  \nIf set to false, then on the release date the preorder status **will not** be removed. It will need to be changed manually either in the\ncontrol panel or using the API. Using the API set `availability` to `available`.\n"
              },
              "is_price_hidden": {
                "type": "boolean",
                "description": "False by default, indicating that this product's price should be shown on the product page. If set to `true`, the price is hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.)\n"
              },
              "price_hidden_label": {
                "type": "string",
                "description": "By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` is displayed instead of the price. (NOTE: To successfully set a non-empty string value with `is_price_hidden` set to `true`, the `availability` value must be `disabled`.)\n",
                "minLength": 0,
                "maxLength": 200
              },
              "custom_url": {
                "type": "object",
                "description": "The custom URL for the product on the storefront.",
                "title": "Custom Url Product",
                "properties": {
                  "url": {
                    "type": "string",
                    "description": "Product URL on the storefront.\n",
                    "x-url": true,
                    "example": "/red-large-shirt"
                  },
                  "is_customized": {
                    "type": "boolean",
                    "description": "Returns `true` if the URL has been changed from its default state (the auto-assigned URL that BigCommerce provides).\n"
                  }
                }
              },
              "open_graph_type": {
                "type": "string",
                "description": "Type of product, defaults to `product`.\n",
                "enum": [
                  "product",
                  "album",
                  "book",
                  "drink",
                  "food",
                  "game",
                  "movie",
                  "song",
                  "tv_show"
                ]
              },
              "open_graph_title": {
                "type": "string",
                "description": "Title of the product, if not specified the product name will be used instead.\n"
              },
              "open_graph_description": {
                "type": "string",
                "description": "Description to use for the product, if not specified then the meta_description will be used instead.\n"
              },
              "open_graph_use_meta_description": {
                "type": "boolean",
                "description": "Flag to determine if product description or open graph description is used.\n"
              },
              "open_graph_use_product_name": {
                "type": "boolean",
                "description": "Flag to determine if product name or open graph name is used.\n"
              },
              "open_graph_use_image": {
                "type": "boolean",
                "description": "Flag to determine if product image or open graph image is used.\n"
              },
              "brand_name or brand_id": {
                "type": "string",
                "example": "Common Good",
                "description": "The brand can be created during a product PUT or POST request. If the brand already exists then the product will be added. If not the brand will be created and the product added. If using `brand_name` it performs a fuzzy match and adds the brand. eg. \"Common Good\" and \"Common good\" are the same. Brand name does not return as part of a product response. Only the `brand_id`."
              },
              "gtin": {
                "type": "string",
                "description": "Global Trade Item Number"
              },
              "mpn": {
                "type": "string",
                "description": "Manufacturer Part Number"
              },
              "calculated_price": {
                "type": "number",
                "description": "The price of the product as seen on the storefront. It will be equal to the `sale_price`, if set, and the `price` if there is not a `sale_price`.\n",
                "format": "float"
              },
              "reviews_rating_sum": {
                "type": "integer",
                "description": "The total rating for the product.\n",
                "example": 3.2
              },
              "reviews_count": {
                "type": "integer",
                "description": "The number of times the product has been rated.\n",
                "example": 4
              },
              "total_sold": {
                "type": "integer",
                "description": "The total quantity of this product sold.\n",
                "example": 80
              },
              "custom_fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
                  "title": "Custom Field",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                      "minimum": 1,
                      "example": 6
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "ISBN"
                    },
                    "value": {
                      "type": "string",
                      "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                      "x-required": [
                        "post"
                      ],
                      "minLength": 1,
                      "maxLength": 250,
                      "example": "1234567890123"
                    }
                  },
                  "required": [
                    "name",
                    "value"
                  ]
                }
              },
              "bulk_pricing_rules": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Common BulkPricingRule properties",
                  "title": "Bulk Pricing Rule",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "Unique ID of the *Bulk Pricing Rule*. Read-Only."
                    },
                    "quantity_min": {
                      "type": "integer",
                      "description": "The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero.\nRequired in /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 10
                    },
                    "quantity_max": {
                      "type": "integer",
                      "description": "The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the `quantity_min` value – unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "minimum": 0,
                      "example": 50
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of adjustment that is made. Values: `price` - the adjustment amount per product; `percent` - the adjustment as a percentage of the original price; `fixed` - the adjusted absolute price of the product.\nRequired in /POST.",
                      "x-required": [
                        "post"
                      ],
                      "enum": [
                        "price",
                        "percent",
                        "fixed"
                      ],
                      "example": "price"
                    },
                    "amount": {
                      "description": "The discount can be a fixed dollar amount or a percentage. For a fixed dollar amount enter it as an integer and the response will return as an integer. For percentage enter the amount as the percentage divided by 100 using string format. For example 10% percent would be “.10”. The response will return as an integer. \nRequired in /POST.",
                      "format": "float",
                      "example": 10,
                      "type": "integer"
                    }
                  },
                  "required": [
                    "quantity_min",
                    "quantity_max",
                    "type",
                    "amount"
                  ]
                }
              },
              "date_created": {
                "type": "string",
                "format": "date-time",
                "description": "The date on which the product was created.\n",
                "example": "2018-08-15T14:49:05+00:00"
              },
              "date_modified": {
                "type": "string",
                "format": "date-time",
                "description": "The date on which the product was modified.\n",
                "example": "2018-08-24T14:41:00+00:00"
              },
              "images": {
                "type": "array",
                "items": {
                  "title": "Product Image",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductImage properties.",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "is_thumbnail": {
                          "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                          "type": "boolean"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "description": {
                          "description": "The description for the image.\n",
                          "type": "string"
                        }
                      },
                      "title": "Product Image Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The unique numeric ID of the image; increments sequentially.\n",
                          "type": "integer"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "image_file": {
                          "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                          "type": "string"
                        },
                        "url_zoom": {
                          "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                          "type": "string"
                        },
                        "url_standard": {
                          "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                          "type": "string"
                        },
                        "url_thumbnail": {
                          "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                          "type": "string"
                        },
                        "url_tiny": {
                          "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                          "type": "string"
                        },
                        "date_modified": {
                          "format": "date-time",
                          "description": "The date on which the product image was modified.\n",
                          "type": "string"
                        },
                        "image_url": {
                          "type": "string",
                          "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                          "description": "Publically available URL. \nUse the image_url when creating a product. "
                        }
                      }
                    }
                  ]
                }
              },
              "videos": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "A product video model.\n",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common ProductVideo properties.",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "description": {
                          "type": "string",
                          "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647
                        },
                        "type": {
                          "type": "string",
                          "description": "The video type (a short name of a host site).\n",
                          "enum": [
                            "youtube"
                          ]
                        }
                      },
                      "title": "Product Video Base"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "description": "The unique numeric ID of the product video; increments sequentially.\n"
                        },
                        "video_id": {
                          "description": "The ID of the video on a host site.\n",
                          "type": "string"
                        },
                        "product_id": {
                          "description": "The unique numeric identifier for the product with which the image is associated.\n",
                          "type": "integer"
                        },
                        "length": {
                          "description": "Length of the video. This will be filled in according to data on a host site.\n",
                          "type": "string"
                        }
                      }
                    }
                  ],
                  "title": "Product Video"
                }
              },
              "variants": {
                "type": "array",
                "items": {
                  "type": "object",
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Variant properties.",
                      "title": "Variant Base",
                      "properties": {
                        "cost_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The cost price of the variant. Not affected by Price List prices.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "sale_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "retail_price": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "weight": {
                          "type": "number",
                          "format": "double",
                          "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "width": {
                          "type": "number",
                          "format": "double",
                          "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "height": {
                          "type": "number",
                          "format": "double",
                          "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "depth": {
                          "type": "number",
                          "format": "double",
                          "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "is_free_shipping": {
                          "type": "boolean",
                          "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                        },
                        "fixed_cost_shipping_price": {
                          "type": "number",
                          "format": "double",
                          "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                          "x-nullable": true,
                          "minimum": 0
                        },
                        "purchasing_disabled": {
                          "type": "boolean",
                          "description": "If `true`, this variant will not be purchasable on the storefront."
                        },
                        "purchasing_disabled_message": {
                          "type": "string",
                          "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                          "minLength": 0,
                          "maxLength": 255
                        },
                        "upc": {
                          "type": "string",
                          "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                          "x-nullable": true
                        },
                        "inventory_level": {
                          "type": "integer",
                          "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                          "x-nullable": true
                        },
                        "inventory_warning_level": {
                          "type": "integer",
                          "description": "When the variant hits this inventory level, it is considered low stock.",
                          "x-nullable": true
                        },
                        "bin_picking_number": {
                          "type": "string",
                          "description": "Identifies where in a warehouse the variant is located.",
                          "x-nullable": true,
                          "minLength": 0,
                          "maxLength": 255
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "product_id": {
                          "type": "integer"
                        },
                        "sku": {
                          "type": "string"
                        },
                        "sku_id": {
                          "type": "integer",
                          "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                          "x-nullable": true
                        },
                        "option_values": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value Product properties.",
                                "title": "Option Value Product Base",
                                "properties": {
                                  "option_display_name": {
                                    "type": "string",
                                    "description": "The name of the option.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Color"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The label of the option value.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "minLength": 1,
                                    "maxLength": 255,
                                    "example": "Beige"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "integer"
                                  },
                                  "option_id": {
                                    "type": "integer"
                                  }
                                }
                              }
                            ],
                            "title": "Option Value Variant"
                          },
                          "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                        },
                        "calculated_price": {
                          "type": "number",
                          "format": "double",
                          "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                        }
                      }
                    }
                  ]
                }
              },
              "base_variant_id": {
                "type": "integer",
                "description": "The unique identifier of the base variant associated with a simple product. This value is null for complex products.",
                "example": 363
              },
              "id": {
                "type": "integer",
                "description": "ID of the product. Read Only"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Product Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 174,
            "name": "1L Le Parfait Jar",
            "type": "physical",
            "sku": "",
            "description": "<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>",
            "weight": 1,
            "width": 0,
            "depth": 0,
            "height": 0,
            "price": 7.95,
            "cost_price": 0,
            "retail_price": 10,
            "sale_price": 0,
            "map_price": 0,
            "tax_class_id": 0,
            "product_tax_code": "",
            "calculated_price": 7.95,
            "categories": [
              23,
              21
            ],
            "brand_id": 36,
            "option_set_id": {},
            "option_set_display": "right",
            "inventory_level": 0,
            "inventory_warning_level": 0,
            "inventory_tracking": "none",
            "reviews_rating_sum": 0,
            "reviews_count": 0,
            "total_sold": 7,
            "fixed_cost_shipping_price": 0,
            "is_free_shipping": false,
            "is_visible": true,
            "is_featured": false,
            "related_products": [
              -1
            ],
            "warranty": "",
            "bin_picking_number": "",
            "layout_file": "product.html",
            "upc": "",
            "mpn": "",
            "gtin": "",
            "search_keywords": "jar, glass",
            "availability": "available",
            "availability_description": "",
            "gift_wrapping_options_type": "any",
            "gift_wrapping_options_list": [],
            "sort_order": 0,
            "condition": "New",
            "is_condition_shown": false,
            "order_quantity_minimum": 0,
            "order_quantity_maximum": 0,
            "page_title": "",
            "meta_keywords": [],
            "meta_description": "",
            "date_created": "2018-08-15T14:48:46+00:00",
            "date_modified": "2018-09-05T20:42:07+00:00",
            "view_count": 10,
            "preorder_release_date": {},
            "preorder_message": "",
            "is_preorder_only": false,
            "is_price_hidden": false,
            "price_hidden_label": "",
            "custom_url": {
              "url": "/all/1l-le-parfait-jar/",
              "is_customized": true
            },
            "base_variant_id": 345,
            "open_graph_type": "product",
            "open_graph_title": "",
            "open_graph_description": "",
            "open_graph_use_meta_description": true,
            "open_graph_use_product_name": true,
            "open_graph_use_image": true
          },
          "meta": {}
        }
      }
    },
    "BulkPricingRuleResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/BulkPricingRuleBase"
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 83,
            "quantity_min": 1,
            "quantity_max": 3,
            "type": "price",
            "amount": 1
          },
          "meta": {}
        }
      }
    },
    "BulkPricingRuleCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/BulkPricingRuleBase"
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "title": "Collection Meta",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 83,
              "quantity_min": 1,
              "quantity_max": 3,
              "type": "price",
              "amount": 1
            },
            {
              "id": 84,
              "quantity_min": 4,
              "quantity_max": 0,
              "type": "price",
              "amount": 1.25
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ComplexRuleCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "description": "Complex Rule Response",
        "title": "Complex Rule Collection Response",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Common ComplexRule properties.",
              "title": "Complex Rule",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the rule; increments sequentially.\nRead-Only",
                  "example": 5
                },
                "product_id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the product with which the rule is associated; increments sequentially.\n",
                  "x-nullable": true,
                  "x-required": [
                    "post",
                    "put"
                  ],
                  "example": 67
                },
                "sort_order": {
                  "type": "integer",
                  "description": "The priority to give this rule when making adjustments to the product properties.\n",
                  "minimum": -2147483648,
                  "maximum": 2147483647,
                  "example": 0
                },
                "enabled": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.\n",
                  "example": true
                },
                "stop": {
                  "type": "boolean",
                  "description": "Flag for determining whether other rules should not be applied after this rule has been applied.\n"
                },
                "purchasing_disabled": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.\n"
                },
                "purchasing_disabled_message": {
                  "type": "string",
                  "description": "Message displayed on the storefront when a rule disables the purchasing of a product.\n",
                  "minLength": 0,
                  "maxLength": 255,
                  "example": "This product is not available at this time."
                },
                "purchasing_hidden": {
                  "type": "boolean",
                  "description": "Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.\n"
                },
                "image_url": {
                  "type": "string",
                  "description": "The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file. \n",
                  "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
                },
                "price_adjuster": {
                  "type": "object",
                  "title": "Adjuster",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  },
                  "description": "Adjuster for Complex Rules."
                },
                "weight_adjuster": {
                  "type": "object",
                  "title": "Adjuster",
                  "properties": {
                    "adjuster": {
                      "type": "string",
                      "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "enum": [
                        "relative",
                        "percentage"
                      ],
                      "x-nullable": true
                    },
                    "adjuster_value": {
                      "type": "number",
                      "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                      "example": 5
                    }
                  },
                  "description": "Adjuster for Complex Rules."
                },
                "conditions": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`'s, or else reference a `modifier_value_id` and a `variant_id`.",
                    "title": "Complex Rule Condition",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the rule condition; increments sequentially. Read-Only\n",
                        "x-nullable": true,
                        "example": 3
                      },
                      "rule_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the rule with which the condition is associated.\nRead-Only",
                        "x-nullable": true,
                        "example": 4
                      },
                      "modifier_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the modifier with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 55
                      },
                      "modifier_value_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the modifier value with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 256
                      },
                      "variant_id": {
                        "type": "integer",
                        "description": "The unique numeric ID of the variant with which the rule condition is associated.\nRequired in /POST.",
                        "x-nullable": true,
                        "example": 1
                      },
                      "combination_id": {
                        "type": "integer",
                        "description": "(READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.\n"
                      }
                    },
                    "required": [
                      "modifier_id",
                      "modifier_value_id",
                      "variant_id"
                    ]
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 82,
              "product_id": 195,
              "sort_order": 0,
              "enabled": true,
              "stop": false,
              "price_adjuster": {
                "adjuster": "relative",
                "adjuster_value": 8
              },
              "weight_adjuster": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "purchasing_hidden": false,
              "image_url": "",
              "conditions": [
                {
                  "rule_id": 82,
                  "modifier_id": 221,
                  "modifier_value_id": 175,
                  "variant_id": {},
                  "combination_id": 0
                }
              ]
            },
            {
              "id": 83,
              "product_id": 195,
              "sort_order": 1,
              "enabled": true,
              "stop": false,
              "price_adjuster": {},
              "weight_adjuster": {
                "adjuster": "relative",
                "adjuster_value": 3
              },
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "purchasing_hidden": false,
              "image_url": "",
              "conditions": [
                {
                  "rule_id": 83,
                  "modifier_id": 221,
                  "modifier_value_id": 174,
                  "variant_id": {},
                  "combination_id": 0
                }
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ComplexRuleResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Common ComplexRule properties.",
            "title": "Complex Rule",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique numeric ID of the rule; increments sequentially.\nRead-Only",
                "example": 5
              },
              "product_id": {
                "type": "integer",
                "description": "The unique numeric ID of the product with which the rule is associated; increments sequentially.\n",
                "x-nullable": true,
                "x-required": [
                  "post",
                  "put"
                ],
                "example": 67
              },
              "sort_order": {
                "type": "integer",
                "description": "The priority to give this rule when making adjustments to the product properties.\n",
                "minimum": -2147483648,
                "maximum": 2147483647,
                "example": 0
              },
              "enabled": {
                "type": "boolean",
                "description": "Flag for determining whether the rule is to be used when adjusting a product's price, weight, image, or availabilty.\n",
                "example": true
              },
              "stop": {
                "type": "boolean",
                "description": "Flag for determining whether other rules should not be applied after this rule has been applied.\n"
              },
              "purchasing_disabled": {
                "type": "boolean",
                "description": "Flag for determining whether the rule should disable purchasing of a product when the conditions are applied.\n"
              },
              "purchasing_disabled_message": {
                "type": "string",
                "description": "Message displayed on the storefront when a rule disables the purchasing of a product.\n",
                "minLength": 0,
                "maxLength": 255,
                "example": "This product is not available at this time."
              },
              "purchasing_hidden": {
                "type": "boolean",
                "description": "Flag for determining whether the rule should hide purchasing of a product when the conditions are applied.\n"
              },
              "image_url": {
                "type": "string",
                "description": "The URL for an image displayed on the storefront when the conditions are applied. Limit of 8MB per file. \n",
                "example": "https://cdn8.bigcommerce.com/s-123456/product_images/d/fakeimage.png"
              },
              "price_adjuster": {
                "type": "object",
                "title": "Adjuster",
                "description": "Adjuster for Complex Rules.",
                "properties": {
                  "adjuster": {
                    "type": "string",
                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                    "enum": [
                      "relative",
                      "percentage"
                    ],
                    "x-nullable": true
                  },
                  "adjuster_value": {
                    "type": "number",
                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                    "example": 5
                  }
                }
              },
              "weight_adjuster": {
                "type": "object",
                "title": "Adjuster",
                "description": "Adjuster for Complex Rules.",
                "properties": {
                  "adjuster": {
                    "type": "string",
                    "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                    "enum": [
                      "relative",
                      "percentage"
                    ],
                    "x-nullable": true
                  },
                  "adjuster_value": {
                    "type": "number",
                    "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                    "example": 5
                  }
                }
              },
              "conditions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Complex rules may return with conditions that apply to one or more variants, or with a single modifier value (if the rules were created using the v2 API or the control panel). Complex rules created or updated in the v3 API must have conditions that either reference multiple `modifier_value_id`'s, or else reference a `modifier_value_id` and a `variant_id`.",
                  "title": "Complex Rule Condition",
                  "required": [
                    "modifier_id",
                    "modifier_value_id",
                    "variant_id"
                  ],
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the rule condition; increments sequentially. Read-Only\n",
                      "x-nullable": true,
                      "example": 3
                    },
                    "rule_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the rule with which the condition is associated.\nRead-Only",
                      "x-nullable": true,
                      "example": 4
                    },
                    "modifier_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the modifier with which the rule condition is associated.\nRequired in /POST.",
                      "x-nullable": true,
                      "example": 55
                    },
                    "modifier_value_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the modifier value with which the rule condition is associated.\nRequired in /POST.",
                      "x-nullable": true,
                      "example": 256
                    },
                    "variant_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the variant with which the rule condition is associated.\nRequired in /POST.",
                      "x-nullable": true,
                      "example": 1
                    },
                    "combination_id": {
                      "type": "integer",
                      "description": "(READ-ONLY:) The unique numeric ID of the SKU (v2 API), or Combination, with which the rule condition is associated. This is to maintain cross-compatibility between v2 and v3.\n"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 82,
              "product_id": 195,
              "sort_order": 0,
              "enabled": true,
              "stop": false,
              "price_adjuster": {
                "adjuster": "relative",
                "adjuster_value": 8
              },
              "weight_adjuster": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "purchasing_hidden": false,
              "image_url": "",
              "conditions": [
                {
                  "rule_id": 82,
                  "modifier_id": 221,
                  "modifier_value_id": 175,
                  "variant_id": {},
                  "combination_id": 0
                }
              ]
            },
            {
              "id": 83,
              "product_id": 195,
              "sort_order": 1,
              "enabled": true,
              "stop": false,
              "price_adjuster": {},
              "weight_adjuster": {
                "adjuster": "relative",
                "adjuster_value": 3
              },
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "purchasing_hidden": false,
              "image_url": "",
              "conditions": [
                {
                  "rule_id": 83,
                  "modifier_id": 221,
                  "modifier_value_id": 174,
                  "variant_id": {},
                  "combination_id": 0
                }
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "CustomFieldCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
              "title": "Custom Field",
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                  "minimum": 1,
                  "example": 6
                },
                "name": {
                  "type": "string",
                  "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 250,
                  "example": "ISBN"
                },
                "value": {
                  "type": "string",
                  "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                  "x-required": [
                    "post"
                  ],
                  "minLength": 1,
                  "maxLength": 250,
                  "example": "1234567890123"
                }
              },
              "required": [
                "name",
                "value"
              ]
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "name": "Release year",
              "value": "1987",
              "id": 1
            }
          ],
          "meta": {
            "pagination": {
              "total": 1,
              "count": 1,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "previous": "?page=1&limit=50",
                "current": "?page=1&limit=50",
                "next": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "CustomFieldResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Gets custom fields associated with a product. These allow you to specify additional information that will appear on the product's page, such as a book's ISBN or a DVD's release date.",
            "title": "Custom Field",
            "properties": {
              "id": {
                "type": "integer",
                "description": "The unique numeric ID of the custom field; increments sequentially.\nRead-Only",
                "minimum": 1,
                "example": 6
              },
              "name": {
                "type": "string",
                "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 250,
                "example": "ISBN"
              },
              "value": {
                "type": "string",
                "description": "The name of the field, shown on the storefront, orders, etc. Required for /POST\n",
                "x-required": [
                  "post"
                ],
                "minLength": 1,
                "maxLength": 250,
                "example": "1234567890123"
              }
            },
            "required": [
              "name",
              "value"
            ]
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": {
            "name": "Release Year",
            "value": "1976",
            "id": 2
          },
          "meta": {}
        }
      }
    },
    "ProductImageCollectionResponse": {
      "description": "",
      "schema": {
        "description": "Response payload for the BigCommerce API.\n",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "title": "Product Image",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common ProductImage properties.",
                  "properties": {
                    "id": {
                      "description": "The unique numeric ID of the image; increments sequentially.\n",
                      "type": "integer"
                    },
                    "product_id": {
                      "description": "The unique numeric identifier for the product with which the image is associated.\n",
                      "type": "integer"
                    },
                    "image_file": {
                      "description": "The local path to the original image file uploaded to BigCommerce.\n",
                      "type": "string"
                    },
                    "url_zoom": {
                      "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                      "type": "string"
                    },
                    "url_standard": {
                      "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                      "type": "string"
                    },
                    "url_thumbnail": {
                      "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                      "type": "string"
                    },
                    "url_tiny": {
                      "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                      "type": "string"
                    },
                    "date_modified": {
                      "format": "date-time",
                      "description": "The date on which the product image was modified.\n",
                      "type": "string"
                    },
                    "is_thumbnail": {
                      "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                      "type": "boolean"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "description": {
                      "description": "The description for the image.\n",
                      "type": "string"
                    }
                  },
                  "title": "Product Image Base"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The unique numeric ID of the image; increments sequentially.\n",
                      "type": "integer"
                    },
                    "product_id": {
                      "description": "The unique numeric identifier for the product with which the image is associated.\n",
                      "type": "integer"
                    },
                    "image_file": {
                      "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                      "type": "string"
                    },
                    "url_zoom": {
                      "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                      "type": "string"
                    },
                    "url_standard": {
                      "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                      "type": "string"
                    },
                    "url_thumbnail": {
                      "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                      "type": "string"
                    },
                    "url_tiny": {
                      "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                      "type": "string"
                    },
                    "date_modified": {
                      "format": "date-time",
                      "description": "The date on which the product image was modified.\n",
                      "type": "string"
                    },
                    "image_url": {
                      "type": "string",
                      "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                      "description": "Publically available URL. \nUse the image_url when creating a product. "
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Product Image Collection Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 382,
              "product_id": 158,
              "is_thumbnail": true,
              "sort_order": 0,
              "description": "",
              "image_file": "a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg",
              "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2",
              "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2",
              "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2",
              "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2",
              "date_modified": "2018-08-15T14:48:31+00:00"
            },
            {
              "id": 383,
              "product_id": 158,
              "is_thumbnail": false,
              "sort_order": 0,
              "description": "",
              "image_file": "k/050/foglinenbeigestripetowel2b_1024x1024__16082__46564.jpg",
              "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.1280.1280.jpg?c=2",
              "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.560.850.jpg?c=2",
              "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.330.500.jpg?c=2",
              "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/383/foglinenbeigestripetowel2b_1024x1024__16082__46564.1534344511.66.100.jpg?c=2",
              "date_modified": "2018-08-15T14:48:31+00:00"
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ProductImageResponse": {
      "description": "",
      "schema": {
        "description": "Response payload for the BigCommerce API.\n",
        "type": "object",
        "properties": {
          "data": {
            "title": "Product Image",
            "allOf": [
              {
                "type": "object",
                "description": "Common ProductImage properties.",
                "properties": {
                  "id": {
                    "description": "The unique numeric ID of the image; increments sequentially.\n",
                    "type": "integer"
                  },
                  "product_id": {
                    "description": "The unique numeric identifier for the product with which the image is associated.\n",
                    "type": "integer"
                  },
                  "image_file": {
                    "description": "The local path to the original image file uploaded to BigCommerce.\n",
                    "type": "string"
                  },
                  "url_zoom": {
                    "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                    "type": "string"
                  },
                  "url_standard": {
                    "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                    "type": "string"
                  },
                  "url_thumbnail": {
                    "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                    "type": "string"
                  },
                  "url_tiny": {
                    "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                    "type": "string"
                  },
                  "date_modified": {
                    "format": "date-time",
                    "description": "The date on which the product image was modified.\n",
                    "type": "string"
                  },
                  "is_thumbnail": {
                    "description": "Flag for identifying whether the image is used as the product's thumbnail.\n",
                    "type": "boolean"
                  },
                  "sort_order": {
                    "type": "integer",
                    "description": "The order in which the image will be displayed on the product page. Higher integers give the image a lower priority. When updating, if the image is given a lower priority, all images with a `sort_order` the same as or greater than the image's new `sort_order` value will have their `sort_order`s reordered.\n",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  "description": {
                    "description": "The description for the image.\n",
                    "type": "string"
                  }
                },
                "title": "Product Image Base"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The unique numeric ID of the image; increments sequentially.\n",
                    "type": "integer"
                  },
                  "product_id": {
                    "description": "The unique numeric identifier for the product with which the image is associated.\n",
                    "type": "integer"
                  },
                  "image_file": {
                    "description": "The local path to the original image file uploaded to BigCommerce. Use image_url when creating a product.\n",
                    "type": "string"
                  },
                  "url_zoom": {
                    "description": "The zoom URL for this image. By default, this is used as the zoom image on product pages when zoom images are enabled.\n",
                    "type": "string"
                  },
                  "url_standard": {
                    "description": "The standard URL for this image. By default, this is used for product-page images.\n",
                    "type": "string"
                  },
                  "url_thumbnail": {
                    "description": "The thumbnail URL for this image. By default, this is the image size used on the category page and in side panels.\n",
                    "type": "string"
                  },
                  "url_tiny": {
                    "description": "The tiny URL for this image. By default, this is the image size used for thumbnails beneath the product image on a product page.\n",
                    "type": "string"
                  },
                  "date_modified": {
                    "format": "date-time",
                    "description": "The date on which the product image was modified.\n",
                    "type": "string"
                  },
                  "image_url": {
                    "type": "string",
                    "example": "https://upload.wikimedia.org/wikipedia/commons/7/7f/Anglel_Bless_Legendary_Hills_1_m%C4%9Bs%C3%ADc_st%C3%A1%C5%99%C3%AD.jpg",
                    "description": "Publically available URL. \nUse the image_url when creating a product. "
                  }
                }
              }
            ]
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Product Image Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 485,
            "product_id": 158,
            "is_thumbnail": false,
            "sort_order": 1,
            "description": "",
            "image_file": "o/381/product-image__98178.png",
            "url_zoom": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.1280.1280.png?c=2",
            "url_standard": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.560.850.png?c=2",
            "url_thumbnail": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.330.500.png?c=2",
            "url_tiny": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/158/images/485/product-image__98178.1536854227.66.100.png?c=2",
            "date_modified": "2018-09-13T15:57:07+00:00"
          },
          "meta": {}
        }
      }
    },
    "ModifierCollectionResponse": {
      "description": "",
      "schema": {
        "description": "Modifier Collection Response return for /GET All Modifiers.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Modifier properties.",
                  "title": "Modifier Base",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                      "enum": [
                        "date",
                        "checkbox",
                        "file",
                        "text",
                        "multi_line_text",
                        "numbers_only_text",
                        "radio_buttons",
                        "rectangles",
                        "dropdown",
                        "product_list",
                        "product_list_with_images",
                        "swatch"
                      ],
                      "x-required": [
                        "post"
                      ]
                    },
                    "required": {
                      "type": "boolean",
                      "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                      "x-required": [
                        "post"
                      ]
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order the modifiers display on the product detail page."
                    },
                    "config": {
                      "type": "object",
                      "title": "Option Config",
                      "description": "The values for option config can vary based on the Modifier created.",
                      "properties": {
                        "default_value": {
                          "type": "string",
                          "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                        },
                        "checked_by_default": {
                          "type": "boolean",
                          "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                        },
                        "checkbox_label": {
                          "type": "string",
                          "description": "(checkbox) Label displayed for the checkbox option.\n"
                        },
                        "date_limited": {
                          "type": "boolean",
                          "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                        },
                        "date_limit_mode": {
                          "type": "string",
                          "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                          "enum": [
                            "earliest",
                            "range",
                            "latest"
                          ],
                          "example": "range"
                        },
                        "date_earliest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2018-08-31T05:00:00+00:00"
                        },
                        "date_latest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2019-01-01T05:00:00+00:00"
                        },
                        "file_types_mode": {
                          "type": "string",
                          "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                          "enum": [
                            "specific",
                            "all"
                          ],
                          "example": "specific"
                        },
                        "file_types_supported": {
                          "type": "array",
                          "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                          "example": "images, documents, other",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_types_other": {
                          "type": "array",
                          "description": "(file) A list of other file types allowed with the file upload option.\n",
                          "example": "pdf",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_max_size": {
                          "type": "integer",
                          "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                          "example": 5
                        },
                        "text_characters_limited": {
                          "type": "boolean",
                          "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                        },
                        "text_min_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                          "example": 1
                        },
                        "text_max_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                          "example": 55
                        },
                        "text_lines_limited": {
                          "type": "boolean",
                          "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                          "example": true
                        },
                        "text_max_lines": {
                          "type": "integer",
                          "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                          "example": 4
                        },
                        "number_limited": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                          "example": true
                        },
                        "number_limit_mode": {
                          "type": "string",
                          "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                          "enum": [
                            "lowest",
                            "highest",
                            "range"
                          ],
                          "example": "lowest"
                        },
                        "number_lowest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                          "example": 100
                        },
                        "number_highest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                        },
                        "number_integers_only": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                          "example": false
                        },
                        "product_list_adjusts_inventory": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                        },
                        "product_list_adjusts_pricing": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                        },
                        "product_list_shipping_calc": {
                          "type": "string",
                          "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                          "enum": [
                            "none",
                            "weight",
                            "package"
                          ],
                          "example": "weight"
                        }
                      }
                    },
                    "option_values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Common Option Value properties.",
                                "title": "Option Value Base",
                                "properties": {
                                  "is_default": {
                                    "type": "boolean",
                                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                    "example": false
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": "Green"
                                  },
                                  "sort_order": {
                                    "type": "integer",
                                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                    "minimum": -2147483648,
                                    "maximum": 2147483647,
                                    "x-required": [
                                      "post"
                                    ],
                                    "example": 0
                                  },
                                  "value_data": {
                                    "type": "object",
                                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                  }
                                },
                                "required": [
                                  "label",
                                  "sort_order"
                                ]
                              },
                              {
                                "properties": {
                                  "adjusters": {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "title": "Adjuster",
                                        "properties": {
                                          "adjuster": {
                                            "type": "string",
                                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "enum": [
                                              "relative",
                                              "percentage"
                                            ],
                                            "x-nullable": true
                                          },
                                          "adjuster_value": {
                                            "type": "number",
                                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "example": 5
                                          }
                                        },
                                        "description": "Adjuster for Complex Rules."
                                      },
                                      "weight": {
                                        "type": "object",
                                        "title": "Adjuster",
                                        "properties": {
                                          "adjuster": {
                                            "type": "string",
                                            "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "enum": [
                                              "relative",
                                              "percentage"
                                            ],
                                            "x-nullable": true
                                          },
                                          "adjuster_value": {
                                            "type": "number",
                                            "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                            "example": 5
                                          }
                                        },
                                        "description": "Adjuster for Complex Rules."
                                      },
                                      "image_url": {
                                        "type": "string",
                                        "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                        "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                      },
                                      "purchasing_disabled": {
                                        "type": "object",
                                        "properties": {
                                          "status": {
                                            "type": "boolean",
                                            "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                          },
                                          "message": {
                                            "type": "string",
                                            "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ],
                            "title": "Modifier Value Base",
                            "type": "object"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the value; increments sequentially.\n"
                              }
                            }
                          }
                        ],
                        "title": "Modifier Value",
                        "description": "Part of Modifier Value Response "
                      }
                    }
                  },
                  "required": [
                    "type",
                    "required"
                  ]
                },
                {
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the modifier; increments sequentially.\n",
                      "example": 12
                    },
                    "product_id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the product to which the option belongs.\n",
                      "example": 77
                    },
                    "name": {
                      "type": "string",
                      "description": "The unique option name. Auto-generated from the display name, a timestamp, and the product ID.\n",
                      "example": "Add-a-$5-Donation1535039590-191"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The name of the option shown on the storefront.\n",
                      "example": "Donation"
                    }
                  }
                }
              ],
              "title": "Modifer",
              "description": "Product Modifier",
              "type": "object"
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Modifier Collection Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 206,
              "product_id": 158,
              "name": "Insurance",
              "display_name": "Insurace",
              "type": "checkbox",
              "required": true,
              "config": {
                "checkbox_label": "$5 for insurance",
                "checked_by_default": false
              },
              "option_values": [
                {
                  "id": 183,
                  "option_id": 206,
                  "label": "Yes",
                  "sort_order": 0,
                  "value_data": {
                    "checked_value": true
                  },
                  "is_default": false,
                  "adjusters": {
                    "price": {},
                    "weight": {},
                    "image_url": "",
                    "purchasing_disabled": {
                      "status": false,
                      "message": ""
                    }
                  }
                },
                {
                  "id": 184,
                  "option_id": 206,
                  "label": "No",
                  "sort_order": 1,
                  "value_data": {
                    "checked_value": false
                  },
                  "is_default": true,
                  "adjusters": {
                    "price": {},
                    "weight": {},
                    "image_url": "",
                    "purchasing_disabled": {
                      "status": false,
                      "message": ""
                    }
                  }
                }
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 1,
              "count": 1,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ModifierResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "type": "object",
                "description": "Common Modifier properties.",
                "title": "Modifier Base",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "BigCommerce API, which determines how it will display on the storefront. Acceptable values: `date`, `checkbox`, `file`, `text`, `multi_line_text`, `numbers_only_text`, `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. Required in a /POST.\n",
                    "enum": [
                      "date",
                      "checkbox",
                      "file",
                      "text",
                      "multi_line_text",
                      "numbers_only_text",
                      "radio_buttons",
                      "rectangles",
                      "dropdown",
                      "product_list",
                      "product_list_with_images",
                      "swatch"
                    ],
                    "x-required": [
                      "post"
                    ]
                  },
                  "required": {
                    "type": "boolean",
                    "description": "Whether or not this modifer is required or not at checkout. Required in a /POST.\n",
                    "x-required": [
                      "post"
                    ]
                  },
                  "sort_order": {
                    "type": "integer",
                    "description": "The order the modifiers display on the product detail page."
                  },
                  "config": {
                    "type": "object",
                    "title": "Option Config",
                    "description": "The values for option config can vary based on the Modifier created.",
                    "properties": {
                      "default_value": {
                        "type": "string",
                        "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                      },
                      "checked_by_default": {
                        "type": "boolean",
                        "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                      },
                      "checkbox_label": {
                        "type": "string",
                        "description": "(checkbox) Label displayed for the checkbox option.\n"
                      },
                      "date_limited": {
                        "type": "boolean",
                        "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                      },
                      "date_limit_mode": {
                        "type": "string",
                        "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                        "enum": [
                          "earliest",
                          "range",
                          "latest"
                        ],
                        "example": "range"
                      },
                      "date_earliest_value": {
                        "type": "string",
                        "format": "date",
                        "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                        "example": "2018-08-31T05:00:00+00:00"
                      },
                      "date_latest_value": {
                        "type": "string",
                        "format": "date",
                        "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                        "example": "2019-01-01T05:00:00+00:00"
                      },
                      "file_types_mode": {
                        "type": "string",
                        "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                        "enum": [
                          "specific",
                          "all"
                        ],
                        "example": "specific"
                      },
                      "file_types_supported": {
                        "type": "array",
                        "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                        "example": "images, documents, other",
                        "items": {
                          "type": "string"
                        }
                      },
                      "file_types_other": {
                        "type": "array",
                        "description": "(file) A list of other file types allowed with the file upload option.\n",
                        "example": "pdf",
                        "items": {
                          "type": "string"
                        }
                      },
                      "file_max_size": {
                        "type": "integer",
                        "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                        "example": 5
                      },
                      "text_characters_limited": {
                        "type": "boolean",
                        "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                      },
                      "text_min_length": {
                        "type": "integer",
                        "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                        "example": 1
                      },
                      "text_max_length": {
                        "type": "integer",
                        "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                        "example": 55
                      },
                      "text_lines_limited": {
                        "type": "boolean",
                        "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                        "example": true
                      },
                      "text_max_lines": {
                        "type": "integer",
                        "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                        "example": 4
                      },
                      "number_limited": {
                        "type": "boolean",
                        "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                        "example": true
                      },
                      "number_limit_mode": {
                        "type": "string",
                        "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                        "enum": [
                          "lowest",
                          "highest",
                          "range"
                        ],
                        "example": "lowest"
                      },
                      "number_lowest_value": {
                        "type": "number",
                        "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                        "example": 100
                      },
                      "number_highest_value": {
                        "type": "number",
                        "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                      },
                      "number_integers_only": {
                        "type": "boolean",
                        "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                        "example": false
                      },
                      "product_list_adjusts_inventory": {
                        "type": "boolean",
                        "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                      },
                      "product_list_adjusts_pricing": {
                        "type": "boolean",
                        "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                      },
                      "product_list_shipping_calc": {
                        "type": "string",
                        "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                        "enum": [
                          "none",
                          "weight",
                          "package"
                        ],
                        "example": "weight"
                      }
                    }
                  },
                  "option_values": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "description": "Common Option Value properties.",
                              "title": "Option Value Base",
                              "properties": {
                                "is_default": {
                                  "type": "boolean",
                                  "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                  "example": false
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                  "x-required": [
                                    "post"
                                  ],
                                  "example": "Green"
                                },
                                "sort_order": {
                                  "type": "integer",
                                  "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                  "minimum": -2147483648,
                                  "maximum": 2147483647,
                                  "x-required": [
                                    "post"
                                  ],
                                  "example": 0
                                },
                                "value_data": {
                                  "type": "object",
                                  "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                                }
                              },
                              "required": [
                                "label",
                                "sort_order"
                              ]
                            },
                            {
                              "properties": {
                                "adjusters": {
                                  "type": "object",
                                  "properties": {
                                    "price": {
                                      "type": "object",
                                      "title": "Adjuster",
                                      "properties": {
                                        "adjuster": {
                                          "type": "string",
                                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                          "enum": [
                                            "relative",
                                            "percentage"
                                          ],
                                          "x-nullable": true
                                        },
                                        "adjuster_value": {
                                          "type": "number",
                                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                          "example": 5
                                        }
                                      },
                                      "description": "Adjuster for Complex Rules."
                                    },
                                    "weight": {
                                      "type": "object",
                                      "title": "Adjuster",
                                      "properties": {
                                        "adjuster": {
                                          "type": "string",
                                          "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                          "enum": [
                                            "relative",
                                            "percentage"
                                          ],
                                          "x-nullable": true
                                        },
                                        "adjuster_value": {
                                          "type": "number",
                                          "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                          "example": 5
                                        }
                                      },
                                      "description": "Adjuster for Complex Rules."
                                    },
                                    "image_url": {
                                      "type": "string",
                                      "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                                      "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                                    },
                                    "purchasing_disabled": {
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "boolean",
                                          "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                        },
                                        "message": {
                                          "type": "string",
                                          "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          ],
                          "title": "Modifier Value Base",
                          "type": "object"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the value; increments sequentially.\n"
                            }
                          }
                        }
                      ],
                      "title": "Modifier Value",
                      "description": "Part of Modifier Value Response "
                    }
                  }
                },
                "required": [
                  "type",
                  "required"
                ]
              },
              {
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the modifier; increments sequentially.\n",
                    "example": 12
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the product to which the option belongs.\n",
                    "example": 77
                  },
                  "name": {
                    "type": "string",
                    "description": "The unique option name. Auto-generated from the display name, a timestamp, and the product ID.\n",
                    "example": "Add-a-$5-Donation1535039590-191"
                  },
                  "display_name": {
                    "type": "string",
                    "description": "The name of the option shown on the storefront.\n",
                    "example": "Donation"
                  }
                }
              }
            ],
            "title": "Modifer",
            "description": "Product Modifier",
            "type": "object"
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Modifier Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 160,
              "product_id": 131,
              "name": "Add-a-$5-Donation1535039590-191",
              "display_name": "Add a $5 Donation",
              "type": "checkbox",
              "required": false,
              "config": {
                "checkbox_label": "Check for Donation",
                "checked_by_default": false
              },
              "option_values": [
                {
                  "id": 149,
                  "option_id": 160,
                  "label": "Yes",
                  "sort_order": 0,
                  "value_data": {
                    "checked_value": true
                  },
                  "is_default": false,
                  "adjusters": {
                    "price": {
                      "adjuster": {},
                      "adjuster_value": {}
                    },
                    "weight": {},
                    "image_url": "",
                    "purchasing_disabled": {
                      "status": false,
                      "message": ""
                    }
                  }
                },
                {
                  "id": 150,
                  "option_id": 160,
                  "label": "No",
                  "sort_order": 1,
                  "value_data": {
                    "checked_value": false
                  },
                  "is_default": true,
                  "adjusters": {
                    "price": {},
                    "weight": {},
                    "image_url": "",
                    "purchasing_disabled": {
                      "status": false,
                      "message": ""
                    }
                  }
                }
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 1,
              "count": 1,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ModifierValueCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Common Option Value properties.",
                      "title": "Option Value Base",
                      "properties": {
                        "is_default": {
                          "type": "boolean",
                          "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                          "example": false
                        },
                        "label": {
                          "type": "string",
                          "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                          "x-required": [
                            "post"
                          ],
                          "example": "Green"
                        },
                        "sort_order": {
                          "type": "integer",
                          "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                          "minimum": -2147483648,
                          "maximum": 2147483647,
                          "x-required": [
                            "post"
                          ],
                          "example": 0
                        },
                        "value_data": {
                          "type": "object",
                          "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                        }
                      },
                      "required": [
                        "label",
                        "sort_order"
                      ]
                    },
                    {
                      "properties": {
                        "adjusters": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "object",
                              "title": "Adjuster",
                              "properties": {
                                "adjuster": {
                                  "type": "string",
                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "enum": [
                                    "relative",
                                    "percentage"
                                  ],
                                  "x-nullable": true
                                },
                                "adjuster_value": {
                                  "type": "number",
                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "example": 5
                                }
                              },
                              "description": "Adjuster for Complex Rules."
                            },
                            "weight": {
                              "type": "object",
                              "title": "Adjuster",
                              "properties": {
                                "adjuster": {
                                  "type": "string",
                                  "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "enum": [
                                    "relative",
                                    "percentage"
                                  ],
                                  "x-nullable": true
                                },
                                "adjuster_value": {
                                  "type": "number",
                                  "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                  "example": 5
                                }
                              },
                              "description": "Adjuster for Complex Rules."
                            },
                            "image_url": {
                              "type": "string",
                              "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                              "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                            },
                            "purchasing_disabled": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "boolean",
                                  "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ],
                  "title": "Modifier Value Base",
                  "type": "object"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the value; increments sequentially.\n"
                    }
                  }
                }
              ],
              "title": "Modifier Value",
              "description": "Part of Modifier Value Response "
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Modifier Value Collection Response",
        "description": "Returns for GET All Modifier Values on a Product"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 190,
              "option_id": 222,
              "label": "Yes",
              "sort_order": 0,
              "value_data": {
                "checked_value": true
              },
              "is_default": false,
              "adjusters": {
                "price": {
                  "adjuster": "relative",
                  "adjuster_value": 5
                },
                "weight": {},
                "image_url": "",
                "purchasing_disabled": {
                  "status": false,
                  "message": ""
                }
              }
            },
            {
              "id": 191,
              "option_id": 222,
              "label": "No",
              "sort_order": 1,
              "value_data": {
                "checked_value": false
              },
              "is_default": true,
              "adjusters": {
                "price": {},
                "weight": {},
                "image_url": "",
                "purchasing_disabled": {
                  "status": false,
                  "message": ""
                }
              }
            }
          ],
          "meta": {
            "pagination": {
              "total": 2,
              "count": 2,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ModifierValueResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "description": "Common Option Value properties.",
                    "title": "Option Value Base",
                    "properties": {
                      "is_default": {
                        "type": "boolean",
                        "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                        "example": false
                      },
                      "label": {
                        "type": "string",
                        "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                        "x-required": [
                          "post"
                        ],
                        "example": "Green"
                      },
                      "sort_order": {
                        "type": "integer",
                        "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                        "minimum": -2147483648,
                        "maximum": 2147483647,
                        "x-required": [
                          "post"
                        ],
                        "example": 0
                      },
                      "value_data": {
                        "type": "object",
                        "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                      }
                    },
                    "required": [
                      "label",
                      "sort_order"
                    ]
                  },
                  {
                    "properties": {
                      "adjusters": {
                        "type": "object",
                        "properties": {
                          "price": {
                            "type": "object",
                            "title": "Adjuster",
                            "properties": {
                              "adjuster": {
                                "type": "string",
                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "enum": [
                                  "relative",
                                  "percentage"
                                ],
                                "x-nullable": true
                              },
                              "adjuster_value": {
                                "type": "number",
                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "example": 5
                              }
                            },
                            "description": "Adjuster for Complex Rules."
                          },
                          "weight": {
                            "type": "object",
                            "title": "Adjuster",
                            "properties": {
                              "adjuster": {
                                "type": "string",
                                "description": "The type of adjuster for either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "enum": [
                                  "relative",
                                  "percentage"
                                ],
                                "x-nullable": true
                              },
                              "adjuster_value": {
                                "type": "number",
                                "description": "The numeric amount by which the adjuster will change either the price or the weight of the variant, when the modifier value is selected on the storefront.\n",
                                "example": 5
                              }
                            },
                            "description": "Adjuster for Complex Rules."
                          },
                          "image_url": {
                            "type": "string",
                            "description": "The URL for an image displayed on the storefront when the modifier value is selected.Limit of 8MB per file. \n",
                            "example": "https://cdn8.bigcommerce.com/s-{{store_hash}}/products/184/images/445/naturalcanvascart2_1024x1024__92347__29648.1534344533.1280.1280.jpg?c=2"
                          },
                          "purchasing_disabled": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "boolean",
                                "description": "Flag for whether the modifier value disables purchasing when selected on the storefront. This can be used for temporarily disabling a particular modifier value.\n"
                              },
                              "message": {
                                "type": "string",
                                "description": "The message displayed on the storefront when the purchasing disabled status is `true`.\n"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ],
                "title": "Modifier Value Base",
                "type": "object"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                  }
                }
              }
            ],
            "title": "Modifier Value",
            "description": "Part of Modifier Value Response "
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Modifier Value Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 190,
            "option_id": 222,
            "label": "Yes",
            "sort_order": 0,
            "value_data": {},
            "is_default": false,
            "adjusters": {
              "price": {
                "adjuster": "relative",
                "adjuster_value": 5
              },
              "weight": {},
              "image_url": "",
              "purchasing_disabled": {
                "status": false,
                "message": ""
              }
            }
          },
          "meta": {}
        }
      }
    },
    "OptionCollectionResponse": {
      "description": "",
      "schema": {
        "description": "Get all product options",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Option properties.",
                  "title": "Option Base",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numerical ID of the option, increments sequentially.\n",
                      "x-nullable": true,
                      "example": 55
                    },
                    "product_id": {
                      "type": "integer",
                      "description": "The unique numerical ID of the product to which the option belongs.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "example": 4
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The name of the option shown on the storefront.\n",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minLength": 1,
                      "maxLength": 255,
                      "example": "Add-a-$5-Donation1535042499-187"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                      "enum": [
                        "radio_buttons",
                        "rectangles",
                        "dropdown",
                        "product_list",
                        "product_list_with_images",
                        "swatch"
                      ],
                      "x-required": [
                        "post",
                        "put"
                      ]
                    },
                    "config": {
                      "type": "object",
                      "title": "Option Config",
                      "description": "The values for option config can vary based on the Modifier created.",
                      "properties": {
                        "default_value": {
                          "type": "string",
                          "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                        },
                        "checked_by_default": {
                          "type": "boolean",
                          "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                        },
                        "checkbox_label": {
                          "type": "string",
                          "description": "(checkbox) Label displayed for the checkbox option.\n"
                        },
                        "date_limited": {
                          "type": "boolean",
                          "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                        },
                        "date_limit_mode": {
                          "type": "string",
                          "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                          "enum": [
                            "earliest",
                            "range",
                            "latest"
                          ],
                          "example": "range"
                        },
                        "date_earliest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2018-08-31T05:00:00+00:00"
                        },
                        "date_latest_value": {
                          "type": "string",
                          "format": "date",
                          "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                          "example": "2019-01-01T05:00:00+00:00"
                        },
                        "file_types_mode": {
                          "type": "string",
                          "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                          "enum": [
                            "specific",
                            "all"
                          ],
                          "example": "specific"
                        },
                        "file_types_supported": {
                          "type": "array",
                          "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                          "example": "images, documents, other",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_types_other": {
                          "type": "array",
                          "description": "(file) A list of other file types allowed with the file upload option.\n",
                          "example": "pdf",
                          "items": {
                            "type": "string"
                          }
                        },
                        "file_max_size": {
                          "type": "integer",
                          "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                          "example": 5
                        },
                        "text_characters_limited": {
                          "type": "boolean",
                          "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                        },
                        "text_min_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                          "example": 1
                        },
                        "text_max_length": {
                          "type": "integer",
                          "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                          "example": 55
                        },
                        "text_lines_limited": {
                          "type": "boolean",
                          "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                          "example": true
                        },
                        "text_max_lines": {
                          "type": "integer",
                          "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                          "example": 4
                        },
                        "number_limited": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                          "example": true
                        },
                        "number_limit_mode": {
                          "type": "string",
                          "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                          "enum": [
                            "lowest",
                            "highest",
                            "range"
                          ],
                          "example": "lowest"
                        },
                        "number_lowest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                          "example": 100
                        },
                        "number_highest_value": {
                          "type": "number",
                          "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                        },
                        "number_integers_only": {
                          "type": "boolean",
                          "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                          "example": false
                        },
                        "product_list_adjusts_inventory": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                        },
                        "product_list_adjusts_pricing": {
                          "type": "boolean",
                          "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                        },
                        "product_list_shipping_calc": {
                          "type": "string",
                          "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                          "enum": [
                            "none",
                            "weight",
                            "package"
                          ],
                          "example": "weight"
                        }
                      }
                    },
                    "sort_order": {
                      "type": "integer",
                      "example": 1,
                      "description": "Order in which the option is displayed on the storefront. "
                    },
                    "option_values": {
                      "type": "array",
                      "x-required": [
                        "post",
                        "put"
                      ],
                      "minItems": 1,
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Common Option Value properties.",
                            "title": "Option Value Base",
                            "properties": {
                              "is_default": {
                                "type": "boolean",
                                "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                                "example": false
                              },
                              "label": {
                                "type": "string",
                                "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                                "x-required": [
                                  "post"
                                ],
                                "example": "Green"
                              },
                              "sort_order": {
                                "type": "integer",
                                "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                                "minimum": -2147483648,
                                "maximum": 2147483647,
                                "x-required": [
                                  "post"
                                ],
                                "example": 0
                              },
                              "value_data": {
                                "type": "object",
                                "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                              }
                            },
                            "required": [
                              "label",
                              "sort_order"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer",
                                "description": "The unique numeric ID of the value; increments sequentially.\n"
                              }
                            }
                          }
                        ],
                        "title": "Option Value"
                      }
                    },
                    "image_url": {
                      "type": "string",
                      "description": "Publicly available image url"
                    }
                  }
                },
                {
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
                      "example": "Add-a-$5-Donation1535042499-187"
                    }
                  }
                }
              ],
              "title": "Option",
              "type": "object"
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Option Collection Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 220,
              "product_id": 192,
              "name": "Color (Colors only)",
              "display_name": "Color",
              "type": "swatch",
              "sort_order": 0,
              "option_values": [
                {
                  "id": 174,
                  "label": "Beige",
                  "sort_order": 1,
                  "value_data": {
                    "colors": [
                      "#FAFAEB"
                    ]
                  },
                  "is_default": false
                },
                {
                  "id": 175,
                  "label": "Grey",
                  "sort_order": 2,
                  "value_data": {
                    "colors": [
                      "#BDBDBD"
                    ]
                  },
                  "is_default": false
                },
                {
                  "id": 176,
                  "label": "Black",
                  "sort_order": 3,
                  "value_data": {
                    "colors": [
                      "#000000"
                    ]
                  },
                  "is_default": false
                },
                {
                  "id": 189,
                  "label": "Black-Walnut",
                  "sort_order": 4,
                  "value_data": {
                    "colors": [
                      "#e80ee8"
                    ]
                  },
                  "is_default": false
                }
              ],
              "config": []
            }
          ],
          "meta": {
            "pagination": {
              "total": 1,
              "count": 1,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "OptionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "allOf": [
              {
                "type": "object",
                "description": "Common Option properties.",
                "title": "Option Base",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numerical ID of the option, increments sequentially.\n",
                    "x-nullable": true,
                    "example": 55
                  },
                  "product_id": {
                    "type": "integer",
                    "description": "The unique numerical ID of the product to which the option belongs.\n",
                    "x-required": [
                      "post",
                      "put"
                    ],
                    "example": 4
                  },
                  "display_name": {
                    "type": "string",
                    "description": "The name of the option shown on the storefront.\n",
                    "x-required": [
                      "post",
                      "put"
                    ],
                    "minLength": 1,
                    "maxLength": 255,
                    "example": "Add-a-$5-Donation1535042499-187"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of option, which determines how it will display on the storefront. Acceptable values: `radio_buttons`, `rectangles`, `dropdown`, `product_list`, `product_list_with_images`, `swatch`. For reference, the former v2 API values are: RB = radio_buttons, RT = rectangles, S = dropdown, P = product_list, PI = product_list_with_images, CS = swatch.\n",
                    "enum": [
                      "radio_buttons",
                      "rectangles",
                      "dropdown",
                      "product_list",
                      "product_list_with_images",
                      "swatch"
                    ],
                    "x-required": [
                      "post",
                      "put"
                    ]
                  },
                  "config": {
                    "type": "object",
                    "title": "Option Config",
                    "description": "The values for option config can vary based on the Modifier created.",
                    "properties": {
                      "default_value": {
                        "type": "string",
                        "description": "(date, text, multi_line_text, numbers_only_text) The default value. Shown on a date option as an ISO-8601–formatted string, or on a text option as a string.\n"
                      },
                      "checked_by_default": {
                        "type": "boolean",
                        "description": "(checkbox) Flag for setting the checkbox to be checked by default.\n"
                      },
                      "checkbox_label": {
                        "type": "string",
                        "description": "(checkbox) Label displayed for the checkbox option.\n"
                      },
                      "date_limited": {
                        "type": "boolean",
                        "description": "(date) Flag to limit the dates allowed to be entered on a date option.\n"
                      },
                      "date_limit_mode": {
                        "type": "string",
                        "description": "(date) The type of limit that is allowed to be entered on a date option.\n",
                        "enum": [
                          "earliest",
                          "range",
                          "latest"
                        ],
                        "example": "range"
                      },
                      "date_earliest_value": {
                        "type": "string",
                        "format": "date",
                        "description": "(date) The earliest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                        "example": "2018-08-31T05:00:00+00:00"
                      },
                      "date_latest_value": {
                        "type": "string",
                        "format": "date",
                        "description": "(date) The latest date allowed to be entered on the date option, as an ISO-8601 formatted string.\n",
                        "example": "2019-01-01T05:00:00+00:00"
                      },
                      "file_types_mode": {
                        "type": "string",
                        "description": "(file) The kind of restriction on the file types that can be uploaded with a file upload option. Values: `specific` - restricts uploads to particular file types; `all` - allows all file types.\n",
                        "enum": [
                          "specific",
                          "all"
                        ],
                        "example": "specific"
                      },
                      "file_types_supported": {
                        "type": "array",
                        "description": "(file) The type of files allowed to be uploaded if the `file_type_option` is set to `specific`. Values:\n  `images` - Allows upload of image MIME types (`bmp`, `gif`, `jpg`, `jpeg`, `jpe`, `jif`, `jfif`, `jfi`, `png`, `wbmp`, `xbm`, `tiff`). `documents` - Allows upload of document MIME types (`txt`, `pdf`, `rtf`, `doc`, `docx`, `xls`, `xlsx`, `accdb`, `mdb`, `one`, `pps`, `ppsx`, `ppt`, `pptx`, `pub`, `odt`, `ods`, `odp`, `odg`, `odf`).\n  `other` - Allows file types defined in the `file_types_other` array.\n",
                        "example": "images, documents, other",
                        "items": {
                          "type": "string"
                        }
                      },
                      "file_types_other": {
                        "type": "array",
                        "description": "(file) A list of other file types allowed with the file upload option.\n",
                        "example": "pdf",
                        "items": {
                          "type": "string"
                        }
                      },
                      "file_max_size": {
                        "type": "integer",
                        "description": "(file) The maximum size for a file that can be used with the file upload option. This will still be limited by the server.\n",
                        "example": 5
                      },
                      "text_characters_limited": {
                        "type": "boolean",
                        "description": "(text, multi_line_text) Flag to validate the length of a text or multi-line text input.\n"
                      },
                      "text_min_length": {
                        "type": "integer",
                        "description": "(text, multi_line_text) The minimum length allowed for a text or multi-line text option.\n",
                        "example": 1
                      },
                      "text_max_length": {
                        "type": "integer",
                        "description": "(text, multi_line_text) The maximum length allowed for a text or multi line text option.\n",
                        "example": 55
                      },
                      "text_lines_limited": {
                        "type": "boolean",
                        "description": "(multi_line_text) Flag to validate the maximum number of lines allowed on a multi-line text input.\n",
                        "example": true
                      },
                      "text_max_lines": {
                        "type": "integer",
                        "description": "(multi_line_text) The maximum number of lines allowed on a multi-line text input.\n",
                        "example": 4
                      },
                      "number_limited": {
                        "type": "boolean",
                        "description": "(numbers_only_text) Flag to limit the value of a number option.\n",
                        "example": true
                      },
                      "number_limit_mode": {
                        "type": "string",
                        "description": "(numbers_only_text) The type of limit on values entered for a number option.\n",
                        "enum": [
                          "lowest",
                          "highest",
                          "range"
                        ],
                        "example": "lowest"
                      },
                      "number_lowest_value": {
                        "type": "number",
                        "description": "(numbers_only_text) The lowest allowed value for a number option if `number_limited` is true.\n",
                        "example": 100
                      },
                      "number_highest_value": {
                        "type": "number",
                        "description": "(numbers_only_text) The highest allowed value for a number option if `number_limited` is true.\n"
                      },
                      "number_integers_only": {
                        "type": "boolean",
                        "description": "(numbers_only_text) Flag to limit the input on a number option to whole numbers only.\n",
                        "example": false
                      },
                      "product_list_adjusts_inventory": {
                        "type": "boolean",
                        "description": "(product_list, product_list_with_images) Flag for automatically adjusting inventory on a product included in the list.\n"
                      },
                      "product_list_adjusts_pricing": {
                        "type": "boolean",
                        "description": "(product_list, product_list_with_images) Flag to add the optional product's price to the main product's price.\n"
                      },
                      "product_list_shipping_calc": {
                        "type": "string",
                        "description": "(product_list, product_list_with_images) How to factor the optional product's weight and package dimensions into the shipping quote. Values: `none` - don't adjust; `weight` - use shipping weight only; `package` - use weight and dimensions.\n",
                        "enum": [
                          "none",
                          "weight",
                          "package"
                        ],
                        "example": "weight"
                      }
                    }
                  },
                  "sort_order": {
                    "type": "integer",
                    "example": 1,
                    "description": "Order in which the option is displayed on the storefront. "
                  },
                  "option_values": {
                    "type": "array",
                    "x-required": [
                      "post",
                      "put"
                    ],
                    "minItems": 1,
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Common Option Value properties.",
                          "title": "Option Value Base",
                          "properties": {
                            "is_default": {
                              "type": "boolean",
                              "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                              "example": false
                            },
                            "label": {
                              "type": "string",
                              "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                              "x-required": [
                                "post"
                              ],
                              "example": "Green"
                            },
                            "sort_order": {
                              "type": "integer",
                              "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                              "minimum": -2147483648,
                              "maximum": 2147483647,
                              "x-required": [
                                "post"
                              ],
                              "example": 0
                            },
                            "value_data": {
                              "type": "object",
                              "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                            }
                          },
                          "required": [
                            "label",
                            "sort_order"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "description": "The unique numeric ID of the value; increments sequentially.\n"
                            }
                          }
                        }
                      ],
                      "title": "Option Value"
                    }
                  },
                  "image_url": {
                    "type": "string",
                    "description": "Publicly available image url"
                  }
                }
              },
              {
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The unique option name, auto-generated from the display name, a timestamp, and the product ID.\n",
                    "example": "Add-a-$5-Donation1535042499-187"
                  }
                }
              }
            ],
            "title": "Option",
            "type": "object"
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Option Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 220,
            "product_id": 192,
            "name": "Color (Colors only)",
            "display_name": "Color",
            "type": "swatch",
            "sort_order": 0,
            "option_values": [
              {
                "id": 174,
                "label": "Beige",
                "sort_order": 1,
                "value_data": {
                  "colors": [
                    "#FAFAEB"
                  ]
                },
                "is_default": false
              },
              {
                "id": 175,
                "label": "Grey",
                "sort_order": 2,
                "value_data": {
                  "colors": [
                    "#BDBDBD"
                  ]
                },
                "is_default": false
              },
              {
                "id": 176,
                "label": "Black",
                "sort_order": 3,
                "value_data": {
                  "colors": [
                    "#000000"
                  ]
                },
                "is_default": false
              },
              {
                "id": 189,
                "label": "Black-Walnut",
                "sort_order": 4,
                "value_data": {
                  "colors": [
                    "#e80ee8"
                  ]
                },
                "is_default": false
              }
            ],
            "config": []
          },
          "meta": {}
        }
      }
    },
    "OptionValueCollectionResponse": {
      "description": "",
      "schema": {
        "description": "Get Option Values response.",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Option Value properties.",
                  "title": "Option Value Base",
                  "properties": {
                    "is_default": {
                      "type": "boolean",
                      "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                      "example": false
                    },
                    "label": {
                      "type": "string",
                      "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                      "x-required": [
                        "post"
                      ],
                      "example": "Green"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647,
                      "x-required": [
                        "post"
                      ],
                      "example": 0
                    },
                    "value_data": {
                      "type": "object",
                      "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                    }
                  },
                  "required": [
                    "label",
                    "sort_order"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the value; increments sequentially.\n"
                    }
                  }
                }
              ],
              "title": "Option Value"
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Option Value Collection Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 174,
              "label": "Beige",
              "sort_order": 1,
              "value_data": {
                "colors": [
                  "#FAFAEB"
                ]
              },
              "is_default": false
            },
            {
              "id": 175,
              "label": "Grey",
              "sort_order": 2,
              "value_data": {
                "colors": [
                  "#BDBDBD"
                ]
              },
              "is_default": false
            },
            {
              "id": 176,
              "label": "Black",
              "sort_order": 3,
              "value_data": {
                "colors": [
                  "#000000"
                ]
              },
              "is_default": false
            },
            {
              "id": 189,
              "label": "Black-Walnut",
              "sort_order": 4,
              "value_data": {
                "colors": [
                  "#e80ee8"
                ]
              },
              "is_default": false
            }
          ],
          "meta": {
            "pagination": {
              "total": 4,
              "count": 4,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "OptionValueResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "type": "object",
                "description": "Common Option Value properties.",
                "title": "Option Value Base",
                "properties": {
                  "is_default": {
                    "type": "boolean",
                    "description": "The flag for preselecting a value as the default on the storefront. This field is not supported for swatch options/modifiers.\n",
                    "example": false
                  },
                  "label": {
                    "type": "string",
                    "description": "The text display identifying the value on the storefront. Required in a /POST.\n",
                    "x-required": [
                      "post"
                    ],
                    "example": "Green"
                  },
                  "sort_order": {
                    "type": "integer",
                    "description": "The order in which the value will be displayed on the product page. Required in a /POST.\n",
                    "minimum": -2147483648,
                    "maximum": 2147483647,
                    "x-required": [
                      "post"
                    ],
                    "example": 0
                  },
                  "value_data": {
                    "type": "object",
                    "description": "Extra data describing the value, based on the type of option or modifier with which the value is associated. The `swatch` type option can accept an array of `colors`, with up to three hexidecimal color keys; or an `image_url`, which is a full image URL path including protocol. The `product list` type option requires a `product_id`. The `checkbox` type option requires a boolean flag, called `checked_value`, to determine which value is considered to be the checked state.\n"
                  }
                },
                "required": [
                  "label",
                  "sort_order"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the value; increments sequentially.\n"
                  }
                }
              }
            ],
            "title": "Option Value"
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Option Value Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 44,
            "label": "Pick a color",
            "sort_order": 9,
            "value_data": {
              "colors": [
                "#123c91, #FFFF00, #397a44"
              ]
            },
            "is_default": false
          }
        }
      }
    },
    "ProductReviewCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "A product review model.\n",
              "allOf": [
                {
                  "type": "object",
                  "title": "Product Review Base",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title for the product review.\nRequired in /POST.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "text": {
                      "type": "string",
                      "description": "The text for the product review.\n"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                    },
                    "rating": {
                      "type": "integer",
                      "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                    },
                    "email": {
                      "type": "string",
                      "description": "The email of the reviewer. Must be a valid email, or an empty string."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the reviewer.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "date_reviewed": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the product was reviewed. Required in /POST.\n"
                    }
                  },
                  "required": [
                    "title",
                    "date_reviewed"
                  ]
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "The unique numeric ID of the product review; increments sequentially.\n",
                      "type": "integer"
                    },
                    "product_id": {
                      "description": "The unique numeric identifier for the product with which the review is associated.\n",
                      "type": "integer"
                    },
                    "date_created": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the product review was created.\n"
                    },
                    "date_modified": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Date the product review was modified.\n"
                    }
                  }
                }
              ],
              "title": "Product Review"
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Product Review Collection Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "title": "Great Product",
            "text": "This product is amazing!!!",
            "status": "approved",
            "rating": 5,
            "email": "janedoe@email.com",
            "name": "Jane Doe",
            "date_reviewed": "2018-05-07T19:37:13+00:00",
            "id": 5,
            "date_created": "2018-05-07T19:37:13+00:00\"",
            "date_modified": "2018-05-07T19:38:36+00:00"
          },
          "meta": {
            "pagination": {
              "total": 1,
              "count": 1,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "previous": "?page=1&limit=50",
                "current": "?page=1&limit=50",
                "next": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ProductReviewResponse": {
      "description": "",
      "schema": {
        "description": "Response payload for the BigCommerce API.\n",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "A product review model.\n",
            "allOf": [
              {
                "type": "object",
                "title": "Product Review Base",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title for the product review.\nRequired in /POST.",
                    "minLength": 0,
                    "maxLength": 255
                  },
                  "text": {
                    "type": "string",
                    "description": "The text for the product review.\n"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the product review. Must be one of `approved`, `disapproved` or `pending`.\n"
                  },
                  "rating": {
                    "type": "integer",
                    "description": "The rating of the product review. Must be one of 0, 1, 2, 3, 4, 5."
                  },
                  "email": {
                    "type": "string",
                    "description": "The email of the reviewer. Must be a valid email, or an empty string."
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the reviewer.",
                    "minLength": 0,
                    "maxLength": 255
                  },
                  "date_reviewed": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date the product was reviewed. Required in /POST.\n"
                  }
                },
                "required": [
                  "title",
                  "date_reviewed"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The unique numeric ID of the product review; increments sequentially.\n",
                    "type": "integer"
                  },
                  "product_id": {
                    "description": "The unique numeric identifier for the product with which the review is associated.\n",
                    "type": "integer"
                  },
                  "date_created": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date the product review was created.\n"
                  },
                  "date_modified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Date the product review was modified.\n"
                  }
                }
              }
            ],
            "title": "Product Review"
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Product Review Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "title": "irur",
            "text": "anim aute",
            "status": "Lorem ad sed voluptate",
            "rating": -39218623,
            "email": "esse Lorem laborum aute",
            "name": "ut in ",
            "date_reviewed": "2011-12-31T13:40:42.971Z",
            "id": 82495037,
            "product_id": 22609026,
            "date_created": "1985-01-17T07:37:20.439Z",
            "date_modified": "2004-09-28T14:38:21.973Z"
          },
          "meta": {}
        }
      }
    },
    "VariantCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Variant properties.",
                  "title": "Variant Base",
                  "properties": {
                    "cost_price": {
                      "type": "number",
                      "format": "double",
                      "description": "The cost price of the variant. Not affected by Price List prices.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "weight": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "width": {
                      "type": "number",
                      "format": "double",
                      "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "height": {
                      "type": "number",
                      "format": "double",
                      "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "depth": {
                      "type": "number",
                      "format": "double",
                      "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "format": "double",
                      "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "purchasing_disabled": {
                      "type": "boolean",
                      "description": "If `true`, this variant will not be purchasable on the storefront."
                    },
                    "purchasing_disabled_message": {
                      "type": "string",
                      "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "upc": {
                      "type": "string",
                      "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                      "x-nullable": true
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                      "x-nullable": true
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "When the variant hits this inventory level, it is considered low stock.",
                      "x-nullable": true
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "Identifies where in a warehouse the variant is located.",
                      "x-nullable": true,
                      "minLength": 0,
                      "maxLength": 255
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "product_id": {
                      "type": "integer"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "sku_id": {
                      "type": "integer",
                      "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                      "x-nullable": true
                    },
                    "option_values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Common Option Value Product properties.",
                            "title": "Option Value Product Base",
                            "properties": {
                              "option_display_name": {
                                "type": "string",
                                "description": "The name of the option.\n",
                                "x-required": [
                                  "post"
                                ],
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "Color"
                              },
                              "label": {
                                "type": "string",
                                "description": "The label of the option value.\n",
                                "x-required": [
                                  "post"
                                ],
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "Beige"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "option_id": {
                                "type": "integer"
                              }
                            }
                          }
                        ],
                        "title": "Option Value Variant"
                      },
                      "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                    },
                    "calculated_price": {
                      "type": "number",
                      "format": "double",
                      "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Variant Collection Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 382,
              "product_id": 192,
              "sku": "SMIT",
              "sku_id": 348,
              "price": 10,
              "calculated_price": 10,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 2,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 174,
                  "label": "Beige",
                  "option_id": 220,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 383,
              "product_id": 192,
              "sku": "SMIT-1",
              "sku_id": 349,
              "price": {},
              "calculated_price": 25,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 1,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": {},
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 175,
                  "label": "Grey",
                  "option_id": 220,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 384,
              "product_id": 192,
              "sku": "SMIT-2",
              "sku_id": 350,
              "price": {},
              "calculated_price": 25,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 1,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": {},
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 176,
                  "label": "Black",
                  "option_id": 220,
                  "option_display_name": "Color"
                }
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 3,
              "count": 3,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "VariantResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "allOf": [
              {
                "type": "object",
                "description": "Common Variant properties.",
                "title": "Variant Base",
                "properties": {
                  "cost_price": {
                    "type": "number",
                    "format": "double",
                    "description": "The cost price of the variant. Not affected by Price List prices.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "sale_price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "retail_price": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "weight": {
                    "type": "number",
                    "format": "double",
                    "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "width": {
                    "type": "number",
                    "format": "double",
                    "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "height": {
                    "type": "number",
                    "format": "double",
                    "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "depth": {
                    "type": "number",
                    "format": "double",
                    "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "is_free_shipping": {
                    "type": "boolean",
                    "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                  },
                  "fixed_cost_shipping_price": {
                    "type": "number",
                    "format": "double",
                    "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                    "x-nullable": true,
                    "minimum": 0
                  },
                  "purchasing_disabled": {
                    "type": "boolean",
                    "description": "If `true`, this variant will not be purchasable on the storefront."
                  },
                  "purchasing_disabled_message": {
                    "type": "string",
                    "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                    "minLength": 0,
                    "maxLength": 255
                  },
                  "upc": {
                    "type": "string",
                    "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                    "x-nullable": true
                  },
                  "inventory_level": {
                    "type": "integer",
                    "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                    "x-nullable": true
                  },
                  "inventory_warning_level": {
                    "type": "integer",
                    "description": "When the variant hits this inventory level, it is considered low stock.",
                    "x-nullable": true
                  },
                  "bin_picking_number": {
                    "type": "string",
                    "description": "Identifies where in a warehouse the variant is located.",
                    "x-nullable": true,
                    "minLength": 0,
                    "maxLength": 255
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "product_id": {
                    "type": "integer"
                  },
                  "sku": {
                    "type": "string"
                  },
                  "sku_id": {
                    "type": "integer",
                    "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                    "x-nullable": true
                  },
                  "option_values": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Common Option Value Product properties.",
                          "title": "Option Value Product Base",
                          "properties": {
                            "option_display_name": {
                              "type": "string",
                              "description": "The name of the option.\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "Color"
                            },
                            "label": {
                              "type": "string",
                              "description": "The label of the option value.\n",
                              "x-required": [
                                "post"
                              ],
                              "minLength": 1,
                              "maxLength": 255,
                              "example": "Beige"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer"
                            },
                            "option_id": {
                              "type": "integer"
                            }
                          }
                        }
                      ],
                      "title": "Option Value Variant"
                    },
                    "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                  },
                  "calculated_price": {
                    "type": "number",
                    "format": "double",
                    "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                  }
                }
              }
            ]
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Variant Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 384,
            "product_id": 192,
            "sku": "SMIT-2",
            "sku_id": 350,
            "price": {},
            "calculated_price": 25,
            "sale_price": {},
            "retail_price": {},
            "map_price": {},
            "weight": {},
            "calculated_weight": 1,
            "width": {},
            "height": {},
            "depth": {},
            "is_free_shipping": false,
            "fixed_cost_shipping_price": {},
            "purchasing_disabled": false,
            "purchasing_disabled_message": "",
            "image_url": "",
            "cost_price": {},
            "upc": "",
            "mpn": "",
            "gtin": "",
            "inventory_level": 0,
            "inventory_warning_level": 0,
            "bin_picking_number": "",
            "option_values": [
              {
                "id": 176,
                "label": "Black",
                "option_id": 220,
                "option_display_name": "Color"
              }
            ]
          },
          "meta": {}
        }
      }
    },
    "ProductVideoCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "A product video model.\n",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common ProductVideo properties.",
                  "properties": {
                    "title": {
                      "type": "string",
                      "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                    },
                    "sort_order": {
                      "type": "integer",
                      "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                      "minimum": -2147483648,
                      "maximum": 2147483647
                    },
                    "type": {
                      "type": "string",
                      "description": "The video type (a short name of a host site).\n",
                      "enum": [
                        "youtube"
                      ]
                    }
                  },
                  "title": "Product Video Base"
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "The unique numeric ID of the product video; increments sequentially.\n"
                    },
                    "video_id": {
                      "description": "The ID of the video on a host site.\n",
                      "type": "string"
                    },
                    "product_id": {
                      "description": "The unique numeric identifier for the product with which the image is associated.\n",
                      "type": "integer"
                    },
                    "length": {
                      "description": "Length of the video. This will be filled in according to data on a host site.\n",
                      "type": "string"
                    }
                  }
                }
              ],
              "title": "Product Video"
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Product Video Collection Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 6,
              "type": "youtube",
              "video_id": "PqBTp23RLhI",
              "product_id": 192,
              "sort_order": 1,
              "title": "Creating and Editing Banners | BigCommerce Tutorials",
              "description": "Learn how to create and edit marketing banners. Marketing banners are a great way to advertise sales, display coupon codes, and add design elements. Let’s take a look at how you can leverage banners to convert your store’s visitors into paying customers.",
              "length": "01:54"
            },
            {
              "id": 7,
              "type": "youtube",
              "video_id": "EhYBjzqd-nI",
              "product_id": 192,
              "sort_order": 2,
              "title": "BigCommerce Company Values",
              "description": "These are the core principles upon which BigCommerce was built, guiding what we do and how we do it. Each employee learns them, loves them and lives them. Our merchants benefit from them every time they use our product or get help from our support team.\n\nJoin the BigCommerce team and help us build software that changes lives!\n\nhttps://www.bigcommerce.com/careers/",
              "length": "03:30"
            },
            {
              "id": 8,
              "type": "youtube",
              "video_id": "vAUdo4kRjrU",
              "product_id": 192,
              "sort_order": 3,
              "title": "TOP WORKPLACES 2016 - Austin American Statesman + BigCommerce",
              "description": "We've been named one of Austin American-Statesman's Top WorkPlaces for the 5th year in a row! Here's what some employees have to say:\n\n“I am given the freedom and trust to make a difference.”\n\n“Everyone believes in the product and growing the company.”\n\n“I'm appreciated for the work I do and there is room to grown within the company.”\n\nWork With Us!\nhttp://www.bigcommerce.com/careers.php",
              "length": "01:37"
            }
          ],
          "meta": {
            "pagination": {
              "total": 3,
              "count": 3,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    },
    "ProductVideoResponse": {
      "description": "",
      "schema": {
        "description": "Response payload for the BigCommerce API.\n",
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "A product video model.\n",
            "allOf": [
              {
                "type": "object",
                "description": "Common ProductVideo properties.",
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "The title for the video. If left blank, this will be filled in according to data on a host site.\n",
                    "minLength": 0,
                    "maxLength": 255
                  },
                  "description": {
                    "type": "string",
                    "description": "The description for the video. If left blank, this will be filled in according to data on a host site.\n"
                  },
                  "sort_order": {
                    "type": "integer",
                    "description": "The order in which the video will be displayed on the product page. Higher integers give the video a lower priority. When updating, if the video is given a lower priority, all videos with a `sort_order` the same as or greater than the video's new `sort_order` value will have their `sort_order`s reordered.\n",
                    "minimum": -2147483648,
                    "maximum": 2147483647
                  },
                  "type": {
                    "type": "string",
                    "description": "The video type (a short name of a host site).\n",
                    "enum": [
                      "youtube"
                    ]
                  }
                },
                "title": "Product Video Base"
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The unique numeric ID of the product video; increments sequentially.\n"
                  },
                  "video_id": {
                    "description": "The ID of the video on a host site.\n",
                    "type": "string"
                  },
                  "product_id": {
                    "description": "The unique numeric identifier for the product with which the image is associated.\n",
                    "type": "integer"
                  },
                  "length": {
                    "description": "Length of the video. This will be filled in according to data on a host site.\n",
                    "type": "string"
                  }
                }
              }
            ],
            "title": "Product Video"
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Product Video Response"
      },
      "examples": {
        "application/json": {
          "title": "Your Video",
          "description": "Company Values",
          "sort_order": 1,
          "type": "youtube",
          "video_id": "123345AA"
        }
      }
    },
    "CatalogSummaryResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "description": "Catalog Summary object describes a lightweight summary of the catalog.",
            "title": "Catalog Summary",
            "properties": {
              "inventory_count": {
                "type": "integer",
                "description": "A count of all inventory items in the catalog.\n",
                "example": 2000
              },
              "inventory_value": {
                "type": "number",
                "format": "double",
                "description": "Total value of store's inventory.\n",
                "example": 267000
              },
              "primary_category_id": {
                "type": "integer",
                "description": "ID of the category containing the most products.\n",
                "example": 23
              },
              "primary_category_name": {
                "type": "string",
                "description": "Name of the category containing the most products.\n",
                "example": "Shop All"
              },
              "variant_count": {
                "type": "integer",
                "description": "Total number of variants",
                "example": 46
              },
              "highest_variant_price": {
                "type": "number",
                "format": "double",
                "description": "Highest priced variant",
                "example": 249
              },
              "average_variant_price": {
                "type": "number",
                "format": "double",
                "example": 83.07978261,
                "description": "Average price of all variants"
              },
              "lowest_variant_price": {
                "type": "string",
                "example": "7",
                "description": "Lowest priced variant in the store"
              },
              "oldest_variant_date": {
                "type": "string",
                "example": "2018-08-15"
              },
              "newest_variant_date": {
                "type": "string",
                "example": "2018-08-16"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Empty meta object; may be used later.",
            "title": "Meta"
          }
        },
        "title": "Catalog Summary Response"
      },
      "examples": {
        "application/json": {
          "data": {
            "inventory_count": 4995,
            "variant_count": 54,
            "inventory_value": 702350.03,
            "highest_variant_price": 555,
            "average_variant_price": 74.40055556,
            "lowest_variant_price": 7,
            "oldest_variant_date": "2018-08-15",
            "newest_variant_date": "2018-09-07",
            "primary_category_id": 23,
            "primary_category_name": "Shop All"
          },
          "meta": {}
        }
      }
    },
    "CatalogVariantCollectionResponse": {
      "description": "",
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "allOf": [
                {
                  "type": "object",
                  "description": "Common Variant properties.",
                  "title": "Variant Base",
                  "properties": {
                    "cost_price": {
                      "type": "number",
                      "format": "double",
                      "description": "The cost price of the variant. Not affected by Price List prices.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is `null`, the product's default price (set in the Product resource's `price` field) will be used as the base price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "sale_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's sale price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's sale price (set in the Product resource's `price` field) will be used as the sale price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "retail_price": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's retail price on the storefront. If a Price List ID is used, the Price List value will be used. If a Price List ID is not used, and this value is null, the product's retail price (set in the Product resource's `price` field) will be used as the retail price.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "weight": {
                      "type": "number",
                      "format": "double",
                      "description": "This variant's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight.",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "width": {
                      "type": "number",
                      "format": "double",
                      "description": "Width of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default width (set in the Product resource's `width` field) will be used as the base width.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "height": {
                      "type": "number",
                      "format": "double",
                      "description": "Height of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default height (set in the Product resource's `height` field) will be used as the base height.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "depth": {
                      "type": "number",
                      "format": "double",
                      "description": "Depth of the variant, which can be used when calculating shipping costs. If this value is `null`, the product's default depth (set in the Product resource's `depth` field) will be used as the base depth.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "is_free_shipping": {
                      "type": "boolean",
                      "description": "Flag used to indicate whether the variant has free shipping. If `true`, the shipping cost for the variant will be zero.\n"
                    },
                    "fixed_cost_shipping_price": {
                      "type": "number",
                      "format": "double",
                      "description": "A fixed shipping cost for the variant. If defined, this value will be used during checkout instead of normal shipping-cost calculation.\n",
                      "x-nullable": true,
                      "minimum": 0
                    },
                    "purchasing_disabled": {
                      "type": "boolean",
                      "description": "If `true`, this variant will not be purchasable on the storefront."
                    },
                    "purchasing_disabled_message": {
                      "type": "string",
                      "description": "If `purchasing_disabled` is `true`, this message should show on the storefront when the variant is selected.",
                      "minLength": 0,
                      "maxLength": 255
                    },
                    "upc": {
                      "type": "string",
                      "description": "The UPC code used in feeds for shopping comparison sites and external channel integrations.",
                      "x-nullable": true
                    },
                    "inventory_level": {
                      "type": "integer",
                      "description": "Inventory level for the variant, which is used when the product's inventory_tracking is set to `variant`.",
                      "x-nullable": true
                    },
                    "inventory_warning_level": {
                      "type": "integer",
                      "description": "When the variant hits this inventory level, it is considered low stock.",
                      "x-nullable": true
                    },
                    "bin_picking_number": {
                      "type": "string",
                      "description": "Identifies where in a warehouse the variant is located.",
                      "x-nullable": true,
                      "minLength": 0,
                      "maxLength": 255
                    }
                  }
                },
                {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "product_id": {
                      "type": "integer"
                    },
                    "sku": {
                      "type": "string"
                    },
                    "sku_id": {
                      "type": "integer",
                      "description": "Read-only reference to v2 API's SKU ID. Null if it is a base variant.",
                      "x-nullable": true
                    },
                    "option_values": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Common Option Value Product properties.",
                            "title": "Option Value Product Base",
                            "properties": {
                              "option_display_name": {
                                "type": "string",
                                "description": "The name of the option.\n",
                                "x-required": [
                                  "post"
                                ],
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "Color"
                              },
                              "label": {
                                "type": "string",
                                "description": "The label of the option value.\n",
                                "x-required": [
                                  "post"
                                ],
                                "minLength": 1,
                                "maxLength": 255,
                                "example": "Beige"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "integer"
                              },
                              "option_id": {
                                "type": "integer"
                              }
                            }
                          }
                        ],
                        "title": "Option Value Variant"
                      },
                      "description": "Array of option and option values IDs that make up this variant. Will be empty if the variant is the product's base variant."
                    },
                    "calculated_price": {
                      "type": "number",
                      "format": "double",
                      "description": "The price of the variant as seen on the storefront. This price takes into account `sale_price` and any price adjustment rules that are applicable to this variant.\n"
                    }
                  }
                }
              ]
            }
          },
          "meta": {
            "type": "object",
            "description": "Data about the response, including pagination and collection totals.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Data about the response, including pagination and collection totals.",
                "title": "Pagination",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total number of items in the result set.\n",
                    "example": 36
                  },
                  "count": {
                    "type": "integer",
                    "description": "Total number of items in the collection response.\n",
                    "example": 36
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                    "example": 50
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "The page you are currently on within the collection.\n",
                    "example": 1
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "The total number of pages in the collection.\n",
                    "example": 1
                  },
                  "links": {
                    "type": "object",
                    "description": "Pagination links for the previous and next parts of the whole collection.\n",
                    "properties": {
                      "previous": {
                        "type": "string",
                        "description": "Link to the previous page returned in the response.\n"
                      },
                      "current": {
                        "type": "string",
                        "description": "Link to the current page returned in the response.\n",
                        "example": "?page=1&limit=50"
                      },
                      "next": {
                        "type": "string",
                        "description": "Link to the next page returned in the response.\n"
                      }
                    }
                  }
                }
              }
            },
            "title": "Collection Meta"
          }
        },
        "title": "Variant Collection Response"
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 364,
              "product_id": 184,
              "sku": "SMA-RED",
              "sku_id": 330,
              "price": 15.99,
              "calculated_price": 15.99,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": 15,
              "calculated_weight": 15,
              "width": 4,
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 497,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 177,
                  "label": "Small",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 180,
                  "label": "Red",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 365,
              "product_id": 184,
              "sku": "MED-RED",
              "sku_id": 331,
              "price": 555,
              "calculated_price": 555,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 500,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 178,
                  "label": "Medium",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 180,
                  "label": "Red",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 366,
              "product_id": 184,
              "sku": "LAR-RED",
              "sku_id": 332,
              "price": {},
              "calculated_price": 253.99,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 500,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 179,
                  "label": "Large",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 180,
                  "label": "Red",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 367,
              "product_id": 184,
              "sku": "SMA-GRE",
              "sku_id": 333,
              "price": {},
              "calculated_price": 249,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 177,
                  "label": "Small",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 181,
                  "label": "Green",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 368,
              "product_id": 184,
              "sku": "MED-GRE",
              "sku_id": 334,
              "price": {},
              "calculated_price": 249,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 178,
                  "label": "Medium",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 181,
                  "label": "Green",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 369,
              "product_id": 184,
              "sku": "LAR-GRE",
              "sku_id": 335,
              "price": {},
              "calculated_price": 253.99,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 179,
                  "label": "Large",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 181,
                  "label": "Green",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 370,
              "product_id": 184,
              "sku": "SMA-BLU",
              "sku_id": 336,
              "price": {},
              "calculated_price": 249,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 177,
                  "label": "Small",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 182,
                  "label": "Blue",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 371,
              "product_id": 184,
              "sku": "MED-BLU",
              "sku_id": 337,
              "price": {},
              "calculated_price": 249,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 178,
                  "label": "Medium",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 182,
                  "label": "Blue",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 372,
              "product_id": 184,
              "sku": "LAR-BLU",
              "sku_id": 338,
              "price": {},
              "calculated_price": 253.99,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 15,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 179,
                  "label": "Large",
                  "option_id": 199,
                  "option_display_name": "Size"
                },
                {
                  "id": 182,
                  "label": "Blue",
                  "option_id": 200,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 376,
              "product_id": 158,
              "sku": "SKU-A0C8A203",
              "sku_id": 342,
              "price": {},
              "calculated_price": 49.99,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 1,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": {},
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 174,
                  "label": "Beige",
                  "option_id": 207,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 377,
              "product_id": 158,
              "sku": "SKU-E628145D",
              "sku_id": 343,
              "price": {},
              "calculated_price": 49.99,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 1,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": {},
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 175,
                  "label": "Grey",
                  "option_id": 207,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 378,
              "product_id": 158,
              "sku": "SKU-E898ABC0",
              "sku_id": 344,
              "price": {},
              "calculated_price": 49.99,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 1,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": {},
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 176,
                  "label": "Black",
                  "option_id": 207,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 382,
              "product_id": 192,
              "sku": "SMIT",
              "sku_id": 348,
              "price": 10,
              "calculated_price": 10,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 2,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 174,
                  "label": "Beige",
                  "option_id": 220,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 383,
              "product_id": 192,
              "sku": "SMIT-1",
              "sku_id": 349,
              "price": {},
              "calculated_price": 25,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 1,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": {},
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 175,
                  "label": "Grey",
                  "option_id": 220,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 384,
              "product_id": 192,
              "sku": "SMIT-2",
              "sku_id": 350,
              "price": {},
              "calculated_price": 25,
              "sale_price": {},
              "retail_price": {},
              "map_price": {},
              "weight": {},
              "calculated_weight": 1,
              "width": {},
              "height": {},
              "depth": {},
              "is_free_shipping": false,
              "fixed_cost_shipping_price": {},
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": {},
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": [
                {
                  "id": 176,
                  "label": "Black",
                  "option_id": 220,
                  "option_display_name": "Color"
                }
              ]
            },
            {
              "id": 325,
              "product_id": 157,
              "sku": "",
              "sku_id": {},
              "price": 66,
              "calculated_price": 66,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/157/images/379/showerwhite3_1024x1024_1024x1024__77046__53871.1534344510.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 330,
              "product_id": 159,
              "sku": "",
              "sku_id": {},
              "price": 34,
              "calculated_price": 34,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/159/images/384/BARRhandcream1_1024x1024_1024x1024__91787__18352.1534344511.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 331,
              "product_id": 160,
              "sku": "",
              "sku_id": {},
              "price": 28,
              "calculated_price": 28,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/160/images/386/barr_coroomspray_1024x1024__43836__61957.1534344512.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 332,
              "product_id": 161,
              "sku": "",
              "sku_id": {},
              "price": 109,
              "calculated_price": 109,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/161/images/387/roundterrariumlarge_1024x1024__12432__22764.1534344513.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 333,
              "product_id": 162,
              "sku": "",
              "sku_id": {},
              "price": 89,
              "calculated_price": 89,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/162/images/389/roundterrariumsmall_1024x1024__05749__31860.1534344513.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 3000,
              "inventory_warning_level": 3,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 334,
              "product_id": 163,
              "sku": "",
              "sku_id": {},
              "price": 32,
              "calculated_price": 32,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/163/images/391/twinestand3_1024x1024_1024x1024__17689__50909.1534344514.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 335,
              "product_id": 164,
              "sku": "",
              "sku_id": {},
              "price": 8,
              "calculated_price": 8,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/164/images/395/naturaltwine_1024x1024_1024x1024__72720__85337.1534344514.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 336,
              "product_id": 165,
              "sku": "",
              "sku_id": {},
              "price": 10.95,
              "calculated_price": 10.95,
              "sale_price": 0,
              "retail_price": 15,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/165/images/396/barrsalve1_1024x1024_1024x1024__06826__26118.1534344515.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 337,
              "product_id": 166,
              "sku": "",
              "sku_id": {},
              "price": 28,
              "calculated_price": 28,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/166/images/397/livingwithplants_grande__26452__28114.1534344515.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 338,
              "product_id": 167,
              "sku": "",
              "sku_id": {},
              "price": 225,
              "calculated_price": 225,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/167/images/398/ablebrewingsystem4_1024x1024__07155__93974.1534344516.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 339,
              "product_id": 168,
              "sku": "",
              "sku_id": {},
              "price": 55,
              "calculated_price": 55,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/168/images/402/chemex6cup_1024x1024_1024x1024__84712__11834.1534344517.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 340,
              "product_id": 169,
              "sku": "",
              "sku_id": {},
              "price": 44.95,
              "calculated_price": 44.95,
              "sale_price": 0,
              "retail_price": 50,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/169/images/406/3cupchemex5_1024x1024__40463__59678.1534344521.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 341,
              "product_id": 170,
              "sku": "",
              "sku_id": {},
              "price": 25,
              "calculated_price": 25,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/170/images/411/measuringsquares2_1024x1024__07108__95421.1534344522.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 342,
              "product_id": 171,
              "sku": "",
              "sku_id": {},
              "price": 70,
              "calculated_price": 70,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/171/images/414/japanesekettle1_1024x1024_1024x1024__83765__86479.1534344523.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 343,
              "product_id": 172,
              "sku": "",
              "sku_id": {},
              "price": 48,
              "calculated_price": 48,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/172/images/419/thekinfolktablecover_1024x1024__80715__29685.1534344525.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 344,
              "product_id": 173,
              "sku": "",
              "sku_id": {},
              "price": 18,
              "calculated_price": 18,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/173/images/424/measuringspoons1_1024x1024__22102__55079.1534344525.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 345,
              "product_id": 174,
              "sku": "",
              "sku_id": {},
              "price": 7.95,
              "calculated_price": 7.95,
              "sale_price": 0,
              "retail_price": 10,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/174/images/425/leparfaitmedium3_1024x1024_1024x1024__37756__81924.1534344526.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 346,
              "product_id": 175,
              "sku": "",
              "sku_id": {},
              "price": 35,
              "calculated_price": 35,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/175/images/428/oakcheesegrater2_1024x1024__03905__19286.1534344527.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 347,
              "product_id": 176,
              "sku": "",
              "sku_id": {},
              "price": 59,
              "calculated_price": 59,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/176/images/432/milkandcreamer1_1024x1024__69117__81345.1534344528.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 348,
              "product_id": 177,
              "sku": "",
              "sku_id": {},
              "price": 7,
              "calculated_price": 7,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/177/images/434/scrubbrush2_1024x1024_1024x1024__81254__82103.1534344529.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 349,
              "product_id": 178,
              "sku": "",
              "sku_id": {},
              "price": 120,
              "calculated_price": 120,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/178/images/436/tieredbasket_1024x1024__81717__38751.1534344530.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 350,
              "product_id": 179,
              "sku": "",
              "sku_id": {},
              "price": 30,
              "calculated_price": 30,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/179/images/440/CommonGoodLaundrySoap_1024x1024__31999__28799.1534344531.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 351,
              "product_id": 180,
              "sku": "",
              "sku_id": {},
              "price": 20,
              "calculated_price": 20,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/180/images/441/CommonGoodFloorCleaner_grande__73674__83339.1534344531.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 352,
              "product_id": 181,
              "sku": "",
              "sku_id": {},
              "price": 15,
              "calculated_price": 15,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/181/images/442/CommonGoodAllPurposeCleaner_d37aa1e8_e16f_4309_bddd_8fae0d94efc7_1024x1024__40180__66527.1534344531.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 353,
              "product_id": 182,
              "sku": "",
              "sku_id": {},
              "price": 15,
              "calculated_price": 15,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/182/images/443/CommonGoodHandSoap_1024x1024__94874__52907.1534344532.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 354,
              "product_id": 183,
              "sku": "",
              "sku_id": {},
              "price": 15,
              "calculated_price": 15,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/183/images/444/CommonGoodDishSoap_1024x1024__74820__62808.1534344532.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 356,
              "product_id": 185,
              "sku": "",
              "sku_id": {},
              "price": 46,
              "calculated_price": 46,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/185/images/449/utilitybucket1_1024x1024__78563__75042.1534344535.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 498,
              "inventory_warning_level": 3,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 357,
              "product_id": 186,
              "sku": "",
              "sku_id": {},
              "price": 17,
              "calculated_price": 17,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/186/images/454/SshapedScrubBrush2_1024x1024__94308__40283.1534344536.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 358,
              "product_id": 187,
              "sku": "",
              "sku_id": {},
              "price": 26,
              "calculated_price": 26,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/187/images/458/featherduster_1024x1024__94858__16221.1534344537.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 359,
              "product_id": 188,
              "sku": "",
              "sku_id": {},
              "price": 31.95,
              "calculated_price": 31.95,
              "sale_price": 0,
              "retail_price": 35,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/188/images/460/dustpan1_1024x1024_1024x1024__43447__69128.1534344539.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 360,
              "product_id": 189,
              "sku": "",
              "sku_id": {},
              "price": 18.95,
              "calculated_price": 18.95,
              "sale_price": 0,
              "retail_price": 22,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/189/images/465/gather_1024x1024__17195__82620.1534344540.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 361,
              "product_id": 190,
              "sku": "",
              "sku_id": {},
              "price": 23,
              "calculated_price": 23,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/190/images/470/kinfolkessentialissue_1024x1024__22507__36871.1534344542.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 362,
              "product_id": 191,
              "sku": "",
              "sku_id": {},
              "price": 27.95,
              "calculated_price": 27.95,
              "sale_price": 0,
              "retail_price": 30,
              "map_price": 0,
              "weight": 1,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 1,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "https://cdn8.bigcommerce.com/s-id30h7ohwf/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.560.850.jpg?c=2",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 385,
              "product_id": 193,
              "sku": "",
              "sku_id": {},
              "price": 10,
              "calculated_price": 10,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 4,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 4,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            },
            {
              "id": 386,
              "product_id": 194,
              "sku": "",
              "sku_id": {},
              "price": 11,
              "calculated_price": 11,
              "sale_price": 0,
              "retail_price": 0,
              "map_price": 0,
              "weight": 3,
              "width": 0,
              "height": 0,
              "depth": 0,
              "is_free_shipping": false,
              "fixed_cost_shipping_price": 0,
              "calculated_weight": 3,
              "purchasing_disabled": false,
              "purchasing_disabled_message": "",
              "image_url": "",
              "cost_price": 0,
              "upc": "",
              "mpn": "",
              "gtin": "",
              "inventory_level": 0,
              "inventory_warning_level": 0,
              "bin_picking_number": "",
              "option_values": []
            }
          ],
          "meta": {
            "pagination": {
              "total": 54,
              "count": 50,
              "per_page": 50,
              "current_page": 1,
              "total_pages": 2,
              "links": {
                "next": "?page=2&limit=50",
                "current": "?page=1&limit=50"
              }
            }
          }
        }
      }
    }
  },
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true
    }
  }
}