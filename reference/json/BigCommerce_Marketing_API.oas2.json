{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "Marketing",
    "description": "Marketing APIs support demand generation and loyalty programs. They include Coupons, Banners, and Gift Certificates.\n\n### Coupons\nCategory or product discounts that can be applied to orders for customers who enter a given code.\n\n### Banners\nBanners available to display on a store.\n\n### Gift Certificates\nGift certificates available to offer to a store’s customers."
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{store_hash}/v2",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/coupons": {
      "get": {
        "description": "Returns a list of *Coupons*. Default sorting is by coupon/discount id, from lowest to highest. Optional filter parameters can be passed in. ",
        "summary": "Get All Coupons",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional filter param. `/api/v2/coupons?id={value}`"
          },
          {
            "name": "code",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional filter param `/api/v2/coupons?code={value}`"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional filter param `/api/v2/coupons?name={value}`"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Optional filter param `/api/v2/coupons?type={value}`"
          },
          {
            "name": "min_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Optional filter param `/api/v2/coupons?min_id={value}`"
          },
          {
            "name": "max_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Optional filter param`/api/v2/coupons?max_id={value}`"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Number of pages `/api/v2/coupons?page={number}`"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Count per page `/api/v2/coupons?limit={count}`"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "title": "Coupon",
                "example": {
                  "id": 2,
                  "name": "Australia Customers Discount",
                  "type": "per_item_discount",
                  "amount": 5,
                  "min_purchase": 25,
                  "expires": "",
                  "enabled": true,
                  "code": "S2549JM0Y",
                  "applies_to": {
                    "entity": "categories",
                    "ids": [
                      "0,3"
                    ]
                  },
                  "num_uses": 0,
                  "max_uses": 25,
                  "max_uses_per_customer": 0,
                  "restricted_to": {
                    "countries": [
                      "AU"
                    ]
                  },
                  "shipping_methods": [
                    "shipping_endicia"
                  ],
                  "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
                },
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The coupon's ID. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                    "example": 2,
                    "type": "integer"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the coupon.",
                    "example": "Australia Customers Discount"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "per_item_discount",
                      "per_total_discount",
                      "shipping_discount",
                      "free_shipping",
                      "percentage_discount"
                    ]
                  },
                  "amount": {
                    "type": "string",
                    "description": "The discount to apply to an order, as either an amount or a percentage. This field's usage is determined by the coupon `type`. For example, a `type` of + `percentage_discount` would determine a percentage here.",
                    "example": 5
                  },
                  "min_purchase": {
                    "description": "Specifies a minimum value that an order must have before the coupon can be applied to it.",
                    "example": 25,
                    "type": "string"
                  },
                  "expires": {
                    "description": "Specifies when a coupon expires. Coupons need not have an expiry date – you can also control expiry via + `max_uses` or `max_uses_per_customer`. If you do use this date field, the value must be in <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> format.",
                    "type": "string"
                  },
                  "enabled": {
                    "description": "If the coupon is enabled, this field's value is `true`; otherwise, `false`.",
                    "example": true,
                    "type": "boolean"
                  },
                  "code": {
                    "type": "string",
                    "description": "The coupon code that customers will use to receive their discounts. Value must be unique.",
                    "example": "S2549JM0Y"
                  },
                  "applies_to": {
                    "type": "object",
                    "description": "If it is not included in the PUT request, its existing value on the coupon will be cleared. Also required to be set on the POST request",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "ID of either the products or categories"
                      },
                      "entities": {
                        "type": "array",
                        "enum": [
                          "products",
                          "categories"
                        ],
                        "description": "What the discount applies to. Can be products or categories.",
                        "example": "categories",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "num_uses": {
                    "description": "Number of times this coupon has been used. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                    "example": 0,
                    "type": "integer"
                  },
                  "max_uses": {
                    "description": "Maximum number of times this coupon can be used.",
                    "example": 25,
                    "type": "integer"
                  },
                  "max_uses_per_customer": {
                    "description": "Maximum number of times each customer can use this coupon.",
                    "example": 0,
                    "type": "integer"
                  },
                  "restricted_to": {
                    "type": "object",
                    "properties": {
                      "countries": {
                        "type": "string"
                      }
                    }
                  },
                  "shipping_methods": {
                    "description": "This is a list of shipping-method names. A shipping method must be enabled on the store to use it with a coupon. To check which shipping methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods) endpoint.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "date_created": {
                    "description": "Date Created",
                    "example": "Tue, 13 Mar 2018 16:18:59 +0000",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "amount",
                  "code",
                  "applies_to"
                ]
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "$5 off",
                  "type": "per_total_discount",
                  "amount": "5.0000",
                  "min_purchase": "0.0000",
                  "expires": "",
                  "enabled": true,
                  "code": "S2549JM0Y",
                  "applies_to": {
                    "entity": "categories",
                    "ids": [
                      0
                    ]
                  },
                  "num_uses": 2,
                  "max_uses": 0,
                  "max_uses_per_customer": 0,
                  "restricted_to": [],
                  "shipping_methods": {},
                  "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
                },
                {
                  "id": 2,
                  "name": "Limit by Location",
                  "type": "per_total_discount",
                  "amount": "5.0000",
                  "min_purchase": "25.0000",
                  "expires": "",
                  "enabled": true,
                  "code": "E3JC79S0I",
                  "applies_to": {
                    "entity": "categories",
                    "ids": [
                      0
                    ]
                  },
                  "num_uses": 0,
                  "max_uses": 25,
                  "max_uses_per_customer": 0,
                  "restricted_to": {
                    "countries": [
                      "AU"
                    ]
                  },
                  "shipping_methods": [
                    "shipping_endicia"
                  ],
                  "date_created": "Tue, 12 Jun 2018 20:22:19 +0000"
                },
                {
                  "id": 3,
                  "name": "Per Item Discount",
                  "type": "per_item_discount",
                  "amount": "1.0000",
                  "min_purchase": "0.0000",
                  "expires": "",
                  "enabled": true,
                  "code": "S65334W91",
                  "applies_to": {
                    "entity": "categories",
                    "ids": [
                      23
                    ]
                  },
                  "num_uses": 1,
                  "max_uses": 0,
                  "max_uses_per_customer": 0,
                  "restricted_to": [],
                  "shipping_methods": {},
                  "date_created": "Mon, 30 Jul 2018 15:28:53 +0000"
                },
                {
                  "id": 4,
                  "name": "Shipping Discount",
                  "type": "shipping_discount",
                  "amount": "1.0000",
                  "min_purchase": "0.0000",
                  "expires": "",
                  "enabled": true,
                  "code": "WS50991D4",
                  "applies_to": {
                    "entity": "categories",
                    "ids": [
                      23
                    ]
                  },
                  "num_uses": 1,
                  "max_uses": 0,
                  "max_uses_per_customer": 0,
                  "restricted_to": [],
                  "shipping_methods": {},
                  "date_created": "Mon, 30 Jul 2018 15:31:17 +0000"
                },
                {
                  "id": 5,
                  "name": "Free Shipping",
                  "type": "free_shipping",
                  "amount": "0.0000",
                  "min_purchase": "0.0000",
                  "expires": "",
                  "enabled": true,
                  "code": "PC08VN1P042T0",
                  "applies_to": {
                    "entity": "categories",
                    "ids": [
                      23
                    ]
                  },
                  "num_uses": 1,
                  "max_uses": 0,
                  "max_uses_per_customer": 0,
                  "restricted_to": [],
                  "shipping_methods": {},
                  "date_created": "Mon, 30 Jul 2018 15:33:43 +0000"
                },
                {
                  "id": 6,
                  "name": "Percentage off",
                  "type": "percentage_discount",
                  "amount": "3.0000",
                  "min_purchase": "0.0000",
                  "expires": "",
                  "enabled": true,
                  "code": "KV56053388J",
                  "applies_to": {
                    "entity": "categories",
                    "ids": [
                      23
                    ]
                  },
                  "num_uses": 1,
                  "max_uses": 0,
                  "max_uses_per_customer": 0,
                  "restricted_to": [],
                  "shipping_methods": {},
                  "date_created": "Mon, 30 Jul 2018 15:35:21 +0000"
                }
              ],
              "Response Schema": [
                {
                  "name": "ut e",
                  "type": "shipping_discount",
                  "amount": "elit sit ",
                  "code": "adipisicing veli",
                  "applies_to": {
                    "id": 73351335,
                    "entities": [
                      "magna sint"
                    ]
                  },
                  "id": -54319944,
                  "min_purchase": "Ut enim",
                  "expires": "ea",
                  "enabled": false,
                  "num_uses": 45888494,
                  "max_uses": -98470682,
                  "max_uses_per_customer": 78356302,
                  "restricted_to": {
                    "countries": "nostrud consequat dolor in"
                  },
                  "shipping_methods": [
                    "ex",
                    "mollit qui"
                  ],
                  "date_created": "dolor sed"
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Coupons"
        ],
        "operationId": "getAllCoupons"
      },
      "post": {
        "description": "Creates a *Coupon*.\n\n**Required Fields**\n*   name\n*   code\n*   type\n*   amount\n*   applies_to\n\n**Read Only Fields**\n*   id\n*   num_uses\n\n**Notes**\n\nThe coupon type can be one of the following:\n\n*   per_item_discount\n*   per_total_discount\n*   shipping_discount\n*   free_shipping\n*   percentage_discount",
        "summary": "Create a New Coupon",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Coupon",
              "example": {
                "id": 2,
                "name": "Australia Customers Discount",
                "type": "per_item_discount",
                "amount": 5,
                "min_purchase": 25,
                "expires": "",
                "enabled": true,
                "code": "S2549JM0Y",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    "0,3"
                  ]
                },
                "num_uses": 0,
                "max_uses": 25,
                "max_uses_per_customer": 0,
                "restricted_to": {
                  "countries": [
                    "AU"
                  ]
                },
                "shipping_methods": [
                  "shipping_endicia"
                ],
                "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
              },
              "type": "object",
              "properties": {
                "id": {
                  "description": "The coupon's ID. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 2,
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the coupon.",
                  "example": "Australia Customers Discount"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "per_item_discount",
                    "per_total_discount",
                    "shipping_discount",
                    "free_shipping",
                    "percentage_discount"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "The discount to apply to an order, as either an amount or a percentage. This field's usage is determined by the coupon `type`. For example, a `type` of + `percentage_discount` would determine a percentage here.",
                  "example": 5
                },
                "min_purchase": {
                  "description": "Specifies a minimum value that an order must have before the coupon can be applied to it.",
                  "example": 25,
                  "type": "string"
                },
                "expires": {
                  "description": "Specifies when a coupon expires. Coupons need not have an expiry date – you can also control expiry via + `max_uses` or `max_uses_per_customer`. If you do use this date field, the value must be in <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> format.",
                  "type": "string"
                },
                "enabled": {
                  "description": "If the coupon is enabled, this field's value is `true`; otherwise, `false`.",
                  "example": true,
                  "type": "boolean"
                },
                "code": {
                  "type": "string",
                  "description": "The coupon code that customers will use to receive their discounts. Value must be unique.",
                  "example": "S2549JM0Y"
                },
                "applies_to": {
                  "type": "object",
                  "description": "If it is not included in the PUT request, its existing value on the coupon will be cleared. Also required to be set on the POST request",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of either the products or categories"
                    },
                    "entities": {
                      "type": "array",
                      "enum": [
                        "products",
                        "categories"
                      ],
                      "description": "What the discount applies to. Can be products or categories.",
                      "example": "categories",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "num_uses": {
                  "description": "Number of times this coupon has been used. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 0,
                  "type": "integer"
                },
                "max_uses": {
                  "description": "Maximum number of times this coupon can be used.",
                  "example": 25,
                  "type": "integer"
                },
                "max_uses_per_customer": {
                  "description": "Maximum number of times each customer can use this coupon.",
                  "example": 0,
                  "type": "integer"
                },
                "restricted_to": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "string"
                    }
                  }
                },
                "shipping_methods": {
                  "description": "This is a list of shipping-method names. A shipping method must be enabled on the store to use it with a coupon. To check which shipping methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods) endpoint.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "date_created": {
                  "description": "Date Created",
                  "example": "Tue, 13 Mar 2018 16:18:59 +0000",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type",
                "amount",
                "code",
                "applies_to"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "5% off order total",
                "type": "per_item_discount",
                "code": "4F75AF0C3802D39",
                "enabled": true,
                "amount": "5",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    0
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Coupon",
              "example": {
                "id": 2,
                "name": "Australia Customers Discount",
                "type": "per_item_discount",
                "amount": 5,
                "min_purchase": 25,
                "expires": "",
                "enabled": true,
                "code": "S2549JM0Y",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    "0,3"
                  ]
                },
                "num_uses": 0,
                "max_uses": 25,
                "max_uses_per_customer": 0,
                "restricted_to": {
                  "countries": [
                    "AU"
                  ]
                },
                "shipping_methods": [
                  "shipping_endicia"
                ],
                "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
              },
              "type": "object",
              "properties": {
                "id": {
                  "description": "The coupon's ID. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 2,
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the coupon.",
                  "example": "Australia Customers Discount"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "per_item_discount",
                    "per_total_discount",
                    "shipping_discount",
                    "free_shipping",
                    "percentage_discount"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "The discount to apply to an order, as either an amount or a percentage. This field's usage is determined by the coupon `type`. For example, a `type` of + `percentage_discount` would determine a percentage here.",
                  "example": 5
                },
                "min_purchase": {
                  "description": "Specifies a minimum value that an order must have before the coupon can be applied to it.",
                  "example": 25,
                  "type": "string"
                },
                "expires": {
                  "description": "Specifies when a coupon expires. Coupons need not have an expiry date – you can also control expiry via + `max_uses` or `max_uses_per_customer`. If you do use this date field, the value must be in <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> format.",
                  "type": "string"
                },
                "enabled": {
                  "description": "If the coupon is enabled, this field's value is `true`; otherwise, `false`.",
                  "example": true,
                  "type": "boolean"
                },
                "code": {
                  "type": "string",
                  "description": "The coupon code that customers will use to receive their discounts. Value must be unique.",
                  "example": "S2549JM0Y"
                },
                "applies_to": {
                  "type": "object",
                  "description": "If it is not included in the PUT request, its existing value on the coupon will be cleared. Also required to be set on the POST request",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of either the products or categories"
                    },
                    "entities": {
                      "type": "array",
                      "enum": [
                        "products",
                        "categories"
                      ],
                      "description": "What the discount applies to. Can be products or categories.",
                      "example": "categories",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "num_uses": {
                  "description": "Number of times this coupon has been used. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 0,
                  "type": "integer"
                },
                "max_uses": {
                  "description": "Maximum number of times this coupon can be used.",
                  "example": 25,
                  "type": "integer"
                },
                "max_uses_per_customer": {
                  "description": "Maximum number of times each customer can use this coupon.",
                  "example": 0,
                  "type": "integer"
                },
                "restricted_to": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "string"
                    }
                  }
                },
                "shipping_methods": {
                  "description": "This is a list of shipping-method names. A shipping method must be enabled on the store to use it with a coupon. To check which shipping methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods) endpoint.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "date_created": {
                  "description": "Date Created",
                  "example": "Tue, 13 Mar 2018 16:18:59 +0000",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type",
                "amount",
                "code",
                "applies_to"
              ]
            },
            "examples": {
              "application/json": {
                "id": 5,
                "name": "Free Shipping",
                "type": "free_shipping",
                "amount": "0.0000",
                "min_purchase": "0.0000",
                "expires": "",
                "enabled": true,
                "code": "PC08VN1P042T0",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    23
                  ]
                },
                "num_uses": 1,
                "max_uses": 0,
                "max_uses_per_customer": 0,
                "restricted_to": [],
                "shipping_methods": {},
                "date_created": "Mon, 30 Jul 2018 15:33:43 +0000"
              },
              "Response Schema": {
                "name": "ad in dolor",
                "type": "percentage_discount",
                "amount": "veniam reprehenderit ullamco commodo i",
                "code": "mollit id consectetur",
                "applies_to": {
                  "id": -25191210,
                  "entities": [
                    "cillum occaecat"
                  ]
                },
                "id": -46840179,
                "min_purchase": "incididunt consectetur veniam qui",
                "expires": "proident non laboris Lorem fugiat",
                "enabled": false,
                "num_uses": 57172750,
                "max_uses": -29241780,
                "max_uses_per_customer": -21944793,
                "restricted_to": {
                  "countries": "deserunt magna incididunt"
                },
                "shipping_methods": [
                  "nulla dolor",
                  "ea dolore qui incididunt ullamco",
                  "consec",
                  "anim elit dolor culpa"
                ],
                "date_created": "aliquip veniam"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Coupons"
        ]
      },
      "delete": {
        "description": "By default, it deletes all *Coupons*.",
        "summary": "Delete All Coupons",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Coupons"
        ],
        "operationId": "deleteAllCoupons"
      }
    },
    "/coupons/count": {
      "get": {
        "description": "Returns a count of all *Coupons* in the store.",
        "summary": "Get a Count of Coupons",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Count Response",
              "example": {
                "count": 27
              },
              "type": "object",
              "properties": {
                "count": {
                  "description": "",
                  "example": 27,
                  "type": "number"
                }
              }
            },
            "examples": {
              "application/json": {
                "count": 27
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Coupons"
        ],
        "operationId": "getACountOfCoupons"
      }
    },
    "/coupons/{id}": {
      "put": {
        "description": "Updates a *Coupon*.\n\n\n**Required Fields**\n\n*   applies_to\n\n**Read Only Fields**\n\n*   id\n*   num_uses\n\n**Notes**\n\nIf the `applies_to` value is cleared, you can restore it to the coupon by reapplying the `applies_to` value in a new PUT request.",
        "summary": "Update a Coupon",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the coupon."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Coupon",
              "example": {
                "id": 2,
                "name": "Australia Customers Discount",
                "type": "per_item_discount",
                "amount": 5,
                "min_purchase": 25,
                "expires": "",
                "enabled": true,
                "code": "S2549JM0Y",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    "0,3"
                  ]
                },
                "num_uses": 0,
                "max_uses": 25,
                "max_uses_per_customer": 0,
                "restricted_to": {
                  "countries": [
                    "AU"
                  ]
                },
                "shipping_methods": [
                  "shipping_endicia"
                ],
                "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
              },
              "type": "object",
              "properties": {
                "id": {
                  "description": "The coupon's ID. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 2,
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the coupon.",
                  "example": "Australia Customers Discount"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "per_item_discount",
                    "per_total_discount",
                    "shipping_discount",
                    "free_shipping",
                    "percentage_discount"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "The discount to apply to an order, as either an amount or a percentage. This field's usage is determined by the coupon `type`. For example, a `type` of + `percentage_discount` would determine a percentage here.",
                  "example": 5
                },
                "min_purchase": {
                  "description": "Specifies a minimum value that an order must have before the coupon can be applied to it.",
                  "example": 25,
                  "type": "string"
                },
                "expires": {
                  "description": "Specifies when a coupon expires. Coupons need not have an expiry date – you can also control expiry via + `max_uses` or `max_uses_per_customer`. If you do use this date field, the value must be in <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> format.",
                  "type": "string"
                },
                "enabled": {
                  "description": "If the coupon is enabled, this field's value is `true`; otherwise, `false`.",
                  "example": true,
                  "type": "boolean"
                },
                "code": {
                  "type": "string",
                  "description": "The coupon code that customers will use to receive their discounts. Value must be unique.",
                  "example": "S2549JM0Y"
                },
                "applies_to": {
                  "type": "object",
                  "description": "If it is not included in the PUT request, its existing value on the coupon will be cleared. Also required to be set on the POST request",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of either the products or categories"
                    },
                    "entities": {
                      "type": "array",
                      "enum": [
                        "products",
                        "categories"
                      ],
                      "description": "What the discount applies to. Can be products or categories.",
                      "example": "categories",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "num_uses": {
                  "description": "Number of times this coupon has been used. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 0,
                  "type": "integer"
                },
                "max_uses": {
                  "description": "Maximum number of times this coupon can be used.",
                  "example": 25,
                  "type": "integer"
                },
                "max_uses_per_customer": {
                  "description": "Maximum number of times each customer can use this coupon.",
                  "example": 0,
                  "type": "integer"
                },
                "restricted_to": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "string"
                    }
                  }
                },
                "shipping_methods": {
                  "description": "This is a list of shipping-method names. A shipping method must be enabled on the store to use it with a coupon. To check which shipping methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods) endpoint.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "date_created": {
                  "description": "Date Created",
                  "example": "Tue, 13 Mar 2018 16:18:59 +0000",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type",
                "amount",
                "code",
                "applies_to"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "5% off order total",
                "type": "per_item_discount",
                "code": "4F75AF0C3802D39",
                "enabled": true,
                "amount": "5",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    0
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Coupon",
              "example": {
                "id": 2,
                "name": "Australia Customers Discount",
                "type": "per_item_discount",
                "amount": 5,
                "min_purchase": 25,
                "expires": "",
                "enabled": true,
                "code": "S2549JM0Y",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    "0,3"
                  ]
                },
                "num_uses": 0,
                "max_uses": 25,
                "max_uses_per_customer": 0,
                "restricted_to": {
                  "countries": [
                    "AU"
                  ]
                },
                "shipping_methods": [
                  "shipping_endicia"
                ],
                "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
              },
              "type": "object",
              "properties": {
                "id": {
                  "description": "The coupon's ID. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 2,
                  "type": "integer"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the coupon.",
                  "example": "Australia Customers Discount"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "per_item_discount",
                    "per_total_discount",
                    "shipping_discount",
                    "free_shipping",
                    "percentage_discount"
                  ]
                },
                "amount": {
                  "type": "string",
                  "description": "The discount to apply to an order, as either an amount or a percentage. This field's usage is determined by the coupon `type`. For example, a `type` of + `percentage_discount` would determine a percentage here.",
                  "example": 5
                },
                "min_purchase": {
                  "description": "Specifies a minimum value that an order must have before the coupon can be applied to it.",
                  "example": 25,
                  "type": "string"
                },
                "expires": {
                  "description": "Specifies when a coupon expires. Coupons need not have an expiry date – you can also control expiry via + `max_uses` or `max_uses_per_customer`. If you do use this date field, the value must be in <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> format.",
                  "type": "string"
                },
                "enabled": {
                  "description": "If the coupon is enabled, this field's value is `true`; otherwise, `false`.",
                  "example": true,
                  "type": "boolean"
                },
                "code": {
                  "type": "string",
                  "description": "The coupon code that customers will use to receive their discounts. Value must be unique.",
                  "example": "S2549JM0Y"
                },
                "applies_to": {
                  "type": "object",
                  "description": "If it is not included in the PUT request, its existing value on the coupon will be cleared. Also required to be set on the POST request",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "description": "ID of either the products or categories"
                    },
                    "entities": {
                      "type": "array",
                      "enum": [
                        "products",
                        "categories"
                      ],
                      "description": "What the discount applies to. Can be products or categories.",
                      "example": "categories",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "num_uses": {
                  "description": "Number of times this coupon has been used. This is a read-only field; do not set or modify its value in a POST or PUT request.",
                  "example": 0,
                  "type": "integer"
                },
                "max_uses": {
                  "description": "Maximum number of times this coupon can be used.",
                  "example": 25,
                  "type": "integer"
                },
                "max_uses_per_customer": {
                  "description": "Maximum number of times each customer can use this coupon.",
                  "example": 0,
                  "type": "integer"
                },
                "restricted_to": {
                  "type": "object",
                  "properties": {
                    "countries": {
                      "type": "string"
                    }
                  }
                },
                "shipping_methods": {
                  "description": "This is a list of shipping-method names. A shipping method must be enabled on the store to use it with a coupon. To check which shipping methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods) endpoint.",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "date_created": {
                  "description": "Date Created",
                  "example": "Tue, 13 Mar 2018 16:18:59 +0000",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "type",
                "amount",
                "code",
                "applies_to"
              ]
            },
            "examples": {
              "application/json": {
                "id": 5,
                "name": "Free Shipping",
                "type": "free_shipping",
                "amount": "0.0000",
                "min_purchase": "0.0000",
                "expires": "",
                "enabled": true,
                "code": "PC08VN1P042T0",
                "applies_to": {
                  "entity": "categories",
                  "ids": [
                    23
                  ]
                },
                "num_uses": 0,
                "max_uses": 0,
                "max_uses_per_customer": 0,
                "restricted_to": [],
                "shipping_methods": {},
                "date_created": "Mon, 30 Jul 2018 15:33:43 +0000"
              },
              "Response Schema": {
                "name": "non velit magna quis elit",
                "type": "per_total_discount",
                "amount": "dolore anim dolor",
                "code": "ex",
                "applies_to": {
                  "id": -53552945,
                  "entities": [
                    "in aliqua Excepteur exercitation nostru",
                    "cupidatat et",
                    "est"
                  ]
                },
                "id": 65958210,
                "min_purchase": "Excepteur sint in amet a",
                "expires": "in minim sunt",
                "enabled": false,
                "num_uses": 20614958,
                "max_uses": -33527872,
                "max_uses_per_customer": 30909741,
                "restricted_to": {
                  "countries": "ipsum tempor"
                },
                "shipping_methods": [
                  "elit Duis amet in",
                  "sunt est cillum",
                  "elit nostrud anim quis"
                ],
                "date_created": "ut aliqua tempor"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Coupons"
        ],
        "operationId": "updateACoupon"
      },
      "delete": {
        "description": "Deletes a *Coupon*.",
        "summary": "Delete a Coupon",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Coupons"
        ],
        "operationId": "deleteACoupon"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/banners": {
      "get": {
        "description": "Returns a list of *Banners*. Default sorting is by banner id, from lowest to highest.",
        "summary": "Get All Banners",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "min_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Optional filter param `/api/v2/banners?min_id={value}`"
          },
          {
            "name": "max_id",
            "in": "query",
            "required": false,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Optional filter param `/api/v2/banners?max_id={value}`"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Optional filter param `/api/v2/banners?page={number}`"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "number",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Optional filter param `/api/v2/banners?limit={count}`"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "title": "Banner",
                "example": {
                  "id": 1,
                  "name": "Sale Banner",
                  "content": "<p> Sale! Tuesday at 9am! </p>",
                  "page": "home_page",
                  "item_id": 0,
                  "location": "top",
                  "date_created": 1522169082,
                  "date_type": "always",
                  "date_from": 0,
                  "date_to": 0,
                  "visible": 1
                },
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the banner.",
                    "example": "Sale Banner",
                    "type": "string"
                  },
                  "content": {
                    "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
                    "example": "<p> Sale! Tuesday at 9am! </p>",
                    "type": "string"
                  },
                  "page": {
                    "type": "string",
                    "description": "Page the Banner is located",
                    "enum": [
                      "home_page",
                      "category_page",
                      "brand_page",
                      "search_page"
                    ]
                  },
                  "location": {
                    "type": "string",
                    "enum": [
                      "top",
                      "bottom"
                    ],
                    "description": "Location on the page",
                    "example": "top"
                  },
                  "date_type": {
                    "type": "string",
                    "enum": [
                      "always",
                      "custom"
                    ],
                    "description": "This specifies whether the banner should be visible during a specific date range."
                  },
                  "id": {
                    "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
                    "example": 1,
                    "type": "integer"
                  },
                  "item_id": {
                    "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
                    "example": 0,
                    "type": "string"
                  },
                  "date_created": {
                    "description": "Date the banner is created.",
                    "example": 1522169082,
                    "type": "string",
                    "format": "date-time"
                  },
                  "date_from": {
                    "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
                    "example": 0,
                    "type": "string"
                  },
                  "date_to": {
                    "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
                    "example": 0,
                    "type": "string"
                  },
                  "visible": {
                    "type": "string",
                    "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
                    "example": 1
                  }
                },
                "required": [
                  "name",
                  "content",
                  "page",
                  "location",
                  "date_type"
                ]
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": 1,
                  "name": "This is a banner",
                  "content": "<p>This is a banner</p>",
                  "page": "home_page",
                  "item_id": "0",
                  "location": "top",
                  "date_created": "1522169082",
                  "date_type": "always",
                  "date_from": "0",
                  "date_to": "0",
                  "visible": "1"
                },
                {
                  "id": 2,
                  "name": "Banner #2",
                  "content": "<p>Banner # 2</p>",
                  "page": "category_page",
                  "item_id": "23",
                  "location": "top",
                  "date_created": "1522169169",
                  "date_type": "always",
                  "date_from": "0",
                  "date_to": "0",
                  "visible": "1"
                }
              ],
              "Response Schema": [
                {
                  "name": "enim dolore culpa",
                  "content": "nostrud ex",
                  "page": "home_page",
                  "location": "bottom",
                  "date_type": "always",
                  "id": -20236841,
                  "item_id": "adipisicing",
                  "date_created": "2000-02-01T23:41:02.227Z",
                  "date_from": "ullamco dolore occaecat est",
                  "date_to": "cup",
                  "visible": "dolore ullamco"
                },
                {
                  "name": "officia ullamco veniam cillum",
                  "content": "est in dolore ipsum",
                  "page": "search_page",
                  "location": "bottom",
                  "date_type": "custom",
                  "id": -39106690,
                  "item_id": "nulla sed",
                  "date_created": "1971-12-11T04:18:51.484Z",
                  "date_from": "ex nulla laboris eiusmod",
                  "date_to": "do tempor",
                  "visible": "Ut eu dolor voluptate"
                },
                {
                  "name": "minim ",
                  "content": "ve",
                  "page": "home_page",
                  "location": "top",
                  "date_type": "custom",
                  "id": 60422855,
                  "item_id": "dolore pariatur",
                  "date_created": "1958-04-29T06:45:26.348Z",
                  "date_from": "quis do occaecat deserunt",
                  "date_to": "laborum nost",
                  "visible": "Ut sint"
                },
                {
                  "name": "labore dolore eu",
                  "content": "ipsum nostrud eiusmod magna anim",
                  "page": "brand_page",
                  "location": "bottom",
                  "date_type": "custom",
                  "id": 68348597,
                  "item_id": "eiusmod et",
                  "date_created": "1990-05-30T06:31:49.521Z",
                  "date_from": "sed",
                  "date_to": "velit",
                  "visible": "in labore eiusmod incididunt"
                }
              ]
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Banners"
        ],
        "operationId": "getAllBanners"
      },
      "post": {
        "description": "Creates a *Banner*.\n\n**Required Fields**\n* name\n* content\n* page\n* location\n* date_type\n\n**Read Only Fields**\n* date_created\n* id",
        "summary": "Create a Banner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Banner",
              "example": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the banner.",
                  "example": "Sale Banner",
                  "type": "string"
                },
                "content": {
                  "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
                  "example": "<p> Sale! Tuesday at 9am! </p>",
                  "type": "string"
                },
                "page": {
                  "type": "string",
                  "description": "Page the Banner is located",
                  "enum": [
                    "home_page",
                    "category_page",
                    "brand_page",
                    "search_page"
                  ]
                },
                "location": {
                  "type": "string",
                  "enum": [
                    "top",
                    "bottom"
                  ],
                  "description": "Location on the page",
                  "example": "top"
                },
                "date_type": {
                  "type": "string",
                  "enum": [
                    "always",
                    "custom"
                  ],
                  "description": "This specifies whether the banner should be visible during a specific date range."
                },
                "id": {
                  "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
                  "example": 1,
                  "type": "integer"
                },
                "item_id": {
                  "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
                  "example": 0,
                  "type": "string"
                },
                "date_created": {
                  "description": "Date the banner is created.",
                  "example": 1522169082,
                  "type": "string",
                  "format": "date-time"
                },
                "date_from": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "date_to": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "visible": {
                  "type": "string",
                  "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
                  "example": 1
                }
              },
              "required": [
                "name",
                "content",
                "page",
                "location",
                "date_type"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "location": "top",
                "date_type": "always",
                "visible": 1
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Banner",
              "example": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the banner.",
                  "example": "Sale Banner",
                  "type": "string"
                },
                "content": {
                  "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
                  "example": "<p> Sale! Tuesday at 9am! </p>",
                  "type": "string"
                },
                "page": {
                  "type": "string",
                  "description": "Page the Banner is located",
                  "enum": [
                    "home_page",
                    "category_page",
                    "brand_page",
                    "search_page"
                  ]
                },
                "location": {
                  "type": "string",
                  "enum": [
                    "top",
                    "bottom"
                  ],
                  "description": "Location on the page",
                  "example": "top"
                },
                "date_type": {
                  "type": "string",
                  "enum": [
                    "always",
                    "custom"
                  ],
                  "description": "This specifies whether the banner should be visible during a specific date range."
                },
                "id": {
                  "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
                  "example": 1,
                  "type": "integer"
                },
                "item_id": {
                  "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
                  "example": 0,
                  "type": "string"
                },
                "date_created": {
                  "description": "Date the banner is created.",
                  "example": 1522169082,
                  "type": "string",
                  "format": "date-time"
                },
                "date_from": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "date_to": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "visible": {
                  "type": "string",
                  "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
                  "example": 1
                }
              },
              "required": [
                "name",
                "content",
                "page",
                "location",
                "date_type"
              ]
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "Response Schema": {
                "name": "dolore",
                "content": "in enim",
                "page": "category_page",
                "location": "top",
                "date_type": "always",
                "id": -78851849,
                "item_id": "do",
                "date_created": "1947-03-02T17:54:28.008Z",
                "date_from": "proident velit aute laboris",
                "date_to": "sunt ex adipisicing non",
                "visible": "id commodo"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Banners"
        ],
        "operationId": "createABanner"
      },
      "delete": {
        "description": "By default, it deletes all *Banners*.",
        "summary": "Delete All Banners",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Banners"
        ],
        "operationId": "deleteAllBanners"
      }
    },
    "/banners/{id}": {
      "get": {
        "description": "Returns a single *Banner*",
        "summary": "Get a Banner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the banner."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Banner",
              "example": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the banner.",
                  "example": "Sale Banner",
                  "type": "string"
                },
                "content": {
                  "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
                  "example": "<p> Sale! Tuesday at 9am! </p>",
                  "type": "string"
                },
                "page": {
                  "type": "string",
                  "description": "Page the Banner is located",
                  "enum": [
                    "home_page",
                    "category_page",
                    "brand_page",
                    "search_page"
                  ]
                },
                "location": {
                  "type": "string",
                  "enum": [
                    "top",
                    "bottom"
                  ],
                  "description": "Location on the page",
                  "example": "top"
                },
                "date_type": {
                  "type": "string",
                  "enum": [
                    "always",
                    "custom"
                  ],
                  "description": "This specifies whether the banner should be visible during a specific date range."
                },
                "id": {
                  "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
                  "example": 1,
                  "type": "integer"
                },
                "item_id": {
                  "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
                  "example": 0,
                  "type": "string"
                },
                "date_created": {
                  "description": "Date the banner is created.",
                  "example": 1522169082,
                  "type": "string",
                  "format": "date-time"
                },
                "date_from": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "date_to": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "visible": {
                  "type": "string",
                  "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
                  "example": 1
                }
              },
              "required": [
                "name",
                "content",
                "page",
                "location",
                "date_type"
              ]
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "Response Schema": {
                "name": "dolor ut",
                "content": "nostrud consequat esse laboris velit",
                "page": "home_page",
                "location": "bottom",
                "date_type": "always",
                "id": -75258023,
                "item_id": "ex eiusmod nisi",
                "date_created": "2012-08-14T15:18:17.614Z",
                "date_from": "ut ",
                "date_to": "in id",
                "visible": "cillum laborum sed"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Banners"
        ],
        "operationId": "getABanner"
      },
      "put": {
        "description": "Updates a *Banner*.\n\n**Read Only Fields**\n* date_created",
        "summary": "Update a Banner",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the banner."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Banner",
              "example": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the banner.",
                  "example": "Sale Banner",
                  "type": "string"
                },
                "content": {
                  "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
                  "example": "<p> Sale! Tuesday at 9am! </p>",
                  "type": "string"
                },
                "page": {
                  "type": "string",
                  "description": "Page the Banner is located",
                  "enum": [
                    "home_page",
                    "category_page",
                    "brand_page",
                    "search_page"
                  ]
                },
                "location": {
                  "type": "string",
                  "enum": [
                    "top",
                    "bottom"
                  ],
                  "description": "Location on the page",
                  "example": "top"
                },
                "date_type": {
                  "type": "string",
                  "enum": [
                    "always",
                    "custom"
                  ],
                  "description": "This specifies whether the banner should be visible during a specific date range."
                },
                "id": {
                  "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
                  "example": 1,
                  "type": "integer"
                },
                "item_id": {
                  "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
                  "example": 0,
                  "type": "string"
                },
                "date_created": {
                  "description": "Date the banner is created.",
                  "example": 1522169082,
                  "type": "string",
                  "format": "date-time"
                },
                "date_from": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "date_to": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "visible": {
                  "type": "string",
                  "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
                  "example": 1
                }
              },
              "required": [
                "name",
                "content",
                "page",
                "location",
                "date_type"
              ]
            },
            "x-examples": {
              "application/json": {
                "name": "Home Page Banner"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Banner",
              "example": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "type": "object",
              "properties": {
                "name": {
                  "description": "Name of the banner.",
                  "example": "Sale Banner",
                  "type": "string"
                },
                "content": {
                  "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
                  "example": "<p> Sale! Tuesday at 9am! </p>",
                  "type": "string"
                },
                "page": {
                  "type": "string",
                  "description": "Page the Banner is located",
                  "enum": [
                    "home_page",
                    "category_page",
                    "brand_page",
                    "search_page"
                  ]
                },
                "location": {
                  "type": "string",
                  "enum": [
                    "top",
                    "bottom"
                  ],
                  "description": "Location on the page",
                  "example": "top"
                },
                "date_type": {
                  "type": "string",
                  "enum": [
                    "always",
                    "custom"
                  ],
                  "description": "This specifies whether the banner should be visible during a specific date range."
                },
                "id": {
                  "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
                  "example": 1,
                  "type": "integer"
                },
                "item_id": {
                  "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
                  "example": 0,
                  "type": "string"
                },
                "date_created": {
                  "description": "Date the banner is created.",
                  "example": 1522169082,
                  "type": "string",
                  "format": "date-time"
                },
                "date_from": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "date_to": {
                  "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
                  "example": 0,
                  "type": "string"
                },
                "visible": {
                  "type": "string",
                  "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
                  "example": 1
                }
              },
              "required": [
                "name",
                "content",
                "page",
                "location",
                "date_type"
              ]
            },
            "examples": {
              "application/json": {
                "id": 1,
                "name": "Sale Banner",
                "content": "<p> Sale! Tuesday at 9am! </p>",
                "page": "home_page",
                "item_id": 0,
                "location": "top",
                "date_created": 1522169082,
                "date_type": "always",
                "date_from": 0,
                "date_to": 0,
                "visible": 1
              },
              "Response Schema": {
                "name": "aute voluptate",
                "content": "amet voluptate",
                "page": "category_page",
                "location": "top",
                "date_type": "custom",
                "id": 67332668,
                "item_id": "cupidatat voluptate in nulla",
                "date_created": "1988-09-15T08:02:43.394Z",
                "date_from": "ut mollit sunt",
                "date_to": "laborum cillum",
                "visible": "id dolor aute dol"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Banners"
        ],
        "operationId": "updateABanner"
      },
      "delete": {
        "description": "Deletes a *Banner*.",
        "summary": "Delete a Banner",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": ""
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Banners"
        ],
        "operationId": "deleteABanner"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ]
    },
    "/banners/count": {
      "get": {
        "description": "Returns a count of *Banners*.",
        "summary": "Get a Count of Store Banners",
        "parameters": [
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Count Response",
              "example": {
                "count": 27
              },
              "type": "object",
              "properties": {
                "count": {
                  "description": "",
                  "example": 27,
                  "type": "number"
                }
              }
            },
            "examples": {
              "application/json": {
                "count": 27
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Banners"
        ],
        "operationId": "getACountOfBanners"
      }
    },
    "/gift_certificates/{id}": {
      "get": {
        "description": "Returns a single *Gift Certificate*.",
        "summary": "Get a Gift Certificate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the gift certificate."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Gift Certificate",
              "example": {
                "id": 1,
                "customer_id": 5,
                "order_id": 116,
                "code": "FFZ-5N4-C7M-S78",
                "to_name": "John Doe",
                "to_email": "johndoe@email.com",
                "from_name": "Jane Doe",
                "from_email": "janedoe@email.com",
                "amount": 10,
                "balance": 0,
                "status": "active",
                "template": false,
                "message": "Happy Birthday!",
                "purchase_date": 1520957992,
                "expiry_date": 0
              },
              "type": "object",
              "properties": {
                "to_name": {
                  "description": "Name of the recipient.",
                  "example": "John Doe",
                  "type": "string"
                },
                "to_email": {
                  "description": "Email of the recipient.",
                  "example": "johndoe@email.com",
                  "type": "string"
                },
                "from_name": {
                  "description": "Name of the customer who purchased the gift certificate.",
                  "example": "Jane Doe",
                  "type": "string"
                },
                "from_email": {
                  "description": "Email of the customer who purchased the gift certificate.",
                  "example": "janedoe@email.com",
                  "type": "string"
                },
                "amount": {
                  "description": "Value of the gift certificate.",
                  "example": 10,
                  "type": "string"
                },
                "id": {
                  "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
                  "example": 1,
                  "type": "integer"
                },
                "customer_id": {
                  "description": "The ID of the customer placing the order.",
                  "example": 5,
                  "type": "integer"
                },
                "order_id": {
                  "description": "The ID of the order.",
                  "example": 116,
                  "type": "integer"
                },
                "code": {
                  "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
                  "example": "FFZ-5N4-C7M-S78",
                  "type": "string"
                },
                "balance": {
                  "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
                  "example": 0,
                  "type": "string"
                },
                "status": {
                  "title": "Gift Certificate Status",
                  "example": "active",
                  "x-enum-elements": [
                    {
                      "name": "active",
                      "description": ""
                    },
                    {
                      "name": "pending",
                      "description": ""
                    },
                    {
                      "name": "disabled",
                      "description": ""
                    },
                    {
                      "name": "expired",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "active",
                    "pending",
                    "disabled",
                    "expired"
                  ]
                },
                "template": {
                  "type": "string",
                  "description": "The email theme to use in the message sent to the recipient.",
                  "enum": [
                    "Birthday",
                    "Boy",
                    "Celebration",
                    "Christmas",
                    "General",
                    "Girl"
                  ]
                },
                "message": {
                  "description": "Text that will be sent to the recipient, such as “Congratulations.”",
                  "example": "Happy Birthday!",
                  "type": "string"
                },
                "purchase_date": {
                  "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
                  "example": 1520957992,
                  "type": "string"
                },
                "expiry_date": {
                  "description": "Date on which the gift certificate is set to expire.",
                  "example": 0,
                  "type": "string"
                }
              },
              "required": [
                "to_name",
                "to_email",
                "from_name",
                "from_email",
                "amount"
              ]
            },
            "examples": {
              "application/json": {
                "id": 1,
                "customer_id": 5,
                "order_id": 116,
                "code": "FFZ-5N4-C7M-S78",
                "to_name": "John Doe",
                "to_email": "johndoe@email.com",
                "from_name": "Jane Doe",
                "from_email": "janedoe@email.com",
                "amount": 10,
                "balance": 0,
                "status": "active",
                "template": false,
                "message": "Happy Birthday!",
                "purchase_date": 1520957992,
                "expiry_date": 0
              },
              "Response Schema": {
                "to_name": "au",
                "to_email": "ullamco quis elit tempor",
                "from_name": "cillum sunt aliqua voluptate",
                "from_email": "pariatur consectetur",
                "amount": "commodo qui aliquip aute",
                "id": 62829314,
                "customer_id": -34317382,
                "order_id": -22834059,
                "code": "ex proident",
                "balance": "irure paria",
                "status": {},
                "template": "irure commodo pariatur dolor Duis",
                "message": "aute labor",
                "purchase_date": "ullamco veniam Ut deserunt",
                "expiry_date": "reprehenderit dolor"
              }
            }
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Gift Certificates"
        ],
        "operationId": "getAGiftCertificate"
      },
      "delete": {
        "description": "Deletes a *Gift Certificate*.",
        "summary": "Delete a Gift Certificate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "exclusiveMaximum": false,
            "exclusiveMinimum": false,
            "description": "Id of the gift certificate."
          },
          {
            "name": "Accept",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "",
            "default": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        },
        "tags": [
          "Gift Certificates"
        ],
        "operationId": "deleteAGiftCertificate"
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "put": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Gift Certificate",
              "example": {
                "id": 1,
                "customer_id": 5,
                "order_id": 116,
                "code": "FFZ-5N4-C7M-S78",
                "to_name": "John Doe",
                "to_email": "johndoe@email.com",
                "from_name": "Jane Doe",
                "from_email": "janedoe@email.com",
                "amount": 10,
                "balance": 0,
                "status": "active",
                "template": false,
                "message": "Happy Birthday!",
                "purchase_date": 1520957992,
                "expiry_date": 0
              },
              "type": "object",
              "properties": {
                "to_name": {
                  "description": "Name of the recipient.",
                  "example": "John Doe",
                  "type": "string"
                },
                "to_email": {
                  "description": "Email of the recipient.",
                  "example": "johndoe@email.com",
                  "type": "string"
                },
                "from_name": {
                  "description": "Name of the customer who purchased the gift certificate.",
                  "example": "Jane Doe",
                  "type": "string"
                },
                "from_email": {
                  "description": "Email of the customer who purchased the gift certificate.",
                  "example": "janedoe@email.com",
                  "type": "string"
                },
                "amount": {
                  "description": "Value of the gift certificate.",
                  "example": 10,
                  "type": "string"
                },
                "id": {
                  "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
                  "example": 1,
                  "type": "integer"
                },
                "customer_id": {
                  "description": "The ID of the customer placing the order.",
                  "example": 5,
                  "type": "integer"
                },
                "order_id": {
                  "description": "The ID of the order.",
                  "example": 116,
                  "type": "integer"
                },
                "code": {
                  "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
                  "example": "FFZ-5N4-C7M-S78",
                  "type": "string"
                },
                "balance": {
                  "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
                  "example": 0,
                  "type": "string"
                },
                "status": {
                  "title": "Gift Certificate Status",
                  "example": "active",
                  "x-enum-elements": [
                    {
                      "name": "active",
                      "description": ""
                    },
                    {
                      "name": "pending",
                      "description": ""
                    },
                    {
                      "name": "disabled",
                      "description": ""
                    },
                    {
                      "name": "expired",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "active",
                    "pending",
                    "disabled",
                    "expired"
                  ]
                },
                "template": {
                  "type": "string",
                  "description": "The email theme to use in the message sent to the recipient.",
                  "enum": [
                    "Birthday",
                    "Boy",
                    "Celebration",
                    "Christmas",
                    "General",
                    "Girl"
                  ]
                },
                "message": {
                  "description": "Text that will be sent to the recipient, such as “Congratulations.”",
                  "example": "Happy Birthday!",
                  "type": "string"
                },
                "purchase_date": {
                  "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
                  "example": 1520957992,
                  "type": "string"
                },
                "expiry_date": {
                  "description": "Date on which the gift certificate is set to expire.",
                  "example": 0,
                  "type": "string"
                }
              },
              "required": [
                "to_name",
                "to_email",
                "from_name",
                "from_email",
                "amount"
              ]
            },
            "examples": {
              "application/json": {
                "id": 1,
                "customer_id": "5",
                "order_id": "116",
                "code": "FFZ-5N4-C7M-S78",
                "to_name": "John Doe",
                "to_email": "johndoe@email.com",
                "from_name": "Jane Doe",
                "from_email": "janedoe@email.com",
                "amount": "10.0000",
                "balance": "0.0000",
                "status": "expired",
                "template": false,
                "message": "",
                "purchase_date": "1520957992",
                "expiry_date": "0"
              },
              "Response Schema": {
                "to_name": "adipisicing cupidatat dolore ipsum",
                "to_email": "magna velit dolore dolore",
                "from_name": "dolore consequat labor",
                "from_email": "pariatur amet est",
                "amount": "eu cillum ad eiusmod",
                "id": 72590303,
                "customer_id": -56542790,
                "order_id": -78064267,
                "code": "nulla id et",
                "balance": "sit",
                "status": {},
                "template": "ullamco",
                "message": "nulla sunt",
                "purchase_date": "deserunt officia nostrud occaecat",
                "expiry_date": "pariatur laborum Ut"
              }
            }
          }
        },
        "summary": "Update a Gift Certificate",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "title": "Gift Certificate",
              "example": {
                "id": 1,
                "customer_id": 5,
                "order_id": 116,
                "code": "FFZ-5N4-C7M-S78",
                "to_name": "John Doe",
                "to_email": "johndoe@email.com",
                "from_name": "Jane Doe",
                "from_email": "janedoe@email.com",
                "amount": 10,
                "balance": 0,
                "status": "active",
                "template": false,
                "message": "Happy Birthday!",
                "purchase_date": 1520957992,
                "expiry_date": 0
              },
              "type": "object",
              "properties": {
                "to_name": {
                  "description": "Name of the recipient.",
                  "example": "John Doe",
                  "type": "string"
                },
                "to_email": {
                  "description": "Email of the recipient.",
                  "example": "johndoe@email.com",
                  "type": "string"
                },
                "from_name": {
                  "description": "Name of the customer who purchased the gift certificate.",
                  "example": "Jane Doe",
                  "type": "string"
                },
                "from_email": {
                  "description": "Email of the customer who purchased the gift certificate.",
                  "example": "janedoe@email.com",
                  "type": "string"
                },
                "amount": {
                  "description": "Value of the gift certificate.",
                  "example": 10,
                  "type": "string"
                },
                "id": {
                  "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
                  "example": 1,
                  "type": "integer"
                },
                "customer_id": {
                  "description": "The ID of the customer placing the order.",
                  "example": 5,
                  "type": "integer"
                },
                "order_id": {
                  "description": "The ID of the order.",
                  "example": 116,
                  "type": "integer"
                },
                "code": {
                  "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
                  "example": "FFZ-5N4-C7M-S78",
                  "type": "string"
                },
                "balance": {
                  "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
                  "example": 0,
                  "type": "string"
                },
                "status": {
                  "title": "Gift Certificate Status",
                  "example": "active",
                  "x-enum-elements": [
                    {
                      "name": "active",
                      "description": ""
                    },
                    {
                      "name": "pending",
                      "description": ""
                    },
                    {
                      "name": "disabled",
                      "description": ""
                    },
                    {
                      "name": "expired",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "active",
                    "pending",
                    "disabled",
                    "expired"
                  ]
                },
                "template": {
                  "type": "string",
                  "description": "The email theme to use in the message sent to the recipient.",
                  "enum": [
                    "Birthday",
                    "Boy",
                    "Celebration",
                    "Christmas",
                    "General",
                    "Girl"
                  ]
                },
                "message": {
                  "description": "Text that will be sent to the recipient, such as “Congratulations.”",
                  "example": "Happy Birthday!",
                  "type": "string"
                },
                "purchase_date": {
                  "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
                  "example": 1520957992,
                  "type": "string"
                },
                "expiry_date": {
                  "description": "Date on which the gift certificate is set to expire.",
                  "example": 0,
                  "type": "string"
                }
              },
              "required": [
                "to_name",
                "to_email",
                "from_name",
                "from_email",
                "amount"
              ]
            },
            "x-examples": {
              "application/json": {
                "to_name": "New testing"
              }
            }
          }
        ],
        "description": "Updates a *Gift Certificate*.\n\n**Read Only Fields**\n* id\n* order_id\n* template",
        "tags": [
          "Gift Certificates"
        ],
        "operationId": "updateAGiftCertificate"
      }
    },
    "/gift_certificates": {
      "get": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "title": "Gift Certificate",
                "example": {
                  "id": 1,
                  "customer_id": 5,
                  "order_id": 116,
                  "code": "FFZ-5N4-C7M-S78",
                  "to_name": "John Doe",
                  "to_email": "johndoe@email.com",
                  "from_name": "Jane Doe",
                  "from_email": "janedoe@email.com",
                  "amount": 10,
                  "balance": 0,
                  "status": "active",
                  "template": false,
                  "message": "Happy Birthday!",
                  "purchase_date": 1520957992,
                  "expiry_date": 0
                },
                "type": "object",
                "properties": {
                  "to_name": {
                    "description": "Name of the recipient.",
                    "example": "John Doe",
                    "type": "string"
                  },
                  "to_email": {
                    "description": "Email of the recipient.",
                    "example": "johndoe@email.com",
                    "type": "string"
                  },
                  "from_name": {
                    "description": "Name of the customer who purchased the gift certificate.",
                    "example": "Jane Doe",
                    "type": "string"
                  },
                  "from_email": {
                    "description": "Email of the customer who purchased the gift certificate.",
                    "example": "janedoe@email.com",
                    "type": "string"
                  },
                  "amount": {
                    "description": "Value of the gift certificate.",
                    "example": 10,
                    "type": "string"
                  },
                  "id": {
                    "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
                    "example": 1,
                    "type": "integer"
                  },
                  "customer_id": {
                    "description": "The ID of the customer placing the order.",
                    "example": 5,
                    "type": "integer"
                  },
                  "order_id": {
                    "description": "The ID of the order.",
                    "example": 116,
                    "type": "integer"
                  },
                  "code": {
                    "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
                    "example": "FFZ-5N4-C7M-S78",
                    "type": "string"
                  },
                  "balance": {
                    "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
                    "example": 0,
                    "type": "string"
                  },
                  "status": {
                    "title": "Gift Certificate Status",
                    "example": "active",
                    "x-enum-elements": [
                      {
                        "name": "active",
                        "description": ""
                      },
                      {
                        "name": "pending",
                        "description": ""
                      },
                      {
                        "name": "disabled",
                        "description": ""
                      },
                      {
                        "name": "expired",
                        "description": ""
                      }
                    ],
                    "type": "string",
                    "enum": [
                      "active",
                      "pending",
                      "disabled",
                      "expired"
                    ]
                  },
                  "template": {
                    "type": "string",
                    "description": "The email theme to use in the message sent to the recipient.",
                    "enum": [
                      "Birthday",
                      "Boy",
                      "Celebration",
                      "Christmas",
                      "General",
                      "Girl"
                    ]
                  },
                  "message": {
                    "description": "Text that will be sent to the recipient, such as “Congratulations.”",
                    "example": "Happy Birthday!",
                    "type": "string"
                  },
                  "purchase_date": {
                    "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
                    "example": 1520957992,
                    "type": "string"
                  },
                  "expiry_date": {
                    "description": "Date on which the gift certificate is set to expire.",
                    "example": 0,
                    "type": "string"
                  }
                },
                "required": [
                  "to_name",
                  "to_email",
                  "from_name",
                  "from_email",
                  "amount"
                ]
              }
            },
            "examples": {
              "application/json": [
                {
                  "id": "24",
                  "code": "10R-5E2-BO4-RWT",
                  "amount": "1000.0000",
                  "status": "active",
                  "balance": "500.0000",
                  "to_name": "Alyss",
                  "order_id": "1281",
                  "template": "false",
                  "to_email": "test@test.com",
                  "from_name": "Noland",
                  "from_email": "test1@test.com",
                  "customer_id": "0",
                  "expiry_date": "0",
                  "purchase_date": "1454432829"
                },
                {
                  "id": "25",
                  "code": "10R-6E3-AO4-RST",
                  "amount": "700.0000",
                  "status": "active",
                  "balance": "700.0000",
                  "to_name": "Alyss",
                  "order_id": "0",
                  "template": "false",
                  "to_email": "test@test.com",
                  "from_name": "Noland",
                  "from_email": "test1@test.com",
                  "customer_id": "0",
                  "expiry_date": "0",
                  "purchase_date": "1454433240"
                },
                {
                  "id": "27",
                  "code": "15R-6E3-AO4-RST",
                  "amount": "50.0000",
                  "status": "active",
                  "balance": "50.0000",
                  "to_name": "Lyss",
                  "order_id": "0",
                  "template": "false",
                  "to_email": "test5@test.com",
                  "from_name": "Somethingelse",
                  "from_email": "test15@test.com",
                  "customer_id": "0",
                  "expiry_date": "0",
                  "purchase_date": "1454433621"
                }
              ],
              "Response Schema": [
                {
                  "to_name": "q",
                  "to_email": "nostrud",
                  "from_name": "voluptate dolor",
                  "from_email": "ei",
                  "amount": "et exercitation anim aute enim",
                  "id": 58269283,
                  "customer_id": -95640037,
                  "order_id": -49565680,
                  "code": "elit eu",
                  "balance": "cupidatat eu dolore pariatur Ut",
                  "status": {},
                  "template": "dolor aute tempor deserunt nisi",
                  "message": "dolore et exercitation",
                  "purchase_date": "dolore sed",
                  "expiry_date": "nulla sed"
                },
                {
                  "to_name": "elit sint id",
                  "to_email": "culpa quis commodo aute do",
                  "from_name": "velit ",
                  "from_email": "sunt deser",
                  "amount": "dolor nulla",
                  "id": -95013292,
                  "customer_id": 71282773,
                  "order_id": -68244754,
                  "code": "occaecat in reprehenderit",
                  "balance": "in est officia aliqua",
                  "status": {},
                  "template": "enim id",
                  "message": "laboris ut",
                  "purchase_date": "eu et culpa",
                  "expiry_date": ""
                },
                {
                  "to_name": "ipsum in officia Duis dolor",
                  "to_email": "eu aliquip sit",
                  "from_name": "aute nostrud ut eu",
                  "from_email": "eu incididunt enim occaecat pariatur",
                  "amount": "labore commodo dolor",
                  "id": -34100027,
                  "customer_id": 26956019,
                  "order_id": -80744122,
                  "code": "ut amet in sunt",
                  "balance": "non nulla",
                  "status": {},
                  "template": "labore ut sit",
                  "message": "occaecat ir",
                  "purchase_date": "tempor et",
                  "expiry_date": "Lorem veniam el"
                },
                {
                  "to_name": "anim ni",
                  "to_email": "in",
                  "from_name": "voluptate esse in",
                  "from_email": "non ut occaecat",
                  "amount": "ad Duis est proident voluptate",
                  "id": 25214479,
                  "customer_id": -35542678,
                  "order_id": -84097841,
                  "code": "est voluptate Excepteur",
                  "balance": "qui esse ullamco",
                  "status": {},
                  "template": "laborum anim sed",
                  "message": "consequat veniam consectetur",
                  "purchase_date": "ea anim",
                  "expiry_date": "eiusmod Ut enim"
                }
              ]
            }
          }
        },
        "summary": "Get All Gift Certificates",
        "description": "Returns a list of *Gift Certificates*. Optional filter parameters can be passed in.\n\nDefault sorting is by gift-certificate id, from lowest to highest.\n\nThe maximum limit is 250. If a limit isn’t provided, up to 50 gift_certificates are returned by default.",
        "parameters": [
          {
            "in": "query",
            "name": "min_id",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "max_id",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "code",
            "type": "string"
          },
          {
            "in": "query",
            "name": "order_id",
            "type": "integer"
          },
          {
            "in": "query",
            "name": "to_name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "to_email",
            "type": "string"
          },
          {
            "in": "query",
            "name": "from_name",
            "type": "string"
          },
          {
            "in": "query",
            "name": "from_email",
            "type": "string"
          },
          {
            "in": "query",
            "name": "page",
            "type": "number"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "number"
          },
          {
            "in": "header",
            "name": "Accpet",
            "type": "string",
            "default": "application/json",
            "required": true
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "required": true,
            "default": "application/json"
          }
        ],
        "tags": [
          "Gift Certificates"
        ],
        "operationId": "getAllGiftCertificates"
      },
      "post": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "title": "Gift Certificate",
              "example": {
                "id": 1,
                "customer_id": 5,
                "order_id": 116,
                "code": "FFZ-5N4-C7M-S78",
                "to_name": "John Doe",
                "to_email": "johndoe@email.com",
                "from_name": "Jane Doe",
                "from_email": "janedoe@email.com",
                "amount": 10,
                "balance": 0,
                "status": "active",
                "template": false,
                "message": "Happy Birthday!",
                "purchase_date": 1520957992,
                "expiry_date": 0
              },
              "type": "object",
              "properties": {
                "to_name": {
                  "description": "Name of the recipient.",
                  "example": "John Doe",
                  "type": "string"
                },
                "to_email": {
                  "description": "Email of the recipient.",
                  "example": "johndoe@email.com",
                  "type": "string"
                },
                "from_name": {
                  "description": "Name of the customer who purchased the gift certificate.",
                  "example": "Jane Doe",
                  "type": "string"
                },
                "from_email": {
                  "description": "Email of the customer who purchased the gift certificate.",
                  "example": "janedoe@email.com",
                  "type": "string"
                },
                "amount": {
                  "description": "Value of the gift certificate.",
                  "example": 10,
                  "type": "string"
                },
                "id": {
                  "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
                  "example": 1,
                  "type": "integer"
                },
                "customer_id": {
                  "description": "The ID of the customer placing the order.",
                  "example": 5,
                  "type": "integer"
                },
                "order_id": {
                  "description": "The ID of the order.",
                  "example": 116,
                  "type": "integer"
                },
                "code": {
                  "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
                  "example": "FFZ-5N4-C7M-S78",
                  "type": "string"
                },
                "balance": {
                  "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
                  "example": 0,
                  "type": "string"
                },
                "status": {
                  "title": "Gift Certificate Status",
                  "example": "active",
                  "x-enum-elements": [
                    {
                      "name": "active",
                      "description": ""
                    },
                    {
                      "name": "pending",
                      "description": ""
                    },
                    {
                      "name": "disabled",
                      "description": ""
                    },
                    {
                      "name": "expired",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "active",
                    "pending",
                    "disabled",
                    "expired"
                  ]
                },
                "template": {
                  "type": "string",
                  "description": "The email theme to use in the message sent to the recipient.",
                  "enum": [
                    "Birthday",
                    "Boy",
                    "Celebration",
                    "Christmas",
                    "General",
                    "Girl"
                  ]
                },
                "message": {
                  "description": "Text that will be sent to the recipient, such as “Congratulations.”",
                  "example": "Happy Birthday!",
                  "type": "string"
                },
                "purchase_date": {
                  "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
                  "example": 1520957992,
                  "type": "string"
                },
                "expiry_date": {
                  "description": "Date on which the gift certificate is set to expire.",
                  "example": 0,
                  "type": "string"
                }
              },
              "required": [
                "to_name",
                "to_email",
                "from_name",
                "from_email",
                "amount"
              ]
            },
            "examples": {
              "application/json": {
                "id": "25",
                "code": "10R-6E3-AO4-RST",
                "amount": "700.0000",
                "status": "active",
                "balance": "700.0000",
                "to_name": "Jane",
                "order_id": "0",
                "template": "false",
                "to_email": "test@test.com",
                "from_name": "Tarzan",
                "from_email": "test1@test.com",
                "customer_id": "0",
                "expiry_date": "0",
                "purchase_date": "1454433240"
              },
              "Response Schema": {
                "to_name": "occaecat sit pariatur",
                "to_email": "ullamco ut fugiat in",
                "from_name": "ut nisi consequat non",
                "from_email": "veniam",
                "amount": "Duis anim dolor Excepteur",
                "id": -29767449,
                "customer_id": -43769798,
                "order_id": -27746535,
                "code": "in adipisicing eu consectetur",
                "balance": "officia eu irure dolor esse",
                "status": {},
                "template": "sed id Ut",
                "message": "qui Duis",
                "purchase_date": "in eu",
                "expiry_date": "deserunt dolor"
              }
            }
          }
        },
        "summary": "Create a Gift Certificate",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "type": "string",
            "required": true,
            "default": "application/json"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "required": true,
            "default": "application/json"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "title": "Gift Certificate",
              "example": {
                "id": 1,
                "customer_id": 5,
                "order_id": 116,
                "code": "FFZ-5N4-C7M-S78",
                "to_name": "John Doe",
                "to_email": "johndoe@email.com",
                "from_name": "Jane Doe",
                "from_email": "janedoe@email.com",
                "amount": 10,
                "balance": 0,
                "status": "active",
                "template": false,
                "message": "Happy Birthday!",
                "purchase_date": 1520957992,
                "expiry_date": 0
              },
              "type": "object",
              "properties": {
                "to_name": {
                  "description": "Name of the recipient.",
                  "example": "John Doe",
                  "type": "string"
                },
                "to_email": {
                  "description": "Email of the recipient.",
                  "example": "johndoe@email.com",
                  "type": "string"
                },
                "from_name": {
                  "description": "Name of the customer who purchased the gift certificate.",
                  "example": "Jane Doe",
                  "type": "string"
                },
                "from_email": {
                  "description": "Email of the customer who purchased the gift certificate.",
                  "example": "janedoe@email.com",
                  "type": "string"
                },
                "amount": {
                  "description": "Value of the gift certificate.",
                  "example": 10,
                  "type": "string"
                },
                "id": {
                  "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
                  "example": 1,
                  "type": "integer"
                },
                "customer_id": {
                  "description": "The ID of the customer placing the order.",
                  "example": 5,
                  "type": "integer"
                },
                "order_id": {
                  "description": "The ID of the order.",
                  "example": 116,
                  "type": "integer"
                },
                "code": {
                  "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
                  "example": "FFZ-5N4-C7M-S78",
                  "type": "string"
                },
                "balance": {
                  "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
                  "example": 0,
                  "type": "string"
                },
                "status": {
                  "title": "Gift Certificate Status",
                  "example": "active",
                  "x-enum-elements": [
                    {
                      "name": "active",
                      "description": ""
                    },
                    {
                      "name": "pending",
                      "description": ""
                    },
                    {
                      "name": "disabled",
                      "description": ""
                    },
                    {
                      "name": "expired",
                      "description": ""
                    }
                  ],
                  "type": "string",
                  "enum": [
                    "active",
                    "pending",
                    "disabled",
                    "expired"
                  ]
                },
                "template": {
                  "type": "string",
                  "description": "The email theme to use in the message sent to the recipient.",
                  "enum": [
                    "Birthday",
                    "Boy",
                    "Celebration",
                    "Christmas",
                    "General",
                    "Girl"
                  ]
                },
                "message": {
                  "description": "Text that will be sent to the recipient, such as “Congratulations.”",
                  "example": "Happy Birthday!",
                  "type": "string"
                },
                "purchase_date": {
                  "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
                  "example": 1520957992,
                  "type": "string"
                },
                "expiry_date": {
                  "description": "Date on which the gift certificate is set to expire.",
                  "example": 0,
                  "type": "string"
                }
              },
              "required": [
                "to_name",
                "to_email",
                "from_name",
                "from_email",
                "amount"
              ]
            },
            "x-examples": {
              "application/json": {
                "code": "10R-6E3-AO4-RST",
                "amount": "700.0000",
                "status": "active",
                "to_name": "Jane",
                "to_email": "test@test.com",
                "from_name": "Tarzan",
                "from_email": "test1@test.com"
              }
            }
          }
        ],
        "description": "Creates a *Gift Certificate*.\n\n\n**Required Fields**\n* to_name\n* to_email\n* from_name\n* from_email\n* amount\n\n**Read Only Fields**\n* id\n* order_id\n* template\n\n**Notes**\n\nWhen a gift certificate is created through the API, no email notification is triggered to the specified recipient.",
        "tags": [
          "Gift Certificates"
        ],
        "operationId": "createAGiftCertificate"
      },
      "delete": {
        "responses": {
          "204": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "summary": "Delete All Gift Certificates",
        "parameters": [
          {
            "in": "header",
            "name": "Accept",
            "type": "string",
            "default": "application/json"
          },
          {
            "in": "header",
            "name": "Content-Type",
            "type": "string",
            "default": "application/json"
          }
        ],
        "tags": [
          "Gift Certificates"
        ],
        "description": "By default, it deletes all *Gift Certificates*.",
        "operationId": "deleteAllGiftCertificates"
      }
    }
  },
  "definitions": {
    "CouponsResource": {
      "title": "Coupon Resource",
      "type": "object",
      "properties": {
        "url": {
          "description": "URL of the coupons for api requests",
          "example": "https://api.bigcommerce.com/stores/{store_hash}/v2/orders/129/coupons",
          "type": "string"
        },
        "resource": {
          "description": "resource of the coupons",
          "example": "/orders/129/coupons",
          "type": "string"
        }
      }
    },
    "Coupon": {
      "title": "Coupon",
      "example": {
        "id": 2,
        "name": "Australia Customers Discount",
        "type": "per_item_discount",
        "amount": 5,
        "min_purchase": 25,
        "expires": "",
        "enabled": true,
        "code": "S2549JM0Y",
        "applies_to": {
          "entity": "categories",
          "ids": [
            "0,3"
          ]
        },
        "num_uses": 0,
        "max_uses": 25,
        "max_uses_per_customer": 0,
        "restricted_to": {
          "countries": [
            "AU"
          ]
        },
        "shipping_methods": [
          "shipping_endicia"
        ],
        "date_created": "Tue, 13 Mar 2018 16:18:59 +0000"
      },
      "type": "object",
      "properties": {
        "id": {
          "description": "The coupon's ID. This is a read-only field; do not set or modify its value in a POST or PUT request.",
          "example": 2,
          "type": "integer"
        },
        "name": {
          "type": "string",
          "description": "The name of the coupon.",
          "example": "Australia Customers Discount"
        },
        "type": {
          "type": "string",
          "enum": [
            "per_item_discount",
            "per_total_discount",
            "shipping_discount",
            "free_shipping",
            "percentage_discount"
          ]
        },
        "amount": {
          "type": "string",
          "description": "The discount to apply to an order, as either an amount or a percentage. This field's usage is determined by the coupon `type`. For example, a `type` of + `percentage_discount` would determine a percentage here.",
          "example": 5
        },
        "min_purchase": {
          "description": "Specifies a minimum value that an order must have before the coupon can be applied to it.",
          "example": 25,
          "type": "string"
        },
        "expires": {
          "description": "Specifies when a coupon expires. Coupons need not have an expiry date – you can also control expiry via + `max_uses` or `max_uses_per_customer`. If you do use this date field, the value must be in <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> format.",
          "type": "string"
        },
        "enabled": {
          "description": "If the coupon is enabled, this field's value is `true`; otherwise, `false`.",
          "example": true,
          "type": "boolean"
        },
        "code": {
          "type": "string",
          "description": "The coupon code that customers will use to receive their discounts. Value must be unique.",
          "example": "S2549JM0Y"
        },
        "applies_to": {
          "type": "object",
          "description": "If it is not included in the PUT request, its existing value on the coupon will be cleared. Also required to be set on the POST request",
          "properties": {
            "id": {
              "type": "integer",
              "description": "ID of either the products or categories"
            },
            "entities": {
              "type": "array",
              "enum": [
                "products",
                "categories"
              ],
              "description": "What the discount applies to. Can be products or categories.",
              "example": "categories",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "num_uses": {
          "description": "Number of times this coupon has been used. This is a read-only field; do not set or modify its value in a POST or PUT request.",
          "example": 0,
          "type": "integer"
        },
        "max_uses": {
          "description": "Maximum number of times this coupon can be used.",
          "example": 25,
          "type": "integer"
        },
        "max_uses_per_customer": {
          "description": "Maximum number of times each customer can use this coupon.",
          "example": 0,
          "type": "integer"
        },
        "restricted_to": {
          "type": "object",
          "properties": {
            "countries": {
              "type": "string"
            }
          }
        },
        "shipping_methods": {
          "description": "This is a list of shipping-method names. A shipping method must be enabled on the store to use it with a coupon. To check which shipping methods are enabled, please use the [List Shipping Methods](/api/v2#list-shipping-methods) endpoint.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "date_created": {
          "description": "Date Created",
          "example": "Tue, 13 Mar 2018 16:18:59 +0000",
          "type": "string"
        }
      },
      "required": [
        "name",
        "type",
        "amount",
        "code",
        "applies_to"
      ]
    },
    "Banner": {
      "title": "Banner",
      "example": {
        "id": 1,
        "name": "Sale Banner",
        "content": "<p> Sale! Tuesday at 9am! </p>",
        "page": "home_page",
        "item_id": 0,
        "location": "top",
        "date_created": 1522169082,
        "date_type": "always",
        "date_from": 0,
        "date_to": 0,
        "visible": 1
      },
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the banner.",
          "example": "Sale Banner",
          "type": "string"
        },
        "content": {
          "description": "Contains the banner content. Returned as a string and includes HTML formatting.",
          "example": "<p> Sale! Tuesday at 9am! </p>",
          "type": "string"
        },
        "page": {
          "type": "string",
          "description": "Page the Banner is located",
          "enum": [
            "home_page",
            "category_page",
            "brand_page",
            "search_page"
          ]
        },
        "location": {
          "type": "string",
          "enum": [
            "top",
            "bottom"
          ],
          "description": "Location on the page",
          "example": "top"
        },
        "date_type": {
          "type": "string",
          "enum": [
            "always",
            "custom"
          ],
          "description": "This specifies whether the banner should be visible during a specific date range."
        },
        "id": {
          "description": "Id of the banner.\nThis is a READ-ONLY field; do not set or modify its value in a POST or PUT request.\n",
          "example": 1,
          "type": "integer"
        },
        "item_id": {
          "description": "If the banner is on a specific category or brand page then the `item_id` will correspond the category or brand id.",
          "example": 0,
          "type": "string"
        },
        "date_created": {
          "description": "Date the banner is created.",
          "example": 1522169082,
          "type": "string",
          "format": "date-time"
        },
        "date_from": {
          "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should become visible on the storefront.",
          "example": 0,
          "type": "string"
        },
        "date_to": {
          "description": "If the datetype is set as 'custom’, this field specifies the date when the banner should stop being visible on the storefront.",
          "example": 0,
          "type": "string"
        },
        "visible": {
          "type": "string",
          "description": "Integer value denoting whether or not the banner is visible on the storefront: 1 = visible; 0 = not visible",
          "example": 1
        }
      },
      "required": [
        "name",
        "content",
        "page",
        "location",
        "date_type"
      ]
    },
    "GiftCertificateStatus": {
      "title": "Gift Certificate Status",
      "example": "active",
      "x-enum-elements": [
        {
          "name": "active",
          "description": ""
        },
        {
          "name": "pending",
          "description": ""
        },
        {
          "name": "disabled",
          "description": ""
        },
        {
          "name": "expired",
          "description": ""
        }
      ],
      "type": "string",
      "enum": [
        "active",
        "pending",
        "disabled",
        "expired"
      ]
    },
    "CountResponse": {
      "title": "Count Response",
      "example": {
        "count": 27
      },
      "type": "object",
      "properties": {
        "count": {
          "description": "",
          "example": 27,
          "type": "number"
        }
      }
    },
    "GiftCertificate": {
      "title": "Gift Certificate",
      "example": {
        "id": 1,
        "customer_id": 5,
        "order_id": 116,
        "code": "FFZ-5N4-C7M-S78",
        "to_name": "John Doe",
        "to_email": "johndoe@email.com",
        "from_name": "Jane Doe",
        "from_email": "janedoe@email.com",
        "amount": 10,
        "balance": 0,
        "status": "active",
        "template": false,
        "message": "Happy Birthday!",
        "purchase_date": 1520957992,
        "expiry_date": 0
      },
      "type": "object",
      "properties": {
        "to_name": {
          "description": "Name of the recipient.",
          "example": "John Doe",
          "type": "string"
        },
        "to_email": {
          "description": "Email of the recipient.",
          "example": "johndoe@email.com",
          "type": "string"
        },
        "from_name": {
          "description": "Name of the customer who purchased the gift certificate.",
          "example": "Jane Doe",
          "type": "string"
        },
        "from_email": {
          "description": "Email of the customer who purchased the gift certificate.",
          "example": "janedoe@email.com",
          "type": "string"
        },
        "amount": {
          "description": "Value of the gift certificate.",
          "example": 10,
          "type": "string"
        },
        "id": {
          "description": "The ID of the gift certificate.This is a READ-ONLY field; do not set or modify its value in a POST or PUT request.",
          "example": 1,
          "type": "integer"
        },
        "customer_id": {
          "description": "The ID of the customer placing the order.",
          "example": 5,
          "type": "integer"
        },
        "order_id": {
          "description": "The ID of the order.",
          "example": 116,
          "type": "integer"
        },
        "code": {
          "description": "A unique string that the customer can input to redeem the gift certificate. If this field is not set, a value will be generated.",
          "example": "FFZ-5N4-C7M-S78",
          "type": "string"
        },
        "balance": {
          "description": "Remaining value of the gift certificate. If not set, will default to the amount.",
          "example": 0,
          "type": "string"
        },
        "status": {
          "title": "Gift Certificate Status",
          "example": "active",
          "x-enum-elements": [
            {
              "name": "active",
              "description": ""
            },
            {
              "name": "pending",
              "description": ""
            },
            {
              "name": "disabled",
              "description": ""
            },
            {
              "name": "expired",
              "description": ""
            }
          ],
          "type": "string",
          "enum": [
            "active",
            "pending",
            "disabled",
            "expired"
          ]
        },
        "template": {
          "type": "string",
          "description": "The email theme to use in the message sent to the recipient.",
          "enum": [
            "Birthday",
            "Boy",
            "Celebration",
            "Christmas",
            "General",
            "Girl"
          ]
        },
        "message": {
          "description": "Text that will be sent to the recipient, such as “Congratulations.”",
          "example": "Happy Birthday!",
          "type": "string"
        },
        "purchase_date": {
          "description": "Date the gift certificate was purchased. If not assigned, this will be set to today’s date.",
          "example": 1520957992,
          "type": "string"
        },
        "expiry_date": {
          "description": "Date on which the gift certificate is set to expire.",
          "example": 0,
          "type": "string"
        }
      },
      "required": [
        "to_name",
        "to_email",
        "from_name",
        "from_email",
        "amount"
      ]
    }
  },
  "tags": [
    {
      "name": "Banners"
    },
    {
      "name": "Coupons"
    },
    {
      "name": "Gift Certificates"
    }
  ],
  "securityDefinitions": {
    "X-Auth-Token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    },
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header"
    }
  },
  "security": [
    {
      "X-Auth-Token": []
    },
    {
      "X-Auth-Client": []
    }
  ],
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true
    }
  }
}