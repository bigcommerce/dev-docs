{
  "swagger": "2.0",
  "info": {
    "title": "Order Transactions API",
    "version": "",
    "description": "### Order Transactions\n\nThe Transactions API returns granular details about the payment instruments used to pay for an order. Depending on the payment method used, different details will be available. Not all credit card payment gateways will return full card details or all CVV/fraud response details. This is primarily used to get detailed gateway response information for credit card transactions, however it will also return any available information about digital wallet payments, as well as details about orders paid (partially or in full) via a gift certificate or store credit. \n\nThe [test payment gateway](https://forum.bigcommerce.com/s/article/Testing-Shipping-Tax-and-Payment-Settings#test-payment) available in the BigCommerce control panel does not return any payment information.\n\nFor an API for more general Order information, such as the information needed to create a new Order, or get all the details of an order for fulfillment purposes, see the [Orders API](/api-reference/orders/orders-api).",
    "termsOfService": "",
    "license": {
      "name": ""
    }
  },
  "host": "api.bigcommerce.com",
  "basePath": "/stores/{store_hash}/v3",
  "tags": [
    {
      "name": "Orders",
      "description": "BigCommerce Orders API Definition."
    }
  ],
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "paths": {
    "/orders/{order_id}/transactions": {
      "parameters": [
        {
          "name": "order_id",
          "in": "path",
          "description": "The ID of the `Order` to which the transactions belong.\n",
          "required": true,
          "type": "integer"
        }
      ],
      "get": {
        "tags": [
          "Orders"
        ],
        "description": "Returns transations related to an order.\n\n**Notes**\nDepending on the payment method used, different details will be available. Not all credit card payment gateways will return full card details or all CVV/fraud response details.\n\nTest Payment Gateway does not return any information.",
        "operationId": "getTransactions",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "description": "Response payload for the BigCommerce Order Transactions API.",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "description": "A BigCommerce Transaction object describes a single transaction.",
                    "allOf": [
                      {
                        "type": "object",
                        "title": "Transaction Base",
                        "properties": {
                          "event": {
                            "type": "string",
                            "description": "Store event that created the transaction.\n",
                            "enum": [
                              "purchase",
                              "authorization",
                              "capture",
                              "refund",
                              "void",
                              "pending",
                              "settled"
                            ]
                          },
                          "method": {
                            "type": "string",
                            "description": "The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site (e.g., PayPal); `offline` - payment method that takes place offline.\n",
                            "enum": [
                              "credit_card",
                              "electronic_wallet",
                              "gift_certificate",
                              "store_credit",
                              "apple_pay_card",
                              "apple_pay_token",
                              "token",
                              "custom",
                              "offsite",
                              "offline",
                              "nonce"
                            ]
                          },
                          "amount": {
                            "type": "number",
                            "format": "float",
                            "description": "Amount of money in the transaction.\n"
                          },
                          "currency": {
                            "type": "string",
                            "format": "ISO-4217",
                            "description": "Currency used for the transaction.\n"
                          },
                          "gateway": {
                            "type": "string",
                            "description": "The payment gateway, where applicable.\n",
                            "enum": [
                              "2checkout",
                              "adyen",
                              "amazon",
                              "authorizenet",
                              "bankdeposit",
                              "braintree",
                              "cheque",
                              "cod",
                              "custom",
                              "firstdatagge4",
                              "giftcertificate",
                              "hps",
                              "instore",
                              "klarna",
                              "migs",
                              "moneyorder",
                              "nmi",
                              "paypalexpress",
                              "paypalpaymentsprous",
                              "paypalpaymentsprouk",
                              "plugnpay",
                              "qbmsv2",
                              "securenet",
                              "square",
                              "storecredit",
                              "stripe",
                              "testgateway",
                              "usaepay"
                            ]
                          },
                          "gateway_transaction_id": {
                            "description": "The transaction ID returned by the payment gateway for this transaction item.\n",
                            "type": "string"
                          },
                          "date_created": {
                            "description": "The datetime of the transaction.\n",
                            "type": "string",
                            "format": "date-time"
                          },
                          "test": {
                            "type": "boolean",
                            "description": "True if the transaction performed was a test, or if the gateway is in test mode.\n"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the transaction.\n",
                            "enum": [
                              "ok",
                              "error"
                            ]
                          },
                          "fraud_review": {
                            "type": "boolean",
                            "description": "Result of gateway fraud review, if any. Default is `false`.\n"
                          },
                          "reference_transaction_id": {
                            "type": "integer",
                            "description": "Identifier for an existing transaction upon which this transaction acts.\n"
                          },
                          "offline": {
                            "type": "object",
                            "description": "Offline payment (e.g., check or purchase order).",
                            "properties": {
                              "display_name": {
                                "description": "Display name for the offline payment.\n",
                                "type": "string"
                              }
                            },
                            "title": "Offline"
                          },
                          "custom": {
                            "type": "object",
                            "description": "Custom payment from manual order.",
                            "properties": {
                              "payment_method": {
                                "description": "Text entered for the payment method in the control panel.\n",
                                "type": "string"
                              }
                            },
                            "title": "Custom"
                          },
                          "": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "event",
                          "method",
                          "amount",
                          "currency",
                          "gateway"
                        ]
                      },
                      {
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Unique identifier for the transaction.\n"
                          },
                          "order_id": {
                            "type": "string",
                            "description": "Identifier for the BigCommerce Order with which this transaction is associated.\n"
                          },
                          "date_created": {
                            "description": "The datetime of the transaction.\n",
                            "type": "string",
                            "format": "date-time"
                          },
                          "payment_instrument_token": {
                            "type": "string",
                            "description": "This field contains internal BigPay token for stored card that is then mapped to the actual third-party token. We currently do not offer a way to get third party tokens.These tokens are read-only and do not return any information about the payment."
                          },
                          "avs_result": {
                            "description": "Address Verification Service (AVS) result from the payment gateway.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "AVS code.",
                                "type": "string"
                              },
                              "message": {
                                "description": "AVS message.",
                                "type": "string"
                              },
                              "street_match": {
                                "description": "AVS Code for street matching result.",
                                "type": "string"
                              },
                              "postal_match": {
                                "description": "AVS Code for postal matching result.",
                                "type": "string"
                              }
                            },
                            "title": "AVS Results"
                          },
                          "cvv_result": {
                            "description": "Card Verification Value result from the payment gateway.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "CVV code.",
                                "type": "string"
                              },
                              "message": {
                                "description": "CVV message.",
                                "type": "string"
                              }
                            },
                            "title": "CVV Result"
                          },
                          "credit_card": {
                            "type": "object",
                            "description": "A credit-card model.",
                            "properties": {
                              "card_type": {
                                "description": "The credit-card type: Visa, MasterCard, etc.\n",
                                "type": "string"
                              },
                              "card_iin": {
                                "description": "The IIN of a credit-card number.\n",
                                "type": "string"
                              },
                              "card_last4": {
                                "description": "The last 4 digits of a credit-card number.\n",
                                "type": "string"
                              },
                              "card_expiry_month": {
                                "description": "The expiry month of a credit-card.\n",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "card_expiry_year": {
                                "description": "The expiry year of a credit-card.\n",
                                "type": "integer"
                              }
                            },
                            "title": "Credit Card"
                          },
                          "gift_certificate": {
                            "type": "object",
                            "description": "A gift-certificate model.",
                            "title": "Gift Certificate",
                            "properties": {
                              "code": {
                                "description": "The gift-certificate code.\n",
                                "type": "string",
                                "example": "MB345"
                              },
                              "original_balance": {
                                "description": "The balance on a gift certificate when it was purchased.\n",
                                "type": "number",
                                "format": "float",
                                "example": 100
                              },
                              "starting_balance": {
                                "description": "The balance on a gift certificate at the time of this purchase.\n",
                                "type": "number",
                                "format": "float",
                                "example": 100
                              },
                              "remaining_balance": {
                                "description": "The remaining balance on a gift certificate.\n",
                                "type": "number",
                                "format": "float",
                                "example": 35.42
                              },
                              "status": {
                                "description": "The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.\n",
                                "type": "string",
                                "enum": [
                                  "active",
                                  "pending",
                                  "disabled",
                                  "expired"
                                ]
                              }
                            }
                          },
                          "store_credit": {
                            "type": "object",
                            "description": "A store credit model.\n",
                            "properties": {
                              "remaining_balance": {
                                "description": "Remaining balance of shopper's store credit.\n",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    ],
                    "title": "Transaction",
                    "type": "object"
                  }
                },
                "meta": {
                  "type": "object",
                  "description": "Data about the response, including pagination and collection totals.",
                  "properties": {
                    "pagination": {
                      "type": "object",
                      "description": "Data about the response, including pagination and collection totals.",
                      "title": "Pagination",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of items in the result set.\n",
                          "example": 36
                        },
                        "count": {
                          "type": "integer",
                          "description": "Total number of items in the collection response.\n",
                          "example": 36
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                          "example": 50
                        },
                        "current_page": {
                          "type": "integer",
                          "description": "The page you are currently on within the collection.\n",
                          "example": 1
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "The total number of pages in the collection.\n",
                          "example": 1
                        },
                        "links": {
                          "type": "object",
                          "description": "Pagination links for the previous and next parts of the whole collection.\n",
                          "properties": {
                            "previous": {
                              "type": "string",
                              "description": "Link to the previous page returned in the response.\n"
                            },
                            "current": {
                              "type": "string",
                              "description": "Link to the current page returned in the response.\n",
                              "example": "?page=1&limit=50"
                            },
                            "next": {
                              "type": "string",
                              "description": "Link to the next page returned in the response.\n"
                            }
                          }
                        }
                      }
                    }
                  },
                  "title": "Collection Meta"
                }
              },
              "title": "Transaction Collection Response"
            },
            "examples": {
              "Square Payment Gateway": {
                "data": [
                  {
                    "id": 85926313,
                    "order_id": "121",
                    "event": "purchase",
                    "method": "nonce",
                    "amount": 1,
                    "currency": "USD",
                    "gateway": "squarev2",
                    "gateway_transaction_id": "pN5Kd7R9ilEI2ygBawCy7tMF|qwnAFAxRZ7tYRtIpZULg1yMF",
                    "status": "ok",
                    "test": false,
                    "fraud_review": false,
                    "reference_transaction_id": {},
                    "date_created": "2018-05-08T15:06:12+00:00",
                    "avs_result": {
                      "code": "",
                      "message": "",
                      "street_match": "",
                      "postal_match": ""
                    },
                    "cvv_result": {
                      "code": "",
                      "message": ""
                    },
                    "credit_card": {},
                    "gift_certificate": {},
                    "store_credit": {},
                    "offline": {},
                    "custom": {},
                    "payment_instrument_token": {}
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              },
              "Pay In Store": {
                "data": [
                  {
                    "id": 100287014,
                    "order_id": "176",
                    "event": "pending",
                    "method": "offline",
                    "amount": 25,
                    "currency": "USD",
                    "gateway": "instore",
                    "gateway_transaction_id": {},
                    "status": "ok",
                    "test": false,
                    "fraud_review": false,
                    "reference_transaction_id": {},
                    "date_created": "2018-09-05T14:02:10+00:00",
                    "avs_result": {},
                    "cvv_result": {},
                    "credit_card": {},
                    "gift_certificate": {},
                    "store_credit": {},
                    "offline": {
                      "display_name": "Pay in Store"
                    },
                    "custom": {},
                    "payment_instrument_token": {}
                  }
                ],
                "meta": {
                  "pagination": {
                    "total": 1,
                    "count": 1,
                    "per_page": 50,
                    "current_page": 1,
                    "total_pages": 1,
                    "links": {
                      "current": "?page=1&limit=50"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "No content found to fulfill request.\n",
            "schema": {
              "description": "No-content response for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "204 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the situation.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "No Content"
            }
          },
          "404": {
            "description": "The resource was not found.\n",
            "schema": {
              "description": "Error payload for the BigCommerce API.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "404 HTTP status code.\n",
                  "type": "integer"
                },
                "title": {
                  "description": "The error title describing the particular error.",
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "instance": {
                  "type": "string"
                }
              },
              "title": "Not Found"
            }
          }
        },
        "summary": "Get Transactions",
        "parameters": [
          {
            "name": "order_id",
            "in": "path",
            "description": "The ID of the `Order` to which the transactions belong.\n",
            "required": true,
            "type": "integer"
          },
          {
            "in": "header",
            "type": "string",
            "name": "Accept",
            "default": "application/json"
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json"
          }
        ]
      }
    }
  },
  "parameters": {
    "OrderIdParam": {
      "name": "order_id",
      "in": "path",
      "description": "The ID of the `Order` to which the transactions belong.\n",
      "required": true,
      "type": "integer"
    },
    "Accept": {
      "in": "header",
      "type": "string",
      "name": "Accept",
      "default": "application/json"
    },
    "Content-Type": {
      "name": "Content-Type",
      "in": "header",
      "type": "string",
      "default": "application/json"
    }
  },
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header"
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "name": "X-Auth-Token",
      "in": "header"
    }
  },
  "definitions": {
    "CollectionMeta": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.",
      "properties": {
        "pagination": {
          "type": "object",
          "description": "Data about the response, including pagination and collection totals.",
          "title": "Pagination",
          "properties": {
            "total": {
              "type": "integer",
              "description": "Total number of items in the result set.\n",
              "example": 36
            },
            "count": {
              "type": "integer",
              "description": "Total number of items in the collection response.\n",
              "example": 36
            },
            "per_page": {
              "type": "integer",
              "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
              "example": 50
            },
            "current_page": {
              "type": "integer",
              "description": "The page you are currently on within the collection.\n",
              "example": 1
            },
            "total_pages": {
              "type": "integer",
              "description": "The total number of pages in the collection.\n",
              "example": 1
            },
            "links": {
              "type": "object",
              "description": "Pagination links for the previous and next parts of the whole collection.\n",
              "properties": {
                "previous": {
                  "type": "string",
                  "description": "Link to the previous page returned in the response.\n"
                },
                "current": {
                  "type": "string",
                  "description": "Link to the current page returned in the response.\n",
                  "example": "?page=1&limit=50"
                },
                "next": {
                  "type": "string",
                  "description": "Link to the next page returned in the response.\n"
                }
              }
            }
          }
        }
      },
      "title": "Collection Meta"
    },
    "Pagination": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.",
      "title": "Pagination",
      "properties": {
        "total": {
          "type": "integer",
          "description": "Total number of items in the result set.\n",
          "example": 36
        },
        "count": {
          "type": "integer",
          "description": "Total number of items in the collection response.\n",
          "example": 36
        },
        "per_page": {
          "type": "integer",
          "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
          "example": 50
        },
        "current_page": {
          "type": "integer",
          "description": "The page you are currently on within the collection.\n",
          "example": 1
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages in the collection.\n",
          "example": 1
        },
        "links": {
          "type": "object",
          "description": "Pagination links for the previous and next parts of the whole collection.\n",
          "properties": {
            "previous": {
              "type": "string",
              "description": "Link to the previous page returned in the response.\n"
            },
            "current": {
              "type": "string",
              "description": "Link to the current page returned in the response.\n",
              "example": "?page=1&limit=50"
            },
            "next": {
              "type": "string",
              "description": "Link to the next page returned in the response.\n"
            }
          }
        }
      }
    },
    "Meta": {
      "type": "object",
      "title": "Meta",
      "properties": {
        "meta": {
          "type": "object",
          "description": "Data about the response, including pagination and collection totals.",
          "title": "Pagination",
          "properties": {
            "total": {
              "type": "integer",
              "description": "Total number of items in the result set.\n",
              "example": 36
            },
            "count": {
              "type": "integer",
              "description": "Total number of items in the collection response.\n",
              "example": 36
            },
            "per_page": {
              "type": "integer",
              "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
              "example": 50
            },
            "current_page": {
              "type": "integer",
              "description": "The page you are currently on within the collection.\n",
              "example": 1
            },
            "total_pages": {
              "type": "integer",
              "description": "The total number of pages in the collection.\n",
              "example": 1
            },
            "links": {
              "type": "object",
              "description": "Pagination links for the previous and next parts of the whole collection.\n",
              "properties": {
                "previous": {
                  "type": "string",
                  "description": "Link to the previous page returned in the response.\n"
                },
                "current": {
                  "type": "string",
                  "description": "Link to the current page returned in the response.\n",
                  "example": "?page=1&limit=50"
                },
                "next": {
                  "type": "string",
                  "description": "Link to the next page returned in the response.\n"
                }
              }
            }
          }
        }
      }
    },
    "ErrorResponse": {
      "allOf": [
        {
          "type": "object",
          "description": "Error payload for the BigCommerce API.\n",
          "properties": {
            "status": {
              "description": "The HTTP status code.\n",
              "type": "integer"
            },
            "title": {
              "description": "The error title describing the particular error.\n",
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "instance": {
              "type": "string"
            }
          },
          "title": "Base Error"
        },
        {
          "type": "object",
          "properties": {
            "errors": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              },
              "title": "DetailedErrors"
            }
          }
        }
      ],
      "title": "Error Response"
    },
    "BaseError": {
      "type": "object",
      "description": "Error payload for the BigCommerce API.\n",
      "properties": {
        "status": {
          "description": "The HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the particular error.\n",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "Base Error"
    },
    "DetailedErrors": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "title": "DetailedErrors"
    },
    "TransactionPost": {
      "type": "object",
      "title": "Transaction Base",
      "properties": {
        "event": {
          "type": "string",
          "description": "Store event that created the transaction.\n",
          "enum": [
            "purchase",
            "authorization",
            "capture",
            "refund",
            "void",
            "pending",
            "settled"
          ]
        },
        "method": {
          "type": "string",
          "description": "The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site (e.g., PayPal); `offline` - payment method that takes place offline.\n",
          "enum": [
            "credit_card",
            "electronic_wallet",
            "gift_certificate",
            "store_credit",
            "apple_pay_card",
            "apple_pay_token",
            "token",
            "custom",
            "offsite",
            "offline",
            "nonce"
          ]
        },
        "amount": {
          "type": "number",
          "format": "float",
          "description": "Amount of money in the transaction.\n"
        },
        "currency": {
          "type": "string",
          "format": "ISO-4217",
          "description": "Currency used for the transaction.\n"
        },
        "gateway": {
          "type": "string",
          "description": "The payment gateway, where applicable.\n",
          "enum": [
            "2checkout",
            "adyen",
            "amazon",
            "authorizenet",
            "bankdeposit",
            "braintree",
            "cheque",
            "cod",
            "custom",
            "firstdatagge4",
            "giftcertificate",
            "hps",
            "instore",
            "klarna",
            "migs",
            "moneyorder",
            "nmi",
            "paypalexpress",
            "paypalpaymentsprous",
            "paypalpaymentsprouk",
            "plugnpay",
            "qbmsv2",
            "securenet",
            "square",
            "storecredit",
            "stripe",
            "testgateway",
            "usaepay"
          ]
        },
        "gateway_transaction_id": {
          "description": "The transaction ID returned by the payment gateway for this transaction item.\n",
          "type": "string"
        },
        "date_created": {
          "description": "The datetime of the transaction.\n",
          "type": "string",
          "format": "date-time"
        },
        "test": {
          "type": "boolean",
          "description": "True if the transaction performed was a test, or if the gateway is in test mode.\n"
        },
        "status": {
          "type": "string",
          "description": "Status of the transaction.\n",
          "enum": [
            "ok",
            "error"
          ]
        },
        "fraud_review": {
          "type": "boolean",
          "description": "Result of gateway fraud review, if any. Default is `false`.\n"
        },
        "reference_transaction_id": {
          "type": "integer",
          "description": "Identifier for an existing transaction upon which this transaction acts.\n"
        },
        "offline": {
          "type": "object",
          "description": "Offline payment (e.g., check or purchase order).",
          "properties": {
            "display_name": {
              "description": "Display name for the offline payment.\n",
              "type": "string"
            }
          },
          "title": "Offline"
        },
        "custom": {
          "type": "object",
          "description": "Custom payment from manual order.",
          "properties": {
            "payment_method": {
              "description": "Text entered for the payment method in the control panel.\n",
              "type": "string"
            }
          },
          "title": "Custom"
        },
        "": {
          "type": "string"
        }
      },
      "required": [
        "event",
        "method",
        "amount",
        "currency",
        "gateway"
      ]
    },
    "NotFound": {
      "description": "Error payload for the BigCommerce API.",
      "type": "object",
      "properties": {
        "status": {
          "description": "404 HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the particular error.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "Not Found"
    },
    "TransactionResponse": {
      "type": "object",
      "description": "Response payload for the BigCommerce Order Transactions API single transaction.\n",
      "properties": {
        "data": {
          "description": "A BigCommerce Transaction object describes a single transaction.",
          "allOf": [
            {
              "type": "object",
              "title": "Transaction Base",
              "properties": {
                "event": {
                  "type": "string",
                  "description": "Store event that created the transaction.\n",
                  "enum": [
                    "purchase",
                    "authorization",
                    "capture",
                    "refund",
                    "void",
                    "pending",
                    "settled"
                  ]
                },
                "method": {
                  "type": "string",
                  "description": "The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site (e.g., PayPal); `offline` - payment method that takes place offline.\n",
                  "enum": [
                    "credit_card",
                    "electronic_wallet",
                    "gift_certificate",
                    "store_credit",
                    "apple_pay_card",
                    "apple_pay_token",
                    "token",
                    "custom",
                    "offsite",
                    "offline",
                    "nonce"
                  ]
                },
                "amount": {
                  "type": "number",
                  "format": "float",
                  "description": "Amount of money in the transaction.\n"
                },
                "currency": {
                  "type": "string",
                  "format": "ISO-4217",
                  "description": "Currency used for the transaction.\n"
                },
                "gateway": {
                  "type": "string",
                  "description": "The payment gateway, where applicable.\n",
                  "enum": [
                    "2checkout",
                    "adyen",
                    "amazon",
                    "authorizenet",
                    "bankdeposit",
                    "braintree",
                    "cheque",
                    "cod",
                    "custom",
                    "firstdatagge4",
                    "giftcertificate",
                    "hps",
                    "instore",
                    "klarna",
                    "migs",
                    "moneyorder",
                    "nmi",
                    "paypalexpress",
                    "paypalpaymentsprous",
                    "paypalpaymentsprouk",
                    "plugnpay",
                    "qbmsv2",
                    "securenet",
                    "square",
                    "storecredit",
                    "stripe",
                    "testgateway",
                    "usaepay"
                  ]
                },
                "gateway_transaction_id": {
                  "description": "The transaction ID returned by the payment gateway for this transaction item.\n",
                  "type": "string"
                },
                "date_created": {
                  "description": "The datetime of the transaction.\n",
                  "type": "string",
                  "format": "date-time"
                },
                "test": {
                  "type": "boolean",
                  "description": "True if the transaction performed was a test, or if the gateway is in test mode.\n"
                },
                "status": {
                  "type": "string",
                  "description": "Status of the transaction.\n",
                  "enum": [
                    "ok",
                    "error"
                  ]
                },
                "fraud_review": {
                  "type": "boolean",
                  "description": "Result of gateway fraud review, if any. Default is `false`.\n"
                },
                "reference_transaction_id": {
                  "type": "integer",
                  "description": "Identifier for an existing transaction upon which this transaction acts.\n"
                },
                "offline": {
                  "type": "object",
                  "description": "Offline payment (e.g., check or purchase order).",
                  "properties": {
                    "display_name": {
                      "description": "Display name for the offline payment.\n",
                      "type": "string"
                    }
                  },
                  "title": "Offline"
                },
                "custom": {
                  "type": "object",
                  "description": "Custom payment from manual order.",
                  "properties": {
                    "payment_method": {
                      "description": "Text entered for the payment method in the control panel.\n",
                      "type": "string"
                    }
                  },
                  "title": "Custom"
                },
                "": {
                  "type": "string"
                }
              },
              "required": [
                "event",
                "method",
                "amount",
                "currency",
                "gateway"
              ]
            },
            {
              "properties": {
                "id": {
                  "type": "integer",
                  "description": "Unique identifier for the transaction.\n"
                },
                "order_id": {
                  "type": "string",
                  "description": "Identifier for the BigCommerce Order with which this transaction is associated.\n"
                },
                "date_created": {
                  "description": "The datetime of the transaction.\n",
                  "type": "string",
                  "format": "date-time"
                },
                "payment_instrument_token": {
                  "type": "string",
                  "description": "This field contains internal BigPay token for stored card that is then mapped to the actual third-party token. We currently do not offer a way to get third party tokens.These tokens are read-only and do not return any information about the payment."
                },
                "avs_result": {
                  "description": "Address Verification Service (AVS) result from the payment gateway.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "AVS code.",
                      "type": "string"
                    },
                    "message": {
                      "description": "AVS message.",
                      "type": "string"
                    },
                    "street_match": {
                      "description": "AVS Code for street matching result.",
                      "type": "string"
                    },
                    "postal_match": {
                      "description": "AVS Code for postal matching result.",
                      "type": "string"
                    }
                  },
                  "title": "AVS Results"
                },
                "cvv_result": {
                  "description": "Card Verification Value result from the payment gateway.",
                  "type": "object",
                  "properties": {
                    "code": {
                      "description": "CVV code.",
                      "type": "string"
                    },
                    "message": {
                      "description": "CVV message.",
                      "type": "string"
                    }
                  },
                  "title": "CVV Result"
                },
                "credit_card": {
                  "type": "object",
                  "description": "A credit-card model.",
                  "properties": {
                    "card_type": {
                      "description": "The credit-card type: Visa, MasterCard, etc.\n",
                      "type": "string"
                    },
                    "card_iin": {
                      "description": "The IIN of a credit-card number.\n",
                      "type": "string"
                    },
                    "card_last4": {
                      "description": "The last 4 digits of a credit-card number.\n",
                      "type": "string"
                    },
                    "card_expiry_month": {
                      "description": "The expiry month of a credit-card.\n",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 12
                    },
                    "card_expiry_year": {
                      "description": "The expiry year of a credit-card.\n",
                      "type": "integer"
                    }
                  },
                  "title": "Credit Card"
                },
                "gift_certificate": {
                  "type": "object",
                  "description": "A gift-certificate model.",
                  "title": "Gift Certificate",
                  "properties": {
                    "code": {
                      "description": "The gift-certificate code.\n",
                      "type": "string",
                      "example": "MB345"
                    },
                    "original_balance": {
                      "description": "The balance on a gift certificate when it was purchased.\n",
                      "type": "number",
                      "format": "float",
                      "example": 100
                    },
                    "starting_balance": {
                      "description": "The balance on a gift certificate at the time of this purchase.\n",
                      "type": "number",
                      "format": "float",
                      "example": 100
                    },
                    "remaining_balance": {
                      "description": "The remaining balance on a gift certificate.\n",
                      "type": "number",
                      "format": "float",
                      "example": 35.42
                    },
                    "status": {
                      "description": "The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.\n",
                      "type": "string",
                      "enum": [
                        "active",
                        "pending",
                        "disabled",
                        "expired"
                      ]
                    }
                  }
                },
                "store_credit": {
                  "type": "object",
                  "description": "A store credit model.\n",
                  "properties": {
                    "remaining_balance": {
                      "description": "Remaining balance of shopper's store credit.\n",
                      "type": "string"
                    }
                  }
                }
              }
            }
          ],
          "title": "Transaction",
          "type": "object"
        },
        "meta": {
          "type": "object",
          "description": "May be used in the future"
        }
      },
      "title": "Transaction Response"
    },
    "TransactionCollectionResponse": {
      "type": "object",
      "description": "Response payload for the BigCommerce Order Transactions API.",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "description": "A BigCommerce Transaction object describes a single transaction.",
            "allOf": [
              {
                "type": "object",
                "title": "Transaction Base",
                "properties": {
                  "event": {
                    "type": "string",
                    "description": "Store event that created the transaction.\n",
                    "enum": [
                      "purchase",
                      "authorization",
                      "capture",
                      "refund",
                      "void",
                      "pending",
                      "settled"
                    ]
                  },
                  "method": {
                    "type": "string",
                    "description": "The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site (e.g., PayPal); `offline` - payment method that takes place offline.\n",
                    "enum": [
                      "credit_card",
                      "electronic_wallet",
                      "gift_certificate",
                      "store_credit",
                      "apple_pay_card",
                      "apple_pay_token",
                      "token",
                      "custom",
                      "offsite",
                      "offline",
                      "nonce"
                    ]
                  },
                  "amount": {
                    "type": "number",
                    "format": "float",
                    "description": "Amount of money in the transaction.\n"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO-4217",
                    "description": "Currency used for the transaction.\n"
                  },
                  "gateway": {
                    "type": "string",
                    "description": "The payment gateway, where applicable.\n",
                    "enum": [
                      "2checkout",
                      "adyen",
                      "amazon",
                      "authorizenet",
                      "bankdeposit",
                      "braintree",
                      "cheque",
                      "cod",
                      "custom",
                      "firstdatagge4",
                      "giftcertificate",
                      "hps",
                      "instore",
                      "klarna",
                      "migs",
                      "moneyorder",
                      "nmi",
                      "paypalexpress",
                      "paypalpaymentsprous",
                      "paypalpaymentsprouk",
                      "plugnpay",
                      "qbmsv2",
                      "securenet",
                      "square",
                      "storecredit",
                      "stripe",
                      "testgateway",
                      "usaepay"
                    ]
                  },
                  "gateway_transaction_id": {
                    "description": "The transaction ID returned by the payment gateway for this transaction item.\n",
                    "type": "string"
                  },
                  "date_created": {
                    "description": "The datetime of the transaction.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "test": {
                    "type": "boolean",
                    "description": "True if the transaction performed was a test, or if the gateway is in test mode.\n"
                  },
                  "status": {
                    "type": "string",
                    "description": "Status of the transaction.\n",
                    "enum": [
                      "ok",
                      "error"
                    ]
                  },
                  "fraud_review": {
                    "type": "boolean",
                    "description": "Result of gateway fraud review, if any. Default is `false`.\n"
                  },
                  "reference_transaction_id": {
                    "type": "integer",
                    "description": "Identifier for an existing transaction upon which this transaction acts.\n"
                  },
                  "offline": {
                    "type": "object",
                    "description": "Offline payment (e.g., check or purchase order).",
                    "properties": {
                      "display_name": {
                        "description": "Display name for the offline payment.\n",
                        "type": "string"
                      }
                    },
                    "title": "Offline"
                  },
                  "custom": {
                    "type": "object",
                    "description": "Custom payment from manual order.",
                    "properties": {
                      "payment_method": {
                        "description": "Text entered for the payment method in the control panel.\n",
                        "type": "string"
                      }
                    },
                    "title": "Custom"
                  },
                  "": {
                    "type": "string"
                  }
                },
                "required": [
                  "event",
                  "method",
                  "amount",
                  "currency",
                  "gateway"
                ]
              },
              {
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "Unique identifier for the transaction.\n"
                  },
                  "order_id": {
                    "type": "string",
                    "description": "Identifier for the BigCommerce Order with which this transaction is associated.\n"
                  },
                  "date_created": {
                    "description": "The datetime of the transaction.\n",
                    "type": "string",
                    "format": "date-time"
                  },
                  "payment_instrument_token": {
                    "type": "string",
                    "description": "This field contains internal BigPay token for stored card that is then mapped to the actual third-party token. We currently do not offer a way to get third party tokens.These tokens are read-only and do not return any information about the payment."
                  },
                  "avs_result": {
                    "description": "Address Verification Service (AVS) result from the payment gateway.",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "AVS code.",
                        "type": "string"
                      },
                      "message": {
                        "description": "AVS message.",
                        "type": "string"
                      },
                      "street_match": {
                        "description": "AVS Code for street matching result.",
                        "type": "string"
                      },
                      "postal_match": {
                        "description": "AVS Code for postal matching result.",
                        "type": "string"
                      }
                    },
                    "title": "AVS Results"
                  },
                  "cvv_result": {
                    "description": "Card Verification Value result from the payment gateway.",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "CVV code.",
                        "type": "string"
                      },
                      "message": {
                        "description": "CVV message.",
                        "type": "string"
                      }
                    },
                    "title": "CVV Result"
                  },
                  "credit_card": {
                    "type": "object",
                    "description": "A credit-card model.",
                    "properties": {
                      "card_type": {
                        "description": "The credit-card type: Visa, MasterCard, etc.\n",
                        "type": "string"
                      },
                      "card_iin": {
                        "description": "The IIN of a credit-card number.\n",
                        "type": "string"
                      },
                      "card_last4": {
                        "description": "The last 4 digits of a credit-card number.\n",
                        "type": "string"
                      },
                      "card_expiry_month": {
                        "description": "The expiry month of a credit-card.\n",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 12
                      },
                      "card_expiry_year": {
                        "description": "The expiry year of a credit-card.\n",
                        "type": "integer"
                      }
                    },
                    "title": "Credit Card"
                  },
                  "gift_certificate": {
                    "type": "object",
                    "description": "A gift-certificate model.",
                    "title": "Gift Certificate",
                    "properties": {
                      "code": {
                        "description": "The gift-certificate code.\n",
                        "type": "string",
                        "example": "MB345"
                      },
                      "original_balance": {
                        "description": "The balance on a gift certificate when it was purchased.\n",
                        "type": "number",
                        "format": "float",
                        "example": 100
                      },
                      "starting_balance": {
                        "description": "The balance on a gift certificate at the time of this purchase.\n",
                        "type": "number",
                        "format": "float",
                        "example": 100
                      },
                      "remaining_balance": {
                        "description": "The remaining balance on a gift certificate.\n",
                        "type": "number",
                        "format": "float",
                        "example": 35.42
                      },
                      "status": {
                        "description": "The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.\n",
                        "type": "string",
                        "enum": [
                          "active",
                          "pending",
                          "disabled",
                          "expired"
                        ]
                      }
                    }
                  },
                  "store_credit": {
                    "type": "object",
                    "description": "A store credit model.\n",
                    "properties": {
                      "remaining_balance": {
                        "description": "Remaining balance of shopper's store credit.\n",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            ],
            "title": "Transaction",
            "type": "object"
          }
        },
        "meta": {
          "type": "object",
          "description": "Data about the response, including pagination and collection totals.",
          "properties": {
            "pagination": {
              "type": "object",
              "description": "Data about the response, including pagination and collection totals.",
              "title": "Pagination",
              "properties": {
                "total": {
                  "type": "integer",
                  "description": "Total number of items in the result set.\n",
                  "example": 36
                },
                "count": {
                  "type": "integer",
                  "description": "Total number of items in the collection response.\n",
                  "example": 36
                },
                "per_page": {
                  "type": "integer",
                  "description": "The amount of items returned in the collection per page, controlled by the limit parameter.\n",
                  "example": 50
                },
                "current_page": {
                  "type": "integer",
                  "description": "The page you are currently on within the collection.\n",
                  "example": 1
                },
                "total_pages": {
                  "type": "integer",
                  "description": "The total number of pages in the collection.\n",
                  "example": 1
                },
                "links": {
                  "type": "object",
                  "description": "Pagination links for the previous and next parts of the whole collection.\n",
                  "properties": {
                    "previous": {
                      "type": "string",
                      "description": "Link to the previous page returned in the response.\n"
                    },
                    "current": {
                      "type": "string",
                      "description": "Link to the current page returned in the response.\n",
                      "example": "?page=1&limit=50"
                    },
                    "next": {
                      "type": "string",
                      "description": "Link to the next page returned in the response.\n"
                    }
                  }
                }
              }
            }
          },
          "title": "Collection Meta"
        }
      },
      "title": "Transaction Collection Response"
    },
    "Transaction": {
      "description": "A BigCommerce Transaction object describes a single transaction.",
      "allOf": [
        {
          "type": "object",
          "title": "Transaction Base",
          "properties": {
            "event": {
              "type": "string",
              "description": "Store event that created the transaction.\n",
              "enum": [
                "purchase",
                "authorization",
                "capture",
                "refund",
                "void",
                "pending",
                "settled"
              ]
            },
            "method": {
              "type": "string",
              "description": "The payment method: `credit_card` - a credit-card transaction; `electronic_wallet` - an online wallet; `store_credit` - a transaction using store credit; `gift_certificate` - a transaction using a gift certificate; `custom` - manual payment methods; `token` - payment token; `nonce` - temporary payment token; `offsite` - online payment off the site (e.g., PayPal); `offline` - payment method that takes place offline.\n",
              "enum": [
                "credit_card",
                "electronic_wallet",
                "gift_certificate",
                "store_credit",
                "apple_pay_card",
                "apple_pay_token",
                "token",
                "custom",
                "offsite",
                "offline",
                "nonce"
              ]
            },
            "amount": {
              "type": "number",
              "format": "float",
              "description": "Amount of money in the transaction.\n"
            },
            "currency": {
              "type": "string",
              "format": "ISO-4217",
              "description": "Currency used for the transaction.\n"
            },
            "gateway": {
              "type": "string",
              "description": "The payment gateway, where applicable.\n",
              "enum": [
                "2checkout",
                "adyen",
                "amazon",
                "authorizenet",
                "bankdeposit",
                "braintree",
                "cheque",
                "cod",
                "custom",
                "firstdatagge4",
                "giftcertificate",
                "hps",
                "instore",
                "klarna",
                "migs",
                "moneyorder",
                "nmi",
                "paypalexpress",
                "paypalpaymentsprous",
                "paypalpaymentsprouk",
                "plugnpay",
                "qbmsv2",
                "securenet",
                "square",
                "storecredit",
                "stripe",
                "testgateway",
                "usaepay"
              ]
            },
            "gateway_transaction_id": {
              "description": "The transaction ID returned by the payment gateway for this transaction item.\n",
              "type": "string"
            },
            "date_created": {
              "description": "The datetime of the transaction.\n",
              "type": "string",
              "format": "date-time"
            },
            "test": {
              "type": "boolean",
              "description": "True if the transaction performed was a test, or if the gateway is in test mode.\n"
            },
            "status": {
              "type": "string",
              "description": "Status of the transaction.\n",
              "enum": [
                "ok",
                "error"
              ]
            },
            "fraud_review": {
              "type": "boolean",
              "description": "Result of gateway fraud review, if any. Default is `false`.\n"
            },
            "reference_transaction_id": {
              "type": "integer",
              "description": "Identifier for an existing transaction upon which this transaction acts.\n"
            },
            "offline": {
              "type": "object",
              "description": "Offline payment (e.g., check or purchase order).",
              "properties": {
                "display_name": {
                  "description": "Display name for the offline payment.\n",
                  "type": "string"
                }
              },
              "title": "Offline"
            },
            "custom": {
              "type": "object",
              "description": "Custom payment from manual order.",
              "properties": {
                "payment_method": {
                  "description": "Text entered for the payment method in the control panel.\n",
                  "type": "string"
                }
              },
              "title": "Custom"
            },
            "": {
              "type": "string"
            }
          },
          "required": [
            "event",
            "method",
            "amount",
            "currency",
            "gateway"
          ]
        },
        {
          "properties": {
            "id": {
              "type": "integer",
              "description": "Unique identifier for the transaction.\n"
            },
            "order_id": {
              "type": "string",
              "description": "Identifier for the BigCommerce Order with which this transaction is associated.\n"
            },
            "date_created": {
              "description": "The datetime of the transaction.\n",
              "type": "string",
              "format": "date-time"
            },
            "payment_instrument_token": {
              "type": "string",
              "description": "This field contains internal BigPay token for stored card that is then mapped to the actual third-party token. We currently do not offer a way to get third party tokens.These tokens are read-only and do not return any information about the payment."
            },
            "avs_result": {
              "description": "Address Verification Service (AVS) result from the payment gateway.",
              "type": "object",
              "properties": {
                "code": {
                  "description": "AVS code.",
                  "type": "string"
                },
                "message": {
                  "description": "AVS message.",
                  "type": "string"
                },
                "street_match": {
                  "description": "AVS Code for street matching result.",
                  "type": "string"
                },
                "postal_match": {
                  "description": "AVS Code for postal matching result.",
                  "type": "string"
                }
              },
              "title": "AVS Results"
            },
            "cvv_result": {
              "description": "Card Verification Value result from the payment gateway.",
              "type": "object",
              "properties": {
                "code": {
                  "description": "CVV code.",
                  "type": "string"
                },
                "message": {
                  "description": "CVV message.",
                  "type": "string"
                }
              },
              "title": "CVV Result"
            },
            "credit_card": {
              "type": "object",
              "description": "A credit-card model.",
              "properties": {
                "card_type": {
                  "description": "The credit-card type: Visa, MasterCard, etc.\n",
                  "type": "string"
                },
                "card_iin": {
                  "description": "The IIN of a credit-card number.\n",
                  "type": "string"
                },
                "card_last4": {
                  "description": "The last 4 digits of a credit-card number.\n",
                  "type": "string"
                },
                "card_expiry_month": {
                  "description": "The expiry month of a credit-card.\n",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 12
                },
                "card_expiry_year": {
                  "description": "The expiry year of a credit-card.\n",
                  "type": "integer"
                }
              },
              "title": "Credit Card"
            },
            "gift_certificate": {
              "type": "object",
              "description": "A gift-certificate model.",
              "title": "Gift Certificate",
              "properties": {
                "code": {
                  "description": "The gift-certificate code.\n",
                  "type": "string",
                  "example": "MB345"
                },
                "original_balance": {
                  "description": "The balance on a gift certificate when it was purchased.\n",
                  "type": "number",
                  "format": "float",
                  "example": 100
                },
                "starting_balance": {
                  "description": "The balance on a gift certificate at the time of this purchase.\n",
                  "type": "number",
                  "format": "float",
                  "example": 100
                },
                "remaining_balance": {
                  "description": "The remaining balance on a gift certificate.\n",
                  "type": "number",
                  "format": "float",
                  "example": 35.42
                },
                "status": {
                  "description": "The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.\n",
                  "type": "string",
                  "enum": [
                    "active",
                    "pending",
                    "disabled",
                    "expired"
                  ]
                }
              }
            },
            "store_credit": {
              "type": "object",
              "description": "A store credit model.\n",
              "properties": {
                "remaining_balance": {
                  "description": "Remaining balance of shopper's store credit.\n",
                  "type": "string"
                }
              }
            }
          }
        }
      ],
      "title": "Transaction",
      "type": "object"
    },
    "CreditCard": {
      "type": "object",
      "description": "A credit-card model.",
      "properties": {
        "card_type": {
          "description": "The credit-card type: Visa, MasterCard, etc.\n",
          "type": "string"
        },
        "card_iin": {
          "description": "The IIN of a credit-card number.\n",
          "type": "string"
        },
        "card_last4": {
          "description": "The last 4 digits of a credit-card number.\n",
          "type": "string"
        },
        "card_expiry_month": {
          "description": "The expiry month of a credit-card.\n",
          "type": "integer",
          "minimum": 1,
          "maximum": 12
        },
        "card_expiry_year": {
          "description": "The expiry year of a credit-card.\n",
          "type": "integer"
        }
      },
      "title": "Credit Card"
    },
    "StoreCredit": {
      "type": "object",
      "description": "A store credit model.\n",
      "properties": {
        "remaining_balance": {
          "description": "Remaining balance of shopper's store credit.\n",
          "type": "string"
        }
      }
    },
    "Custom": {
      "type": "object",
      "description": "Custom payment from manual order.",
      "properties": {
        "payment_method": {
          "description": "Text entered for the payment method in the control panel.\n",
          "type": "string"
        }
      },
      "title": "Custom"
    },
    "Offline": {
      "type": "object",
      "description": "Offline payment (e.g., check or purchase order).",
      "properties": {
        "display_name": {
          "description": "Display name for the offline payment.\n",
          "type": "string"
        }
      },
      "title": "Offline"
    },
    "GiftCertificate": {
      "type": "object",
      "description": "A gift-certificate model.",
      "title": "Gift Certificate",
      "properties": {
        "code": {
          "description": "The gift-certificate code.\n",
          "type": "string",
          "example": "MB345"
        },
        "original_balance": {
          "description": "The balance on a gift certificate when it was purchased.\n",
          "type": "number",
          "format": "float",
          "example": 100
        },
        "starting_balance": {
          "description": "The balance on a gift certificate at the time of this purchase.\n",
          "type": "number",
          "format": "float",
          "example": 100
        },
        "remaining_balance": {
          "description": "The remaining balance on a gift certificate.\n",
          "type": "number",
          "format": "float",
          "example": 35.42
        },
        "status": {
          "description": "The status of a gift certificate: `active` - gift certificate is active; `pending` - gift certificate purchase is pending; `disabled` - gift certificate is disabled; `expired` - gift certificate is expired.\n",
          "type": "string",
          "enum": [
            "active",
            "pending",
            "disabled",
            "expired"
          ]
        }
      }
    },
    "AVSResult": {
      "description": "Address Verification Service (AVS) result from the payment gateway.",
      "type": "object",
      "properties": {
        "code": {
          "description": "AVS code.",
          "type": "string"
        },
        "message": {
          "description": "AVS message.",
          "type": "string"
        },
        "street_match": {
          "description": "AVS Code for street matching result.",
          "type": "string"
        },
        "postal_match": {
          "description": "AVS Code for postal matching result.",
          "type": "string"
        }
      },
      "title": "AVS Results"
    },
    "CVVResult": {
      "description": "Card Verification Value result from the payment gateway.",
      "type": "object",
      "properties": {
        "code": {
          "description": "CVV code.",
          "type": "string"
        },
        "message": {
          "description": "CVV message.",
          "type": "string"
        }
      },
      "title": "CVV Result"
    },
    "NoContent": {
      "description": "No-content response for the BigCommerce API.",
      "type": "object",
      "properties": {
        "status": {
          "description": "204 HTTP status code.\n",
          "type": "integer"
        },
        "title": {
          "description": "The error title describing the situation.",
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "instance": {
          "type": "string"
        }
      },
      "title": "No Content"
    }
  },
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true
    }
  }
}