{
  "swagger": "2.0",
  "info": {
    "version": "",
    "title": "Process Payment",
    "contact": {},
    "description": "This server-to-server endpoint provides the capability to process payment using payment instrument such as credit card. \nSee [Payments Overview](/api-docs/payments/payments-api-overview) for more. \n\nWhile the Try It Now will work, please use other methods of testing for security.",
    "termsOfService": "https://www.bigcommerce.com/terms/api-terms/"
  },
  "host": "payments.bigcommerce.com",
  "basePath": "/stores/{store_hash}",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/payments": {
      "post": {
        "description": "- Depending on merchant's configuration in BigCommerce's Control Panel, the payment request will be processed as either 'Authorize only' or 'Authorize and Capture'.\n\n- If the test payment gateway is enabled on a store, that can also be used during testing\n\n- Payments can be processed using Stored Cards, Payment Tokens or Credit Cards. See [Payments API Overview](/api-docs/payments/payments-api-overview) for more.\n\nHeaders:\n\nPayment Access Token: \n- X-Auth-Client\n- X-Auth-Token\n- Content-Type: application/json\n- Accept: application/json\n\nStored Cards/Credit Card:\n- Content-Type: application/json\n- Accept: application/vnd.bc.v1+json\n- Authorization: PAT a-valid-payment-access-token",
        "tags": [
          "Payment"
        ],
        "operationId": "PaymentsPost",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "type": "string",
            "description": "Authorization header with a valid payment access token is required to access this endpoint e.g. Authorization: PAT a-valid-payment-access-token"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "title": "Payment Request",
              "type": "object",
              "description": "## Credit Card\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\": \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\": \"authorizenet.card\",\n\t\t\"save_instrument\": true\n\t\t\n  }\n}\n```\n\n## Stored Card\n\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"stored_card\",\n      \"token\": \"vaulted instrument token\",\n      \"verification_value\": \"123\"\n    },\n    \"payment_method_id\": \"stripe.card\",\n    \"save_instrument\": true\n  }\n}\n```",
              "properties": {
                "payment": {
                  "title": "Payment",
                  "type": "object",
                  "required": [
                    "instrument",
                    "payment_method_id"
                  ],
                  "properties": {
                    "amount": {
                      "description": "Amount in smallest currency unit",
                      "type": "integer",
                      "format": "int32"
                    },
                    "currency_code": {
                      "description": "Currency code",
                      "type": "string",
                      "pattern": "^[A-Z]{3}$"
                    },
                    "instrument": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/Card"
                        },
                        {
                          "$ref": "#/definitions/StoredCard"
                        },
                        {
                          "$ref": "#/definitions/StoredPaypalAccount"
                        }
                      ]
                    },
                    "payment_method_id": {
                      "description": "Identifier for payment method that will be used for this payment",
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              },
              "required": [
                "payment"
              ]
            },
            "x-examples": {
              "application/json": {
                "payment": {
                  "instrument": {},
                  "payment_method_id": "Lorem in",
                  "amount": 81505146,
                  "currency_code": "NYE"
                }
              },
              "Payment Access Token": "curl -X POST \\\n  https://payments.bigcommerce.com/stores/{$$.env.store_hash}/payments \\\n  -H 'Accept: application/vnd.bc.v1+json' \\\n  -H 'Authorization: PAT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NsdfasftIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXQiOjE1NTEzOTA1NDIsImRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo' \\\n  -H 'Content-Type: application/json' \\",
              "Vaulted Card": "{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"stored_card\",\n      \"token\": \"vaulted instrument token\",\n      \"verification_value\": \"123\"\n    },\n    \"payment_method_id\": \"stripe.card\"\n  }\n}",
              "Credit Card": "{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\": \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\": \"authorizenet.card\",\n     \"save_instrument\": true\n  }\n}"
            }
          },
          {
            "name": "Accept",
            "in": "header",
            "type": "string",
            "default": "application/vnd.bc.v1+json",
            "enum": [
              "application/vnd.bc.v1+json"
            ]
          },
          {
            "name": "Content-Type",
            "in": "header",
            "type": "string",
            "default": "application/json"
          }
        ],
        "responses": {
          "202": {
            "description": "Payment has been successfully processed",
            "schema": {
              "title": "Success Payment Response",
              "type": "object",
              "properties": {
                "id": {
                  "description": "Identifier for this transaction",
                  "type": "string"
                },
                "transaction_type": {
                  "title": "Transaction Type",
                  "description": "Transaction type for this payment",
                  "example": "authorization",
                  "type": "string",
                  "enum": [
                    "authorization",
                    "purchase"
                  ]
                },
                "status": {
                  "type": "string",
                  "title": "Status",
                  "description": "Status to indicate a success response",
                  "enum": [
                    "success",
                    "pending"
                  ]
                }
              }
            },
            "examples": {
              "application/json": {
                "id": "reprehenderit consectetur veniam deserunt anim",
                "transaction_type": "authorization",
                "status": "pending"
              }
            }
          },
          "400": {
            "description": "Payment request has been rejected due to malformed request",
            "schema": {
              "title": "Error Payment Response",
              "type": "object",
              "properties": {
                "status": {
                  "description": "HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "title": {
                  "description": "Short summary describing the particular error",
                  "type": "string"
                },
                "detail": {
                  "description": "Detailed summary describing the particular error",
                  "type": "string"
                },
                "type": {
                  "description": "Reference that identifies the particular error",
                  "type": "string"
                },
                "code": {
                  "description": "Code representing the particular error",
                  "type": "integer",
                  "format": "int32"
                },
                "errors": {
                  "description": "",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "title",
                "type"
              ]
            }
          },
          "401": {
            "description": "Valid authentication required",
            "schema": {
              "title": "Error Payment Response",
              "type": "object",
              "properties": {
                "status": {
                  "description": "HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "title": {
                  "description": "Short summary describing the particular error",
                  "type": "string"
                },
                "detail": {
                  "description": "Detailed summary describing the particular error",
                  "type": "string"
                },
                "type": {
                  "description": "Reference that identifies the particular error",
                  "type": "string"
                },
                "code": {
                  "description": "Code representing the particular error",
                  "type": "integer",
                  "format": "int32"
                },
                "errors": {
                  "description": "",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "title",
                "type"
              ]
            }
          },
          "422": {
            "description": "Payment request has been rejected due to missing, invalid data or declined by payment provider",
            "schema": {
              "title": "Error Payment Response",
              "type": "object",
              "properties": {
                "status": {
                  "description": "HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "title": {
                  "description": "Short summary describing the particular error",
                  "type": "string"
                },
                "detail": {
                  "description": "Detailed summary describing the particular error",
                  "type": "string"
                },
                "type": {
                  "description": "Reference that identifies the particular error",
                  "type": "string"
                },
                "code": {
                  "description": "Code representing the particular error",
                  "type": "integer",
                  "format": "int32"
                },
                "errors": {
                  "description": "",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "title",
                "type"
              ]
            }
          },
          "default": {
            "description": "Internal server error",
            "schema": {
              "title": "Error Payment Response",
              "type": "object",
              "properties": {
                "status": {
                  "description": "HTTP status code",
                  "type": "integer",
                  "format": "int32"
                },
                "title": {
                  "description": "Short summary describing the particular error",
                  "type": "string"
                },
                "detail": {
                  "description": "Detailed summary describing the particular error",
                  "type": "string"
                },
                "type": {
                  "description": "Reference that identifies the particular error",
                  "type": "string"
                },
                "code": {
                  "description": "Code representing the particular error",
                  "type": "integer",
                  "format": "int32"
                },
                "errors": {
                  "description": "",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              },
              "required": [
                "status",
                "title",
                "type"
              ]
            }
          }
        },
        "summary": "Process Payment for an Order"
      }
    }
  },
  "definitions": {
    "PaymentRequest": {
      "title": "Payment Request",
      "type": "object",
      "properties": {
        "payment": {
          "title": "Payment",
          "type": "object",
          "properties": {
            "amount": {
              "description": "Amount in smallest currency unit",
              "type": "integer",
              "format": "int32"
            },
            "currency_code": {
              "description": "Currency code",
              "type": "string",
              "pattern": "^[A-Z]{3}$"
            },
            "instrument": {
              "description": "",
              "type": "object"
            },
            "payment_method_id": {
              "description": "Identifier for payment method that will be used for this payment",
              "type": "string",
              "minLength": 1
            }
          },
          "required": [
            "instrument",
            "payment_method_id"
          ]
        }
      },
      "required": [
        "payment"
      ],
      "description": "## Credit Card\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4111111111111111\",\n      \"cardholder_name\": \"BP\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"411\"\n    },\n    \"payment_method_id\": \"authorizenet.card\",\n\t\t\"save_instrument\": true\n\t\t\n  }\n}\n```\n\n## Stored Card\n\n```\n{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"stored_card\",\n      \"token\": \"vaulted instrument token\",\n      \"verification_value\": \"123\"\n    },\n    \"payment_method_id\": \"stripe.card\",\n    \"save_instrument\": true\n  }\n}\n```"
    },
    "Payment": {
      "title": "Payment",
      "type": "object",
      "properties": {
        "amount": {
          "description": "Amount in smallest currency unit",
          "type": "integer",
          "format": "int32"
        },
        "currency_code": {
          "description": "Currency code",
          "type": "string",
          "pattern": "^[A-Z]{3}$"
        },
        "instrument": {
          "description": "",
          "type": "object"
        },
        "payment_method_id": {
          "description": "Identifier for payment method that will be used for this payment",
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "instrument",
        "payment_method_id"
      ]
    },
    "SuccessPaymentResponse": {
      "title": "Success Payment Response",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier for this transaction",
          "type": "string"
        },
        "transaction_type": {
          "title": "Transaction Type",
          "description": "Transaction type for this payment",
          "example": "authorization",
          "type": "string",
          "enum": [
            "authorization",
            "purchase"
          ]
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status to indicate a success response",
          "enum": [
            "success",
            "pending"
          ]
        }
      }
    },
    "TransactionType": {
      "title": "Transaction Type",
      "description": "Transaction type for this payment",
      "example": "authorization",
      "type": "string",
      "enum": [
        "authorization",
        "purchase"
      ]
    },
    "Status": {
      "type": "string",
      "title": "Status",
      "description": "Status to indicate a success response",
      "enum": [
        "success",
        "pending"
      ]
    },
    "ErrorPaymentResponse": {
      "title": "Error Payment Response",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Short summary describing the particular error",
          "type": "string"
        },
        "detail": {
          "description": "Detailed summary describing the particular error",
          "type": "string"
        },
        "type": {
          "description": "Reference that identifies the particular error",
          "type": "string"
        },
        "code": {
          "description": "Code representing the particular error",
          "type": "integer",
          "format": "int32"
        },
        "errors": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "required": [
        "status",
        "title",
        "type"
      ]
    },
    "Card": {
      "title": "Card",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type to classify this payment instrument",
          "example": "card",
          "type": "string",
          "default": "card"
        },
        "cardholder_name": {
          "description": "Cardholder's full name",
          "type": "string",
          "minLength": 1
        },
        "number": {
          "description": "Credit card number",
          "type": "string",
          "minLength": 1
        },
        "expiry_month": {
          "description": "Expiry month of this card",
          "type": "integer",
          "minimum": 1,
          "maximum": 12,
          "format": "int32"
        },
        "expiry_year": {
          "description": "Expiry year of this card",
          "type": "integer",
          "format": "int32"
        },
        "verification_value": {
          "description": "Verification value of this card",
          "type": "string",
          "minLength": 3,
          "maxLength": 4
        },
        "issue_month": {
          "description": "Issue month of this card",
          "type": "integer",
          "minimum": 1,
          "maximum": 12,
          "format": "int32"
        },
        "issue_year": {
          "description": "Issue year of this card",
          "type": "integer",
          "format": "int32"
        },
        "issue_number": {
          "description": "Issue number of this card",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "type",
        "cardholder_name",
        "number",
        "expiry_month",
        "expiry_year"
      ]
    },
    "StoredCard": {
      "title": "Stored Card",
      "type": "object",
      "properties": {
        "type": {
          "description": "Type to classify this payment instrument",
          "example": "stored_card",
          "type": "string",
          "default": "stored_card"
        },
        "token": {
          "description": "Identifier representing this stored card",
          "type": "string",
          "minLength": 64,
          "maxLength": 64
        }
      },
      "required": [
        "type",
        "token"
      ]
    },
    "BasePaymentResponse": {
      "title": "Base Payment Response",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier for this transaction",
          "type": "string"
        },
        "transaction_type": {
          "title": "Transaction Type",
          "description": "Transaction type for this payment",
          "example": "authorization",
          "type": "string",
          "enum": [
            "authorization",
            "purchase"
          ]
        }
      }
    },
    "PendingPaymentResponse": {
      "title": "Pending Payment Response",
      "type": "object",
      "properties": {
        "id": {
          "description": "Identifier for this transaction",
          "type": "string"
        },
        "transaction_type": {
          "title": "Transaction Type",
          "description": "Transaction type for this payment",
          "example": "authorization",
          "type": "string",
          "enum": [
            "authorization",
            "purchase"
          ]
        },
        "status": {
          "type": "string",
          "title": "Status",
          "description": "Status to indicate a success response",
          "enum": [
            "success",
            "pending"
          ]
        }
      }
    },
    "Error": {
      "title": "Error",
      "type": "object",
      "properties": {
        "status": {
          "description": "HTTP status code",
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "description": "Short summary describing the particular error",
          "type": "string"
        },
        "detail": {
          "description": "Detailed summary describing the particular error",
          "type": "string"
        },
        "type": {
          "description": "Reference that identifies the particular error",
          "type": "string"
        },
        "code": {
          "description": "Code representing the particular error",
          "type": "integer",
          "format": "int32"
        }
      },
      "required": [
        "status",
        "title",
        "type"
      ]
    },
    "StoredPaypalAccount": {
      "title": "StoredPaypalAccount",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type to classify this payment instrument",
          "enum": [
            "stored_paypal_account"
          ]
        },
        "token": {
          "description": "Identifier representing this stored paypal account",
          "type": "string",
          "minLength": 64,
          "maxLength": 64
        }
      },
      "required": [
        "type",
        "token"
      ]
    }
  },
  "tags": [
    {
      "name": "Payment",
      "description": ""
    }
  ],
  "parameters": {
    "Accept": {
      "name": "Accept",
      "in": "header",
      "type": "string",
      "default": "application/vnd.bc.v1+json",
      "enum": [
        "application/vnd.bc.v1+json"
      ]
    },
    "Content-Type": {
      "name": "Content-Type",
      "in": "header",
      "type": "string",
      "default": "application/json"
    }
  },
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header",
      "description": "client_id provided when user creates an API user account or the app is installed"
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "in": "header",
      "name": "X-Auth-Token",
      "description": "Access Token (access_token) provided when API User account was created or app is installed"
    }
  },
  "security": [
    {
      "X-Auth-Client": []
    },
    {
      "X-Auth-Token": []
    }
  ],
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true
    }
  }
}
