{
    "title": "Dev Center",
    "header": {
      "nav": {
        "left": [
          {
            "title": "API Docs",
            "path": "/api-docs"
          },
          {
            "title": "API Reference",
            "path": "/api-reference"
          },
          {
            "title": "Theme Docs",
            "path": "/stencil-docs"
          },
          {
            "title": "Tools",
            "path": "/tools-resources"
          },
          {
            "title": "Blog",
            "path": "https://medium.com/bigcommerce-developer-blog"
          },
          {
            "title": "Changelog",
            "path": "/changelog"
          }
        ],
        "right": [
          {
            "title": "My Apps",
            "path": "https://devtools.bigcommerce.com"
          },
          {
            "title": "Create Account",
            "path": "https://login.bigcommerce.com/signup"
          }
        ]
      }
    },
    "pages": {
      "/": {
        "title": "BigCommerce Dev Center - API & Theme Documentation",
        "data": {
          "$ref": "./Home.html"
        }
      },
      "/api-docs": {
        "title": "API Docs",
        "data": {
          "blocks": [
            {
              "type": "html",
              "data": "<div class=\"docs-landing bg-bclightblue\">\n  <div class=\"cBrLandingTiles\">\n    <div class=\"ui-widget\">\n      <div>\n        <div style=\"padding: 62px 0px 0px;\">\n          <div>\n            <h1 class=\"h1 panel-title__text-dark\">API Documentation</h1>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div><!-- landing tiles -->\n  <div class=\"cBrLandingTiles\" style=\"margin-bottom: 5%;\">\n    <div data-region-name=\"landingTiles\">\n      <div class=\"ui-widget\">\n        <div class=\"lift-content\">\n          <div>\n            <div>\n              <div class=\"row row--pad\">\n                <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a href=\"/api-docs/getting-started/basics/making-requests\" class=\"cursor-pointer\">\n                  <div class=\"panel-media doc-landing\">\n                    <div class=\"panel-media__wrap-icon\">\n                      <div class=\"panel-media__icon\">\n                        <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Getting-Started.svg\">\n                      </div>\n                    </div>\n                    <div class=\"panel-media__wrap-content\">\n                      <h4 class=\"h4 panel-media__title\">Getting Started</h4>\n                      <p class=\"panel-media__text type--sm\">Get up to speed. Follow our Quick Start Guide to begin building flexible, scalable technical solutions for businesses.</p>\n                    </div>\n                  </div>\n                  </a>\n                </div>\n                <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a href=\"/api-docs/getting-started/webhooks/about-webhooks\" class=\"cursor-pointer\">\n                  <div class=\"panel-media doc-landing\">\n                    <div class=\"panel-media__wrap-icon\">\n                      <div class=\"panel-media__icon\">\n                        <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Webhooks.svg\">\n                      </div>\n                    </div>\n                    <div class=\"panel-media__wrap-content\">\n                      <h4 class=\"h4 panel-media__title\">Webhooks</h4>\n                      <p class=\"panel-media__text type--sm\">Respond in real time. Utilize webhooks to subscribe to events in a BigCommerce store. </p>\n                    </div>\n                  </div>\n                  </a>\n                </div>\n                <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a href=\"/api-docs/orders/orders-overview\" class=\"cursor-pointer\">\n                  <div class=\"panel-media doc-landing\">\n                    <div class=\"panel-media__wrap-icon\">\n                      <div class=\"panel-media__icon\">\n                        <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Orders-API.svg\">\n                      </div>\n                    </div>\n                    <div class=\"panel-media__wrap-content\">\n                      <h4 class=\"h4 panel-media__title\">Orders API</h4>\n                      <p class=\"panel-media__text type--sm\">Plug in and connect. Access BigCommerce order data to boost your POS and fulfillment solutions.</p>\n                    </div>\n                  </div>\n                  </a>\n                </div>\n                <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a href=\"/api-docs/cart-and-checkout/cart-and-checkout-overview\" class=\"cursor-pointer\">\n                  <div class=\"panel-media doc-landing\">\n                    <div class=\"panel-media__wrap-icon\">\n                      <div class=\"panel-media__icon\">\n                        <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Storefront-API.svg\">\n                      </div>\n                    </div>\n                    <div class=\"panel-media__wrap-content\">\n                      <h4 class=\"h4 panel-media__title\">Storefront APIs</h4>\n                      <p class=\"panel-media__text type--sm\">Build flexible solutions. Access and modify store data client-side using JavaScript. </p>\n                    </div>\n                  </div>\n                  </a>\n                </div>\n                <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a href=\"/api-docs/catalog/products-overview\" class=\"cursor-pointer\">\n                  <div class=\"panel-media doc-landing\">\n                    <div class=\"panel-media__wrap-icon\">\n                      <div class=\"panel-media__icon\">\n                        <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Catelog-API.svg\">\n                      </div>\n                    </div>\n                    <div class=\"panel-media__wrap-content\">\n                      <h4 class=\"h4 panel-media__title\">Catalog API</h4>\n                      <p class=\"panel-media__text type--sm\">Channel your product data. Link your catalog to power inventory, omni channel selling, and more.</p>\n                    </div>\n                  </div>\n                  </a>\n                </div>\n                <div class=\"column-md-12 column-lg-6 column--pad\"><a href=\"https://developer.bigcommerce.com/api-docs/partner/becoming-a-partner\" target=\"_blank\" class=\"cursor-pointer\">\n                  <div class=\"panel-media doc-landing\">\n                    <div class=\"panel-media__wrap-icon\">\n                      <div class=\"panel-media__icon\">\n                        <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Marketplace.svg\">\n                      </div>\n                    </div>\n                    <div class=\"panel-media__wrap-content\">\n                      <h4 class=\"h4 panel-media__title\">Join the App Marketplace</h4>\n                      <p class=\"panel-media__text type--sm\">Ready to monetize your app? Become a BigCommerce Tech Partner and list your solution on the App Marketplace.</p>\n                    </div>\n                  </div>\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>"
            }
          ],
          "children": [
            {
              "title": "Getting Started",
              "route": {
                "path": "/getting-started"
              },
              "data": {
                "children": [
                  {
                    "title": "Quick Start",
                    "route": {
                      "path": "/making-requests"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Quick Start</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    \t\t<li><a href=\"#making-requests_prerequisites\">Overview<a/></li>\n        <li><a href=\"#making-requests_get-products\">Getting a List of Products</a></li>\n        <li><a href=\"#making-requests_create-a-product\">Creating a Product</a></li>\n        <li><a href=\"#making-requests_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Overview\n\nThis Quick Start guide will take you through the minimum required steps to begin making API requests. By the end of this guide, you’ll be able to retrieve a store’s product catalog, create a new product, and troubleshoot common errors.\n\nBefore we begin, here are a few key concepts:\n* API requests are always made against a single store’s data, and API tokens are issued on a per-store basis. The first step to using the BigCommerce API is creating a BigCommerce store.\n* API Credentials can be generated from a store’s control panel. If you’re testing requests or writing a script for a single store, start here to quickly get your token and begin making API calls. \n* If you’re building an app that will install in a store’s control panel, you’ll need to generate an API token programmatically during the [app installation process](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_installation-update-sequence). However in the beginning, it’s still a good idea to generate API credentials from the control panel to start testing requests with minimal effort.\n\n\n### Prerequisites\n* [API Credentials](/api-docs/getting-started/authentication#authentication_getting-api-credentials)\n* [Scope](/api-docs/getting-started/authentication#authentication_oauth-scopes) set to `Products Modify`\n* BigCommerce Store (`store_hash`)\n\n*Note: You can use any API client (like Postman) for this walkthrough, but these steps are written with the built-in HTTP request maker in mind.*",
                          "header": {
                            "anchor": "making-requests_prerequisites"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Getting a List of Products\n\nIn this walkthrough, we'll get a list of products from the store, use a limit filter to only show the first 10 products, and sort products by name. \n\nIn the request maker below, we've prefilled the URL to /GET products: `https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products`\n\nTo add [filters](/api-docs/getting-started/filtering), append `?page=10&sort=name` to the end of the request URL.\n\n\nIn the request maker tabs, replace these placeholders with the appropriate values:  \n- `{X-Auth-Token}` Header - Access Token from API Credentials\n- `{X-Auth-Client}` Header - Client Id from API Credentials\n- `store_hash` variable - the hash in your api path \n\t- `https://api.bigcommerce.com/stores/{store_hash}/v3/`\n\n \nHit the send button and review your response.\n\n\n**Try it Now**  \n*Get all products*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/00c3651bcff8d70a61e8)",
                          "header": {
                            "anchor": "making-requests_get-products"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": [\n    {\n      \"id\": 174,\n      \"name\": \"1L Le Parfait Jar\",\n      \"type\": \"physical\",\n      \"sku\": \"\",\n      \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n      \"weight\": 1,\n      \"width\": 0,\n      \"depth\": 0,\n      \"height\": 0,\n      \"price\": 7.95,\n      \"cost_price\": 0,\n      \"retail_price\": 10,\n      \"sale_price\": 0,\n      \"map_price\": 0,\n      \"tax_class_id\": 0,\n      \"product_tax_code\": \"\",\n      \"calculated_price\": 7.95,\n      \"categories\": [\n        23,\n        21\n      ],\n      \"brand_id\": 36,\n      \"option_set_id\": null,\n      \"option_set_display\": \"right\",\n      \"inventory_level\": 0,\n      \"inventory_warning_level\": 0,\n      \"inventory_tracking\": \"none\",\n      \"reviews_rating_sum\": 0,\n      \"reviews_count\": 0,\n      \"total_sold\": 7,\n      \"fixed_cost_shipping_price\": 0,\n      \"is_free_shipping\": false,\n      \"is_visible\": true,\n      \"is_featured\": false,\n      \"related_products\": [\n        -1\n      ],\n      \"warranty\": \"\",\n      \"bin_picking_number\": \"\",\n      \"layout_file\": \"product.html\",\n      \"upc\": \"\",\n      \"mpn\": \"\",\n      \"gtin\": \"\",\n      \"search_keywords\": \"jar, glass\",\n      \"availability\": \"available\",\n      \"availability_description\": \"\",\n      \"gift_wrapping_options_type\": \"any\",\n      \"gift_wrapping_options_list\": [],\n      \"sort_order\": 0,\n      \"condition\": \"New\",\n      \"is_condition_shown\": false,\n      \"order_quantity_minimum\": 0,\n      \"order_quantity_maximum\": 0,\n      \"page_title\": \"\",\n      \"meta_keywords\": [],\n      \"meta_description\": \"\",\n      \"date_created\": \"2018-08-15T14:48:46+00:00\",\n      \"date_modified\": \"2018-09-12T17:32:23+00:00\",\n      \"view_count\": 14,\n      \"preorder_release_date\": null,\n      \"preorder_message\": \"\",\n      \"is_preorder_only\": false,\n      \"is_price_hidden\": false,\n      \"price_hidden_label\": \"\",\n      \"custom_url\": {\n        \"url\": \"/all/1l-le-parfait-jar/\",\n        \"is_customized\": true\n      },\n      \"base_variant_id\": 345,\n      \"open_graph_type\": \"product\",\n      \"open_graph_title\": \"\",\n      \"open_graph_description\": \"\",\n      \"open_graph_use_meta_description\": true,\n      \"open_graph_use_product_name\": true,\n      \"open_graph_use_image\": true\n    },\n    {\n      \"id\": 167,\n      \"name\": \"Able Brewing System\",\n      \"type\": \"physical\",\n      \"sku\": \"\",\n      \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n      \"weight\": 1,\n      \"width\": 0,\n      \"depth\": 0,\n      \"height\": 0,\n      \"price\": 225,\n      \"cost_price\": 0,\n      \"retail_price\": 0,\n      \"sale_price\": 0,\n      \"map_price\": 0,\n      \"tax_class_id\": 0,\n      \"product_tax_code\": \"\",\n      \"calculated_price\": 225,\n      \"categories\": [\n        23,\n        21\n      ],\n      \"brand_id\": 43,\n      \"option_set_id\": 52,\n      \"option_set_display\": \"right\",\n      \"inventory_level\": 0,\n      \"inventory_warning_level\": 0,\n      \"inventory_tracking\": \"none\",\n      \"reviews_rating_sum\": 0,\n      \"reviews_count\": 0,\n      \"total_sold\": 2,\n      \"fixed_cost_shipping_price\": 0,\n      \"is_free_shipping\": false,\n      \"is_visible\": true,\n      \"is_featured\": false,\n      \"related_products\": [\n        -1\n      ],\n      \"warranty\": \"\",\n      \"bin_picking_number\": \"\",\n      \"layout_file\": \"product.html\",\n      \"upc\": \"\",\n      \"mpn\": \"\",\n      \"gtin\": \"\",\n      \"search_keywords\": \"\",\n      \"availability\": \"available\",\n      \"availability_description\": \"\",\n      \"gift_wrapping_options_type\": \"any\",\n      \"gift_wrapping_options_list\": [],\n      \"sort_order\": 0,\n      \"condition\": \"New\",\n      \"is_condition_shown\": false,\n      \"order_quantity_minimum\": 0,\n      \"order_quantity_maximum\": 0,\n      \"page_title\": \"\",\n      \"meta_keywords\": [],\n      \"meta_description\": \"\",\n      \"date_created\": \"2018-08-15T14:48:36+00:00\",\n      \"date_modified\": \"2018-08-20T15:11:17+00:00\",\n      \"view_count\": 21,\n      \"preorder_release_date\": null,\n      \"preorder_message\": \"\",\n      \"is_preorder_only\": false,\n      \"is_price_hidden\": false,\n      \"price_hidden_label\": \"\",\n      \"custom_url\": {\n        \"url\": \"/all/able-brewing-system/\",\n        \"is_customized\": true\n      },\n      \"base_variant_id\": 338,\n      \"open_graph_type\": \"product\",\n      \"open_graph_title\": \"\",\n      \"open_graph_description\": \"\",\n      \"open_graph_use_meta_description\": true,\n      \"open_graph_use_product_name\": true,\n      \"open_graph_use_image\": true\n    },\n    {\n      \"id\": 181,\n      \"name\": \"All Purpose Cleaner\",\n      \"type\": \"physical\",\n      \"sku\": \"\",\n      \"description\": \"<p><span>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Morbi vel metus ac est egestas porta sed quis erat. Integer id nulla massa. Proin vitae enim nisi. Praesent non dignissim nulla. Nulla mattis id massa ac pharetra. Mauris et nisi in dolor aliquam sodales. Aliquam dui nisl, dictum quis leo sit amet, rutrum volutpat metus. Curabitur libero nunc, interdum ac libero non, tristique porttitor metus. Ut non dignissim lorem, in vestibulum leo. Vivamus sodales quis turpis eget.</span></p>\",\n      \"weight\": 1,\n      \"width\": 0,\n      \"depth\": 0,\n      \"height\": 0,\n      \"price\": 15,\n      \"cost_price\": 0,\n      \"retail_price\": 0,\n      \"sale_price\": 0,\n      \"map_price\": 0,\n      \"tax_class_id\": 0,\n      \"product_tax_code\": \"\",\n      \"calculated_price\": 15,\n      \"categories\": [\n        21,\n        22\n      ],\n      \"brand_id\": 37,\n      \"option_set_id\": null,\n      \"option_set_display\": \"right\",\n      \"inventory_level\": 0,\n      \"inventory_warning_level\": 0,\n      \"inventory_tracking\": \"none\",\n      \"reviews_rating_sum\": 0,\n      \"reviews_count\": 0,\n      \"total_sold\": 0,\n      \"fixed_cost_shipping_price\": 0,\n      \"is_free_shipping\": false,\n      \"is_visible\": true,\n      \"is_featured\": false,\n      \"related_products\": [\n        -1\n      ],\n      \"warranty\": \"\",\n      \"bin_picking_number\": \"\",\n      \"layout_file\": \"product.html\",\n      \"upc\": \"\",\n      \"mpn\": \"\",\n      \"gtin\": \"\",\n      \"search_keywords\": \"\",\n      \"availability\": \"available\",\n      \"availability_description\": \"\",\n      \"gift_wrapping_options_type\": \"any\",\n      \"gift_wrapping_options_list\": [],\n      \"sort_order\": 0,\n      \"condition\": \"New\",\n      \"is_condition_shown\": false,\n      \"order_quantity_minimum\": 0,\n      \"order_quantity_maximum\": 0,\n      \"page_title\": \"\",\n      \"meta_keywords\": [],\n      \"meta_description\": \"\",\n      \"date_created\": \"2018-08-15T14:48:51+00:00\",\n      \"date_modified\": \"2018-08-15T15:01:15+00:00\",\n      \"view_count\": 0,\n      \"preorder_release_date\": null,\n      \"preorder_message\": \"\",\n      \"is_preorder_only\": false,\n      \"is_price_hidden\": false,\n      \"price_hidden_label\": \"\",\n      \"custom_url\": {\n        \"url\": \"/all/all-purpose-cleaner/\",\n        \"is_customized\": true\n      },\n      \"base_variant_id\": 352,\n      \"open_graph_type\": \"product\",\n      \"open_graph_title\": \"\",\n      \"open_graph_description\": \"\",\n      \"open_graph_use_meta_description\": true,\n      \"open_graph_use_product_name\": true,\n      \"open_graph_use_image\": true\n    }\n\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 39,\n      \"count\": 10,\n      \"per_page\": 10,\n      \"current_page\": 1,\n      \"total_pages\": 4,\n      \"links\": {\n        \"next\": \"?limit=10&sort=name&page=2\",\n        \"current\": \"?limit=10&sort=name&page=1\"\n      },\n      \"too_many\": false\n    }\n  }\n}",
                          "header": {
                            "title": "GET Products Response",
                            "subtitle": "200 OK"
                          }
                        },
                        {
                          "type": "text",
                          "data": "The products are returned in a data array that contains each product object. Located at the bottom of the response is the meta object that shows the total number of products being returned, but also the products `per_page` which is 10, set using the limit query in the request.\n\n### Next Steps\n* Try including other filter paramters such as name or include and exclude. See [Get All Products](/api-reference/catalog/catalog-api/products/getproducts) for a full list of available filters. "
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Product\n\nIn this walkthrough, we'll create an example product: BigCommerce Hoodie. The minimum parameters to create a product are: name, price, category, type and weight. \n\n* **Name**: The name of your product as a string.\n* **Price**: How much the items costs in number format. \n* **Category**: The `{category_id}` for the category this product belongs to. An item can be assigned to more than one category. You can /GET the category id by using:\n\n`https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/categories`\n\n* **Type**: Is the item physical or digital?\n\t- Physical items are anything that is shipped to the customer, such as a t-shirt.\n\t- Digital items are products that the customer downloads, such as a PDF of an ebook. \n* **Weight**: How much the product weighs as a number. The measurement unit is determined by the [store settings](https://forum.bigcommerce.com/s/article/Store-Settings#physical). \n\nReview the information pre-populated in the Body tab below. Make sure to run a GET request for the categories first and update request with the appropriate category ID.\n\n**Try it Now**  \n*Create a Product**\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/00c3651bcff8d70a61e8)",
                          "header": {
                            "anchor": "making-requests_create-a-product"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"data\": {\n        \"id\": 196,\n        \"name\": \"BigCommerce Hoodie\",\n        \"type\": \"physical\",\n        \"sku\": \"\",\n        \"description\": \"A super soft hoodie to wear\",\n        \"weight\": 5,\n        \"width\": 12,\n        \"depth\": 0,\n        \"height\": 0,\n        \"price\": 25.99,\n        \"cost_price\": 0,\n        \"retail_price\": 0,\n        \"sale_price\": 0,\n        \"map_price\": 0,\n        \"tax_class_id\": 0,\n        \"product_tax_code\": \"\",\n        \"calculated_price\": 25.99,\n        \"categories\": [\n            20,\n            21\n        ],\n        \"brand_id\": 0,\n        \"option_set_id\": null,\n        \"option_set_display\": \"right\",\n        \"inventory_level\": 0,\n        \"inventory_warning_level\": 0,\n        \"inventory_tracking\": \"none\",\n        \"reviews_rating_sum\": 0,\n        \"reviews_count\": 0,\n        \"total_sold\": 0,\n        \"fixed_cost_shipping_price\": 0,\n        \"is_free_shipping\": false,\n        \"is_visible\": true,\n        \"is_featured\": false,\n        \"related_products\": [\n            -1\n        ],\n        \"warranty\": \"\",\n        \"bin_picking_number\": \"\",\n        \"layout_file\": \"\",\n        \"upc\": \"\",\n        \"mpn\": \"\",\n        \"gtin\": \"\",\n        \"search_keywords\": \"\",\n        \"availability\": \"available\",\n        \"availability_description\": \"\",\n        \"gift_wrapping_options_type\": \"any\",\n        \"gift_wrapping_options_list\": [],\n        \"sort_order\": 0,\n        \"condition\": \"New\",\n        \"is_condition_shown\": false,\n        \"order_quantity_minimum\": 0,\n        \"order_quantity_maximum\": 0,\n        \"page_title\": \"\",\n        \"meta_keywords\": [],\n        \"meta_description\": \"\",\n        \"date_created\": \"2018-09-21T17:12:59+00:00\",\n        \"date_modified\": \"2018-09-21T17:12:59+00:00\",\n        \"view_count\": 0,\n        \"preorder_release_date\": null,\n        \"preorder_message\": \"\",\n        \"is_preorder_only\": false,\n        \"is_price_hidden\": false,\n        \"price_hidden_label\": \"\",\n        \"custom_url\": {\n            \"url\": \"/bigcommerce-hoodie/\",\n            \"is_customized\": false\n        },\n        \"base_variant_id\": 402,\n        \"open_graph_type\": \"product\",\n        \"open_graph_title\": \"\",\n        \"open_graph_description\": \"\",\n        \"open_graph_use_meta_description\": true,\n        \"open_graph_use_product_name\": true,\n        \"open_graph_use_image\": true,\n        \"variants\": [\n            {\n                \"id\": 402,\n                \"product_id\": 196,\n                \"sku\": \"\",\n                \"sku_id\": null,\n                \"price\": 25.99,\n                \"calculated_price\": 25.99,\n                \"sale_price\": 0,\n                \"retail_price\": 0,\n                \"map_price\": 0,\n                \"weight\": 5,\n                \"width\": 12,\n                \"height\": 0,\n                \"depth\": 0,\n                \"is_free_shipping\": false,\n                \"fixed_cost_shipping_price\": 0,\n                \"calculated_weight\": 5,\n                \"purchasing_disabled\": false,\n                \"purchasing_disabled_message\": \"\",\n                \"image_url\": \"\",\n                \"cost_price\": 0,\n                \"upc\": \"\",\n                \"mpn\": \"\",\n                \"gtin\": \"\",\n                \"inventory_level\": 0,\n                \"inventory_warning_level\": 0,\n                \"bin_picking_number\": \"\",\n                \"option_values\": []\n            }\n        ],\n        \"images\": [],\n        \"primary_image\": null,\n        \"videos\": [],\n        \"custom_fields\": [],\n        \"bulk_pricing_rules\": [],\n        \"reviews\": []\n    },\n    \"meta\": {}\n}",
                          "header": {
                            "title": "Response POST Products",
                            "subtitle": "200 OK"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Next Steps\n* To see a full list of fields that can be sent in a request see [Create a Product](/api-reference/catalog/catalog-api/products/createproduct)\n* Try to make a different product with new attributes."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Troubleshooting\n\n**Did you get a status of 403 Forbidden?**\n* Check the Client ID and Client Token.\n* Make sure your request headers are correct.\n* Be sure you replaced `{store_hash}` with your store hash. \n* Make sure the request url is correct.\n\n**Did you get a 200 but nothing was returned?**\n* Make sure your store has products.\n\n**Did you get a status of 404?**\n* Check the request url for errors.",
                          "header": {
                            "anchor": "making-requests_troubleshooting"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "About Our API",
                    "route": {
                      "path": "/about-our-api"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>About Our API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#about-api_api-enviroment\">API Environment</a></li>\n        <li><a href=\"#about-api__available-api\">Available APIs</a></li>\n        <li><a href=\"#about-api_request-headers\">Request Headers</a></li>\n        <li><a href=\"#about-api_response-headers\">Response Headers</a></li>\n        <li><a href=\"#about-api_media-types\">Media Types</a></li>\n        <li><a href=\"#about-api_content-types\">Content Types</a></li>\n    <li><a href=\"#  about-api_request-and-response-structure\">Request and Response Structure</a></li>\n    \t\t<li><a href=\"#about-api_get-help\">Support</a></li>\n    \t\t<li><a href=\"https://www.bigcommerce.com/terms/api-terms/\">Terms of Service</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Want to get started making API Requests right away? Check out the [Quick Start](/api-docs/getting-started/basics/making-requests).\n\nThe BigCommerce set of APIs allow you to create apps, automate store processes, or build headless ecommerce solutions. Need inspiration on what to build? Visit our [App Marketplace](https://www.bigcommerce.com/apps/). "
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## API Environment \n\nBigCommerce API requests can be made in the context of the storefront or server-to-server.  \n\n* Storefront APIs use the store url: `https://your-store.mybigcommerce.com/api/{endpoint}`\n* Server-to-Server requests use the base url:  `https://api.bigcommerce.com/stores/{store_hash}/v3/`\n* V2 API Requests use the base url: `https://api.bigcommerce.com/stores/{store_hash}/v2/`",
                          "header": {
                            "anchor": "about-api_api-enviroment"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Available APIs\n\n|API | Description | Download Schema |\n|--|--| -- |\n| [Catalog](/api-reference/catalog/catalog-api) | The Catalog API manages products, brands and categories for a store. | [Download Catalog API](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/BigCommerce_Catalog_API.oas2.json)\n| [Store Infomation](/api-reference/store-management/store-information-api) | Get system time stamp and basic store information. | [Download Store Information API](https://developer.bigcommerce.com/api-reference/store-management/store-information-api/BigCommerce_Store_Information_API.oas2.json) |\n| [Currency](/api-reference/store/currency-api) | Manage currency displayed on the storefront | [Download Currency API](https://developer.bigcommerce.com/api-reference/store-management/currency-api/BigCommerce_Currency_API.oas2.json)\n| [Geography](/api-reference/store/geography-api) | Get a list of states and countries  | [Download Geography API](https://developer.bigcommerce.com/api-reference/store-management/geography-api/BigCommerce_Geography_API.oas2.json)\n| [Tax Class](/api-reference/store/tax-classes-api) | Get available tax classes on a store | [Download Tax Class API](https://developer.bigcommerce.com/api-reference/store-management/tax-classes-api/BigCommerce_Tax_Class_API.oas2.json)\n| [Storefront Cart](/api-reference/cart-checkout/storefront-cart-api) | Create a cart or scrape cart data from the front end | [Download Storefront Cart API](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-cart-api/BigCommerce_Storefront_Cart_API.oas2.json)\n| [Storefront Checkout](/api-reference/cart-checkout/storefront-checkout-api) | Create a checkout or scrape checkout data from the front end |[Download Storefront Checkout API](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-checkout-api/BigCommerce_Storefront_Checkout_API.oas2.json)\n| [Server-to-Server Cart](/api-reference/cart-checkout/server-server-cart-api) | Create a cart and bypass the BigCommerce front end | [Download Server-to-Server Cart API](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api/BigCommerce_Server_to_Server_Cart_API.oas2.json)\n| [Server-to-Server Checkout](/api-reference/cart-checkout/server-server-checkout-api) | Create a checkout and bypass the BigCommerce front end | [Download Server-Server Checkout API](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api/BigCommerce_Server_to_Server_Checkout_API.oas2.json)\n| [Orders](/api-reference/orders/orders-api) | Create and manage orders | [Download Orders API](https://developer.bigcommerce.com/api-reference/orders/orders-api/BigCommerce_Orders_API.oas2.json)\n| [Order Transactions](/api-reference/orders/orders-transactions-api) | View order payment information | [Download Order Transactions API](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api/BigCommerce_Order_Transactions_API.oas2.json)\n| [Storefront Orders](/api-reference/orders/storefront-orders-api) | View storefront order information | [Download Storefront Orders API](https://developer.bigcommerce.com/api-reference/orders/storefront-orders-api/BigCommerce_Storefront_Orders_API.oas2.json)\n| [Customers](/api-reference/customer-subscribers/customers-api) | Manage store customers  | [Download Customers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/BigCommerce_Customers_API.oas2.json)|\n| [V3 Customers](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api) |Manage store customers. To learn about using V3 Customers vs V2 Customers, see [Customers Overview](https://developer.bigcommerce.com/api-docs/customers/customers-subscribers-overview). | [Download V3 Customers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/BigCommerce_Customers_V3_API.oas2.json) |\n| [Subscribers](/api-reference/customer-subscribers/subscribers-api) | Manage newsletter subscribers | [Download Subscribers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/subscribers-api/BigCommerce_Subscribers_API.oas2.json)\n| [Price Lists](/api-reference/price-lists/pricelists-api) | Create variations of catalog pricing. | [Download Price Lists API](https://developer.bigcommerce.com/api-reference/catalog/pricelists-api/BigCommerce_Price_Lists_API.oas2.json) |\n| [Scripts](/api-reference/content/content-scripts-api) | Add a script to a stores page | [Download Scripts API](https://developer.bigcommerce.com/api-reference/storefront/content-scripts-api/BigCommerce_Scripts_API.oas2.json)\n| [Marketing](/api-reference/marketing/marketing-api) | Create and manage Coupons, Banners and Gift Certificates. | [Download Marketing API](https://developer.bigcommerce.com/api-reference/marketing/marketing-api/BigCommerce_Marketing_API.oas2.json)\n| [Enabled Payment Methods](/api-reference/payments/payment-methods-api) | Get a list of available payment methods on a store. | [Download Payment Methods API](https://developer.bigcommerce.com/api-reference/payments/payment-methods-api/BigCommerce_Enabled_Payment_Methods_API.oas2.json)|\n| Process Payments | Process payments on orders or checkouts. There are two APIs used to process payments. Get the [payment access token](https://developer.bigcommerce.com/api-reference/payments/payments-create-payment-token-api) then [process the payment](https://developer.bigcommerce.com/api-reference/payments/payments-process-payments).  | [Payment Token & Payment Methods](https://developer.bigcommerce.com/api-reference/payments/payments-create-payment-token-api/BigCommerce_Payments_API.oas2.json), [Process Payment](https://developer.bigcommerce.com/api-reference/payments/payments-process-payments/BigCommerce_Process_Payment_API.oas2.json)\n| [Shipping](/api-reference/shipping/shipping-api) | Create and manage shipping methods and zones. |[Download Shipping API](https://developer.bigcommerce.com/api-reference/store-management/shipping-api/BigCommerce_Shipping_API.oas2.json)\n| [Store Content](/api-reference/content/store-content-api) | Mange the store's blog, web pages and redirects. | [Download Store Content API](https://developer.bigcommerce.com/api-reference/marketing/store-content-api/BigCommerce_Store_Content_API.oas2.json)\n| [Themes](/api-reference/themes/themes-api) | Manage store's themes. |[Download Themes API](https://developer.bigcommerce.com/api-reference/storefront/themes-api/BigCommerce_Themes_API.oas2.json) |\n| [Widgets](https://developer.bigcommerce.com/api-reference/storefront/widgets-api) | Programatically inject content into a BigCommerce theme. | [Download Widgets API](https://developer.bigcommerce.com/api-reference/storefront/widgets-api/BigCommerce_Widgets_API.oas2.json) |\n| [Wishlist](https://developer.bigcommerce.com/api-reference/customer-subscribers/wishlist-api) | Wishlist API allows a developer to create and manage customer wishlists. | [Download Wishlist API](https://developer.bigcommerce.com/api-reference/customer-subscribers/wishlist-api/BigCommerce_Wishlist_API.oas2.json) |",
                          "header": {
                            "anchor": "about-api__available-api"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Request Headers\n\nServer-to-Server request headers require Accept, X-Auth-Client, X-Auth-Token and Content-Type at a minimum.\n\n\n| Header | Allowed Values | Description | Example |\n|  |  |  |  |\n| `Accept` | `application/json` (for .json requests) `application/xml` (for .xml requests) | The MIME type for the format you want to receive a response in.|`application/xml` |\n| `Content-Type` | `application/json` (for JSON requests) `application/xml` (for XML requests) | The MIME type of the request body. Used to validate and parse the request to the API. | `application/json` |\n| `User-Agent` | String | While it is not required, we ask that you specify a user agent which identifies your integration/client with your requests. |\n| `X-Auth-Client` | String | Client ID of the requesting app |\n| `X-Auth-Token` | String | Access token authorizing the app to access resources on behalf of a user |",
                          "header": {
                            "anchor": "about-api_request-headers"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Response Headers \n\n| Header | Possible Values | Description | Example |\n|  |  | -- | - |\n| `Date` | An <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> date. | The date the response was sent. | `Tue, 15 Nov 2011 12:45:26 GMT` |\n| `last-modified` | An <a href=\"http://tools.ietf.org/html/rfc2822#section-3.3\" target=\"_blank\">RFC 2822</a> date. | The date the resource was last modified. Please refer to the individual resource pages for support for this header. | `Tue, 15 Nov 2011 12:45:26 GMT` |\n| `Content-Type` | `application/json` | The MIME type of the response, dependent on the extension of the endpoint that was requested. | `application/json` |\n| `Content-Location` | A URI | Sent if the request was redirected. | `/api/v2/orders/5.json` |\n| `Location` | A URI | The URI of a newly created resource. Sent with a `201 Created` response. | `/api/v2/products/7` |\n| `X-Retry-After` | integer | Rate limited response, indicating the number of seconds before the quota refreshes. See [Rate Limits](/api-docs/getting-started/basics/best-practices#best-practices_rate-limits) for more information. | `15` |\n| `X-BC-ApiLimit-Remaining` | integer | The number of API requests remaining for the current period (rolling one hour). See [Rate Limits](/api-docs/getting-started/basics/best-practices#best-practices_rate-limits) for more information. | `987` |\n| `X-BC-Store-Version` | A version number | The version of BigCommerce the store is running on. This header is available on versions 7.3.6+. | ` 7.3.6` |\n| `Content-Encoding` | `gzip` | Allows API clients to request content to be compressed before being sent back in the response to an API request. | `gzip` |\n| `Transfer-Encoding` | `chunked` | Specifies the form of encoding used to transfer the resource. | `chunked`\n| `X-Rate-Limit-Requests-Left` | number | Details how many remaining requests your client can make in the current window before being rate-limited. In this case, you would expect to be able to make 6 more requests in the next 3000 milliseconds; on the 7th request within 3000 milliseconds, you would be rate-limited and would receive an HTTP 429 response. | `16101491` |\n| `X-Rate-Limit-Requests-Quota` | number | Shows how many API requests are allowed in the current window for your client. | `16101495` |\n| `X-Rate-Limit-Time-Reset-Ms`  | number | Shows how many milliseconds are remaining in the window. In this case, 3000 milliseconds – so, 3000 milliseconds after this request, the API quota will be refreshed. |`30000 `|\n| `X-Rate-Limit-Time-Window-Ms` | number | Shows the size of your current rate-limiting window. | `9762` |",
                          "header": {
                            "anchor": "about-api_response-headers"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Media Types\n\nA media type is the format of the request or response body. The BigCommerce API accepts requests and responds in JSON. You should encode requests using the UTF-8 character set (other character sets might have unpredictable results).",
                          "header": {
                            "anchor": "about-api_media-types"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Content Types\n\n### Request Content Type\nWhen performing a request that contains a body (eg. POST or PUT), the type of content you are sending needs to be specified in the Content-Type header. \n\n### Response Content Type\nThere are two ways you can specify the type of content you would like to receive. The first method is to specify an Accept header. The second is to supply an extension to the resource you are requesting. \n\nThe priority in which these methods are processed are:\n* Accept header high-priority types (eg. `Accept: application/json`) extensions on the resource (e.g. `customers.json`).\n* Accept header low priority types (priorities less than 1, e.g. `Accept: application/json;q=0.9`)",
                          "header": {
                            "anchor": "about-api_content-types"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Request and Response Structure\n\n### Request Structure\nThe body of a JSON request is an object containing a set of key-value pairs. A simple representation of a product object is:",
                          "header": {
                            "anchor": "about-api_request-and-response-structure"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n \"id\": 5,\n \"name\": \"iPod\",\n \"description\": \"A portable MP3 music player.\"\n} ",
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Response Structure\nResponses are structured similarly to requests. If a request returns a single object, then the response will contain a single object, containing the fields for that resource."
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": {\n    \"id\": 39,\n    \"parent_id\": 19,\n    \"name\": \"Bath\",\n    \"description\": \"\",\n    \"views\": 0,\n    \"sort_order\": 0,\n    \"page_title\": \"\",\n    \"meta_keywords\": [\n      \"\"\n    ],\n    \"meta_description\": \"\",\n    \"layout_file\": \"category.html\",\n    \"image_url\": \"\",\n    \"is_visible\": true,\n    \"search_keywords\": \"\",\n    \"default_product_sort\": \"use_store_settings\",\n    \"custom_url\": {\n      \"url\": \"/garden/bath/\",\n      \"is_customized\": false\n    }\n  },\n  \"meta\": {}\n}",
                          "header": {
                            "title": "Single Category Response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": [\n    {\n      \"id\": 19,\n      \"parent_id\": 0,\n      \"name\": \"Garden\",\n      \"description\": \"<p>A collection of products for the garden.</p>\",\n      \"views\": 0,\n      \"sort_order\": 2,\n      \"page_title\": \"page title\",\n      \"meta_keywords\": [\n        \"meta keyword\"\n      ],\n      \"meta_description\": \"meta description\",\n      \"layout_file\": \"category.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"search keywords\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/garden/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 20,\n      \"parent_id\": 0,\n      \"name\": \"Publications\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 4,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/publications/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 21,\n      \"parent_id\": 0,\n      \"name\": \"Kitchen\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 3,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/kitchen/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 22,\n      \"parent_id\": 0,\n      \"name\": \"Utility\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 5,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/utility/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 23,\n      \"parent_id\": 0,\n      \"name\": \"Shop All\",\n      \"description\": \"<h1>Browse our full collection</h1>\",\n      \"views\": 0,\n      \"sort_order\": 0,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category_with_facets.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/shop-all/\",\n        \"is_customized\": false\n      }\n    },\n    {\n      \"id\": 39,\n      \"parent_id\": 19,\n      \"name\": \"Bath\",\n      \"description\": \"\",\n      \"views\": 0,\n      \"sort_order\": 0,\n      \"page_title\": \"\",\n      \"meta_keywords\": [\n        \"\"\n      ],\n      \"meta_description\": \"\",\n      \"layout_file\": \"category.html\",\n      \"image_url\": \"\",\n      \"is_visible\": true,\n      \"search_keywords\": \"\",\n      \"default_product_sort\": \"use_store_settings\",\n      \"custom_url\": {\n        \"url\": \"/garden/bath/\",\n        \"is_customized\": false\n      }\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 6,\n      \"count\": 6,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {\n        \"current\": \"?page=1&limit=50\"\n      }\n    }\n  }\n}",
                          "header": {
                            "title": "Multiple Categories Response"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Support\n\n### [Developer Community](https://forum.bigcommerce.com/s/group/0F913000000HLjECAW/bigcommerce-developers)\nThis is a great place to get help from other developers who work on the BigCommerce platform. If you have BigCommerce specific questions this is the best place to ask. It's also great for beginners to get assistance. \n\n### [StackOverflow](https://stackoverflow.com/questions/tagged/bigcommerce)\nAre you a more experienced developer or have a programming language specific question? This is a good place to ask questions and get help. The developer community is the best place to get answers about the BigCommerce platform specifically.  ",
                          "header": {
                            "anchor": "about-api_get-help"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Authentication",
                    "route": {
                      "path": "/authentication"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Authentication</h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#authentication_getting-api-credentials\"> Obtaining Store API Credentials </a></li>\n\t\t<li><a href=\"#authentication_revoking-api-credentials\"> Revoking Store API Credentials</a></li>\n\t\t<li><a href=\"#authentication_client-id-secret\"> Obtaining App API Credentials</a></li>\n\t\t<li><a href=\"#authentication_when-to-use\"> Use Cases by Credential Type</a></li>\n    <li><a href=\"#authentication_migration-legacy-oauth\">Migrating from Legacy to OAuth</a></li>\n\t\t<li><a href=\"#authentication_oauth-scopes\"> OAuth Scopes</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Two types of API credentials are available to developers wishing to make requests against BigCommerce APIs:\n\n1. Store API Credentials (created in a store's control panel)\n2. App API Credentials (created in the [Developer Portal](https://devtools.bigcommerce.com))\n\n**Store API Credentials** are generated when a Store API Account is created in a store's control panel (**Advanced Settings** > **API Accounts**). These credentials are used to programmatically interact with an individual store's data using BigCommerce's APIs. Both OAuth and token-based authentication are possible with Store API Credentials\n\nDevelopers can also create **App API Credentials** in the BigCommerce [Developer Portal](https://devtools.bigcommerce.com). App API Credentials are used during the OAuth flow to request authorization “on behalf” of a store owner, allowing the app to make API requests against store data. App API Credentials are OAuth only, and the store owner must install the app before the app is granted access to the store. ",
                          "header": {
                            "anchor": "authentication_what-are-oauth-credentials"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Obtaining Store API Credentials\n\nTo generate store API Credentials, log into the store, then:\n\n1. Navigate to **Advanced Settings** > **API Accounts** > **Create API Account**. \n2. Give the account a name (internal only).\n6. In the OAuth Scopes section, select the minimum scopes the app will require.\n7. Select **Save**. \n\nA successful save will display a pop-up containing the API credentials that your app will need to run authenticated requests – your Client ID and Access Token. A `.txt` file containing the same credentials will (on most browsers) automatically download to your computer. This file also contains the base API Path for your store, preconfigured for the v3 API.\n\nThe base api path will look something like this: `https://api.bigcommerce.com/stores/123456/`. In the base path, the store hash is the `123456`. This will be used to make API requests.\n\nTo get started making requests, see [API Requests](/api-docs/getting-started/basics/making-requests).",
                          "header": {
                            "anchor": "authentication_getting-api-credentials"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536087816482",
                          "header": {
                            "title": "Create an API Account"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "There is no way to re-display this pop-up after selecting Done, so be sure to securely store the credentials before leaving this screen. "
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Revoking Store API Credentials\n\nTo revoke Store API Credentials:\n1. Log into the store, using the store owner’s username/password.\n2. Select **Advanced Settings**.\n3. Select **API Accounts**. This will display the Store API Accounts page, shown below.\n4. In the Actions column at right, select the trash-can button next to the account you want to delete.",
                          "header": {
                            "anchor": "authentication_revoking-api-credentials"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537388177603",
                          "header": {
                            "title": "Revoking API Credentials"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "title": "Delete Carefully",
                            "body": "There is no undo, so be sure before you delete an account. You can also use the checkboxes on the left side to delete multiple accounts at once – but be especially careful when using this option."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Obtaining App API Credentials\n\nTo get App API Credentials, login to (or create) your BigCommerce [Developer Portal](https://devtools.bigcommerce.com) account. Navigate to **My Apps** (top-right corner), then:\n\n1. Click **Create an app**  \n2. Give your app a name (only be visible to you)\n3. Click **Create** (a pop up box will display showing Your Profile, App Summary and Category)",
                          "header": {
                            "anchor": "authentication_client-id-secret"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537389767940",
                          "header": {
                            "title": "Create an App"
                          }
                        },
                        {
                          "type": "text",
                          "data": "4. Click on **Step 3 - Technical**. Fill out the App Features sections with App Type, Callback URLs and Scope."
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537389883100",
                          "header": {
                            "title": "Step 3 - Technical"
                          }
                        },
                        {
                          "type": "text",
                          "data": "5. In the lower right-hand corner of the popup box, click **Update & Close**.\n6. A new pop up will show asking if you want to change the OAuth Scopes. Click **Confirm Update**.\n7. You will be routed back to the Dev Tools home page and your app will be listed. Click **View Client ID**. "
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537390078741",
                          "header": {
                            "title": "View Client Id"
                          }
                        },
                        {
                          "type": "text",
                          "data": "9. Copy your Client ID and Client Secret. The Client ID and Client Secret can be accessed at any time by clicking **View Client ID**. "
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "The Client ID value uniquely identifies your app. You will need to pass it in the header of all your requests to the API.\n\nThe Client Secret value is a secret that your app and BigCommerce share. You only need to pass the Client Secret value once, during the app installation sequence. Thereafter, BigCommerce uses it to sign payloads in load, uninstall, and remove user requests, and your app uses it to verify the signature to ensure that the request is coming from BigCommerce.",
                            "title": "Client ID and Client Secret"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1537390135692",
                          "header": {
                            "title": "Client Id and Client Secret"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "If you delete the app, there is no way to recover the Client Id and Client Secret."
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Next Steps\n\nDuring the app installation process, your app will use the Client Id and Client Secret to obtain an Oauth token authorized against the store installing the app. For a detailed look at this process, see [Building an App](/api-docs/getting-started/building-apps-bigcommerce/building-apps)."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Use Cases by Credential Type\n\n|  | App API Credentials | Store API Credentials|\n||::|::|\n| From Dev Tools| X | |\n|From Store Control Panel| | X |\n| Single Click Apps (Marketplace)| X | |\n| Private Apps | X |\n| Hidden Apps | X | |\n| Connector Apps | | X |\n|Scripts| | X |\n|Testing | | X |\n| V2 | X | X |\n| V3 | X | X |\n|Webhooks | X | X |",
                          "header": {
                            "anchor": "authentication_when-to-use"
                          }
                        },
                        {
                          "type": "text",
                          "data": "",
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": "## Migrating from Legacy to OAuth",
                          "header": {
                            "anchor": "authentication_migration-legacy-oauth"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "body": "As of July 31, 2018, new BigCommerce stores are no longer able to create Legacy API Accounts (accounts using HTTP Basic Auth) within their control panels. Existing Legacy API Accounts will continue to work until further notice, but we strongly recommend migrating to OAuth as soon as possible."
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Migrating to OAuth comes with several benefits:\n\n* All OAuth requests are sent to a common hostname: `https://api.bigcommerce.com`. Using a single hostname prevents any interruption of service when the domain or SSL on a particular store changes or expires.\n\n* All of BigCommerce’s newest V3 APIs are exclusively available via OAuth.\n\n* OAuth API accounts have access to subscribe to BigCommerce’s Webhooks for real-time event notifications\n\n* The ability to use new APIs that require a shared secret, such as the Storefront Login API or the Storefront Current Customer identification endpoint.\n\n* Gzip compression on API responses to reduce bandwidth usage\n\n* Better security as all OAuth tokens are scoped to particular endpoints\n\n### How to Migrate\n\nFirst, consider whether your application should reside within the public App Marketplace, where any BigCommerce merchant can quickly discover and install it. To learn more about how to set up this kind of app, see [Becoming a Partner](/api-docs/partner/becoming-a-partner).\n\nIf you would like to update your API connection from Basic Authentication to OAuth, you will need to make the following changes:\n\n- Get a Client ID and an Access Token, by creating an API Account within the control panel. You’ll want to make sure the account has the correct Scopes for the API endpoints you need to access. We recommend that you provide the minimum scopes that your application requires to function, as a good security practice.\n- If you use one of the Client Libraries, follow the relevant guide (within the library’s documentation) for establishing an OAuth connection.\n- If you have created your connection, you’ll want to update your connection parameters:\n\t- Where you previously used the BigCommerce store’s secure hostname, you will instead use the `https://api.bigcommerce.com` gateway URL.\nAs an example, requests to `https://store-abc123.mybigcommerce.com/api/v2/orders/123` or `https://my-custom-store-domain.com/api/v2/orders/123 `would instead go to `https://api.bigcommerce.com/stores/{store_hash}/v2/orders/123`.\n- With Basic Auth, you use an Authentication HTTP Header to authenticate your connection. With OAuth, you’ll want to use two headers:\n\t- X-Client-Id for your Client ID\n\t- X-Auth-Token header for your Access Token. You can read more [here](/api-docs/getting-started/basics/authentication#authentication_what-are-oauth-credentials-1).\n\nRate limiting of API requests works differently for OAuth API connections. To become familiar with the OAuth system, please see the [Rate Limits](/api-docs/getting-started/basics/best-practices#best-practices_rate-limits)."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## OAuth Scopes\n\nScope limits ability to read or write to data. Set the scope to the minimum level needed to accomplish the task at hand.\n\nAll OAuth scopes except `default` have `read_only` scopes that allow only `GET` and `HEAD` requests.\n\n- Webhooks are accessible from the default scope that is available when API Credentials are created.\n\n| Scope GUI Name | Resources  | Description |\n||||\n| Content | store_v2_content | View and modify store content |\n||| [/v2/pages](/api-reference/content/store-content-api) |\n||| [/v2/blog](/api-reference/content/store-content-api) |\n||| [/v2/redirects](/api-reference/content/store-content-api) |\n||| /v3/widgets |\n||store_v2_content_read_only| View Site Content |\n||| [/v2/pages](/api-reference/content/store-content-api) |\n||| [/v2/blog](/api-reference/content/store-content-api) |\n||| [/v2/redirects](/api-reference/content/store-content-api)  |\n||| /v3/widgets |\n| Checkout Content | store_content_checkout | View and modify content on checkout pages |\n||| [/v3/scripts](/api-reference/content/store-content-api) |\n| Customers | store_v2_customers | View and modify customer information |\n||| [/v2/customers](/api-reference/customer-subscribers/customers-api) |\n||| [/v2/customer_groups](/api-reference/customer-subscribers/customers-api) |\n||| [/v3/customers/subscribers](/api-reference/customer-subscribers/subscribers-api) |\n||store_v2_customers_read_only|View customer information |\n||| [/v2/customers](/api-reference/customer-subscribers/customers-api) |\n||| [/v2/customer_groups](/api-reference/customer-subscribers/customers-api) |\n||| [/v3/customers/subscribers](/api-reference/customer-subscribers/subscribers-api) |\n| Customers Login | store_v2_customers_login | Log in customers to your storefront |\n||| [Access to the Customer Login API](/api-docs/customers/customer-login-api)\n| Information & Settings| store_v2_information | View and modify general store information and settings |\n||| [/v2/shipping/methods](/api-reference/shipping/shipping-api) |\n||| [/v2/shipping/zones](/api-reference/shipping/shipping-api) |\n||| [/v2/shipping/carrier](/api-reference/shipping/shipping-api) |\n|| store_v2_information_read_only | View general store information and settings |\n||| [/v2/shipping/methods](/api-reference/shipping/shipping-api) |\n||| [/v2/shipping/zones](/api-reference/shipping/shipping-api) |\n||| [/v2/shipping/carrier](/api-reference/shipping/shipping-api) |\n||| [/v2/payments/methods](/api-reference/shipping/shipping-api) |\n||| [/v2/tax_classes](/api-reference/store/tax-classes-api) |\n||| [/v2/store](/api-reference/store/store-information-api) |\n| Marketing | store_v2_marketing | View and modify marketing information |\n||| [/v2/coupons](/api-reference/marketing/marketing-api) |\n||| [/v2/gift_certificates](/api-reference/marketing/marketing-api) |\n||| [/v2/banners](/api-reference/marketing/marketing-api) |\n|| store_v2_marketing_read_only | View marketing information |\n||| [/v2/coupons](/api-reference/marketing/marketing-api) |\n||| [/v2/gift_certificates](/api-reference/marketing/marketing-api) |\n||| [/v2/banners](/api-reference/marketing/marketing-api) |\n| Orders | store_v2_orders | View and modify orders |\n||| [/v2/orders](/api-reference/orders/orders-api) |\n||| [/v2/order_statuses](/api-reference/orders/orders-api) |\n|| store_v2_orders_read_only | View orders |\n||| [/v2/orders](/api-reference/orders/orders-api) |\n||| [/v2/order_statuses](/api-reference/orders/orders-api) |\n| Order Transactions | store_v2_transactions_read_only | View order transactions |\n||| [/v3/orders/{id}/transactions](/api-reference/orders/orders-transactions-api) |\n| Products | store_v2_products | View and modify products, brands, categories and other product information. |\n||| [/v3/catalog](/api-reference/catalog/catalog-api) |\n||| [/v3/pricelists](/api-reference/price-lists/pricelists-api) |\n|| store_v2_products_read_only | View products |\n||| [/v3/catalog](/api-reference/catalog/catalog-api) |\n||| [/v3/pricelists](/api-reference/price-lists/pricelists-api) |\n| Themes | store_themes_manage | View and modify themes |\n||| [/v3/themes](/api-reference/themes/themes-api) |\n|| store_themes_read_only | View themes |\n||| [/v3/themes](/api-reference/themes/themes-api) |\n| Carts | store_cart | View and Modify carts |\n||| [/v3/carts](/api-reference/cart-checkout/storefront-cart-api) |\n|| store_cart_read_only | View Carts |\n||| [/v3/carts](/api-reference/cart-checkout/storefront-cart-api) |\n| Create Payments  | store_payments_access_token_create | Process Payments |\n| | | [/payments/access_tokens](/api-reference/payments/payments-create-payment-token-api)|\n| Get Payment Methods | store_payments_methods_read | Get Order Payment Methods |\n| | | [/payments](/api-reference/payments/payments-process-payments)|",
                          "header": {
                            "anchor": "authentication_oauth-scopes"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Filtering",
                    "route": {
                      "path": "/filtering"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Filtering</h1>\n\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#filtering-includes\">Includes</a></li>\n\t\t<li><a href=\"#filtering-including_excluding_fields\">Including and Excluding Fields</a></li>\n\t\t<li><a href=\"#filtering-pagination-limit\">Pagination and Limit</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "To filter collections down to a particular set of items, you can add filters to your request as URL query parameters.\n\n250 products is the maximum number of products that be returned. To view more than that, a script is needed to loop through each page.\n\nThese are the most common filter options available for the V3 API: \n\n| Operator | Expression  | Example | \n|--|--|--|\n| Equals/equivalency | attribute=value  | `/v3/catalog/products?price=10` `/v3/catalog/products?name=My Product` |\n| Greater than or equal to (for numbers or dates) | attribute:min=value  | `/v3/catalog/products?price:min=10` |\n| Less than or equal to (for numbers or dates) | attribute:max=value | `/v3/catalog/products?price:max=10` |\n| Greater than (for numbers or dates)| attribute:greater=value | `/v3/catalog/products?price:greater=10` |\n| Less than (for numbers or dates) | attribute:less=value | `/v3/catalog/products?price:less=10` |\n| SQL LIKE operator (for strings) | attribute:like=pattern | `/v3/catalog/categories?name:like=Shirts` |\n| SQL IN operator (for arrays) | attribute:in=csv,list,of,values | `/v3/catalog/products?categories:in=123,456` |\n| SQL NOT IN operator (for arrays) | attribute:not_in=csv,list,of,values | `/v3/catalog/products?categories:not_in=123,456` |\n\nAvailable filters vary by endpoint. Refer to the GET method for an endpoint to see a list of available filters."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Includes\n\nSome endpoints allow an `?include` parameter to include subresources and other information in the primary GET response for a parent object.\n\nThis allows you to save API calls by getting more information in a response. However, it may slow down your response.\n\nAs an example, you can include a product's variants and images with the product response: `/v3/catalog/products?include=variants,images`\n\nAvailability of the `?include` parameter varies by endpoint. Refer to the GET method for an endpoint to see a list of fields that can be included.\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### Including and Excluding Fields\n\nSome endpoints support both `?include_fields` and `?exclude_fields`. \n\n`include_fields` will return ONLY the specified fields in the response. `exclude_fields` will omit the specified fields from the response.\n\nYou can specify any field that is available on the object. Excluding fields you don't care about (especially large fields like descriptions) can speed up your API request response time.\n\n\n#### Example\n\n`https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products?include_fields=name,price`\n\nHere, product name and price have been included:"
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"data\": [\n        {\n            \"id\": 77,\n            \"name\": \"Red printed scarf\",\n            \"price\": 12\n        }    \n    ]\n} ",
                          "header": {
                            "title": "Product Name and Price"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Pagination and Limit\n\n`?page` is the number of pages that are returned via api. \n`?limit` is the number of results per page that are returned.\n\n`page=2&limit=10`\nThis will return page 2 of the results with 10 items per page."
                        }
                      ]
                    }
                  },
                  {
                    "title": "Best Practices",
                    "route": {
                      "path": "/best-practices"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Best Practices</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#best-practices_integration-up-to-date\">Ensure That Your Integration is Up-to-Date</a></li>\n        <li><a href=\"#best-practices_use-webhooks\">Use Webhooks Effectively Within Your Application</a></li>\n        <li><a href=\"#best-practices_thread-api-requests\">Thread Your Requests to the BigCommerce API</a></li>\n        <li><a href=\"#best-practices_marketplace-apps\">Marketplace Apps</a></li>\n        <li><a href=\"#best-practices_rate-limits\">API Rate Limits</a></li>\n        <li><a href=\"#best-practices_platform-limits\">Platform Limits</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Ensure that your integration is up-to-date\n\nBigCommerce frequently enhances its core product and is actively developing v3 API endpoints. By using the newest API version, you will ensure that your app has access to the latest resources. You will also be better positioned to provide a user experience consistent with what merchants will see in their BigCommerce store’s control panel. To stay up to date, bookmark our [changelog](/changelog). ",
                          "header": {
                            "anchor": "best-practices_integration-up-to-date"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Use webhooks effectively within your application\n\nTo keep data in your application up-to-date, [webhooks](/api-docs/getting-started/webhooks/about-webhooks) provide a great alternative to doing periodic checks. In order to register a webhook event that your application can listen for, you will need to use OAuth (not legacy “Basic Authentication”).\n\nBigCommerce will send a partial payload when a subscribed event is triggered, with minimal identifying details (such as the order ID when an order is created). Your application could use the order ID returned in the payload to make a subsequent API request for the full order details.",
                          "header": {
                            "anchor": "best-practices_use-webhooks"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Thread your requests to the BigCommerce API\n\nIn order to quickly update information in the API, you can use threaded requests. Threaded requests allow you to send multiple requests at one time. They can come from a different open connection or multiple requests to the same resource. \n\nThe [BigCommerce Ruby API](https://github.com/bigcommerce/bigcommerce-api-ruby) client is thread-safe: It satisfies the need for multiple threads to access the same shared data and the need for a shared piece of data to be accessed by only one thread at any given time. These attributes can reduce the total time that your app will require to complete a series of requests.",
                          "header": {
                            "anchor": "best-practices_thread-api-requests"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Marketplace Apps\n\nMerchants often have more than one person working on their store. BigCommerce allows additional users to access your app when the store owner has granted them appropriate permissions. The requirements for supporting multi-user access are:\n* Tokens must be stored against the `store_hash` and not against user info.\n* Within the Dev Tools workspace, you must enable your app’s **Technical** > **Multiple Users** option.\n\nIn the payload returned when a user launches an app, users are distinguished by `owner_email` versus `user_email`. If these two emails match, the user is the store owner.\n\nIf you wish to enable user removal, you can do by filling in your app’s **Technical** > **Remove User Callback URL** field in Dev Tools. (Enabling user removal is optional).\nFor more advanced implementations, you can enable the store owner to grant specific permissions to different non-admin users. For example, person1@email.com could be restricted to editing product inventory but not seeing orders. If you decide to include this feature in your app, it’s a great feature to advertise.",
                          "header": {
                            "anchor": "best-practices_marketplace-apps"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## API Rate Limits\nApps that authenticate with OAuth are rate-limited, based on a quota that is refreshed every few seconds. The maximum quota for a store will vary depending on the store’s plan.\n\n* Enterprise plans and Enterprise Sandboxes (Enterprise-Test): Unlimited (7mil / 30sec)\n* Pro plans: 60k per hour (450 / 30sec)\n* All other sandboxes (Dev/Partner/Employee): 20k per hour (150 / 30sec)\n* Plus & Standard plans: 20k per hour (150 / 30sec)\n\nEach request to the API consumes one available request from the quota. When an app hits the quota limit, subsequent requests are rejected until the quota is refreshed.\n\nThe store’s overall quota is distributed across all apps that are accessing the store at a given time. This provides fairness for multiple apps that are accessing the API simultaneously, preventing a single greedy app from consuming the store’s entire quota by itself. The quota might adjust as additional clients connect or disconnect while you’re running requests. ",
                          "header": {
                            "anchor": "best-practices_rate-limits"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Playing Nicely with the Platform\n\nEvery API response’s HTTP headers give you full visibility into your position in the rate-limiting algorithm:\n```\nX-Rate-Limit-Requests-Left →6\nX-Rate-Limit-Requests-Quota →25\nX-Rate-Limit-Time-Reset-Ms →3000\nX-Rate-Limit-Time-Window-Ms →5000\n```\n\n| Name | Description |\n| -- | -- |\n| X-Rate-Limit-Time-Window-Ms| Shows the size of your current rate limiting window. In this case, it’s 5000 milliseconds.|\n| X-Rate-Limit-Time-Reset-Ms | Shows how many milliseconds are remaining in the window. In this case, 3000 milliseconds. 3000 milliseconds after this request, the API quota will be refreshed. |\n| X-Rate-Limit-Requests-Quota | Shows how many API requests are allowed in the current window for your client. In this case, the number is 25 requests. |\n| X-Rate-Limit-Requests-Left | Details how many remaining requests your client can make in the current window before being rate limited. In this case, you would expect to be able to make 6 more requests in the next 3000 milliseconds; on the 7th request within 3000 milliseconds, you would be rate limited and would receive an HTTP 429 response.|\n\nIf your request to the API triggers a [429 Too Many Requests](/api-docs/getting-started/basics/api-status-codes#api-status-codes_4-client-error) response, then you know you’ve been limited.\n\nThe rate limited response will contain the `X-Rate-Limit-Time-Reset-Ms` header, specifying a time (in milliseconds) that your client must wait before its quota has refreshed. Retry the request after this time has elapsed, and your API service will resume as normal.\n"
                        },
                        {
                          "type": "text",
                          "data": "### Example of 429 Status Code\n\nWhen you see a response with an HTTP 429 status code, your client shouldn’t make any further requests until your quota has refreshed:\n\n```\nHTTP/1.1 429 Too Many Requests\n    \tDate: Mon, 03 Feb 2017 20:36:00 GMT\n    \tContent-Type: application/json\n    \tX-Rate-Limit-Time-Reset-Ms: 15000\n```\n\n\nParse the `X-Rate-Limit-Time-Reset-Ms` header to determine how long you have to wait. In this case, it would be 15000 milliseconds.\nYour client can sleep on the specified interval:\n\n```\n   $milliseconds = $response->getHeader(\"X-Rate-Limit-Time-Reset-Ms\");\n    usleep($milliseconds * 1000);\n```\n\n\nAfter waiting for the given number of milliseconds, you can go back to making API requests."
                        },
                        {
                          "type": "text",
                          "data": "### Making Requests in Parallel\nYou might wish to increase the amount of work your application can do in a given unit of time, by sending multiple HTTP requests to the BigCommerce API in parallel. This is perfectly acceptable.\nHowever, your application should monitor the rate limiting headers to avoid an HTTP 429 response. Methods for doing this might include:\n* Slowing your rate of API requests when X-Rate-Limit-Requests-Left is nearing zero.\n* Determining an acceptable average rate of requests, by dividing X-Rate-Limit-Requests-Quota by X-Rate-Limit-Time-Window-Seconds, and then self-throttling to that rate."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Platform Limits\n\nBigCommerce does have limits on the number of products, categories, brands, etc. that can be created in a store. See [Platform Limits](https://forum.bigcommerce.com/s/article/Platform-Limits#product-catalog-limits) for more details.",
                          "header": {
                            "anchor": "best-practices_platform-limits"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n### Related Artices\n* [API Status Codes](https://developer.bigcommerce.com/api-docs/getting-started/api-status-codes)\n* [Platform Limits](https://support.bigcommerce.com/s/article/Platform-Limits#product-catalog-limits) (BigCommerce Knowledge Base)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "API Status Codes",
                    "route": {
                      "path": "/api-status-codes"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>API Status Codes</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#api-status-codes_2-success\">2xx Success</a></li>\n        <li><a href=\"#api-status-codes_3-redirection\">3xx Redirection</a></li>\n        <li><a href=\"#api-status-codes_4-client-error\">4xx Client Error</a></li>\n        <li><a href=\"#api-status-codes_5-server-error\">5xx Server Error</a></li>\n        <li><a href=\"#api-status-codes_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "The BigCommerce API responds to requests with different HTTP status codes depending on the result from the request. Error responses might also include an error message in the body to assist in resolving the problem."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## 2xx Success \n\n2xx codes are returned for requests that were understood and processed successfully.\n\n| Code | Text | Purpose |\n|  |  |  |\n| **200** | **OK** | For successful `GET` and `PUT` requests. |\n| **201** | **Created** | For a successful `POST` request. |\n| **202** | **Accepted** | For a request that resulted in a scheduled task being created to perform the actual request. |\n| **204** | **No Content** | For a successful request that produced no response (such as `DELETE` requests). |",
                          "header": {
                            "anchor": "api-status-codes_2-success"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## 3xx Redirection \n\n3xx codes are returned for requests that require further action.\n\n| Code | Text | Purpose |\n|  |  |  |\n| **301** | **Moved Permanently** | When the API routes have changed (unlikely), or if the incoming request is not secure (`http`), the request will be redirected to the secure (`https`) version. |\n| **304** | **Not Modified** | This response will be sent if the request included an `If-Modified-Since` header, but the resource has *not* been modified since the specified date. Please refer to individual resources' documentation regarding support for the `If-Modified-Since` header. |",
                          "header": {
                            "anchor": "api-status-codes_3-redirection"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## 4xx Client Error \n\n4xx codes are returned for requests that could not be processed due to problems with the request or the data.\n\n| Code | Text | Purpose |\n|  |  |  |\n| **400** | **Bad Request** | Issued when a malformed request was sent.\n| **401** | **Unauthorized** | This response is sent when your client failed to provide credentials or its credentials were invalid. |\n| **403** | **Forbidden** | Returned when permissions do not allow the operation. \n| **404** | **Not Found** | When a particular resource doesn’t exist or couldn’t be found. |\n| **405** | **Method Not Allowed** | The resource was found, but doesn’t support the request method. Issued when either a specific method isn’t yet implemented on a resource, or the resource doesn’t support the method at all. For example, a `PUT` on `/orders` is invalid, but a `PUT` on `/orders/{_id_}` is valid. |\n| **406** | **Not Acceptable** | When the client specifies a response content type in the `Accept` header that is not supported. |\n| **409** | **Conflict** | A change requested by the client is being rejected, due to a condition imposed by the server. The exact reasons for this response will vary from one resource to the next. An example might be attempting to delete a category whose deletion would cause products to be orphaned. Additional information about the conflict, and about how to resolve it, might be available in the response's `details` section. |\n| **413** | **Request Entity Too Large** | When the client requests too many objects. For example, the `limit` parameter exceeded the maximum. |\n| **415** | **Unsupported Media Type** | Returned due to issues with the `Content-Type` header.\n| **422** | **Missing or Invalid Data** | The request cannot be processed either because it omitted required fields or because it contained invalid data. See the response for more details. |\n| **429** | **Too Many Requests** | When an OAuth client exceeds the [rate limit](/api-docs/getting-started/basics/best-practices#best-practices_rate-limits) for API requests to a store. |",
                          "header": {
                            "anchor": "api-status-codes_4-client-error"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## 5xx Server Error \n\n5xx codes are returned for requests that could not be processed due to an internal error with the API or server.\n\n| Code | Text | Purpose |\n|  |  |  |\n| **500** | **Internal Server Error** | When an error has occurred within the API. |\n| **501** | **Not Implemented** | When a request method is sent that is not supported by the API (e.g., `TRACE`, `PATCH`). |\n| **503** | **Service Unavailable** | When the store is marked as “Down for Maintenance,” or the store is being upgraded to a new version. |\n| **507** | **Insufficient Storage** | When the store has reached a limitation for the resource, according to their BigCommerce plan (e.g., 500-product limit). |",
                          "header": {
                            "anchor": "api-status-codes_5-server-error"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Troubleshooting\n\n|Code|Common Causes|Solutions\n|-|-|-|\n|**204**, **301**, and **302**|Redirects| Try the `www` or non-`www` version of the URL.\n|**400**|Invalid syntax, required data missing, `content-type` header missing|Double-check request body for syntax errors and missing data; check `content-type` header.\n|**401** |API credentials are missing or invalid.|Double-check the `access_token` and `client_id`.\n|||Send cURL request with the same credentials to rule app or config issues.\n|**403**| App lacks required OAuth scopes, a store-owner account changed, operations resulting from API request exceed a platform limit, or URL requested is incorrect.|Double-check OAuth Scopes in **control panel** > **API Accounts** or in **Developer Portal** > **My Apps**.\n|||Check the URL. Are the endpoint and store hash correct?\n|||Ensure [platform limits](https://support.bigcommerce.com/s/article/Platform-Limits#product-catalog-limits) have not been reached.\n|**415**| Request headers specify an unsupported `content-type` (or header is missing).|Double-check `content-type` request header.\n|**500**|Expensive API calls or an internal server error in BigCommerce.|Re-attempt the request three to five times, with increasing delays of at least a minute between attempts.\n|||Try reducing the number of objects being requested (in the v2 API, you can request fewer objects by using `?limit={count}`. In  `v2` and `v3` API, fewer objects can be requested by excluding certain fields or only requesting certain fields).\n||| Check the BigCommerce [Status Page](https://status.bigcommerce.com/).",
                          "header": {
                            "anchor": "api-status-codes_troubleshooting"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Building Apps With BigCommerce",
                    "route": {
                      "path": "/building-apps-bigcommerce"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Types of Apps",
                          "route": {
                            "path": "/types-of-apps"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Types of Apps</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#types-of-apps_single-click-apps\"> Single Click Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_connector-apps\"> Connector Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_unlisted-marketplace-apps\"> Unlisted Marketplace Apps</a></li>\n\t\t<li><a href=\"#types-of-personal_apps\"> Personal Apps</a></li>\n\t\t<li><a href=\"#types-of-apps_scripts\"> Scripts</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "The BigCommerce ecosystem facilitates the creation of multiple types of apps. Determining which type of app to create largely depends on the nature and size of the intended user-base. For example, Single Click Apps are listed on the BigCommerce marketplace and can be installed on any BigCommerce store; Personal Apps, on the other hand, are intended for a specific merchant and are not listed on the marketplace. For more information, see the detailed descriptions of each app type below.\n\n## Single Click Apps\n\nSingle-click apps are listed in our App Marketplace, making them available for installation on all BigCommerce stores. The “single-click” app flow does not mean users install the app in a single click, but rather, the app does not require the customer to install OAuth credentials themselves or configure any settings for a third party service.\n\nTo put an app on the Marketplace, you must first be a BigCommerce partner and have your app approved through the App Submission Process. After becoming a partner and having the app approved you have the option of charging merchants to use the app.\nSingle-click apps use the Client ID and Client Secret obtained from the Dev Tools workspace to request an OAuth token during the [single-click app authentication flow.](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_oauth-summary)",
                                "header": {
                                  "anchor": "types-of-apps_single-click-apps"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Connector Apps\n\nSome apps qualify to be listed in the BigCommerce App Marketplace as “Connector” apps. These apps use manual OAuth token creation instead of the single-click app flow.\nWhile we always recommend and prefer the single-click app flow’s programmatic OAuth exchange, certain use cases might not be compatible. \n\nUse Cases:\n- Customized integrations that vary per store.\n- Integrations that do not provide any content for an iframe.\n- Apps that do not provide Web services for OAuth exchange. (For example: offline sync apps.)\n- Apps that do not provide Web or cloud-hosted components for a dashboard.",
                                "header": {
                                  "anchor": "types-of-apps_connector-apps"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Connector apps require the store owner to create API Credentials in the Control Panel and then pass those values into the app manually. The single-click installation process is preferred since it does not require this step."
                                }
                              },
                              {
                                "type": "text",
                                "data": "To create a connector app that uses manual OAuth token creation, make the following selections on the Technical tab when registering your app in Dev Tools:\n\n1. Set the App Type option to Connector.\n2. Enter your app’s Signup URL. This is the URL where a user would begin to configure the connection between your service and the BigCommerce store.\n3. Under OAuth scopes, select the scopes that your app requires for BigCommerce review only. Later, you will need to instruct store users to create a token with the production scopes your app needs.\n\nBigCommerce must review and approve your connector app proposal before we will accept the app’s submission to the Marketplace.\n\nIf you’re interested in submitting your integration as a connector app, please contact out to <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>. to discuss your plan."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Unlisted Marketplace Apps\n\nApproved partners have the option of uploading “unlisted” apps to the App Marketplace. An unlisted app is a published app that does not show up in the public BigCommerce marketplace. To create an unlisted app, you need to be a BigCommerce Partner.\n\nUse Cases:\n- A partner is beta-testing an integration before a full Marketplace launch.\n- A BigCommerce user with several stores wants to install a custom app on all of them. Submitting an unlisted app offers a streamlined alternative to creating separate draft or test apps for each store. To have an app unlisted, please contact\n <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>.",
                                "header": {
                                  "anchor": "types-of-apps_unlisted-marketplace-apps"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Personal Apps\n\nIn some cases, you might want to create an app that uses the Single-click Oauth flow to install in a merchant’s control panel, but you do not want to list the app for sale in the App Marketplace. Personal Apps are draft apps, created from the [Dev Tools](https://devtools.bigcommerce.com/) workspace, that are never published to the App Marketplace and remain in draft status permanently.\n\nUse Cases:\n- You are creating a custom application for a single merchant’s store.\n- You are testing your app before submission, and it doesn’t need to be distributed to other stores.\n\nTo install a Personal app on a store, your Dev Tools login credentials must be the same as the store owner login credentials for the store where you intend to install the app.",
                                "header": {
                                  "anchor": "types-of-personal_apps"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Scripts\n\nYou may wish to write a small program that can make requests against a store’s API that does not install in the store’s control panel. Scripts connect to a store solely through API credentials: they don’t install in the control panel or present a UI to the user.\n\nTo get started with writing scripts, all you need are API Credentials from the store’s Control Panel.  Learn more about [making your first request](/api-docs/getting-started/basics/making-requests) with the BigCommerce API. ",
                                "header": {
                                  "anchor": "types-of-apps_scripts"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Building a BigCommerce App Using Laravel and React](https://medium.com/bigcommerce-developer-blog/building-a-bigcommerce-app-using-laravel-and-react-711ceceb5006) (BigCommerce Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Building an App",
                          "route": {
                            "path": "/building-apps"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Building an App</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#building-apps_oauth-summary\">OAuth Summary</a></li>\n\t\t<li><a href=\"#building-apps_request-headers\">Request Headers</a></li>\n\t\t<li><a href=\"#building-apps_session-timeouts\">Managing Users Session Timeouts</a></li>\n\t\t<li><a href=\"#building-apps_installation-update-sequence\">App Installation and Update Sequence</a></li>\n\t\t<li><a href=\"#building-apps_recieving-get-request\">Receiving the GET Request</a></li>\n\t\t<li><a href=\"#building-apps_responding-get-request\">Responding to the GET Request</a></li>\n        <li><a href=\"#building-apps_making-post-request\">Making the POST Request</a></li>\n        <li><a href=\"#building-apps_recieving-post-request\">Receiving the POST Response</a></li>\n        <li><a href=\"#building-apps_load-uninstall-removal-requests\">Load, Uninstall, and User Removal Requests</a></li>\n        <li><a href=\"#building-apps_processing-signed-payload\">Processing the Signed Payload</a></li>\n        <li><a href=\"#building-apps_multi-user-support\">Multi-User Support</a></li>\n    <li><a href=\"#building-apps_external-app-installation\">External App Installation</a></li>\n    <li><a href=\"#building-apps_user-interface-constraints\">User Interface Constraints<a/></li>\n    <li><a href=\"#building-apps_hosting-your-app\">Hosting Your App </a></li>\n    <li><a href=\"#building-apps_faq\">FAQ</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## OAuth Summary\n\nAPI token creation is a permission reserved for the [store owner](https://forum.bigcommerce.com/s/article/Store-API-Accounts#creating) user account. An app can request authentication “on behalf” of a store owner, allowing the app to make API requests against store data.\n\nTo test an app before release, apply for a [sandbox](https://www.bigcommerce.com/partners/) store.\n \n- When a merchant clicks your app's Install button in the control panel, a [/GET request](#building-apps_recieving-get-request) is sent to your app's [Auth callback URL](#building-apps_recieving-get-request). \n- The /GET request sent from BigCommerce contains a `code` or temporary access token, `client_id`, `client_secret`, `scopes` and [other information](#building-apps_recieving-get-request). Your Auth Callback URL needs to be served over https. You should also have access to your app's server logs which will allow you to see the information in the request.\n- Your app needs to [respond](#building-apps_responding-get-request) to the /GET  with HTML that will be rendered in an iframe in the store's control panel.\n- Your app then needs to make a /POST request back to BigCommerce that contains the code, client_id and client secret. This should be done programmatically. \n- BigCommerce will respond with a permanent Oauth token authorized against the store that has installed your app.\n- After installation, the `store_hash` and `access_token` should be stored somewhere secure so the app does not lose its authorization. ",
                                "header": {
                                  "anchor": "building-apps_oauth-summary"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Request Headers\n\nAPI requests are authenticated by the following HTTP headers:\n\n\n* `X-Auth-Client` -- The Client ID of the requesting app. \n* `X-Auth-Token` -- Access token authorizing an app to access store data on behalf of a user.\n\nIn addition, while not all resources require the Accept and Content-Type headers, many do. To ensure that your calls succeed, always include these headers. For more details on request headers and their accepted values, see [Request Headers](https://developer.bigcommerce.com/api-docs/getting-started/about-our-api#about-api_request-headers).",
                                "header": {
                                  "anchor": "building-apps_request-headers"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Managing Users Session Timeouts\n\nWe recommend that you add BigCommerce’s JavaScript SDK to your Single-Click Apps to protect your apps’ users from getting logged out of the BigCommerce control panel after a period of idleness. To include our SDK, add this script tag to your Single-Click App:\n`<script src=\"//cdn.bigcommerce.com/jssdk/bc-sdk.js\">`\n\n\nOptionally, you can pass a logout callback function within the initialization call:",
                                "header": {
                                  "anchor": "building-apps_session-timeouts"
                                }
                              },
                              {
                                "type": "code",
                                "data": "Bigcommerce.init({\n      onLogout: callback\n});",
                                "header": {
                                  "title": "Logout Callback"
                                }
                              },
                              {
                                "type": "text",
                                "data": "This callback function will run when the user explicitly logs out of the BigCommerce control panel or is automatically logged out. The callback will allow your app to respond to this logout appropriately."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## App Installation and Update Sequence\n\nThe purpose of the App Installation sequence is to obtain an Oauth token for the store installing the app, using the Client ID and Secret from Dev Tools. \n\nA user kicks off the installation or update sequence from within a store's control panel by clicking the “Install” button from your app details page or by clicking an installed app to update its scopes. BigCommerce redirects the user to the Auth Callback URI provided during app registration. The Auth Callback URI must be publicly available, fully qualified, and served over TLS.",
                                "header": {
                                  "anchor": "building-apps_installation-update-sequence"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1536263813949",
                                "header": {
                                  "title": "App Installation Sequence"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Handling Requests Securely\n\nThe request comes from the client browser, rather than directly from BigCommerce. This allows you to use a non-publicly-available Auth Callback URI while testing your app.\n\nFor security, Auth and Load callbacks should be handled server-side. If you are building a client-side application (such as an AngularJS Single Page App), you should handle Auth and Load callbacks outside that application. Use a separate service that accepts the Auth and Load callback requests, generates tokens, validates requests, and then redirects the user to your client-side app’s entry point."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Receiving the GET Request\n\nThe GET request to your Auth Callback URI contains a temporary code that you can exchange for a permanent OAuth token. It also includes a unique value that identifies the store installing or updating your app, as well as authorized scopes.\n\nThe following table details the full list of parameters and values included in the GET request from BigCommerce to your Auth Callback URI. BigCommerce passes these within the URI itself as query parameters.\n\n| Parameter | Description |\n|  |  |\n| code | Temporary code to exchange for a permanent OAuth token. See [Making the POST request](#building-apps_making-post-request) below for more information about this exchange. |\n| scope | List of scopes authorized by the user. As a best practice, your app should validate this list to ensure that it matches the app&#39;s needs, and fail if it does not. However, at this time, the user does not have any opportunity to pick and choose between scopes. The dialog presented to the user requires the user to approve all scopes or none. |\n| context | The store hash: a unique value that identifies the store on which a logged-in user has clicked to install or your app. BigCommerce passes this along with a context path as follows: `stores/{store_hash}`. Save the store hash value, because you will need to pass it in all your requests to the API. |\n\n### Example – Initial Installation\n\nThis example initiates the token exchange, with a requested scope of store_v2_orders:",
                                "header": {
                                  "anchor": "building-apps_recieving-get-request"
                                }
                              },
                              {
                                "type": "code",
                                "data": "GET /auth?code=qr6h3thvbvag2ffq&scope=store_v2_orders&context=stores/g5cd38 HTTP/1.1  \nHost: app.example.com",
                                "header": {
                                  "title": "Initial Installation"
                                },
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Example – Updating Scopes\nThe following example requests a scope of store_v2_products, in addition to the initially requested scope of store_v2_orders:"
                              },
                              {
                                "type": "code",
                                "data": "GET /auth?code=qr6h3thvbvag2ffq&scope=store_v2_orders+store_v2_products&context=stores/g5cd38 HTTP/1.1  \nHost: app.example.com",
                                "header": {
                                  "title": "Updating Scopes"
                                },
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "When your app receives a new token, any previously issued token is invalidated."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Responding to the GET Request\n\nUpon receiving the GET request at your Auth Callback URI, your app should return some HTML to the merchant browser. BigCommerce renders this in an iframe inside of the control panel. It could be a form that collects further information from the user, or you could redirect the user to your app’s main page. If you do not pass back some HTML, the user will be left looking at a blank screen. Such an app would not be accepted into the App Marketplace.",
                                "header": {
                                  "anchor": "building-apps_responding-get-request"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Making the POST Request\n\nThe POST request’s primary purpose is to exchange the temporary access code for a permanent OAuth token. However, your app must pass a number of additional values to accomplish the exchange. Pass the parameters and their values inside the request body, using query parameters and URL-encoding. To achieve this, you must include one of the following HTTP headers:\n\n`Content-Type: application/x-www-form-urlencoded` or `Content-Type: application/json`\n\nMake the POST request to the following address: `https://login.bigcommerce.com/oauth2/token`\n\n### Initial Installation\n\nUpon receiving the POST request during inital installation, BigCommerce marks the status of your app as “Installed”, removes the progress-indicator overlay, and places your app icon in the control panel’s left-hand navigation. With the progress-indicator overlay removed, the user can interact with the HTML that you returned in your GET response.",
                                "header": {
                                  "anchor": "building-apps_making-post-request"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Upon receiving the POST request during initial installation BigCommerce removes the update prompt from the control panel."
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Parameters\n\nInclude values for each of the following parameters.\n\n| Parameter | Description |\n|  |  |\n| client_id | The Client ID for your app, obtained during [registration](https://developer.bigcommerce.com/api-docs/getting-started/authentication#authentication_client-id-secret). |\n| client_secret | The Client Secret for your app, obtained during [registration](https://developer.bigcommerce.com/api-docs/getting-started/authentication#authentication_client-id-secret). |\n| code | Temporary access code received in the [GET request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_recieving-get-request) discussed above. |\n| scope | List of OAuth scopes received in the [GET request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_recieving-get-request) discussed above. |\n| grant_type | Always use the following: authorization_code. |\n| redirect_uri | Must be identical to your registered Auth Callback URI. |\n| context | The store hash received in the [GET request](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_recieving-get-request), in the format: `stores/{_store_hash_}` |\n\n### Examples – Initial Installation"
                              },
                              {
                                "type": "code",
                                "data": "POST /oauth2/token HTTP/1.1\nHost: login.bigcommerce.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 186\nclient_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&code=qr6h3thvbvag2ffq&scope=store_v2_orders&grant_type=authorization_code&redirect_uri=https://app.example.com/oauth&context=stores/{STORE_HASH}",
                                "header": {
                                  "title": "HTTP"
                                },
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "code",
                                "data": "use Bigcommerce\\Api\\Connection;\n$tokenUrl = \"https://login.bigcommerce.com/oauth2/token\";\n$connection = new Connection();\n$connection->useUrlencoded();\n$response = $connection->post($tokenUrl, array(\n    \"client_id\" => \"CLIENT_ID\",\n    \"client_secret\" => \"CLIENT_SECRET\",\n    \"redirect_uri\" => \"https://app.example.com/oauth\",\n    \"grant_type\" => \"authorization_code\",\n    \"code\" => $request->get(\"code\"),\n    \"scope\" => $request->get(\"scope\"),\n    \"context\" => $request->get(\"context\"),\n));\n$token = $response->access_token;",
                                "header": {
                                  "title": "PHP"
                                },
                                "config": {
                                  "mode": "php"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Examples – Updating Scopes\n\nThe following examples request a scope of store_v2_products, in addition to the initially requested scope of store_v2_orders:"
                              },
                              {
                                "type": "code",
                                "data": "POST /oauth2/token HTTP/1.1\nHost: login.bigcommerce.com\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 186\nclient_id={CLIENT_ID}&client_secret={CLIENT_SECRET}&scope=store_v2_orders+store_v2_products&grant_type=authorization_code&redirect_uri=https://app.example.com/oauth&context=stores/{STORE_HASH}",
                                "header": {
                                  "title": "HTTP"
                                },
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "code",
                                "data": "use Bigcommerce\\Api\\Connection;\n$tokenUrl = \"https://login.bigcommerce.com/oauth2/token\";\n$connection = new Connection();\n$connection->useUrlencoded();\n$response = $connection->post($tokenUrl, array(\n    \"client_id\" => \"CLIENT_ID\",\n    \"client_secret\" => \"CLIENT_SECRET\",\n    \"redirect_uri\" => \"https://app.example.com/oauth\",\n    \"grant_type\" => \"authorization_code\",\n    \"code\" => $request->get(\"code\"),\n    \"scope\" => $request->get(\"scope\"),\n    \"context\" => $request->get(\"context\"),\n));\n\n$token = $response->access_token;",
                                "header": {
                                  "title": "PHP"
                                },
                                "config": {
                                  "mode": "php"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Receiving the POST Response\n\nThe POST response will include a JSON object containing the permanent OAuth token, user information, and other values. Upon receiving the permanent OAuth token, store it securely. You should also store the user and store hash values, to identify the user and store at load and uninstall. The following sections detail the contents of the JSON body.\n\n### JSON Values\n| Name | Data Type | Value Description |\n|  |  |  |\n| access_token | string | The permanent OAuth token that your app can use to make requests to the Stores API on behalf of the user. Store this value securely. |\n| scope | string | List of authorization scopes. |\n| id | integer | Unique identifier for the user. Store this value to identify the user at load and uninstall. |\n| email | string | The user’s email address. Store this value to identify the user at load and uninstall. |\n| context | string | The store hash, as well as a base path: `stores/{_store_hash_}` |",
                                "header": {
                                  "anchor": "building-apps_recieving-post-request"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"access_token\": \"ACCESS_TOKEN\",\n  \"scope\": \"store_v2_orders\",\n  \"user\": {\n    \"id\": 24654,\n    \"email\": \"merchant@mybigcommerce.com\"\n  },\n  \"context\": \"stores/STORE_HASH\"\n}",
                                "header": {
                                  "title": "Initial Installation"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "Update requests will refresh the payload’s access_token and scope values. Here again, the following example requests a scope of store_v2_products, in addition to the initially requested scope of store_v2_orders:"
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"access_token\": \"ACCESS_TOKEN\",\n  \"scope\": \"store_v2_orders store_v2_products\",\n  \"user\": {\n    \"id\": 24654,\n    \"email\": \"merchant@mybigcommerce.com\"\n  },\n  \"context\": \"stores/STORE_HASH\"\n}",
                                "header": {
                                  "title": "Updating Scopes"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Load, Uninstall, and User Removal Requests\nIn addition to the Auth Callback URI, the following URI’s are required for BigCommerce Apps:\n\n| Name | Required? | Event Discussion |\n|  |  |  |\n| Load Callback URI | Yes | Called when the store owner or user clicks to load your app. |\n| Uninstall Callback URI | No | Called when the store owner clicks to uninstall your app. |\n| Remove User Callback URI | No | Called when the store admin revokes a user's access to your app. |\n\nEach event listed here triggers a GET request from BigCommerce containing a signed payload that allows your app to:\n- Verify that the request came from BigCommerce.\n- Identify the store.\n- Identify the store owner or user.\n\n### Load Request and Response\n\nOnce your app has been installed, the store owner or user can click its icon in the control panel to launch it. This causes BigCommerce to send a GET request to the Load Callback URI that you provided during app registration. In a production environment, the Load Callback URI must be publicly available, fully qualified, and served over TLS/SSL.\n\n```\nThe GET request contains a signed payload, as shown below.\nGET /load?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\nHost: app.example.com\n```\n\nUpon receiving a GET request to the Load Callback URI, your app needs to [process the signed payload](#building-apps_processing-signed-payload). After processing the payload, your app returns its user interface as HTML. BigCommerce renders this inside of an iframe. Please see [User Interface Constraints](#building-apps_user-interface-constraints) for important information about your app’s user interface.\n\n### Uninstall Request (Optional)\n\nStore owners have the option to uninstall any app at any time. When a store owner uninstalls an app, the app’s OAuth token is revoked and the app cannot make requests to the Stores API on the store’s behalf anymore.\n\nYou do not need to provide an Uninstall Callback URI. The lack of an Uninstall Callback URI does not prevent uninstallation. Instead, the Uninstall Callback URI allows you to track store owners who uninstall your app and to run cleanup operations, such as removing the store’s user accounts from your system.\n\nShould you choose to provide an Uninstall Callback URI, please note that it must be publicly available, fully qualified, and served over TLS/SSL. If provided, BigCommerce will send a GET request to your Uninstall Callback URI when a store owner clicks to uninstall your app.\n\nExample of a GET Request sent to the Uninstall Callback URI\n```\nGET /uninstall?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\n\tHost: app.example.com\n```\nUpon receiving the GET request, your app will need to process the signed payload.",
                                "header": {
                                  "anchor": "building-apps_load-uninstall-removal-requests"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Remove User Request (Optional)\n\nIf you have not enabled [multi-user](#building-apps_multi-user-support) support, you will not provide a Remove User Callback URI and can ignore this section. If you enable multi-user support, you can optionally specify a Remove User Callback URI. It must be fully qualified, publicly available, and served over TLS/SSL. BigCommerce will send a GETrequest to your Remove User Callback URI when a store admin revokes a user’s access to your app. \n\n### Example -- Get Request sent to the Remove User URI:"
                              },
                              {
                                "type": "code",
                                "data": "GET /remove-user?signed_payload=hw9fhkx2ureq.t73sk8y80jx9 HTTP/1.1\nHost: app.example.com",
                                "header": {
                                  "title": "Remove User URI"
                                },
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "text",
                                "data": "Upon receiving the GET request, your app will need to process the signed payload."
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Any HTML that you return in your response for uninstalling an app or removing a user will not render in the response.",
                                  "type": "warning"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Processing the Signed Payload\n\nProcessing the signed payload involves splitting and decoding it, verifying the HMAC signature, and processing the JSON object.\n\n### Splitting and Decoding the Signed Payload\n\nThe signed payload is a string containing a base64 url-encoded JSON string and a base64 url-encoded HMAC signature. The parts are delimited by the `.` character:\n\n```\nencoded_json_string.encoded_hmac_signature\n```\n\n\nTo decode the signed payload, complete the following steps:\n1. Split signed_payload into its two parts at the `.` delimiter.\n2. Decode encoded_json_string using base64url.\n3. Convert the decoded JSON string into an object. See Processing the JSON object for more about this object.\n4. Decode encoded_hmac_signature using base64url.\n5. Use your client secret to verify the signature. See the next section for more details.\n\n### Verifying the HMAC Signature\n\nTo verify the payload, you need to sign the payload using your client secret, and confirm that it matches the signature that was sent in the request.",
                                "header": {
                                  "anchor": "building-apps_processing-signed-payload"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "To limit the vulnerability of your app to timing attacks, we recommend using a constant time-string comparison function, rather than the equality operator, to check that the signatures match."
                                }
                              },
                              {
                                "type": "code",
                                "data": "function verifySignedRequest($signedRequest)\n{\n    list($encodedData, $encodedSignature) = explode('.', $signedRequest, 2);\n\n    // decode the data\n    $signature = base64_decode($encodedSignature);\n        $jsonStr = base64_decode($encodedData);\n    $data = json_decode($jsonStr, true);\n\n    // confirm the signature\n    $expectedSignature = hash_hmac('sha256', $jsonStr, $clientSecret(), $raw = false);\n    if (!hash_equals($expectedSignature, $signature)) {\n        error_log('Bad signed request from BigCommerce!');\n        return null;\n    }\n    return $data;\n}",
                                "header": {
                                  "title": "verifySignedRequest"
                                },
                                "config": {
                                  "mode": "php"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "!hash_equals is available in PHP 5.6 and later. If you are running an older version of PHP, pull in a compatibility library such as the following: https://packagist.org/packages/realityking/hash_equals. BigCommerce’s sample app hello-world-app-php-silex app does this automatically."
                                }
                              },
                              {
                                "type": "code",
                                "data": "require \"base64\"\nrequire \"openssl\"\n\ndef verify(signed_payload, client_secret)\n  message_parts = signed_payload.split(\".\")\n\n  encoded_json_payload = message_parts[0]\n  encoded_hmac_signature = message_parts[1]\n\n  payload_object = Base64.strict_decode(encoded_json_payload)\n  provided_signature = Base64.strict_decode(encoded_hmac_signature)\n\n  expected_signature = OpenSSL::HMAC::hexdigest(\"sha256\", client_secret, payload_object)\n\n  return false unless secure_compare(expected_signature, provided_signature)\n\n  JSON.parse(payload_object)\nend\n\ndef secure_compare(a, b)\n  return false if a.blank? || b.blank? || a.bytesize != b.bytesize\n  l = a.unpack \"C#{a.bytesize}\"\n\n  res = 0\n  b.each_byte { |byte| res |= byte ^ l.shift }\n  res == 0\nend\n",
                                "header": {
                                  "title": "verify()"
                                },
                                "config": {
                                  "mode": "ruby"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Processing the JSON Object\n\nThe JSON object embedded in the signed_payload contains information about the BigCommerce store and the store owner or user.\n\n### Identifying the Store\nUse the store information endpoint to identify the store to which the request pertains.\n\n### Interpreting the User Information\n\nInterpreting the user information varies as follows:\n\n| Request type | Multiple users enabled | Multiple users not enabled |\n|  |  |  |\n| Load | Compare the user information to see if it matches that of the store owner (received at the time of [app installation](#building-apps_installation-update-sequence)) or that of an existing user. If the user information does not match either of these, then it represents a new user that you should add to your database or other storage. | The information should match that of the store owner, received at the time of [app installation](#building-apps_installation-update-sequence). |\n| Uninstall | The user information should match that of the store owner. Only the store owner can uninstall your app. | Should match the store owner. |\n| Remove user | The user information should match one of the users that you have stored. After locating the stored user, delete it from your database or other storage. | N/A |\n\n### JSON Values\n\n| Name | Data Type | Value Description |\n|  |  |  |\n| user.id | integer | Unique identifier for the user who initiated the callback. |\n| user.email | string | Email address of the user who initiated the callback. |\n| owner.id | integer | Unique identifier for the user listed as the store owner. |\n| owner.email | string | Email address of the user listed as the store owner. |\n| context | string | The context value is part of the API path for this store and includes the store_hash. |\n| store_hash | string |Unique identifier for the store. |\n| timestamp | float | The time (in Unix time) when the callback was generated.|"
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"user\":\n         {\n        \"id\":9128,\n        \"email\":\"user@mybigcommerce.com\"\n     },\n     \"owner\":\n          {\n         \"id\":9128,\n         \"email\":\"user@mybigcommerce.com\"\n     },\n     \"context\":\"stores/z4zn3wo\",\n     \"store_hash\":\"z4zn3wo\",\n     \"timestamp\":1469823892.9123988\n}",
                                "header": {
                                  "title": "User Information"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Multi-User Support\n\nWhen you register your app with BigCommerce, enabling multi-user support will allow store admins to manually authorize users – other than the store owner – to load the app. \n\nAs soon as you enable multi-user support, the control panel of any store that has your app installed will be affected. If you already have an app published in the App Marketplace, be aware that this setting takes effect immediately. Therefore, we recommend testing your multi-user support using a separate app that is in draft status.\n\nLet your customers know that you’ve enabled this feature. Otherwise, they won’t know that they can start granting access to users.\n\nIf multi-user support is added after your app has launched, the update will cause the app scopes to change and users will be alerted of the new permission request.\n\n### The Control Panel Experience\nStore admins will be able to adjust user permissions to grant/deny other store users’ access to your app. The next time the user logs in, they will see any apps for which they have been granted access. The user can then click on the app icon in the left navigation to load it.\nUse your draft app and your sandbox store to review this behavior.\n\n### The Load Request\nApps that support multiple users can expect the email and ID of the user that initiated the callback in addition to the owner’s email and ID in the JSON object sent in the load request. If a load request is sent with information for a user you haven’t seen yet, you should provision the user account and associate it with the store in your database.\n\nBecause you know the store owner’s email and ID from the App Installation sequence, your app can distinguish store owners from other users. This allows you to provide different user experiences based on the information in the load request. Here is a summary of the two types of users:\n\n- Store owner: Can install, uninstall, and load apps.\n- Users: Cannot install or uninstall apps. Permitted only to load the apps that a store admin has authorized.\n\nFor further details, please see [Load Request and Response](#building-apps_load-uninstall-removal-requests).\n\n### The Remove User Request\nIn addition to their ability to add users, store admins can also remove users. This action generates a GET request to the Remove User Callback URI that you provided in My Apps. Your app the user identified in the request from its records.\n\nFor further information, please see [Remove User Request](#building-apps_load-uninstall-removal-requests).",
                                "header": {
                                  "anchor": "building-apps_multi-user-support"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## External App Installation\n\nApps can be installed from outside the BigCommerce control panel. For example, you could create an install link on your company’s site that directs the merchant to download your app. This section provides a step-by-step guide.\n\n### Create an Install Button\n\nFirst, embed an install button like the one below, at any web location from which you’d like to enable app installation:",
                                "header": {
                                  "anchor": "building-apps_external-app-installation"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6490/1539297285625"
                              },
                              {
                                "type": "text",
                                "data": "Redirect anyone who presses your button to: `https://login.bigcommerce.com/app/<your-app's-client-id>/install`\n\n"
                              },
                              {
                                "type": "text",
                                "data": "### Configure Your Button\nUpon clicking, your button should open a modal similar to the image below. We recommend a modal sized 900px wide by 450px high."
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6490/1539297431440"
                              },
                              {
                                "type": "text",
                                "data": "Your button will link merchants to BigCommerce’s install endpoint for your application. Once the merchant clicks the link, they will be prompted to log in, then authorize your application, just like in the [normal installation flow](#building-apps_installation-update-sequence)."
                              },
                              {
                                "type": "text",
                                "data": "### Render Success/Failure Pages\n\nModify your application code to serve either a success or failure page, depending on whether the external installation was successful or unsuccessful.\n\nIf you skip this step, your application will load in the iframe created by your button. To ensure a good experience for your merchants, we strongly recommend that you return a confirmation page, instead of allowing your application to be loaded in that modal.\n\n### Handling Errors\n\nIf your application’s installation was initiated and completed through an external link, BigCommerce will send your auth callback endpoint an extra parameter called external_install.\nIf you receive this parameter and there are no errors, call:\n\n`https://login.bigcommerce.com/app/<your_app_client_id>/install/succeeded`\n\nIf there were errors, call:\n`https://login.bigcommerce.com/app/<your_app_client_id>/install/failed`\n\nBelow is a sample code snippet of an auth callback that does this:",
                                "header": {}
                              },
                              {
                                "type": "code",
                                "data": "   if params['external_install']\n        return get 'https://login.bigcommerce.com/app/m8e1mkkmjw2xjinydqz7ie05to1y2nk/install/succeeded'\n    end\n\n    redirect '/'\n\nrescue => e\n    if params['external_install']\n        return get 'https://login.bigcommerce.com/app/m8e1mkkmjw2xjinydqz7ie05to1y2nk/install/failed'\n    end",
                                "header": {
                                  "title": "Auth Callback"
                                }
                              },
                              {
                                "type": "text",
                                "data": "Depending on which endpoint you call, we will render one of the following success/failed pages to the modal."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## User Interface Constraints\n\nSingle-click apps benefit from a high level of integration with the BigCommerce platform. Users interacting with your app will enjoy a seamless experience. BigCommerce achieves this by rendering your app&#39;s user interface inside of an iframe within the control panel. To ensure acceptance into the App Marketplace, your app should be able to perform all of its functions inside of the iframe.\n\nWhile very usable and friendly, the iframe approach does require special attention from app developers. The remainder of this page discusses several functional areas to consider when designing and developing your app.\n\n### About Mixed Content\n\nThe BigCommerce control panel is served over TLS/SSL. Your app must be hosted on a web server that accepts and sends TLS/SSL requests. In addition, all of the resources referenced in the HTML that you present to the end users must be served over TLS/SSL. You may find protocol-agnostic addressing helpful.\n\nIf the user interface retrieves images, scripts, or other assets over a connection not encrypted with TLS/SSL, the user will experience errors and possibly an inability to interact with your app. Before submitting your app, use an <a href=\"https://www.jitbit.com/sslcheck/\" target=\"_blank\">online crawler</a> to check for insecure content.\n\n### About Same-Origin Policies\n\n<a href=\"http://en.wikipedia.org/wiki/Same-origin_policy\" target=\"_blank\">Same-origin policies</a> restrict apps running within iframes from performing certain activities, such as interacting with other services and making OAuth connections. While apps that operate within the BigCommerce iframe get strong preference during App Marketplace considerations, we sometimes make exceptions for apps that need to interact with, and authenticate to, other services. If your app requires this, we advise you to open a new tab for actions that cannot occur within the iframe.\n\n### About P3P and Cookies\n\nInternet Explorer is one of the browsers that BigCommerce [supports](#supported-browsers), and our merchants do use it to access the control panel. If your app needs to set a cookie, you will need to craft a <a href=\"http://en.wikipedia.org/wiki/P3P\" target=\"_blank\">P3P policy</a>. Otherwise, your app will experience issues on Internet Explorer. Please see the following pages for more information:\n\n*   <a href=\"http://www.techrepublic.com/blog/software-engineer/craft-a-p3p-policy-to-make-ie-behave/\" target=\"_blank\">Craft a P3P policy to make IE behave</a>\n*   <a href=\"http://blogs.msdn.com/b/ieinternals/archive/2013/09/17/simple-introduction-to-p3p-cookie-blocking-frame.aspx\" target=\"_blank\">MSDN Intro to P3P Cookie Blocking</a>",
                                "header": {
                                  "anchor": "building-apps_user-interface-constraints"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Hosting Your App\nBigCommerce stores are hosted on [Google Cloud Platform](https://cloud.google.com/) in the [us-central1](https://cloud.google.com/compute/docs/regions-zones/) region.\n\nTherefore, you can maximize performance of your app (in terms of latency to the public API) by hosting in the same region. There is no requirement to do so, and you may host wherever you like.",
                                "header": {
                                  "anchor": "building-apps_hosting-your-app"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## FAQ\n\n**How can I make API calls?**   \nWe have built several [Hello World](https://developer.bigcommerce.com/tools-resources) apps to get you started quickly. You can use these apps as a starting point or an example for building a Single-click app. \n\nIf you'd like to make test API requests without the overhead of installing a draft app, you can generate [API Credentials](https://developer.bigcommerce.com/api-docs/getting-started/authentication#authentication_getting-api-credentials) by creating an API Account in your store's control panel.\n\n**How can I sell my app?**  \nThe first step to listing an app in the BigCommerce App Marketplace is to apply to the BigCommerce [partner program](https://www.bigcommerce.com/partners/). \n\nFor more details on including your app in the Marketplace, see [App Store Approval Requirements](https://developer.bigcommerce.com/api-docs/partner/app-store-approval-requirements).",
                                "header": {
                                  "anchor": "building-apps_faq"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Tools\n* [Online Crawler](https://www.jitbit.com/sslcheck/) (JitBit)\n### Sample Apps\n* [Ruby Hello World](https://github.com/bigcommerce/omniauth-bigcommerce) (BigCommerce GitHub)\n* [Python Hello World](https://github.com/bigcommerce/hello-world-app-python-flask) (BigCommerce GitHub)\n### Related Articles\n* [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication)\n* [Customer Login API](https://developer.bigcommerce.com/api-docs/customers/customer-login-api)\n* [App Store Approval Requirements](https://developer.bigcommerce.com/api-docs/partner/app-store-approval-requirements)\n* [Store Accounts](https://support.bigcommerce.com/s/article/Store-API-Accounts#creating) (Knowledge Base)\n* [Supported Browsers](https://support.bigcommerce.com/s/article/Themes-Supported-Browsers) (Knowledge Base)\n* [BigCommerce Partners](https://www.bigcommerce.com/partners/) (BigCommerce)\n* [How to Test App Authentication Locally with ngrok](https://medium.com/bigcommerce-developer-blog/how-to-test-app-authentication-locally-with-ngrok-149150bfe4cf) (BigCommerce Developer Blog)\n* [Building a BigCommerce App Using Laravel and React](https://medium.com/bigcommerce-developer-blog/building-a-bigcommerce-app-using-laravel-and-react-711ceceb5006) (BigCommerce Developer Blog)\n### Additonal Resources\n* [Same Origin Policy](https://en.wikipedia.org/wiki/Same-origin_policy) (Wikipedia)\n* [Craft a P3P Policy to Make IE Behave](https://www.techrepublic.com/blog/software-engineer/craft-a-p3p-policy-to-make-ie-behave/) (Tech Republic)\n* [Quick Look at P3P](https://blogs.msdn.microsoft.com/ieinternals/2013/09/17/a-quick-look-at-p3p/) (Microsoft Blogs)\n* [Google Cloud](https://cloud.google.com/) (Google)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Webhooks",
                    "route": {
                      "path": "/webhooks"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Overview",
                          "route": {
                            "path": "/about-webhooks"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Webhooks Overview</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#about-webhooks_authentication\">Authentication</a></li>\n        <li><a href=\"#about-webhooks_lightweight-callback-payload\">Lightweight Callback Payload</a></li>\n        <li><a href=\"#about-webhooks_request-and-response\">Request and Response</a></li>\n    \t\t<li><a href=\"#about-webhooks_receiving-the-callback\">Recieving the Callback</a></li>\n    \t\t<li><a href=\"#about-webhooks_respond-to-webhook-callbacks\">Responding to the Callback</a></li>\n        <li><a href=\"#about-webhooks_callback-retry-mechanism\">Callback Retry Mechanism</a></li>\n        <li><a href=\"#about-webhooks_webhook-security\">Webhook Security</a></li>\n    \t\t<li><a href=\"#about-webhooks_webhook-troubleshooting\">Troubleshooting</a></li>\n        <li><a href=\"#about-webhooks_tools-for-debugging-and-testing-webhooks\">Tools for Debugging</a></li>\n        <li><a href=\"/api-docs/getting-started/webhooks/webhook-events\">All Available Webhooks</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Webhooks allow app developers to be notified, in near real-time, when specific events occur on a BigCommerce store. For example, your app may need to perform an action when a new order is created, a product’s inventory decreases, or an item is added to a shopper’s cart. When a subscribed event occurs on a store, BigCommerce will POST a payload to your app’s callback URI so your app can take some action based on that event."
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "title": "Multiple Events Are Triggered during Bulk Data Imports",
                                  "body": "Bulk data imports will trigger the relevant events for every record affected. For example, if you have a hook on `store/product/created`, when the merchant imports 2,000 products, we will send 2,000 individual callback events."
                                },
                                "header": {}
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Authentication\n\nWebhooks are authenticated using Oauth and support the JSON media type. Basic auth and XML are not supported.\n\nBefore you  can begin to send and receive requests, you must have the following:\n\n* **A store:** You can get a sandbox store by joining the Partner Program.\n* **OAuth Client ID:** Obtained by creating an API Account.\n* **OAuth token:** Obtained by creating an API Account.\n* **Valid TLS/SSL configuration:** Verify your app server’s setup at the following site: [https://sslcheck.globalsign.com](https://sslcheck.globalsign.com)",
                                "header": {
                                  "anchor": "about-webhooks_authentication"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "error",
                                  "title": "Connection Breakers",
                                  "body": "Any one of the following conditions on your app server will cause a connection failure:\n* Hostname/DNS mismatch.\n* Self-signed certificate.\n* Intermediate certificates not loaded."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Lightweight Callback Payload\n\nWhen a subscribed event occurs, we send a light payload with only minimum details regarding the event that’s been triggered. This gives you maximum flexibility as to how you want to handle the notification in your application. For instance, if you subscribe to the `store/order/statusUpdated` event, we’ll send you the order ID when the status is updated. You might want to handle the notification by fetching the full order details via a request to the Orders resource.\n\nAn example payload follows:",
                                "header": {
                                  "anchor": "about-webhooks_lightweight-callback-payload"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n \"store_id\":11111,\n \"producer\":\"stores/abcde\",\n \"scope\":\"store/order/statusUpdated\",\n \"data\":{\n         \"type\":\"order\",\n         \"id\":173331\n        },\n \"hash\":\"3f9ea420af83450d7ef9f78b08c8af25b2213637\"\n }",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "| Name | Definition |\n| -- | -- |\n| store_id | A numerical identifier that is unique to each store. |\n| producer | Will always follow the pattern `stores/store_hash`. This is the store that created the webhook. |\n| scope | The [event](/api-docs/getting-started/webhooks/webhook-events) registered when the webhook was created. |\n| data | A lightweight description of the [event](/api-docs/getting-started/webhooks/webhook-events) that triggered the webhook. Will vary depending on the event registered. |\n| hash | The payload data json encoded then passed through sh1 encryption. |"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Request and Response\n\n*Never worked with webhooks before? Check out the tutorial on creating webhooks.*\n\nAll webhooks requests must include the following in their HTTP headers:",
                                "header": {
                                  "anchor": "about-webhooks_request-and-response"
                                }
                              },
                              {
                                "type": "code",
                                "data": "Accept: application/json\nContent-Type: application/json\nX-Auth-Client: <the OAuth client id>\nX-Auth-Token: <the OAuth token>",
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "code",
                                "data": "curl -X POST \\\n  https://api.bigcommerce.com/stores/store_hash/v2/hooks \\\n  -H 'Accept: application/json' \\\n  -H 'X-Auth-Client: your-client-id \\\n  -H 'X-Auth-Token: your-auth-token \\\n  -d '{\n  \"scope\": \"store/cart/lineItem/*\",\n  \"destination\": \"https://myapp.herokuapp.com/\",\n  \"is_active\": true",
                                "header": {
                                  "title": "/POST Webhook ",
                                  "subtitle": "Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks",
                                  "anchor": "post-webhooks"
                                },
                                "config": {
                                  "mode": "shell"
                                }
                              },
                              {
                                "type": "code",
                                "data": "    {\n        \"id\": 14270456,\n        \"client_id\": \"your-client-id\",\n        \"store_hash\": \"your_store_hash\",\n        \"scope\": \"store/cart/lineItem/*\",\n        \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n        \"headers\": null,\n        \"is_active\": true,\n        \"created_at\": 1531326542,\n        \"updated_at\": 1531337178\n    }",
                                "header": {
                                  "title": "Response 201 Created",
                                  "subtitle": "/POST Webhook",
                                  "anchor": "response-post-webhooks"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "| Name |Description | Type\n|--|--|--|\n| id | A read-only value that uniquely identifies a webhook object. Do not attempt to set this value in a PUT or POST. | integer|\n| client_id | The OAuth client ID that uniquely identifies your application. BigCommerce returns this name-value pair in the JSON body of its responses. | string |\n| store_hash | \tThe hash value that uniquely identifies the store. Your application does not need to set this value via the JSON object; instead, you pass it in the path of your API requests. | string |\n|scope| Value is the event you would like to listen for. See List of Webhook Events for the full list of possibilities. Wild Cards are supported for scope. **(Required)** | string |\n| destination | value is the callback’s fully qualified URI. This should be an endpoint configured on your app server to receive webhook payloads. **(Required)** | string |\n| headers |The headers object contains one or more name-value pairs, both string values. If you choose to include a headers object, BigCommerce will include the name-value pair(s) in the HTTP header of its POST requests to your callback URI at runtime. While this feature could be used for any purpose, one is to use it to set a secret authorization key and check it at runtime. This provides an additional level of assurance that the POST request came from BigCommerce instead of some other party, such as a malicious actor. (Optional) | string |\n|is_active | Value specifies whether a webhook is active or inactive. By default, new webhooks will be set to be inactive and will have a blank value. If you want to create a webhook that should be active initially, you can pass the following name-value pair: \"is_active\": true. (Optional) | boolean |\n| created_at | The time at which the webhook was created.| date-time Unix Epoch|\n| updated_at | The time at which the webhook was last updated. | date-time Unix Epock|"
                              },
                              {
                                "type": "text",
                                "data": "An HTTP 201 response indicates that the webhook was set successfully."
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "body": "Following the creation of a webhook, it can take up to one minute for BigCommerce to start sending POST requests to your callback URI.",
                                  "title": "One-Minute Timeout"
                                }
                              },
                              {
                                "type": "code",
                                "data": "//Response 200 OK\n\n[\n    {\n        \"id\": 14270466,\n        \"client_id\": \"your-client-id\",\n        \"store_hash\": \"your_store_hash\",\n        \"scope\": \"store/product/created\",\n        \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n        \"headers\": null,\n        \"is_active\": true,\n        \"created_at\": 1531326542,\n        \"updated_at\": 1531337178\n    },\n    {\n        \"id\": 14270713,\n        \"client_id\": \"your-client-id\",\n        \"store_hash\": \"your_store_hash\",\n        \"scope\": \"store/product/updated\",\n        \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n        \"headers\": null,\n        \"is_active\": false,\n        \"created_at\": 1531338589,\n        \"updated_at\": 1531338589\n    }\n]\n",
                                "header": {
                                  "title": "/GET All Webhooks",
                                  "subtitle": "Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks",
                                  "anchor": "get-all-webhooks"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"id\": 14270466,\n    \"client_id\": \"your-client-id\",\n    \"store_hash\": \"your_store_hash\",\n    \"scope\": \"store/product/created\",\n    \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n    \"headers\": null,\n    \"is_active\": false,\n    \"created_at\": 1531326542,\n    \"updated_at\": 1531337178\n}\n\n",
                                "header": {
                                  "subtitle": "To get a single webhook use the `id`.  Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id",
                                  "title": "/GET a Single Webhook",
                                  "anchor": "get-a-single-webhook"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n \"scope\": \"store/product/updated\",\n \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n \"is_active\": false\n}\n\n\n//Response 200 OK\n\n{\n    \"id\": 14270466,\n    \"client_id\": \"ejoftto9hv8xlip01cckcg53v7g3lrl\",\n    \"store_hash\": \"jrah6gmn\",\n    \"scope\": \"store/product/created\",\n    \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n    \"headers\": null,\n    \"is_active\": false,\n    \"created_at\": 1531326542,\n    \"updated_at\": 1531337178\n}\n",
                                "header": {
                                  "title": "/PUT Webhook",
                                  "subtitle": "Update a webhook using the id. Once the webhook is created all the fields below can be changed via an update request. Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id",
                                  "anchor": "update-a-webhook"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "code",
                                "data": "//Response 200 OK\n{\n    \"id\": 14270466,\n    \"client_id\": \"ejoftto9hv8xlip01cckcg53v7g3lrl\",\n    \"store_hash\": \"jrah6gmn\",\n    \"scope\": \"store/product/created\",\n    \"destination\": \"https://779aca97.ngrok.io/webhooks\",\n    \"headers\": null,\n    \"is_active\": false,\n    \"created_at\": 1531326542,\n    \"updated_at\": 1531337178\n}\n",
                                "header": {
                                  "title": "/DELETE a Wehbook",
                                  "subtitle": "Request: https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks/id"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "There is not a way to delete all webhooks on a store. Run a GET request for the webhook id, then send a request to the delete URI to remove each one. It returns a 200 OK for the response with the deleted hook. When requesting a list of hook, the hook id is not available.\n\nIf webhooks are no longer being used, either delete them or set `is_active:false`."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Receiving the Callback\n\nYou’ll need to build an application and configure your server to receive the callback we send when events are triggered. \n\nNeed to set up a quick destination URL for testing? See Tools for Debugging and Testing Webhooks.",
                                "header": {
                                  "anchor": "about-webhooks_receiving-the-callback"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Respond to Webhook Callbacks\n\nYou’ll need to build an application and configure your server to receive the callback we send when events are triggered.\n\nTo acknowledge that you received the webhook without issue, your server should return a 200 HTTP status code. Any other information you return in the request headers or request body will be ignored. Any response code outside the 200 range, including 3_xx_ codes, will indicate to us that you did not receive the webhook. When a webhook is not received (for whatever reason), we will retry the callback as described below.\n\nNeed to set up a quick destination URL for testing? See [Tools for testing webhooks.](#about-webhooks_tools-for-debugging-and-testing-webhooks)",
                                "header": {
                                  "anchor": "about-webhooks_respond-to-webhook-callbacks"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Callback Retry Mechanism\n\nThe webhooks service will do its best to deliver events to your callback URI. If your server indicates that the webhook payload has not been received, the dispatch service will take the following actions:\nIf an app server responds to a webhook payload with anything other than a 2_xx_ response, or times out, the app will be blocked for 60 seconds.\nWebhooks created during that 60-second block will be queued up to send on the next scheduled retry attempt after the block expires, so that webhooks are not lost.\n\nThe webhook dispatcher will then attempt several retries (at increasing intervals) until the maximum retry limit is reached.\n\n### Retry Intervals\n\n* 60 seconds after the most recent failure  \n* 180 seconds after the most recent failure  \n* 180 seconds after the most recent failure  \n* 300 seconds after the most recent failure  \n* 600 seconds after the most recent failure  \n* 900 seconds after the most recent failure  \n* 1800 seconds after the most recent failure  \n* 3600 seconds after the most recent failure  \n* 7200 seconds after the most recent failure  \n* 21600 seconds after the most recent failure  \n* 50400 seconds after the most recent failure  \n* 86400 seconds (24 hours) after the most recent failure\n\nAfter the final retry attempt (cumulatively, 48 hours after the first delivery attempt), the webhook will automatically be deactivated, and we will send an email to the developer’s email address registered on the subscribing app. You can reactivate the webhook by setting the `is_active` flag back to true via a `/PUT` request to the hooks resource.",
                                "header": {
                                  "anchor": "about-webhooks_callback-retry-mechanism"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Webhook Security\nTo ensure that webhook payloads are secure against activity by a malicious actor, we take a three-pronged approach:\n\n* Webhook payloads contain minimal information about the store and event, for example the ID identifying the order or cart. To access potentially sensitive information on a store, a malicious actor would need to be fully authenticated against that store’s API in order to request full details.\n* Webhook payloads are sent over a TLS-encrypted connection.\n* For added security, you can include custom headers in your webhook creation request, and these headers will be sent in the payload when an event you subscribe to occurs. If your app endpoint is secured by basic authentication, you could set your own basic auth headers to authenticate the payload at runtime.",
                                "header": {
                                  "anchor": "about-webhooks_webhook-security"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\"scope\": \"store/cart/lineItem/*\",\n  \"destination\": \"https://myapp.herokuapp.com/\",\n  \"is_active\": true,\n  \"headers\": {\n  \t\"User-Name\": \"Hello\",\n  \t\"Password\": \"Goodbye\"\n  }\n}",
                                "header": {
                                  "title": "Webhook Customer Header Example"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Troubleshooting\n\n### Why am I not receiving event payloads to my callback URI?\nIf your app does not return an HTTP 2_xx_ to BigCommerce after receiving the webhook event payload, BigCommerce considers it a failure. BigCommerce will keep trying for a little over 48 hours. At the end of that time, BigCommerce sends an email to the email address set during app registration and disables the webhook by setting the is_active flag to false.\n\nYou can proactively check to make sure that everything is OK by periodically making a GET request and checking the is_active flag.\n\nIf you receive an email or discover that the is_active flag has been flipped to false, try the following:\n\nCheck to see if your app is responding to the event payload with something other than HTTP 200.\nCheck to make sure that your server has a valid TLS/SSL setup. One way to do this is by visiting the following website: https://sslcheck.globalsign.com. Any of the following will cause the TLS/SSL handshake to fail:\nSelf-signed certificate.\nHost name of the certificate does not match the server’s DNS.\nYour server’s key or trust store has not been loaded up with the intermediate certificates necessary to establish the chain of trust.\nOnce you have resolved the issue preventing the connection, send a PUT request to flip the is_active flag back to true. This will cause BigCommerce to start sending the event payloads to your callback URI again.\n\n### Why am I not receiving a 201 response after creating a webhook?\nAfter sending a POST request to create a webhook, you should get an HTTP 201 back. If you do not, check your TLS/SSL setup and be sure that your request contains the following headers:",
                                "header": {
                                  "anchor": "about-webhooks_troubleshooting"
                                }
                              },
                              {
                                "type": "code",
                                "data": " Accept: application/json\n Content-Type: application/json\n X-Auth-Client: <the OAuth client id>\n X-Auth-Token: <the OAuth token>",
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Tools for Debugging and Testing Webhooks\n\n**[ngrok](https://ngrok.com/)**  \nAs you are building your integration, you might want to test webhooks on your local dev machines.\n\nWe suggest using ngrok, which you can use to easily set up tunnels between a server running on localhost and a public URL. This will enable you to send our webhooks to your localhost environments via a public URL. No production push is required.\n\nNeed help on ngrok and webhooks see our [tutorial](/api-docs/getting-started/webhooks/setting-up-webhooks).\n\n**[Webhook Tester](https://webhook.site/#/)**  \nThis allows for webhooks to be quickly tested or checked. ",
                                "header": {
                                  "anchor": "about-webhooks_tools-for-debugging-and-testing-webhooks"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Webhooks Tutorial",
                          "config": {
                            "sidebar": {
                              "token": "Tutorial"
                            }
                          },
                          "route": {
                            "path": "/setting-up-webhooks"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Webhooks Tutorial</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#setting-up-webhooks_intro\">Intro</a></li>\n    \t\t<li><a href=\"#setting-up-webhooks_prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#setting-up-webhooks_create-project-folder\">Create Project Folder</a></li>\n        <li><a href=\"#setting-up-webhooks_install-ngrok\">Install ngrok</a></li>\n        <li><a href=\"#setting-up-webhooks_create-express-app\">Create Express App</a></li>\n        <li><a href=\"#setting-up-webhooks_start-the-app-ngrok\">Start the App and ngrok</a></li>\n        <li><a href=\"#setting-up-webhooks_fire-webhooks\">Trigger the Webhook Event</a></li>\n    \t\t<li><a href=\"#setting-up-webhooks_custom-headers\">Adding Custom Headers</a></li>\n        <li><a href=\"#setting-up-webhooks_troubleshooting\">Troubleshooting</a></li>\n        <li><a href=\"#/api-docs/getting-started/webhooks/webhook-events\">All Available Webhooks</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "When testing your application locally, ngrok is a helpful tool for viewing the webhook responses that BigCommerce sends to your app. Ngrok creates a publicly accessible tunnel URL to an application running on your machine's localhost. Ngrok also provides a web interface you can use to view HTTP request details.\n\nIn this tutorial, we'll install ngrok, register a webhook on your store, and then observe the response when the webhook event is triggered.",
                                "header": {
                                  "anchor": "setting-up-webhooks_intro"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Prerequisites\n\n- NPM is installed (installed automatically with Node)\n- Familiar with Command Line\n- Familiar with Postman\n- [API Access Token & Client ID](/api-docs/getting-started/basics/authentication#authentication_getting-api-credentials) with [scope](/api-docs/getting-started/basics/authentication#authentication_oauth-scopes) set to Information & Settings Read-Only and Products Read-Only.\n- [Webhooks Overview](/api-docs/getting-started/webhooks/about-webhooks)",
                                "header": {
                                  "anchor": "setting-up-webhooks_prerequisites"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Create Project Folder\n\n1. Open the terminal and create a folder that will hold ngrok and the Node app, then move into that directory.",
                                "header": {
                                  "anchor": "setting-up-webhooks_create-project-folder"
                                }
                              },
                              {
                                "type": "code",
                                "data": "mkdir webhooks-test\ncd webhooks-test",
                                "config": {
                                  "mode": "shell"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Install ngrok\n\n### Mac/Linux\n\n1. Visit https://ngrok.com/ and click download.\n2. Choose the version for your operating system.\n3. Unzip ngrok and place the application in the project folder that you created.\n\nThis can be accomplished in one command:",
                                "header": {
                                  "anchor": "setting-up-webhooks_install-ngrok"
                                }
                              },
                              {
                                "type": "code",
                                "data": "unzip /Users/your-computer/Downloads/ngrok-stable-darwin-amd64.zip -d /Users/your-computer/Documents/webhooks-test",
                                "config": {
                                  "mode": "shell"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Windows\n\n1. Visit https://ngrok.com/ and click download.\n2. Choose the version for your operating system.\n3. Unzip ngrok and place the application in the project folder that you created.\n4. Make sure ngrok is referenced in your [PATH environment variable](https://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them)."
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "success",
                                  "body": "At this point you should have a project folder with ngrok unzipped inside of it. \n",
                                  "title": "Checkpoint"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Create Express App\n\n1. In the terminal run `npm init`. You will be prompted with several questions about the app setup. Feel free to hit return to accept the default values.  The final screen will look something like this:\t\t ",
                                "header": {
                                  "anchor": "setting-up-webhooks_create-express-app"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"name\": \"webhooks-test\",\n  \"version\": \"1.0.0\",\n  \"description\": \"webhooks-test\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"\",\n  \"license\": \"ISC\"\n}",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "2. Take note of the value in \"main\", `index.js`. \n3. Create a file in your project folder called index.js. `touch index.js` or `copy nul > index.js` for Windows.\n4. Install [Express](https://expressjs.com/en/starter/installing.html) using the terminal in the same project folder. `npm install express --save`"
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "success",
                                  "body": "At this point your project folder should contain:\n* `index.js`\n* `node_modules`\n* `package.json`\n* `ngrok`\n* `package-lock.json`",
                                  "title": "Checkpoint"
                                }
                              },
                              {
                                "type": "text",
                                "data": "4. Copy and paste the following into `index.js`:"
                              },
                              {
                                "type": "code",
                                "data": "const express = require('express');\nconst app = express();\n\n// when there's a post request to /webooks...\napp.post('/webhooks', function (req, res) {\n  \n  \t// respond with 200 OK\n    res.send('OK');\n});\n\napp.listen(3000, function () {\n    console.log('Listening for webhooks on port 3000')\n})",
                                "config": {
                                  "mode": "js"
                                }
                              },
                              {
                                "type": "text",
                                "data": "This app listens to requests on port 3000, then 200 responds once it receives a `POST` request to `/webhooks`."
                              },
                              {
                                "type": "text",
                                "data": "From Express [Website](https://expressjs.com/en/starter/basic-routing.html):\n`app.METHOD(PATH, HANDLER)`\n- app is an instance of express.\n- METHOD is an [HTTP request method](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol#Request_methods), in lowercase.\n- PATH is a path on the server.\n- HANDLER is the function executed when the route is matched.\n- Res.send is the body parameter that sends the HTTP response."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Start the App and ngrok\n\n1. Open two terminal tabs. In both tabs, navigate to your project folder. \n2. In one tab run the app. `node index.js`\n3. In the other start ngrok. `./ngrok http 3000`\n\n\n#### node index.js\n```shell\nBIGCOMMERCE:webhooks your.computer$ node index.js\nListening for webhooks on port 3000\n```\n\n#### ngrok http 3000\n\n![ngrok running](//s3.amazonaws.com/user-content.stoplight.io/6012/1531500085650)",
                                "header": {
                                  "anchor": "setting-up-webhooks_start-the-app-ngrok"
                                }
                              },
                              {
                                "type": "text",
                                "data": "ngrok returns two values we will need to register a webhook and observe the response: \n- **Web Interface:** Where you can monitor the hook from a browser. `https://127.0.0.1:4040`\n- **Forwarding:** The webhook destination. Make note of the https version. For example, `https://6a35e97b.ngrok.io`.\n\n4. Open a web browser and copy in your Web Interface URL: `http://127.0.0.1:4040`.  This is where webhook payloads will appear when they fire."
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500191661",
                                "header": {
                                  "title": "ngrok Web Interface"
                                },
                                "config": {
                                  "centered": true,
                                  "maxWidth": "800",
                                  "maxHeight": "800"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "Subscribe to the `store/product/updated` event: \n\n1. Create a POST request using the try it now box below or your API enviroment of choice to the request URL:`https://api.bigcommerce.com/stores/{{store_hash}}/v2/hooks`. \nReplace store_hash with the value from your store's API path.\n2. Create a request body where \"scope\" is the webhook event we are subscribing to and \"destination\" is your ngrok forwarding url with /webhooks appended (the route specified in our Express app):"
                              },
                              {
                                "type": "code",
                                "data": "{\n \"scope\": \"store/product/updated\",\n \"destination\": \"https://6a35e97b.ngrok.io/webhooks\",\n \"is_active\": true\n}",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "3. Update the request headers to contain:"
                              },
                              {
                                "type": "code",
                                "data": "    Accept: application/json\n    Content-Type: application/json\n    X-Auth-Client: {{the OAuth client id}}\n    X-Auth-Token: {{the OAuth token}}",
                                "config": {
                                  "mode": "http"
                                }
                              },
                              {
                                "type": "text",
                                "data": "4. Check all the values and then hit POST. If successful, the response will be 201 Created.\n\n\n**Try it Now**  \n*Create a webhook*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/3f005ed74030e01bbf7a)\n"
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"id\": 14263419,\n  \"client_id\": \"your-client-id\",\n  \"store_hash\": \"your-store-hash\",\n  \"scope\": \"store/product/updated\",\n  \"destination\": \"https://6a35e97b.ngrok.io/webhooks\",\n  \"headers\": null,\n  \"is_active\": true,\n  \"created_at\": 1531256030,\n  \"updated_at\": 1531256030\n}",
                                "header": {
                                  "title": "201 Created Response",
                                  "anchor": "201-response"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Trigger the Webhook Event\nWebhooks can be triggered by actions performed by a shopper on the storefront or user within the control panel, or actions performed via API. To illustrate this point, we'll demonstrate both methods.\n\n### Update via the Control Panel\n\n1. From your store’s control panel, navigate to Products > View. Choose a product and edit product details like name or description. \n2. Click **Save**.",
                                "header": {
                                  "anchor": "setting-up-webhooks_fire-webhooks"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500906129",
                                "config": {
                                  "centered": true,
                                  "maxWidth": "800",
                                  "maxHeight": "800"
                                },
                                "header": {
                                  "title": "BigCommerce Control Panel",
                                  "subtitle": "Products > View"
                                }
                              },
                              {
                                "type": "text",
                                "data": "3. Visit the ngrok web interface address  and check for a 200 response. "
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500945565",
                                "config": {
                                  "centered": true,
                                  "maxWidth": "800",
                                  "maxHeight": "800"
                                },
                                "header": {
                                  "title": "ngrok Web Interface"
                                }
                              },
                              {
                                "type": "text",
                                "data": "The Summary shows that the webhook has fired and our Express app has returned a 200 response along with the text OK. The response is generated by res.send(‘OK’) in our app code, but this text can be changed to say something different or even post the response to another app. For more info, see [Express Routing](https://expressjs.com/en/guide/routing.html).\n\nThe record of the HTTP request will also show in the terminal tab running ngrok."
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531500989467",
                                "header": {
                                  "title": "ngrok Terminal Response"
                                },
                                "config": {
                                  "centered": true,
                                  "maxWidth": "800",
                                  "maxHeight": "800"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Update Via the API\nCreate a PUT request to the product to be updated, replacing 124 with the product’s ID: \n\n`https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/124`\n\nIn this example, the price of product_id 124 is being changed to 12.99:"
                              },
                              {
                                "type": "code",
                                "data": "{\n\t\"price\": 12.99\n}",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "After hitting send, check the ngrok web interface. You may see a single event or several based on how many times the product has been updated in the previous step.\n\n**Try it Now**  \n*Update a product*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/3f005ed74030e01bbf7a)"
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1531501115256",
                                "header": {
                                  "title": "ngrok Web Interface"
                                },
                                "config": {
                                  "centered": true,
                                  "maxWidth": "800",
                                  "maxHeight": "800"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "That’s it! In this walkthrough you created a webhook, set up a server to accept the response, and used ngrok to observe the webhook payload.\n\nWant to keep going? Try changing the text in `res.send()` to a custom response, print the response to a webpage, or register a different webhook event. "
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Unless you have a paid ngrok account, the destination URL will only be valid for a few hours. After that, the webhook will stop working. Send a DELETE request to the specific webhook ID to disable the hook. ",
                                  "type": "warning",
                                  "title": "URL Timeout"
                                }
                              },
                              {
                                "type": "text",
                                "data": "**Try it Now**  \n*Delete a webhook*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/3f005ed74030e01bbf7a)"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Adding Custom Headers\nFor added security you can add custom headers to your webhook request. `headers` accepts any key:value pair as a string. ",
                                "header": {
                                  "anchor": "setting-up-webhooks_custom-headers"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\"scope\": \"store/cart/lineItem/*\",\n  \"destination\": \"https://myapp.herokuapp.com/\",\n  \"is_active\": true,\n  \"headers\": {\n  \t\"User-Name\": \"Hello\",\n  \t\"Password\": \"Goodbye\"\n  }\n  \t\n}",
                                "header": {
                                  "title": "Example Webhook Custom Headers"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Troubleshooting\n1. **Getting a 404 error using the root (/) url?**\n\nAdd this snippet to your code to respond to incoming get requests with 'hello':",
                                "header": {
                                  "anchor": "setting-up-webhooks_troubleshooting"
                                }
                              },
                              {
                                "type": "code",
                                "data": "app.get('/',(req, res)=>{\n    res.send('Hello!');\n}); ",
                                "config": {
                                  "mode": "js"
                                }
                              },
                              {
                                "type": "text",
                                "data": "2. **Getting error ngrok not found?**\nThere are two ways to fix this. Your local setup will determine which command will work.\nUse the command `mv ngrok /usr/local/bin `to move ngrok to your local bin folder. This way it becomes available globally. \nUse the command `./ngrok http 3000` to run ngrok as a sudo user. \n\n3. **Windows Users**\nIf you are having trouble getting ngrok started try setting the PATH. \n    - [What are PATH and other environment variables, and how can I set or use them?](https://superuser.com/questions/284342/what-are-path-and-other-environment-variables-and-how-can-i-set-or-use-them)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Webhook Events",
                          "route": {
                            "path": "/webhook-events"
                          },
                          "data": {
                            "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/api-docs/getting-started/webhooks/webhook-events.md"
                          },
                          "config": {
                            "sidebar": {
                              "token": "reference"
                            }
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Partner Information",
              "route": {
                "path": "/partner"
              },
              "data": {
                "children": [
                  {
                    "title": "Becoming A Partner",
                    "route": {
                      "path": "/becoming-a-partner"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Becoming a Partner</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#becoming-a-partner_apply-technology-partner-program\">Apply to the Technology Partner Program </a></li>\n\t\t<li><a href=\"#becoming-a-partner_getting-sandbox-store\">Getting a Sandbox Store</a></li>\n\t\t<li><a href=\"#becoming-a-partner_partner-program-troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Our BigCommerce Partner Program includes access to training, sales enablement and a referral network to get more clients and build better ecommerce experiences.\n\nThe following sections outline the steps required to become a vendor of Single-Click Apps on the BigCommerce platform. Doing so requires a partnership application, but acceptance will authorize you to provide best-of-breed solutions to the fast-growing online businesses we host. \n"
                        },
                        {
                          "type": "text",
                          "data": "## Applying to the Technology Partner Program\n\nBefore you can submit an app to the [BigCommerce App Marketplace](https://www.bigcommerce.com/apps/) (which merchants also know as our “app store”), you must become an official Partner. BigCommerce offers app developers free sandbox stores through its Technology Partner Program. To be approved as a partner, you will need:\n\n* A website showcasing your agency\n* Intent to offer your app publicly\n* Ability to support users of your app\n* Evidence of expertise in app development\n\nOnce approved, you will receive one or more emails listing your partner credentials and next steps. Your Partner ID will be required to submit your app for App Marketplace consideration. If you do not receive these credentials by email, please contact <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>.",
                          "header": {
                            "anchor": "becoming-a-partner_apply-technology-partner-program"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Getting a Sandbox Store\n\nTo build a Marketplace app, you will need to have:\n* Sandbox store\n* Developer account at devtools.bigcommerce.com\n* Be accepted as a BigCommerce partner. \n\nWe encourage you to create your sandbox store and your Dev Tools account using the same login credentials. A sandbox store cannot process transactions and is for developing and testing apps without the 15-day time time limit of a trial store. ",
                          "header": {
                            "anchor": "becoming-a-partner_getting-sandbox-store"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "Although a sandbox store is not required for app development, it is best practice. If you opt to develop on a trial store, keep in mind that the store and data will be erased after 15 days and a new trial will have to be created.",
                            "title": "Trials Erased After 15 days"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create a Sandbox Store\n\n1. Go to the [BigCommerce Pricing page](https://www.bigcommerce.com/pricing/) and Select **Start your free trial**.\n3. Where prompted for an email address, enter the same email that you used when applying to become a Technology Partner. \n4. Select **Continue to store details**.\n5. In the trial store setup form, enter a store name, password, and other details. Then select **Create your store**.\n6. Log in to the [Partner Portal](https://partners.bigcommerce.com) and navigate to **Support > Create a Case** \n\t7. Under **Issue Type**, choose **Portal and Membership**. \n8. In the case description, enter your new sandbox store’s friendly URL (for example: http://your-store-name.mybigcommerce.com) and request conversion to a sandbox. We will flag this as a sandbox store to ensure your continued access to the store, as opposed to the normal 15-day trial. This can take around two days.\n9. When you log into your new store, use the same email that you used for step 3 above."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "##  Troubleshooting\n\n**Are all fields required when applying to be a partner?**\n\nWhile not all fields are required to publish edits for your listing, they are all highly recommended. Without filling in all fields, your listing will be missing information that merchants have seen on other listings and expect to see throughout the Marketplace.\n\n**I’ve logged in to Dev Tools, but I don’t see my published listing. Where is it?**\n\nYou may be logged in with the wrong account. Each listing can only be owned by one user, so it is likely assigned to another email address. If you’re unable to track down the correct owner account for your solution, please reach out to <a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>.\n\n**Why has my listing on bigcommerce.com/apps not updated yet?**\n\nThe changes will be effective immediately in your control panel app card, but the updates can take up to 24 hours to appear on the public BigCommerce Marketplace. Feel free to use this as a grace period to make additional edits as needed.\n\n**Who should I contact if I have further questions?**\n<a href=\"mailto:appstore@bigcommerce.com\">appstore@bigcommerce.com</a>",
                          "header": {
                            "anchor": "becoming-a-partner_partner-program-troubleshooting"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Related Articles\n* [App Store Approval Requirements](https://developer.bigcommerce.com/api-docs/partner/app-store-approval-requirements)\n* [Partner Portal](https://partners.bigcommerce.com/) (BigCommerce)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "App Store Approval Requirements",
                    "route": {
                      "path": "/app-store-approval-requirements"
                    },
                    "data": {
                      "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/api-docs/partner/app-store-approval-requirements.md"
                    }
                  }
                ]
              }
            },
            {
              "title": "Catalog",
              "route": {
                "path": "/catalog"
              },
              "data": {
                "children": [
                  {
                    "title": "Products",
                    "route": {
                      "path": "/products-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1> Products Overview </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n    <li><a href=\"#products-overview_introduction\">Introduction</a></li>\n\t<li><a href=\"#products-overview_products\">Products</a></li>\n    <li><a href=\"#products-overview_pricing-precision\">Pricing Precision </a></li>\n    <li><a href=\"#products-overview_product-images\">Product Images</a></li>\n    <li><a href=\"#products-overview_product-videos\">Product Videos</a></li>\n    <li><a href=\"#products-overview_custom_fields\">Custom Fields</a></li>\n    <li><a href=\"#products-overview_bulk-pricing-rules\">Bulk Pricing Rules</a></li>\n     <li><a href=\"#products-overview_metafields\">Product Metafields</a></li>\n     <li><a href=\"#products-overview_reviews\">Product Reviews</a></li>\n     <li><a href=\"#products-overview_brands\">Brands</a></li>\n     <li><a href=\"#products-overview_variant-options\">Variant Options</a></li>\n     <li><a href=\"#products-overview_variants\">Variants</a></li>\n     <li><a href=\"#products-overview_modifier-options\">Modifier Options</a></li>\n    <li><a href=\"#products-overview_complex-rules\">Complex Rules</a></li>\n     <li><a href=\"#products-overview_categories\">Categories</a></li>\n    \n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Introduction\n\nThe Catalog refers to a store’s collection of physical and digital products. The Catalog includes all the information about a product such as MPN, warranty, price, and images. \n\n### Prerequisites\nScopes\n\nThe following [OAuth](/api-docs/getting-started/authentication#authentication_oauth-scopes) scopes are required:\n* Modify Catalog",
                          "header": {
                            "anchor": "products-overview_introduction"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Products\n\n[Products](/api-reference/catalog/catalog-api/products/getproducts) are the primary catalog entity, and the primary function of the e-commerce platform is to sell products on the storefront and other selling channels.\n\nProducts can either be Simple or Complex. \n\nProducts can also be Physical or Digital. \n\n* Physical products are typically products that exist in a physical form, have a weight, and are being sold by retailers with the intent of shipping them to customers. \n\n* Digital products, on the other hand, may not have a physical representation in the real world; this includes downloadable products such as computer software, ebooks, music, images, and other digital media. Alternatively, a digital product may be used to sell services such as spa treatments, consulting, and so forth - which also do not require shipping.",
                          "header": {
                            "anchor": "products-overview_products"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "Product Creation",
                            "body": "Only one Product can be created at a time."
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create a Simple Product\n\nSimple products do not have any options, modifiers, or variants, and therefore cannot be configured or modified before they are added to cart. A simple product is its own variant. \n\n**Try It Now**  \n*Create a simple product*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {}
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "When options are created via the /products endpoint, the display_type defaults to radio button.",
                            "title": "Creating Options"
                          },
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### Create a Complex Product\n\nComplex products have at least one option and may have modifiers or variants.\n\nThe [Create Products](/api-reference/catalog/catalog-api/products/getproducts) endpoint supports the creation of multiple variants along with the base product in a single call.\n\n**Try It Now**  \n*Create a complex product*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": "The [Create a Product](/api-reference/catalog/catalog-api/products/createproduct) endpoint supports the creation of multiple variants along with the base product in a single call.\n\n### Digital Products\n\nDigital products are purchaseable items that don't have a physical representation and are not shipped to the customer; for example, manuals, ebooks, or music. A downloadable product file can be associated with a digital product.\n\nDownloadable product files are intended for products of the “digital” type, typically for selling some kind of media file or software. Product dimensions are not required because the item is not shipped.\n\nFiles must be added to digital products using the [Control Panel or WebDav](https://support.bigcommerce.com/articles/Public/Creating-Downloadable-Products/#adding-downloadable-product) (attaching via the API is not supported). Additional settings such as a description of the file and maximum downloads can be set in the Control Panel.\n\n**Try It Now**  \n*Create a digital product*  \n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Pricing Precision\n\nPrice can be input using up to 4 decimal places.\n\nDepending on the price, it can round up or down. We allow up to 4 decimal places and use the 5th decimal place to either roundup or down. This holds true for all pricing options available on a product.\n\nExample:\n\n* “price”: 10.99999 - rounds up to 11\n* “price”: 10.99994 - rounds down to 10.9999\n\n### Display\nCurrency settings allows for inputting a large number of decimal places for display. Since pricing precision cuts off at 4, the rest are displayed as zero’s.",
                          "header": {
                            "anchor": "products-overview_pricing-precision"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1553018091114",
                          "header": {
                            "title": "Currency Decimal Places"
                          },
                          "config": {
                            "fluid": true,
                            "centered": true,
                            "maxWidth": "805"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Product Images\n\n[Product images](/api-reference/catalog/catalog-api/product-images/getproductimages) are used to show shoppers what they’re buying and merchandise products. When creating an image, `image_url` or an `image_file` can be passed in. \n\nIf using `image_file` Content-Type needs to be set to \nContent-Type: multipart/form-data. Any other updates using the /POST or /PUT will be rejected with the form-data.\n\n**Try It Now**  \n*Add a product image*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_product-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Product Thumbnails\n\nOnly one image can be the [product thumbnail](/api-reference/catalog/catalog-api/models/productimage). The product thumbnail is the image that shows on the product listing page, in search results and any other location that features the product. If only one image is on the product it becomes both the thumbnail and the main product image. Images can also be added to [variants](/api-reference/catalog/catalog-api/product-variants/getvariantsbyproductid). ",
                          "header": {}
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": {\n    \"id\": 382,\n    \"product_id\": 158,\n    \"is_thumbnail\": true,\n    \"sort_order\": 0,\n    \"description\": \"\",\n    \"image_file\": \"a/521/foglinenbeigestripetowel1b_1024x1024__83011__60806.jpg\",\n    \"url_zoom\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.1280.1280.jpg?c=2\",\n    \"url_standard\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.560.850.jpg?c=2\",\n    \"url_thumbnail\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.330.500.jpg?c=2\",\n    \"url_tiny\": \"https://cdn8.bigcommerce.com/s-{{store_hash}}/products/158/images/382/foglinenbeigestripetowel1b_1024x1024__83011__60806.1534344511.66.100.jpg?c=2\",\n    \"date_modified\": \"2018-08-15T14:48:31+00:00\"\n  },\n  \"meta\": {}\n}",
                          "header": {
                            "title": "Product Thumbnails",
                            "subtitle": "GET https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/images/{{images_id}}"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Product Videos\n[Product Videos](/api-reference/catalog/catalog-api/product-videos/getproductvideos), in addition to images, can help shoppers understand what they’re buying and help sell the product. A product can have more than one video.\n\n* Product videos must be hosted on YouTube. The video_id corresponds to the “v” parameter in a video url. \n\nExample: <span class=”fp”>https://www.youtube.com/watch?v=<b>R12345677</b></span>\n\n**Try It Now**  \n*Add a product video*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_product-videos"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Custom Fields\n\n[Custom fields](/api-reference/catalog/catalog-api/product-custom-fields/getcustomfields) are a feature intended for product specifications, in a key: value arrangement. As an example, there might be fields indicating technical specifications about an LED TV  such as screen size, maximum resolution, HDR support, etc. Alternatively, if selling wine, I might use Custom Fields for specifications such as vintage, region, grape, etc. Custom fields can not be used to add rules such as changing the weight or price of a product. ",
                          "header": {
                            "anchor": "products-overview_custom_fields"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "There is a limit of 250 characters for custom field values."
                          }
                        },
                        {
                          "type": "text",
                          "data": "Custom Fields are intended to be used in a couple of contexts:\n\n* Displaying specifications on the product detail page and on the product listing pages such as category and brand pages.\n* Powering faeted search (searching/filtering by custom field values)\n\n**Try It Now**  \n*Add a custom field*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Bulk Pricing Rules\n\n[Bulk Pricing Rules](/api-reference/catalog/catalog-api/product-bulk-pricing-rules/getbulkpricingrules) are intended for merchants who want to offer wholesale discounts for buying in bulk. They apply once products are added to cart, but they are displayed as a callout on the storefront to let shoppers know how they can save.\n\nBulk Pricing rules in the catalog are on the product, meaning that they’ll trigger even if several different variants of the product are in the cart, as long as the total quantity of those variants meets one of the quantity breaks. [Price List bulk pricing](/api-reference/catalog/pricelists-api/price-lists-records/setpricelistrecordcollection) works differently.\n\n**Try It Now**  \n*Add bulk pricing rules*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_bulk-pricing-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Product Metafields\n\n[Metafields](/api-reference/catalog/catalog-api/product-metafields/createproductmetafield) allow a developer to set up key and namespace pairs to store data against a resource, like a product. The data does not appear in the storefront or the control panel. This is useful for when information needs to be passed back and forth between an app and the store. \n\nMetafields can be added to variants, products, categories, and brands.\n\n**Try It Now**  \n*Add a product metafields*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_metafields"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Product Reviews\n[Product reviews ](/api-reference/catalog/catalog-api/product-reviews/getproductreviews)contains ratings and feedback from shoppers who have purchased a product. Reviews are displayed on product pages. \n\nReviews cannot be created in the control panel, but they can be created via API. Creating them via API is useful if you are migrating to BigCommerce from another platform and do not want to lose existing reviews. \n\nProduct Reviews are a native platform feature, but they can be turned off in favor of a custom setup.\n\n**Try It Now**  \n*Create a product review*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_reviews"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Brands\n\n[Brands](/api-reference/catalog/catalog-api/brands/getbrands) are another form of catalog taxonomy, similar to Categories. However, there are a few differences:\n\n* Exist as a single “list” on the store, with no tree structure\n* Can only have a single assignment to a product; a product may have at most one brand, but a brand can have many products.\n \nThey’re primarily used to tag products so that consumers can find Brands they’re interested in (such as Nike shoes). Brands have their own page on the storefront which shows all the products in that Brand. They’re also used as part of faceted search navigation.\n\n**Try It Now**  \n*Create a brand*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_brands"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Variant Options\n\n[Variant options](/api-reference/catalog/catalog-api/product-variant-options/getoptions) are any choices that the shopper needs to make that will result in the selection of a variant. Color and Size are typical examples of Variant Options.  A t-shirt can have different combinations of sizes and colors.  \n\nExample:\n* Color is a Variant Option; Red, Orange, and Green are Variant Option Values\n* Size is a Variant Option; Small, Medium, and Large are Variant Option Values\n\nThe combination of Small & Red is what is selected on the storefront and correlates to a product variation, also called a SKU. \n \n**Variant options:**\n\n* Require the shopper to select a value\n* Only support “multiple choice” option types\n* Rectangle\n* Radio button\n* Color swatch\n* Product pick list\n* Product pick list with images\n* Will automatically generate variants when created in the CP\n* Are auto-generated from variants when a product is created with variants via V3 API Product /POST\n\n\n### Variant Options Example:\n\n| If the product is | Variant Option |\n| -- | -- |\n| T-Shirt | Blue<br>-<br>Small<br> Medium<br> Large|\n| Backpack | Black<br> Yellow<br>-<br>2L <br> 3L<br> 8L |\n\n\n### Options created on V2 and V3\n\n* Variant options created on V3 cannot be accessed from the Control Panel. They can only be accessed via the API.\n* If a product has options that were created using the V2 API, additional options cannot be added using the V3 API.\n* SKUs in V2 map to variants in V3.\n* Base variants are not SKUs in V2.",
                          "header": {
                            "anchor": "products-overview_variant-options"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Creating a variant option does not automatically create SKUs or build out variants. SKUs can be built out later using the [variants endpoint](/api-reference/catalog/catalog-api/product-variants/createvariant).",
                            "title": "Create Variant Option"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create Variant Options\nThe following request will create options that will show on the storefront as choices that can be selected by the customer. In a separate request, you could build out SKUs based on these variant\noption values or a combination of variant option\nvalues. A request like this could also be used to\nadd new choices to a variant that has already been created."
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"product_id\": 134,\n  \"name\": \"Size Rectangle\",\n  \"display_name\": \"Size\",\n  \"type\": \"rectangles\",\n  \"option_values\": [\n    {\n      \"label\": \"S\",\n      \"sort_order\": 0,\n      \"is_default\": false\n    },\n    {\n      \"label\": \"M\",\n      \"sort_order\": 1,\n      \"is_default\": true\n    },\n    {\n      \"label\": \"L\",\n      \"sort_order\": 2,\n      \"is_default\": false\n    }\n  ]\n}",
                          "header": {
                            "subtitle": "/POST https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options",
                            "title": "Create Size Variant Option"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Variant\n[Variants](/api-reference/catalog/catalog-api/product-variants/getvariantsbyproductid) represent an item as it sits on the shelf in the warehouse or a particular saleable product. A product might be a t-shirt, while the variant would be “a small, red t-shirt”. Variants are selected by shoppers on the storefront via Product Options. In the case where a product is simple, meaning it does not have any options, the product is its own variant - called a base variant. Everything you can buy should be a variant.\n\n* Options build out variants. \n* Variants are usually what inventory is tracked against \n* Can have their own price, weight, dimensions, image, etc - or they can inherit these values from the product if they have not been specified\n* Must have a SKU code (unless they’re a base variant)\n* In the case of non-base variants, variants will relate to a particular combination of variant option values - such as “small” and “red”\n\n### Variants:\n\n| If the product is | Variant Option | Variant |\n| -- | -- | -- |\n| T-Shirt | Blue<br>-<br> Small<br> Medium<br> Large| SM-BLU<br> SM-MED <br> SM-LARG\n| Backpack | Black<br>Yellow<br>-<br>2L <br> 3L<br> 8L |BLACK-2L<br>BLACK-3L<br>BLACK 8L<br>-<br>YELLOW-2L<br>YELLOW-3L<br>YELLOW-8L|\n\n\n## Create a Variant\nVariants can be created in two ways:\n* From existing variant options using the variant options endpoint. [v3/catalog/products/{product_id}/options](/api-reference/catalog/catalog-api/product-variants/createvariant)\n* By adding the variants with variant options and skus when creating the product. See [Create a Complex Product](/api-reference/catalog/catalog-api/products/createproduct).\n\nThis will go over using existing variant options to create the variants\n\nUse the `https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/131/options` endpoint to get the option information.",
                          "header": {
                            "anchor": "products-overview_variants"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": [\n    {\n      \"id\": 193,\n      \"product_id\": 134,\n      \"name\": \"Size1533313432-134\",\n      \"display_name\": \"Size\",\n      \"type\": \"rectangles\",\n      \"sort_order\": 0,\n      \"option_values\": [\n        {\n          \"id\": 163,\n          \"label\": \"S\",\n          \"sort_order\": 0,\n          \"value_data\": null,\n          \"is_default\": false\n        },\n        {\n          \"id\": 164,\n          \"label\": \"M\",\n          \"sort_order\": 1,\n          \"value_data\": null,\n          \"is_default\": true\n        },\n        {\n          \"id\": 165,\n          \"label\": \"L\",\n          \"sort_order\": 2,\n          \"value_data\": null,\n          \"is_default\": false\n        }\n      ],\n      \"config\": []\n    },\n    {\n      \"id\": 194,\n      \"product_id\": 134,\n      \"name\": \"Color1533313946-134\",\n      \"display_name\": \"Color\",\n      \"type\": \"swatch\",\n      \"sort_order\": 1,\n      \"option_values\": [\n        {\n          \"id\": 166,\n          \"label\": \"Blue\",\n          \"sort_order\": 1,\n          \"value_data\": {\n            \"colors\": [\n              \"#123C91\"\n            ]\n          },\n          \"is_default\": false\n        },\n        {\n          \"id\": 167,\n          \"label\": \"Green\",\n          \"sort_order\": 2,\n          \"value_data\": {\n            \"colors\": [\n              \"#0F961E\"\n            ]\n          },\n          \"is_default\": false\n        },\n        {\n          \"id\": 168,\n          \"label\": \"Red\",\n          \"sort_order\": 3,\n          \"value_data\": {\n            \"colors\": [\n              \"#E60C0C\"\n            ]\n          },\n          \"is_default\": false\n        }\n      ],\n      \"config\": []\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 2,\n      \"count\": 2,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {\n        \"current\": \"?page=1&limit=50\"\n      }\n    }\n  }\n}",
                          "header": {
                            "subtitle": "/GET https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/options",
                            "title": "Example Response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try It Now**  \n*Get Variant Options*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)\n\nIn the above response, there are two variant options of size and color with three values each. \n\nTo combine the variant option values into variants and build out SKUs use the following endpoint:\n\n`https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/131/variants`"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Variants need to be created one at a time using this endpoint. Only one variant option at a time can be created; individual variant options will contain an array of multiple values. To use a variant array and create variants in the same call as the base product, use the [/catalog/product](/api-reference/catalog/catalog-api/products/createproduct) endpoint during product creation.",
                            "title": "Create variants one at a time"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try It Now**  \n*Add product variants*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)\n\nThe `option_values` array combines the options Small and Blue to create the SKU SMALL-BLUE. The id in the `option_values` array is the id from the variant option response `option_values > id`. The `option_id` is the id of the option."
                        },
                        {
                          "type": "code",
                          "data": " {\n            \"id\": 193, //option_id\n            \"product_id\": 134,\n            \"name\": \"Size1533313432-134\",\n            \"display_name\": \"Size\",\n            \"type\": \"rectangles\",\n            \"sort_order\": 0,\n            \"option_values\": [\n                {\n                    \"id\": 163, //id\n                    \"label\": \"S\",\n                    \"sort_order\": 0,\n                    \"value_data\": null,\n                    \"is_default\": false\n                }\n\t\t\t\t\t\t\t\t...",
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create a Variant Using the Products Endpoint\n\nThe following example creates a base product, variant options, and variants in a single call to the /products endpoint. You can use this method to create a product and its variants in a single call without creating variant options first, but the option display type will default to radio button."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Swatch, Radio Buttons, Rectangle, dropdown, Product List and Product List with Images. ",
                            "title": "Supported Types"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try It Now**  \n*Create a variant using the products endpoint*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Modifier Options\n\n[Modifier options](/api-reference/catalog/catalog-api/product-modifiers/getmodifiers) are any choices that the shopper can make that will change the way the merchant fulfills the product. Examples include:\n* A checkbox to add shipping insurance\n* Text to be engraved on the product\n* A color that an unfinished product is to be painted before it’s shipped\n \nCritically, the modifier will not change the SKU/variant being fulfilled, and you cannot track inventory against combinations of modifier values. Modifiers typically would not change which product is “picked off the shelf” in the warehouse, but they change what happens to that product before it’s sent to the shopper, or how it’s sent.\n \nModifier options:\n* May be required or non-required\n* Support all option types\n* Cannot be used as part of a variant\n\n\nAn adjuster can be added to a modifier option to change things such as increasing the price, changing the weight, or shipping rules.  Adjusters cannot be applied to all modifier types.\n\n### Modifier Options Example:\n\n| If the product is | Variant Option | Variant |Modifier |\n| -- | -- | -- | -- |\n| T-Shirt | Blue<br>-<br> Small<br> Medium<br> Large| SM-BLU<br> SM-MED <br> SM-LARG| Checkbox<br>Donate to Charity|\n| Backpack | Black<br>Yellow<br>-<br>2L <br> 3L<br> 8L |BLACK-2L<br>BLACK-3L<br>BLACK 8L<br>-<br>YELLOW-2L<br>YELLOW-3L<br>YELLOW-8L| Text Field<br> Add Embroidery|",
                          "header": {
                            "anchor": "products-overview_modifier-options"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Swatch, radio buttons, rectangle list, drop-down, product list, product list with images",
                            "title": "Modifiers that support Adjusters"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Add a modifier with price adjuster to an existing product\n\nThe following example shows how to add a modifier, a checkbox with a price adjuster, that will increase the product's price by five dollars. \n\nCreating a checkbox with an adjuster requires two separate calls: one to create the checkbox and a second to add the adjuster. Adjusters are defined within the `option_values` array, but `option_values` are not allowed in the request to create a checkbox modifier because creating a checkbox automatically generates two mandatory option values: a Yes and a No. Once the checkbox has been created along with its option values, you can update the modifier to add an adjuster. "
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "swatch, radio buttons, drop-down, rectangle list, product list, product list with images, and checkbox.",
                            "title": "Modifiers that require a second step to add an adjuster"
                          }
                        },
                        {
                          "type": "text",
                          "data": "First, a POST to create the modifier. \n\n**Try It Now**  \n*Add a product modifier*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)"
                        },
                        {
                          "type": "text",
                          "data": "Since this is a checkbox which has two states, checked/unchecked or yes/no, two option values are created. The default adjuster values are null. "
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": [\n    {\n      \"id\": 160,\n      \"product_id\": 131,\n      \"name\": \"Add-a-$5-Donation1535039590-191\",\n      \"display_name\": \"Add a $5 Donation\",\n      \"type\": \"checkbox\",\n      \"required\": false,\n      \"config\": {\n        \"checkbox_label\": \"Check for Donation\",\n        \"checked_by_default\": false\n      },\n      \"option_values\": [\n        {\n          \"id\": 149,\n          \"option_id\": 160,\n          \"label\": \"Yes\",\n          \"sort_order\": 0,\n          \"value_data\": {\n            \"checked_value\": true\n          },\n          \"is_default\": false,\n          \"adjusters\": {\n            \"price\": {\n              \"adjuster\": null,\n              \"adjuster_value\": null\n            },\n            \"weight\": null,\n            \"image_url\": \"\",\n            \"purchasing_disabled\": {\n              \"status\": false,\n              \"message\": \"\"\n            }\n          }\n        },\n        {\n          \"id\": 150,\n          \"option_id\": 160,\n          \"label\": \"No\",\n          \"sort_order\": 1,\n          \"value_data\": {\n            \"checked_value\": false\n          },\n          \"is_default\": true,\n          \"adjusters\": {\n            \"price\": null,\n            \"weight\": null,\n            \"image_url\": \"\",\n            \"purchasing_disabled\": {\n              \"status\": false,\n              \"message\": \"\"\n            }\n          }\n        }\n      ]\n    }\n  ],\n  \"meta\": {\n    \"pagination\": {\n      \"total\": 1,\n      \"count\": 1,\n      \"per_page\": 50,\n      \"current_page\": 1,\n      \"total_pages\": 1,\n      \"links\": {\n        \"current\": \"?page=1&limit=50\"\n      }\n    }\n  }\n}",
                          "header": {
                            "subtitle": "Create Modifier Option",
                            "title": "Response"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Next send a PUT request to update the modifier value. This increases the price by $5 when the Yes option value is selected.\n\n**Try It Now**  \n*Add modifier values*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)"
                        },
                        {
                          "type": "text",
                          "data": "### Troubleshooting: 422 Error"
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"status\": 422,\n    \"title\": \"The product is currently associated with an option set, please remove it before editing an option or modifier.\",\n    \"type\": \"https://developer.bigcommerce.com/api#api-status-codes\",\n    \"errors\": {\n        \"product_id\": \"The product is currently associated with an option set, please remove it before editing an option or modifier.\"\n    }\n}",
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "To fix this error:\n* Modify the products using the V2 API\n* Remove the option set using the V2 API or the Control Panel, then remake the variants and modifiers using V3"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Complex Rules\n\n[Complex rules](/api-reference/catalog/catalog-api/product-complex-rules/getcomplexrules) allow merchants to set up conditions and actions based on shopper option selections on the storefront. You can use them to vary the following based on option selections made by the shopper:\n* Price\n* Weight\n* Image\n* Purchasability\n\nAdjustments made by complex rules are displayed to shoppers in real-time on the storefront.\n\nFor the majority of merchant use cases, **best practice** will be to either assign values (such as a price) directly to a variant or use adjusters on the modifier option itself. However complex rules exist for rare cases where a rule condition is too complex to express in those forms easily. \n\nUse complex rules when an adjustment should be triggered by:\n* The selection of values across multiple modifier options\n* The combination of a particular variant/SKU and a modifier option value.\n\n### Complex Rules Example:\n\n| If the product is | Variant Option | Variant |Modifier | Complex Rule |\n| -- | -- | -- | -- | -- |\n| T-Shirt | Blue<br>-<br> Small<br> Medium<br> Large| SM-BLU<br> SM-MED <br> SM-LARG| Checkbox<br>Donate to Charity| Checkox<br> Donate to Charity.<br> Add $5\n| Backpack | Black<br>Yellow<br>-<br>2L <br> 3L<br> 8L |BLACK-2L<br>BLACK-3L<br>BLACK 8L<br>-<br>YELLOW-2L<br>YELLOW-3L<br>YELLOW-8L| Text Field<br> Add Embroidery| N/A\n\n<br>\n\n### Creating Complex Rules Based On Modifiers\n\nComplex rules must be based on a combination of two or more modifiers, such as two checkboxes. The following example will add $10 to the product price when both boxes are checked. \n\n**Try It Now**  \n*Add complex rules to a modifier*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_complex-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Troubleshooting\n\nComplex rules must consist of multiple conditions that trigger the rule adjustment. If multiple conditions are not specified, the request will return a 422 Unprocessable Entity:"
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"status\": 422,\n    \"title\": \"The rule must contain multiple modifier conditions with unique modifier ids or a variant condition and modifier condition\",\n    \"type\": \"https://developer.bigcommerce.com/api#api-status-codes\"\n}",
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Categories\n\n[Categories](/api-reference/catalog/catalog-api/category/getcategories) are a hierarchy of products available on the store, presented in a tree structure. A store’s category structure determines the primary menu structure of most storefront themes, which are directly tied to it.\n\nAll products must be associated with at least one Category, although a Category does not need to contain any products. Unlike some e-commerce platforms, products on BigCommerce can be associated with more than one Category. \n\nA product associated with categories does not currently have any priority or weighted order (there’s no “primary category”), which can make it difficult to integrate with some external systems which might wish to use a product’s categories to map to a category structure in that external system.\n\n**Try It Now**  \n*Create a Category*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)",
                          "header": {
                            "anchor": "products-overview_categories"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Category Tree\n\n[Category Tree](/api-reference/catalog/catalog-api/catalog/getcatalogsummary) returns a simple view of the parent > child relationship of all categories in the store. This endpoint can be used to fetch the categories if building out a custom navigation for a store."
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": [\n    {\n      \"id\": 33,\n      \"parent_id\": 0,\n      \"name\": \"Clothing\",\n      \"is_visible\": true,\n      \"url\": \"/clothing/\",\n      \"children\": []\n    },\n    {\n      \"id\": 23,\n      \"parent_id\": 0,\n      \"name\": \"Shop All\",\n      \"is_visible\": true,\n      \"url\": \"/shop-all/\",\n      \"children\": []\n    },\n    {\n      \"id\": 25,\n      \"parent_id\": 0,\n      \"name\": \"Towels\",\n      \"is_visible\": true,\n      \"url\": \"/towels/\",\n      \"children\": [\n        {\n          \"id\": 26,\n          \"parent_id\": 25,\n          \"name\": \"Bath Towels\",\n          \"is_visible\": true,\n          \"url\": \"/towels/bath-towels/\",\n          \"children\": [\n            {\n              \"id\": 30,\n              \"parent_id\": 26,\n              \"name\": \"Bath Towels\",\n              \"is_visible\": true,\n              \"url\": \"/towels/bath-towels/bath-towels/\",\n              \"children\": []\n            },\n            {\n              \"id\": 29,\n              \"parent_id\": 26,\n              \"name\": \"Hand Towels\",\n              \"is_visible\": true,\n              \"url\": \"/towels/bath-towels/hand-towels/\",\n              \"children\": [\n                {\n                  \"id\": 31,\n                  \"parent_id\": 29,\n                  \"name\": \"Washcloths\",\n                  \"is_visible\": true,\n                  \"url\": \"/towels/bath-towels/hand-towels/wash-cloths/\",\n                  \"children\": []\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"id\": 28,\n          \"parent_id\": 25,\n          \"name\": \"Beach Towels\",\n          \"is_visible\": true,\n          \"url\": \"/towels/beach-towels/\",\n          \"children\": []\n        },\n        {\n          \"id\": 27,\n          \"parent_id\": 25,\n          \"name\": \"Kitchen Towels\",\n          \"is_visible\": true,\n          \"url\": \"/towels/kitchen-towels/\",\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"id\": 18,\n      \"parent_id\": 0,\n      \"name\": \"Bath\",\n      \"is_visible\": true,\n      \"url\": \"/bath/\",\n      \"children\": [\n        {\n          \"id\": 34,\n          \"parent_id\": 18,\n          \"name\": \"Shoes\",\n          \"is_visible\": true,\n          \"url\": null,\n          \"children\": []\n        }\n      ]\n    },\n    {\n      \"id\": 32,\n      \"parent_id\": 0,\n      \"name\": \"Hoodies\",\n      \"is_visible\": true,\n      \"url\": \"/hoodies/\",\n      \"children\": []\n    },\n    {\n      \"id\": 19,\n      \"parent_id\": 0,\n      \"name\": \"Garden\",\n      \"is_visible\": true,\n      \"url\": \"/garden/\",\n      \"children\": []\n    },\n    {\n      \"id\": 21,\n      \"parent_id\": 0,\n      \"name\": \"Kitchen\",\n      \"is_visible\": true,\n      \"url\": \"/kitchen/\",\n      \"children\": []\n    },\n    {\n      \"id\": 20,\n      \"parent_id\": 0,\n      \"name\": \"Publications\",\n      \"is_visible\": true,\n      \"url\": \"/publications/\",\n      \"children\": []\n    },\n    {\n      \"id\": 22,\n      \"parent_id\": 0,\n      \"name\": \"Utility\",\n      \"is_visible\": true,\n      \"url\": \"/utility/\",\n      \"children\": []\n    }\n  ],\n  \"meta\": {}\n}",
                          "header": {
                            "title": "Category Tree Response Example"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try It Now**  \n*Get category tree*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/63a61a74bd429ee184b3)"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Webhooks\n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)\n* [Categories](/api-docs/getting-started/webhooks/webhook-events#webhook-events_category)\n* [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)\n\n### Related Endpoints\n* [Catalog API](/api-reference/catalog/catalog-api)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Pricing Order",
                    "config": {
                      "sidebar": {
                        "token": "reference"
                      }
                    },
                    "route": {
                      "path": "/pricing-order-operation"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Price Order of Operations</h1>"
                        },
                        {
                          "type": "text",
                          "data": "The table below lists out each price type available on a product. The table is read from top to bottom with the default price having the lowest weight and the tax having the highest weight when calculating price.  "
                        },
                        {
                          "type": "text",
                          "data": "\n| Price Type | Description | Notes |\n|--|--| --|\n| Default Product Price | Required on product  |  |\n| Product Sale Price | Optional on product. | Overrides default price.|\n| Variant Price | Optional on product. | Overrides product sale price |\n| Variant Sale Price | Optional on product.| Overrides variant price. |\n| Customer Group Discount | Available in Fixed ($5), Relative (-$2), or Percentage (-25%). Might apply to one product, category, subcategory or the entire store's products. | Overrides variant sale price. |\n| Product Bulk Pricing | Available in Fixed ($5), Relative (-$2), or Percentage (-25%). Dependent on total quantity of the product including SKUs added to cart. | Overrides customer group discount. |\n| | <p style=\"text-align:center;font-weight:bold;\">Price Lists override all previous pricing</p> | |\n| Price List Variants | Required for a price list record.  | Overrides all previous pricing and excludes SKUs from the total number of items for product bulk pricing. |\n| Price List Variant Sale Price | Optional on product. Overrides if variant pricing is set and selected. | Overrides price list pricing. |\n| Price List Variant Bulk Pricing | Available in Fixed ($5), Relative (-$2), or Percentage (-25%). Dependent on quantity added to cart. | Overrides price list sale price on variants |\n| Price List Variant with Product Pick List | The Product Pick List is configured to change the price when a Pick List Item is selected. | Overrides price list bulk pricing | \n| Product with Modifier | Optional on product. A modifier includes choices such as add $5 for insurance. Can be fixed ($5) or percentage (%10) to add or remove from total product price | Overrides price list with a product pick list |\n| Product with a Product Pick List | If the product pick list is configured to change the price, it will update the price when the option is selected. | Overrides product with modifier |\n| | <p style=\"text-align:center;font-weight:bold;\">Cart</p>||\n| Cart Level Discounts | Cart Level Discounts apply automatically when the shopper meets certain conditions or takes certain actions. | Modifies the final product or cart price depending on the discount type. |\n| Coupons | Coupons require customer action to take effect. | Modifies the final product or cart price depending on the coupon type. |\n| Tax | Products can be assigned to a different tax class, which will change the final amount the shopper pays. | Tax is the last to calculate after shipping and promotions are applied. |"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Webhooks\n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)\n* [Cart](/api-docs/getting-started/webhooks/webhook-events#webhook-events_cart)\n\n### Related Endpoints\n* [Storefront Cart API](/api-reference/cart-checkout/storefront-cart-api) \n* [Server to Server Cart API](/api-reference/cart-checkout/server-server-cart-api)\n* [Price Lists API](/api-reference/catalog/pricelists-api)\n* [Catalog API](/api-reference/catalog/catalog-api)\n\n### Related Articles\n* [Price Lists](/api-docs/catalog/price-list-overview)\n* [Products Overview](/api-docs/catalog/products-overview)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Price Lists",
                    "route": {
                      "path": "/price-list-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Price List API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#pricelist_what-is-a-pricelist\">What is a Price List?</a></li>\n        <li><a href=\"#pricelist_definitions\">Definitions</a></li>\n        <li><a href=\"#pricelist_notes\">Notes</a></li>\n        <li><a href=\"#pricelist_oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#pricelist_available-webhooks\">Webhooks Available</a></li>\n    \t\t<li><a href=\"#pricelist_related-endpoints\">Related Endpoints</a></li>\n        <li><a href=\"#pricelist_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "A Price List allows you to populate different versions of catalog pricing and assign them to different [Customer Groups](/api-reference/customer-subscribers/customers-api). The prices are specified exclusively at the variant level. \n\nIf an active Price List does not contain prices for a variant then the Catalog pricing will be used. The association of a Price List to a Customer Group can be done either via the Control Panel or using the [Customer Groups API.](/api-reference/customer-subscribers/customers-api)\n\nPrice Lists will provide overridden price values to the Stencil storefront. Final price display can be further customized within the Stencil template. See the [Price Object](https://stencil.bigcommerce.com/docs/price-object-properties) in Stencil for further documentation.",
                          "header": {
                            "anchor": "pricelist_what-is-a-pricelist"
                          }
                        },
                        {
                          "type": "text",
                          "data": "",
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": "## Definitions\n\n- `Price List` : A collection of price records. `Price Records` make up a price list.\n \n- `Price Record`: A price override for a particular variant - minimally, this is a variant ID, price, and currency.\n        \n```\n\t{\n\t\t\"variant_id\": 3121,\n\t\t\"price\": 10.0,\n\t\t\"sale_price\": 8.0,\n\t\t\"retail_price\": 12.0,\n\t\t\"map_price\": 6.0,\n\t\t\"currency\": \"EUR\"\n\t}\n```\n\n        \n- `PriceRecordBatch`: A way to update several `Price Records` in a `Price List` at once. Using this bulk upsert endpoint, you can upsert up to 1000 Price Records in a single API call.\n\n- `Currency`:  A `Price List` can contain records for multiple currencies. At this time, *only price records that match the store's default currency will be used to determine storefront and in-cart prices.* Although BigCommerce supports a storefront currency selection, this is not currently integrated with Price Lists and will merely convert prices from the store's default currency for display convenience.",
                          "header": {
                            "anchor": "pricelist_definitions"
                          }
                        },
                        {
                          "type": "code",
                          "data": "[{\n  \"variant_id\": 3121,\n  \"price\": 10.0,\n  \"sale_price\": 8.0,\n  \"retail_price\": 12.0,\n  \"map_price\": 6.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3255,\n  \"price\": 11.0,\n  \"sale_price\": 9.0,\n  \"retail_price\": 13.0,\n  \"map_price\": 7.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3256,\n  \"price\": 12.0,\n  \"sale_price\": 10.0,\n  \"retail_price\": 14.0,\n  \"map_price\": 8.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3257,\n  \"price\": 13.0,\n  \"sale_price\": 11.0,\n  \"retail_price\": 15.0,\n  \"map_price\": 9.0,\n  \"currency\": \"USD\"\n}, {\n  \"variant_id\": 3258,\n  \"price\": 14.0,\n  \"sale_price\": 12.0,\n  \"retail_price\": 16.0,\n  \"map_price\": 10.0,\n  \"currency\": \"USD\"\n}] ",
                          "header": {
                            "title": "Example Price List"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "code",
                          "data": "[\n\n    {\n        \"id\": 1,\n        \"name\": \"Price List Test\",\n        \"is_default\": false,\n        \"category_access\": {\n            \"type\": \"all\"\n        },\n        \"discount_rules\": [\n            {\n                \"type\": \"price_list\",\n                \"price_list_id\": 1\n            }\n        ]\n    }\n]",
                          "header": {
                            "title": "Example Price List assigned to a customer group"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Under `discount_rules` the `type` is set to `price_list` and the `price_list_id` is 1. Which is the id of the price list the group has been assigned to."
                        },
                        {
                          "type": "text",
                          "data": "## Notes\n\n- Bulk Pricing Tiers may additionally be associated with a Price Record to indicate different pricing as the quantity in cart increases.\n  \n- If a variant has a `Price Record` any existing product-level bulk pricing will not apply in the cart.  For variants without `Price Records`, any existing product bulk pricing will apply.\n\n- Price Lists Records accepts bulk upsert. Only one [Bulk upsert](https://developer.bigcommerce.com/api-reference/catalog/pricelists-api/price-lists-records/setpricelistrecordcollection) can done at a time. Running more than one in parallel on the **same store** will cause a 429 error and the request will fail. ",
                          "header": {
                            "anchor": "pricelist_notes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## OAuth Scopes\n* [Products](/api-docs/getting-started/basics/authentication#authentication_oauth-scopes)",
                          "header": {
                            "anchor": "pricelist_oauth-scopes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Webhooks Available\n\nThere are no direct webhooks available for Price Lists. Since Price Lists directly relate to products, webhooks related to products will fire for corresponding changes such as pricing. \n\n* [Products](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)\n* [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)",
                          "header": {
                            "anchor": "pricelist_available-webhooks"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Related Endpoints\n* [Get Price List Collection](/api-reference/catalog/pricelists-api/price-lists/getpricelistcollection)",
                          "header": {
                            "anchor": "pricelist_related-endpoints"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Store Management",
              "route": {
                "path": "/store-management"
              },
              "data": {
                "children": [
                  {
                    "title": "Shipping",
                    "route": {
                      "path": "/shipping"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Overview",
                          "route": {
                            "path": "/shipping-overview"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Shipping</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#shipping_storefront-server-checkout\">Storefront Checkout and Server to Server Checkout</a></li>\n    <li><a href=\"#shipping_order-shipping-addresses\">Order Shipping Addresses</a></li>\n    <li><a href=\"#shipping_shipping-zone-methods\">Shipping Zone and Shipping Methods</a></li>\n    <li><a href=\"#shipping_real-time-carriers\">Real-Time Carriers</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Shipments are created from orders. A [shipment](https://developer.bigcommerce.com/api-reference/orders/orders-api/order-shipments/postordersorderidshipments) represents a grouping of order line items that are shipped to a customer, and multiple shipments can be created from a single order.\n\nThe V2 Shipping API allows you to manage Shipping Zones, Shipping Methods, and Shipping Carrier Connections.\n\nThe Order Shipments resource creates a shipment for an order. You can specify the shipping provider, tracking number and shipping address id when creating a shipment.",
                                "header": {
                                  "anchor": "shipping_what-is-a-shipment"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Storefront Checkout and Server-to-Server Checkout API\n\nThe [Storefront Checkout](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-checkout-api) and [Server-to-Server Checkout APIs](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api) provide methods for managing a checkout up until the point when it is finalized into an order. Because shipments can only be created from finalized orders, a shipment cannot be created from Checkout API endpoints. \n\nHowever, both the Storefront and Server-to-Server Checkout APIs provide methods for creating a Consignment, which specifies the line items that should ship to a particular address. Creating a Consignment corresponds with the actions that a shopper might take when filling out the storefront checkout page, assigning the items in their basket to their respective shipping destinations. \n\nA Checkout will always have one Consignment assigned to it, which is the first shipping address. A Consignment supports multiple shipping addresses, with each address having its own line items.",
                                "header": {
                                  "anchor": "shipping_storefront-server-checkout"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Order Shipping Addresses\n\nThe [Order Shipping Addresses](https://developer.bigcommerce.com/api-reference/orders/orders-api/order-shipping-addresses) endpoint allows you to view the shipping addresses on an order. This will be the address(es) the items are shipped to.  An order can have more than one shipping address.",
                                "header": {
                                  "anchor": "shipping_order-shipping-addresses"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Shipping Zone and Shipping Methods\n\n[Shipping zones ](https://developer.bigcommerce.com/api-reference/store-management/shipping-api/shipping-zones)can be configured in the control panel or using the API to designate where a merchant ships their products and which [shipping methods](https://developer.bigcommerce.com/api-reference/store-management/shipping-api/shipping-method) should be available in each geographic region. \n\nAn example of a shipping zone might be North America, and within that shipping zone, the shipping methods might be Free Shipping, Ship-by-Weight, and USPS.",
                                "header": {
                                  "anchor": "shipping_shipping-zone-methods"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Real-Time Carriers\n\nBigCommerce offers native integrations with many real-time shipping carriers such as UPS, Fedex, and USPS. The [Real-Time Carriers](https://developer.bigcommerce.com/api-reference/store-management/shipping-api/shipping-carrier) resource allows you to connect an account for one of our natively supported shipping carrier integrations. \n\nFor a list of all supported carriers, see [Real-Time Quote Providers](https://support.bigcommerce.com/articles/Public/Setting-Up-a-Real-Time-Shipping-Quote-Shipping-Method/#providers).",
                                "header": {
                                  "anchor": "shipping_real-time-carriers"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Endpoints\n* [Storefront Checkout](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsconsignmentsbycheckoutidpost)\n* [Server to Server Checkout](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api/checkout/checkoutsconsignmentsbycheckoutidpost)\n* [Order Shipping Addresses](https://developer.bigcommerce.com/api-reference/orders/orders-api/order-shipping-addresses)\n* [Shipping Methods](https://developer.bigcommerce.com/api-reference/store-management/shipping-api/shipping-method/createashippingmethod)\n* [Shipping Zones](https://developer.bigcommerce.com/api-reference/store-management/shipping-api/shipping-zones/createashippingzones)\n* [Real-Time Carriers](https://developer.bigcommerce.com/api-reference/store-management/shipping-api/shipping-carrier/postshippingcarrierconnection)\n### Related Articles\n* [Orders API Article](https://developer.bigcommerce.com/api-docs/orders/orders-api-overview#orders-api-overview_create-order-shipment)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Shipper HQ",
                          "route": {
                            "path": "/shipper-hq"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Shipper HQ Metafields</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#shipper-hq-object-properties\">ShipperHQ Object Properties</a></li>\n        <li><a href=\"#control-panel-behavior\">Control Panel Behavior</a></li>\n        <li><a href=\"#add-shipperhq-metafield\">Add ShipperHQ Metafield</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "When ShipperHQ is enabled on a store, additional fields become available on the product level:\n* [Shipping Groups](https://support.bigcommerce.com/s/article/ShipperHQ#ship-groups)\n* [Origin Locations](https://support.bigcommerce.com/s/article/ShipperHQ#origin-loc)\n* [Dimensional Rules](https://support.bigcommerce.com/s/article/ShipperHQ#dim-rules) \n\nThese field values can be set in the Control Panel by the merchant as well as using one of the following:\n* [Product Metafields Endpoint](/api-reference/catalog/catalog-api/product-metafields/createproductmetafield)\n* [Variant Metafields Endpoint](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-variants-metafields/createvariantmetafield)"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## ShipperHQ Object Properties\n\n| Property | Type | Values |\n||||\n| permission_set | string | This must be set to `write`. Setting to any other field will cause unintended behavior. **required** |\n| key | enum | Members: `shipping-groups`, `shipping-origins`, `shipping-dimensional-rules` **required** |\n| value | JSON encoded string | This will be the name of the attribute type in ShipperHQ. This needs to be input exactly how it is listed within ShipperHQ. To pass in more than one Shipping Origin, Origin Location or Dimensional Rule use an array with a comma-separated list. White spaces and special characters need to be escaped. Must be a JSON encoded string `\"[\\\"Origin Name from SHQ-1\\\",\\\" Origin Name from SHQ-2\\\"]\"` **required** |\n| namespace | string | This will always be `shipping.shipperhq` **required** |\n| resource_type | string | Either `product` or `variant` |\n| resource_id | string | ID of the product or variant **read-only** |\n| description | string | ShipperHQ shipping origins associated with this product/sku. **read-only** |\n| date_created | string | Date and time of the metafield's creation. **read-only** |\n| date_modified | string | Date and time when the metafield was last updated. **read-only** |\n| id | number | ID of the Metafield. **read-only** |",
                                "header": {
                                  "anchor": "shipper-hq-object-properties"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "body": "The metafields must be entered exactly, otherwise they will not work. Since metafields can also be used to store information against a product, if the <code>namespace</code> for example is set to shipping and not <code>shipping.shipperhq</code>, it will not update the shipping information."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Control Panel Behavior\n\nWhen Shipping Origins are set using the API, the fields cannot be deleted using the Control Panel. A /DELETE request must be sent to the metafields resource.",
                                "header": {
                                  "anchor": "control-panel-behavior"
                                }
                              },
                              {
                                "type": "code",
                                "data": "//204 Reponse",
                                "header": {
                                  "subtitle": "/DELETE https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/metafields",
                                  "title": "SHQ Add Metafield DELETE Request"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Add ShipperHQ Metafield",
                                "header": {
                                  "anchor": "add-shipperhq-metafield"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\t\"permission_set\": \"write\",\n\t\"key\": \"shipping-origins\",\n\t\"value\": \"[\\\"Alaska\\\",\\\"California\\\"]\",\n\t\"namespace\": \"shipping.shipperhq\"\n}",
                                "header": {
                                  "title": "SHQ Add Metafield Request",
                                  "subtitle": "/POST https://api.bigcommerce.com/stores/{{store_hash}}/v3/catalog/products/{{product_id}}/metafields"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\t\"data\": [{\n\t\t\t\"id\": 51,\n\t\t\t\"key\": \"shipping-origins\",\n\t\t\t\"value\": \"[\\\"Alaska\\\",\\\"California\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ shipping origins associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-19T17:56:08+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 52,\n\t\t\t\"key\": \"shipping-groups\",\n\t\t\t\"value\": \"[\\\"SHIPPING GROUP NAME\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ shipping group rules associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-24T14:51:43+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t},\n\t\t{\n\t\t\t\"id\": 53,\n\t\t\t\"key\": \"shipping-dimensional-rules\",\n\t\t\t\"value\": \"[\\\"DIMENSIONAL RULES NAME\\\"]\",\n\t\t\t\"namespace\": \"shipping.shipperhq\",\n\t\t\t\"permission_set\": \"write\",\n\t\t\t\"resource_type\": \"product\",\n\t\t\t\"resource_id\": 214,\n\t\t\t\"description\": \"ShipperHQ dimensional rules associated with this product/sku\",\n\t\t\t\"date_created\": \"2018-07-24T14:51:43+00:00\",\n\t\t\t\"date_modified\": \"2018-07-24T14:51:43+00:00\"\n\t\t}\n\t],\n\t\"meta\": {\n\t\t\"pagination\": {\n\t\t\t\"total\": 3,\n\t\t\t\"count\": 3,\n\t\t\t\"per_page\": 50,\n\t\t\t\"current_page\": 1,\n\t\t\t\"total_pages\": 1,\n\t\t\t\"links\": {\n\t\t\t\t\"current\": \"?page=1&limit=50\"\n\t\t\t}\n\t\t}\n\t}\n}",
                                "header": {
                                  "title": "SHQ Add Metafield Response"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Endpoints\n* [Product Metafield](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-metafields/createproductmetafield)\n* [Variant Metafield](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-variants-metafields/createvariantmetafield)\n### Related Articles\n* [ShipperHQ](https://www.bigcommerce.com/apps/shipperhq/?search=shipper%20hq) (Knowledge Base)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Shipping Provider API",
                          "route": {
                            "path": "/shipping-provider-api"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1> Shipping Provider API </h1>\n<div class=\"otp\" id=\"no-index\">\n<h3> On this Page </h3>\n<ul>\n  <li><a href=\"#shipping-provider_prerequisites\">Prerequisites</a></li>\n  <li><a href=\"#shipping_provider-signup\">Sign Up</a></li>\n  <li><a href=\"#shipping_provider-before_development\">Before Development</a></li>\n  <li><a href=\"#shipping_provider-developing-app\">Developing the App</a></li>\n  <li><a href=\"#shipping_provider-return_shipping_quotes\">Return Shipping Quotes</a></li>\n  <li><a href=\"#shipping_provider-submitting-app\">Submitting the App</a></li>\n   <li><a href=\"#shipping_provider-app_diagram\">App Diagram</a></li>\n  <li><a href=\"#shipping_provider-definitions\">Defintions</a></li>\n  <li><a href=\"#shipping_provider-faq\">FAQ</a></li>\n  <li><a href=\"https://github.com/bigcommerce/sample-shipping-provider\"> Sample Shipping App</br> (PHP & Silex)</a></li>\n</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "The Shipping Provider API allows third parties to integrate their own shipping carriers into the BigCommerce checkout and control panel. Once integrated, shoppers can fetch quotes on the front-end from the shipping carrier within the cart and checkout pages as they do with any other shipping provider available today. Merchants have access to configure and customize these providers through the control panel as they would any other shipping provider.\n\nSome use cases for the Shipping Provider API are:\n\n* A dropshipper that requires their own rates\n* A merchant that already has a shipping table\n* Third-party logistics\n* Create a combination of in store pickup and shipping options for shoppers"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Prerequisites\n\n### Scopes \nThe following [OAuth](/api-docs/getting-started/authentication#authentication_oauth-scopes) scopes are required:\n- Information and Settings \n\n### Endpoints \nBe familiar with the following API Endpoints:\n- [Shipping Zones](/api-reference/store-management/shipping-api/shipping-zones)\n- [Shipping Methods](/api-reference/store-management/shipping-api/shipping-method)\n- [Shipping Carriers](/api-reference/store-management/shipping-api/shipping-carrier)",
                                "header": {
                                  "anchor": "shipping-provider_prerequisites"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Sign Up\n\nWhen creating your app, the shipping data needs to be added to our Carrier Registry so it returns to shoppers on the front-end.\n\nTo get your app setup send an email to: \n<a href=\"mailto:shippingproviderapi@bigcommerce.com\">shippingproviderapi@bigcommerce.com</a>.\n\nPlease include:\n* Name\n* Partner ID\n* App ID (see below)\n* Email\n* Description of the app\n\nTo get your app ID, create an app in [Developer Tools](https://devtools.bigcommerce.com/) and fill out the information on [Step 3 Technical](https://developer.bigcommerce.com/api-docs/partner/app-store-approval-requirements). In the URL the app will have a unique ID. This is what is sent in exchange for a carrier ID which can be used to test the app.",
                                "header": {
                                  "anchor": "shipping_provider-signup"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1552664114224",
                                "header": {
                                  "title": "App ID"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Before Development\n\nBigCommerce will send requests to your server to get information back about shipping quotes, credential validation and configuration. \n\n### Your Service URLs\nSince BigCommerce will be sending requests, you will need to provide BigCommerce with URLs that can accept quote requests and optionally a URL to check and validate connection options during app registration. These can be any valid HTTPS URL using port 443, for example:\n\n`https://yourhost.com/rate`\n\nYour host and rate should be replaced with your own host and path. \n\n### Routes\n\nYou should create a URL to provide shipping quotes on your API. This is the URL used to check the available shipping rates. The second URL (optional) checks the merchant’s connection settings are valid. It can perform any checks necssary to do so such as looking up credentials in your database or calling a downstream service to verify them.\n\n### Requests and Responses\n\nBigCommerce will send and receive data using JSON. The request for rates will always be formatted using the [Base Rate Request Model](https://developer.bigcommerce.com/api-reference/store-management/shipping-provider-api/models/baseraterequest). The response for rates should be formatted using the [Carrier Quote Object](https://developer.bigcommerce.com/api-reference/store-management/shipping-provider-api/models/carrierquoteobject). The request to check for merchant app credentials will be formatted as Check Connection Options Request Payload and the response should be formatted using the  Check Connection Options Response Payload. \n\n### Error Handling\nIn the case of errors, error messages should be included in the response payload under the messages key.\n\nExample:\n\n```\n{\n  \"valid\": false,\n  \"messages\" [\n    {\n      \"text\": \"Your account ID is invalid\",\n      \"type\": \"ERROR\"\n    }\n  ]\n}\n```",
                                "header": {
                                  "anchor": "shipping_provider-before_development"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Developing the App\n\nThe intended use of the Shipping Provider API is to create an app that merchants can install on their store. This can be a standalone app or part of an existing application. When developing the app there are a few things to consider which are listed below.\n\n### Control Panel Installation Workflow\n\nDuring the app setup, if the Check Connection Options URL is configured for the carrier, an attempt to connect the carrier via the Shipping Manager UI or the Connect Carrier API causes a request to be made to that URL with the provided options. The resource should respond indicating if the credentials are valid and should provide an explanation of what is wrong. If no such URL is configured, this check will be skipped and the credentials are assumed valid as long as they pass type checks.",
                                "header": {
                                  "anchor": "shipping_provider-developing-app"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"connection_options\" {\n    \"account_id\": \"a1ty\"\n  }\n}",
                                "header": {
                                  "title": "Sample Request",
                                  "subtitle": "POST https://developerserver.com/check_connection_options"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"valid\": false,\n  \"messages\" [\n    {\n      \"text\": \"Your account ID is invalid\",\n      \"type\": \"ERROR\"\n    }\n  ]\n}",
                                "header": {
                                  "subtitle": "POST https://developerserver.com/check_connection_options",
                                  "title": "Sample Response"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "The step of validating the credentials is optional. It does not change how the app operates. It is best practice to authenticate the user against your database or the downstream provider service. "
                                }
                              },
                              {
                                "type": "text",
                                "data": "Once the app is installed, it will be made available for configuration by merchants and API users. A merchant can navigate to the Shipping Manager and enable, configure and disable the carrier for any defined zone.\n\n### API Installation Workflow\n\nTo set up a carrier using the API, first connect it using the Connect Carrier API. Make a request containing the connection settings required by your carrier. The ID of the carrier is required. The carrier ID will be issued by BigCommerce when your carrier is registered. All connection fields are unique per carrier. If your carrier doesn’t require any connection settings then this object can be left empty."
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"carrier_id\": \"carrier_33\",\n  \"connection\": {\n    \"key\": \"userKey\",\n    \"account_number\": \"userAccountNumber\"\n  }\n}",
                                "header": {
                                  "subtitle": "POST https://developerserver.com/shipping/carrier/connection",
                                  "title": "Sample Request "
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"carrier_id\": \"carrier_33\",\n  \"connection\": {}\n}",
                                "header": {
                                  "title": "Sample Request with Empty Object",
                                  "subtitle": "POST https://developerserver.com/shipping/carrier/connection"
                                }
                              },
                              {
                                "type": "text",
                                "data": "Once connected, it’s possible to create shipping methods for a connected carrier in any shipping zone. Shipping zones can be queried using the Shipping Zones resource. For any zone, a request can be made to the Shipping Methods resource using the zone ID from the Shipping Zones resource to create a new method for the connected carrier. The shipping carrier’s ID is required in the type field."
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"name\": \"Example Shipping Carrier\",\n  \"type\": \"carrier_33\",\n  \"settings\": {\n    \"carrier_options\": {\n      \"account_id\": \"a1ty\"\n    }\n  },\n  \"enabled\": true\n}",
                                "header": {
                                  "title": "Sample Request",
                                  "subtitle": "POST https://api.bigcommerce.com/stores/{store_hash}/v2/shipping/zones/{zone_id}/methods"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"id\": 24,\n  \"name\": \"Per Order Test\",\n  \"type\": \"perorder\",\n  \"settings\": {\n    \"rate\": 8.3\n  },\n  \"enabled\": true,\n  \"handling_fees\": {\n    \"fixed_surcharge\": 3\n  },\n  \"is_fallback\": false\n}",
                                "header": {
                                  "title": "Sample Response",
                                  "subtitle": "POST https://api.bigcommerce.com/stores/{store_hash}/v2/shipping/zones/{zone_id}/methods"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Returning Shipping Quotes\n\nWhenever shipping rates are required, BigCommerce checks its internal cache for valid entries. If a valid entry exists, it will be used and the shipping carrier will not be called. If a valid cache entry does not exist, a request is made to the Quote URL with details of the items to be shipped, the shipping origin, and shipping destination. If any connection settings or zone settings are configured, these are also included. The shipping carrier must then respond with zero or more Shipping Quotes.",
                                "header": {
                                  "anchor": "shipping_provider-return_shipping_quotes"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"base_options\": {\n    \"origin\": {\n      \"street_1\": \"685 MARKET ST\",\n      \"street_2\": \"\",\n      \"zip\": \"94105\",\n      \"city\": \"SAN FRANCISCO\",\n      \"state_iso2\": \"CA\",\n      \"country_iso2\": \"US\",\n      \"address_type\": \"commercial\"\n    },\n    \"destination\": {\n      \"street_1\": \"\",\n      \"street_2\": \"\",\n      \"zip\": \"94103\",\n      \"city\": \"\",\n      \"state_iso2\": \"CA\",\n      \"country_iso2\": \"US\",\n      \"address_type\": \"residential\"\n    },\n    \"items\": [\n      {\n        \"sku\": \"SKU-100\",\n        \"variant_id\": \"1\",\n        \"product_id\": \"1\",\n        \"name\": \"Shirt\",\n        \"length\": {\n          \"units\": \"in\",\n          \"value\": 1\n        },\n        \"width\": {\n          \"units\": \"in\",\n          \"value\": 1\n        },\n        \"height\": {\n          \"units\": \"in\",\n          \"value\": 1\n        },\n        \"weight\": {\n          \"units\": \"oz\",\n          \"value\": 1\n        },\n        \"discounted_price\": {\n          \"currency\": \"USD\",\n          \"amount\": \"10\"\n        },\n        \"declared_value\": {\n          \"currency\": \"USD\",\n          \"amount\": \"10\"\n        },\n        \"quantity\": 1,\n        \"attributes\": []\n      }\n    ],\n    \"customer\": {\n      \"customer_groups\": [\n        {\n          \"customer_group_id\": 5,\n          \"customer_group_name\": \"Retail\"\n        }\n      ],\n      \"customer_id\": 6\n    },\n    \"store_id\": \"ru7t7fv9\",\n    \"request_context\": {\n      \"reference_values\": [\n        {\n          \"name\": \"cart_id\",\n          \"value\": \"8\"\n        }\n      ]\n    }\n  },\n  \"connection_options\": {\n    \"key\": \"userKey\",\n    \"account_number\": \"userAccountNumber\"\n  },\n  \"zone_options\": {\n    \"show_transit_time\": true\n  },\n  \"rate_options\": []\n}",
                                "header": {
                                  "title": "Sample Request",
                                  "subtitle": "POST https://developerserver.com/rate"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"quote_id\": \"sample_quote\",\n  \"messages\": [],\n  \"carrier_quotes\": [\n    {\n      \"carrier_info\": {\n        \"code\": \"usps_pitney_bowes\",\n        \"display_name\": \"USPS\"\n      },\n      \"quotes\": [\n        {\n          \"code\": \"\",\n          \"rate_id\": \"9vcV1JfckPJZW2pjeNXcKP5y\",\n          \"display_name\": \"USPS Priority Mail\",\n          \"cost\": {\n            \"currency\": \"USD\",\n            \"amount\": 6.35\n          },\n          \"transit_time\": {\n            \"units\": \"BUSINESS_DAYS\",\n            \"duration\": 1\n          },\n          \"dispatch_date\": \"2018-08-29T00:00:00-05:00\"\n        },\n        {\n          \"code\": \"\",\n          \"rate_id\": \"EakTRTvck2XYGVAQw9Mza8WW\",\n          \"display_name\": \"USPS Priority Mail Express\",\n          \"cost\": {\n            \"currency\": \"USD\",\n            \"amount\": 22.98\n          },\n          \"transit_time\": {\n            \"units\": \"BUSINESS_DAYS\",\n            \"duration\": 1\n          },\n          \"dispatch_date\": \"2018-08-29T00:00:00-05:00\"\n        }\n      ]\n    },\n    {\n      \"carrier_info\": {\n        \"code\": \"fedex\",\n        \"display_name\": \"FedEx\"\n      },\n      \"quotes\": [\n        {\n          \"code\": \"GND\",\n          \"rate_id\": \"JnQ2MPqkAMX9cBsw0jyt551R\",\n          \"display_name\": \"FedEx Ground\",\n          \"cost\": {\n            \"currency\": \"USD\",\n            \"amount\": 8.53\n          },\n          \"transit_time\": {\n            \"units\": \"BUSINESS_DAYS\",\n            \"duration\": 1\n          },\n          \"dispatch_date\": \"2018-09-05T11:00:00-05:00\"\n        },\n        {\n          \"code\": \"2DA\",\n          \"rate_id\": \"QwygEz9XjZx1bT9rfDZsVxSy\",\n          \"display_name\": \"FedEx 2 Day\",\n          \"cost\": {\n            \"currency\": \"USD\",\n            \"amount\": 10.47\n          },\n          \"transit_time\": {\n            \"units\": \"BUSINESS_DAYS\",\n            \"duration\": 2\n          },\n          \"dispatch_date\": \"2018-09-05T11:00:00-05:00\"\n        }\n      ]\n    }\n  ]\n}",
                                "header": {
                                  "title": "Sample Response",
                                  "subtitle": "POST https://developerserver.com/rate"
                                }
                              },
                              {
                                "type": "text",
                                "data": "When an app with an associated shipping carrier is uninstalled, all of the shipping methods and the connection info for that carrier is automatically removed from the store. Quote requests will no longer be made and users will no longer see shipping quotes for that carrier."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Submitting the App\n\nBefore submitting your app make sure you have the following information. \n\n**Single Carrier vs Multi Carrier**\n\nWhether the app is a single carrier or multiple carriers. A single carrier app will offer one service such as USPS. A multi carrier app will offer more than one carrier such as USPS, DHL and Canada Post. \n\n**Name and Description**\n\nName and description of the shipping carrier or carriers. \n\n**Logo**\n\nA 70x70 pixel logo that represents the shipping carrier app. \n\n**Configuration Fields**\n\nAny shipping zone-specific or connection-specific fields to be made available to merchants or APIs for configuration. Configuration fields can include which rates to offer, packaging type or packing method.  \n\nTo sumbit your app send an email to <a href=\"shippingproviderapi@bigcommerce.com\">shippingproviderapi@bigcommerce.com</a>.",
                                "header": {
                                  "anchor": "shipping_provider-submitting-app"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## App Diagram",
                                "header": {
                                  "anchor": "shipping_provider-app_diagram"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1552664566834",
                                "header": {
                                  "title": "Carrier Service API"
                                }
                              },
                              {
                                "type": "text",
                                "data": "Only one registered shipping carrier may be associated with an app. This [registered carrier](#shipping_provider-definitions) can provide quotes from multiple downstream carriers if desired. In this case it will become a multi-carrier aggregator."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Definitions\n\n| Name | Description |\n| -- | -- |\n| Configuration Fields | The fields the merchant will see in the control panel. Merchants can navigate to the Shipping Manager and enable, configure and disable the carrier for any defined zone. They will also be able to activate the app using the Carrier Connection API. Then use the Shipping Zones API and Shipping Methods API to configure the app from there. |\n| Quote URL | A URL for a resource of the shipping carrier that accepts quote requests and responds with shipping quotes. For more on the Quote URL see typical app workflow below.| \n| Single Carrier vs Multi Carrier | A single carrier app will offer only one shipping provider. A multi carrier app will aggregate multiple shipping carriers in one app.| \n| Countries Available | A list of countries where the shipping carrier can be used. The default behavior is that the carrier is available for every shipping origin. In most cases this list should be as broad as possible. For example, if your carrier operates worldwide, make it available worldwide. The countries can be limited further than what the shipping carrier has provided. If the service is worldwide, then leave this field blank to specify that it is worldwide. This is an optional step. |\n| Shipping Carrier |  A shipping carrier is what is built to provide quotes to BigCommerce. If a shipping carrier uses more than one shipping provider then it becomes a multi carrier aggregator. A carrier includes a name, description and a logo. |\n| Multi-Carrier Aggregator | A shipping solution that provides shipping quotes for multiple carriers.|\n| Check Connection Options URL | A URL for a shipping carrier resource that accepts check requests containing the connection options provided by a user when enabling the carrier and indicates whether or not those settings are valid. This is an optional step. |\n| Shipping Quote | An estimation of cost to ship a set of items from an origin to a destination. |\n| Shipping Zone | Describes a set of destination addresses and the applicable shipping settings, such as handling fees and available shipping methods.|\n| Shipping Origin | The location from which goods are shipped. This determines which shipping carriers are available for the merchant to configure in the control panel. |",
                                "header": {
                                  "anchor": "shipping_provider-definitions"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## FAQ\n**Can I publish more than one app at a time?**  \nNo, only one app at a time can be published. The others can be for use as testing or as private apps.",
                                "header": {
                                  "anchor": "shipping_provider-faq"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Webhooks\n- [Shipping](/api-docs/getting-started/webhooks/webhook-events#webhook-events_shipment)\n### Related Endpoints\n- [Shipping Provider](/api-reference/store-management/shipping-provider-api)\n- [Shipping Zones](/api-reference/store-management/shipping-api/shipping-zones)\n- [Shipping Methods](/api-reference/store-management/shipping-api/shipping-method)\n- [Shipping Carriers](/api-reference/store-management/shipping-api/shipping-carrier)\n### Related Articles\n- [App Store Approval Requirements](https://developer.bigcommerce.com/api-docs/partner/app-store-approval-requirements)"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Customers & Subscribers",
              "route": {
                "path": "/customers"
              },
              "data": {
                "blocks": [],
                "children": [
                  {
                    "title": "Overview ",
                    "route": {
                      "path": "/customers-subscribers-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Customers and Subscribers</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#customers-subscribers_what-is-a-customer\">What is a Customer?</a></li>\n    \t\t<li><a href=\"#customers-subscribers_what-is-a-subscriber\">What is a Subscriber</a></li>\n        <li><a href=\"#customers-subscribers_subscribers-v-customers\">Subscribers vs. Customers</a></li>\n        <li><a href=\"#customers-subscribers_what-is-a-guest\">Guests</a></li>\n        <li><a href=\"#customers-subscribers_customer-login\">Customer Login API</a></li>\n        <li><a href=\"#customers-subscribers_current-customer\">Current Customer API</a></li>\n        <li><a href=\"#customer-subscribers_customer-api\">Customer API</a></li>\n        <li><a href=\"#customer-subscribers_difference-v2-v3\">Differences Between V2 and V3 Customer API</a></li>\n        <li><a href=\"#customer-subscribers_faq\">FAQ</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Introduction\n\n### Prerequisites\n**Scopes**\n\nThe following [OAuth](https://developer.bigcommerce.com/api-docs/getting-started/authentication#authentication_oauth-scopes) scopes are required:\n- Customers View/Modify\n- Customers Login"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## What is a Customer?\n\nA customer is anyone who has made a purchase on a store and created an account. BigCommerce then stores email address, customer address, and name against the customer as a record. You can also extend the data for your customer records using custom account sign up form fields and the customer attributes API. \n \n### Customer Groups\n\nCustomer groups allow you to organize your customers, give them discounts, and restrict access to specific products or categories. For more information see [Customer Groups](https://support.bigcommerce.com/s/article/Customer-Groups).",
                          "header": {
                            "anchor": "customers-subscribers_what-is-a-customer"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Customer Groups are only available on specific plans."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## What is a Subscriber?\n\nA subscriber is someone who has signed up for a store’s newsletter.  \nSubscribers can be added by:\n\n-   Signing up for the newsletter via the signup box located in the footer of most storefront themes\n-   Signing up for the newsletter during checkout\n-   POSTing to the Subscribers API\n\nWhere possible, the API indicates the origin of the subscriber. If the subscriber was added during checkout, the Order ID is included.",
                          "header": {
                            "anchor": "customers-subscribers_what-is-a-subscriber"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Subscribers vs. Customers\n\n- A subscriber is not always a customer. Someone can sign up for the newsletter only and not create an account.\n- A customer is not always a subscriber. Signing up for the newsletter is a separate action from creating an account and purchasing an item.\n- A customer and a subscriber can be the same. If a shopper checks out on the storefront, creates an account and opts into the newsletter, they are a customer and a subscriber.",
                          "header": {
                            "anchor": "customers-subscribers_subscribers-v-customers"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## What is a Guest?\n\nStore [settings](https://forum.bigcommerce.com/s/article/Checkout-Settings#checkout-settings) can be set to allow a shopper to complete checkout without creating an account. These shoppers are not captured as customers or stored in the BigCommerce system. If you want to capture guest data, using the [Storefront APIs](https://developer.bigcommerce.com/api-docs/cart-and-checkout/cart-and-checkout-overview) can help.",
                          "header": {
                            "anchor": "customers-subscribers_what-is-a-guest"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Customer Login API\n\nThe Customer Login API allows for single sign-on. Once a customer has authenticated by logging in to a third-party system (CMS, portal, or app), you can use the customer login API to seamlessly log the customer into their BigCommerce customer account.",
                          "header": {
                            "anchor": "customers-subscribers_customer-login"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Current Customer API\nThe Current Customer API allows your application to identify logged in customers. This is useful when you need to show customer specific information.",
                          "header": {
                            "anchor": "customers-subscribers_current-customer"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Customer API\nThere are two Customer API endpoints available:\n- V3 Customers API\n- V2 Customers API\n\n### V3 Customers API\n\nThe [V3 Customers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api) is comprised of Customers, Customer Attributes, Customer Address, and Customer Form Fields. \n\nCustomers are any shopper that has created an account on the store. The Customers object comprises customers address, attributes, form fields and authentication. The V3 Customers API can accomplish the same tasks as the existing V2 Customers API, with greater efficiency. \n\n[Customer Attributes](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/models/customerattribute) are a name, value key pair that are stored against a Customer. For example, if you want to keep a list of hat sizes, the name can be “Hat Sizes” and the value can be 10. Each customer can have several name, value pairs stored.",
                          "header": {
                            "anchor": "customer-subscribers_customer-api"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Each customer can have up to 100 name, value pairs stored"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Customer Attributes are created separately from the customer. After the name and type are created, then the attributes can be added to the customer using the name, value pair.\n\n[Customer Addresses](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/models/address) consist of a customers address and phone number. Customers can have multiple addresses stored against them.\n\n[Customer Form Fields Values](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/models/customerformfieldvalue) are fields on either the customer address or customer signup that accept any string data. An example of a signup field can have a customer input a Wholesaler ID or for an address field, have them input any special delivery instructions. Creating form fields needs to be done from the [Control Panel](https://support.bigcommerce.com/s/article/Editing-Form-Fields#account-fields). \nUsing the API you are able to access and edit the values for the fields on your Customer and Customer Address records. \n\n### V2 Customers API\n\nThe V2 Customers API is comprised of Customers, Customer Addresses and Customer Groups. The Customers object is comprised of basic customer information such as customer name and phone number. \n\n[Customer Addresses](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/models/address) consist of a customers address and phone number. Customers can have multiple addresses stored against them.\n\n[Customer Groups](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/models/customergroup) allow you to organize your customers, give them discounts, and restrict access to specific products or categories. Customer groups are not yet available on the V3 Customers API."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Differences Between V2 and V3 Customer API\n\n### Making Requests\n\nThe new Customers API is easier to use. It reduces the API calls needed to accomplish a task. For example, creating a new Customer with the V2 API there was a need to hit several endpoints. Now the customer attributes and address are created in one step with Create a Customer, allowing you to batch create multiple customers, and their subresources, in a single API call.\n\n**Create a Customer**\n\nSingle Customer on V3\n- `/customers`\n\nSingle Customer on V2\n* `/customers/{customer_id}`\n* `/customers/{customer_id}/addresses`\n\n\n### Queries\n\nWith the V3 Customers API, queries become a powerful tool. Instead of using a different endpoint to get customer sub-resources, there is one GET endpoint per resource with filters to refine the request. \n\n**Get Customer Addresses**\n\nGet Customer Address by name and company on V3\n`/customers/addresses?company:in=bigcommerce,commongood&customer_id:in1,2,3`\n\nGet Customer Address by name and company on V2\n`/customers/{customer_id}/addresses/{customer_address_id}`\n\n### Requests\n\nRequests on this endpoint require an array object for all Create and Update Actions.",
                          "header": {
                            "anchor": "customer-subscribers_difference-v2-v3"
                          }
                        },
                        {
                          "type": "code",
                          "data": "[\n  {\n    “id”: 12,\n    “email”: 'janedoe@email.com',\n    “first_name”: 'Jane',\n    “last_name”: 'Doe'\n  }\n]",
                          "header": {
                            "title": "Update a Customer V3",
                            "subtitle": "/customer"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  “first_name”: 'Jane',\n  “email”: 'jane@email.com',\n  “phone”: '1234567890'\n}",
                          "header": {
                            "title": "Update a Customer on V2",
                            "subtitle": "/customers/{customer_id}"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Upsert\n\nUpsert is used for Form Field Values and Customer Attributes. Upsert looks for a match to the existing record, and if one is found, then it makes an update. If a match is not found, it creates a new record.\n\n### Authentication Object\n\nOn the new Customers endpoint, when creating a customer there are two ways to set customers passwords. \n- A new password can be set under the `authentication > new password` object in a /PUT or /POST. \n- To have customers reset the password set `force_password_reset` to `true` under `authentication > new password` object in a /PUT or /POST\n\n[Password Confirmation](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/customers/createanewcustomer) and [Validation](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/customer-passwords/validatecustomerpassword) are still available under V2 Customers. "
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## FAQ\n\n**Which API should I use?**\n\nWhen possible use the V3 Customers API since we will eventually begin the process of deprecating the existing V2 Customers API. \n\n**How can I validate customer passwords?**\n\nPassword validation is only available on V2 Customers API. Validation will return a true or false. The V3 Customers API can reset a customers password or input a new password. ",
                          "header": {
                            "anchor": "customer-subscribers_faq"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n### Related Endpoints\n-   [Customer Login API](https://developer.bigcommerce.com/api-docs/customers/customer-login-api)\n-   [Current Customer API](https://developer.bigcommerce.com/api-docs/customers/current-customer-api)\n-   [Customers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api)\n- [Customer Groups](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/customer-groups/getallcustomergroups) (Customer V2 API)\n- [Password Validation](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/customer-passwords/validatecustomerpassword) (Customer V2 API)\n- [Password Confirmation](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/customers/createanewcustomer) (Customer V2 API)\n-   [Subscribers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/subscribers-api)\n\n### Webhooks\n- [Customers](https://developer.bigcommerce.com/api-docs/getting-started/webhooks/webhook-events#webhook-events_customer)\n### Related Articles\n- [Adding and Editing Fields in the Account Signup Form](https://support.bigcommerce.com/s/article/Editing-Form-Fields#account-fields) (Knowledge Base)\n- [Checkout Settings](https://support.bigcommerce.com/s/article/Checkout-Settings#checkout-settings) (Knowledge Base)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Customer Login API",
                    "route": {
                      "path": "/customer-login-api"
                    },
                    "data": {
                      "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/api-docs/customers/customer-login-api.md"
                    }
                  },
                  {
                    "title": "Current Customer API",
                    "route": {
                      "path": "/current-customer-api"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1> Current Customer API </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#current-customer_identifying-logged-in-customers\">Identifying Logged-In Customers Securely</a></li>\n    <li><a href=\"#current-customer_logged-in-customers-javascript\">Example JavaScript</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Identifying Logged-In Customers Securely\n\nIf your application interacts dynamically with the BigCommerce storefront, and conveys information that is specific to a particular logged-in customer, you must confirm that customer’s identity within the insecure environment of the user’s browser.\n\nTo address this need, BigCommerce provides a Current Customer endpoint, which your app can access via JavaScript on the storefront. This endpoint returns a JWT with identifying details about the customer. The information is signed with your [OAuth client secret](/api-docs/getting-started/basics/authentication#authentication_client-id-secret).",
                          "header": {
                            "anchor": "current-customer_identifying-logged-in-customers"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Example JavaScript\n\nBelow is example JavaScript that will access this JWT. To test the JWT functionality, you can install this JavaScript on your sandbox BigCommerce store. Your application’s Client ID must be included in the request (to identify the requesting application):",
                          "header": {
                            "anchor": "current-customer_logged-in-customers-javascript"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<script type=\"text/javascript\">\nfunction customerJWT() {  \n    var appClientId = \"**BC_CLIENT_ID**\"; // TODO: Fill this in with your app's client ID\n    var xmlhttp = new XMLHttpRequest();\n    xmlhttp.onreadystatechange = function() {\n        if (xmlhttp.readyState == 4 ) {\n           if (xmlhttp.status == 200) {\n               alert('Customer JWT:\\n' + xmlhttp.responseText);\n           }\n           else if (xmlhttp.status == 404) {\n              alert('Not logged in!');\n           }\n           else {\n               alert('Something went wrong');\n           }\n        }\n    };\n    xmlhttp.open(\"GET\", \"/customer/current.jwt?app_client_id=\"+appClientId, true);\n    xmlhttp.send();\n}\ncustomerJWT();\n</script>\n",
                          "header": {
                            "title": "Identify Logged In Customers",
                            "anchor": "identify-customers-script"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "If you are logged into the storefront with a customer account, the above JavaScript should alert to the browser with a JWT token. If no customer is logged in, BigCommerce will return a 404 response, and you will see an error message. The JWT returned from this endpoint (example below) can be decoded on JWT.IO"
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"customer\": {\n    \"id\": 4927,\n    \"email\": \"john.doe@gmail.com\",\n    \"group_id\": \"6\"\n  },\n  \"iss\": \"bc/apps\",\n  \"sub\": \"abc123\",\n  \"iat\": 1480831863,\n  \"exp\": 1480832763,\n  \"version\": 1,\n  \"aud\": \"6sv16tfx3j5gsopm42ss5dd67g2srvq\",\n  \"application_id\": \"6sv16tasdgr2b5hs5dd67g2srvq\",\n  \"store_hash\": \"abc123\",\n  \"operation\": \"current_customer\"\n}",
                          "header": {
                            "title": "Logged in Customers Response",
                            "anchor": "logged-in-customer-response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "By design, your application should send this token to the application’s server, validate it against your client secret, and then use it as a trusted indication of the logged-in customer’s identity, before displaying confidential information to them. \n\nAn end-to-end example, which displays a customer’s recently purchased products, is available in our [Ruby](https://github.com/bigcommerce/hello-world-app-ruby-sinatra/) and [PHP](https://github.com/bigcommerce/hello-world-app-php-silex/) sample apps."
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Storefront",
              "route": {
                "path": "/storefront"
              },
              "data": {
                "children": [
                  {
                    "title": "Scripts",
                    "route": {
                      "path": "/scripts-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Scripts API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#scripts_introduction\">Introduction</a></li>\n    \t\t<li><a href=\"#scripts_script-manager-partner-guidelines\">Script Manager API Partner Guidelines</a></li>\n        <li><a href=\"#script_prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#scripts_upgrades-installation\">Upgrades and Installation</a></li>\n        <li><a href=\"#scripts_fixing-missing-scripts\">Fixing Missing Scripts</a></li>\n        <li><a href=\"#scripts_scripts-notes\">Notes</a></li>\n        <li><a href=\"#scripts_scripts-visibility\">Visibility Locations </a></li>\n    \t\t<li><a href=\"#scripts_oauth-scopes\"> OAuth Scopes</a></li>\n    \t\t<li><a href=\"#scripts_related-endpoints\">Related Endpoints</a></li>\n        <li><a href=\"#script_object-properties\">Object Properties</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "The BigCommerce Scripts API gives developers the ability to inject scripts into a store's template files programmatically. This means that app and integrations can insert scripts into a user’s storefront without requiring the user to manually paste a snippet of code into their control panel. There are many use cases for this powerful API, for example:\n* inserting analytics scripts\n* inserting single-click app scripts\n* inserting live chat and support plugins\n* inserting theme extensions or connector apps\n\n### Prerequisites\n\nThis article contains detailed information about the Scripts API and assumes you're familiar with BigCommerce App Installation process. For more information on the app installation process, see:\n[App Installation](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_installation-update-sequence)",
                          "header": {
                            "anchor": "scripts_introduction"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Script Manager API Partner Guidelines\n\nWith the Script Manager API, your Apps now have the ability to insert scripts into a user’s storefront without requiring the user to manually paste a snippet of code into their control panel. You can freely update these scripts while your App is installed, and, if desired, automatically remove scripts if your App is uninstalled.\n\nFor Apps being installed on our latest theme engine (Stencil), this process is relatively straightforward. However, if your App is already live, you may have already asked merchants to paste a code snippet in one of these two sections in the control panel:\n\n- Footer Scripts\n- Web Analytics\n\nAlso, since our older (Blueprint-based) themes do not support the Script Manager API, you’ll still need some way of providing users of older themes the documentation they need, without burdening users of newer themes with additional, unnecessary steps.\n\nTo help you transition to the Script Manager API, we’ve provided some recommended strategies to deal with these different situations. \n\n#### Stencil vs Blueprint\n\nAs mentioned above, BigCommerce supports two theme engines: Stencil and Blueprint. Stencil is our latest technology, and all new stores only have access to Stencil themes. However, older stores may still be using our legacy theme engine, Blueprint, which does not have the ability to render scripts inserted through the Script Manager API.\n\nBecause of this, you’ll need to check whether a user is running Stencil to determine if their store supports the Script Manager API. To do this, use the [Get Store Information API](https://developer.bigcommerce.com/api/v2/#store-information-reference) endpoint and check the `stencil_enabled` flag. (requires [store_v2_information_read_only scope](https://developer.bigcommerce.com/api/#oauth-scopes)).",
                          "header": {
                            "anchor": "scripts_script-manager-partner-guidelines"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Prerequisites\n\nTo better understand the content of this document, you should be familiar with the app installation procedure, which is outlined here:\n[App Installation](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_installation-update-sequence)",
                          "header": {
                            "anchor": "scripts_script-prerequisites"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Upgrades and Installation\n\n### Installing An App on Stencil\n\nFor Apps being installed on Stencil stores, we recommend inserting your scripts immediately after receiving the POST response during the Auth Callback flow. Add your scripts using the Create Script endpoint of the Script Manager API.\n\nWe highly recommend leaving the auto_uninstall flag set to true, so that your App will properly clean itself up when uninstalled. More information about this flag can be found <a href=\"#script_object-properties\">here</a>.\n\n#### Upgrading Existing Apps on Stencil\n\nIf your App has already been released, you may have existing users with pasted-in code somewhere in their control panel. There are a few possible ways to deal with this situation.\n\n1.) __Do nothing__\n\nIf you don’t need to upgrade existing merchants to the Script Manager API, it’s perfectly fine to leave them as-is. You’ll need to maintain documentation for the manual uninstallation process so that merchants with older installations know what to clean up, and you won’t be able to automatically update or add scripts for these users. \n\n2.) __Prompt merchants to upgrade__\n\nIf you want your merchants to gradually update to the new Script Manager over time, you can prompt them to do so on your App’s landing page. You’ll need to keep track of which of your merchants are not using the Script Manager yet to know whether you need to display this prompt. Also, make sure to check that they are running Stencil (via the Get Store Information endpoint) before prompting them to upgrade.\n\nOnce a user decides to upgrade, you can walk them through removing the old pasted-in code in their control panel, and then, once the merchant clicks a button, install your scripts through the Script Manager API.\n\n3.) __Silently upgrade to the Script Manager API__\n\nFinally, if it’s possible for your old, pasted-in scripts to live alongside the new Script Manager API scripts, you may be able to upgrade to using the Script Manager API without any user intervention being required. Whether or not this is possible will vary depending on the implementation of your App.\n\nWhile your merchants will be loading more data on their storefront pages than necessary, this method will allow you to transition to using the Script Manager API for all of your installations immediately. Keep in mind you’ll still need to document the manual uninstallation process for existing installations.\n\n### Installing Apps on Blueprint Stores \n\nAs mentioned, the Blueprint theme engine does not support the Script Manager API. Any scripts inserted through this API will not be rendered on any storefront pages. To prevent unpredictable behavior should a user change their theme, we highly recommend checking the Get Store Information endpoint for Stencil support prior to installing any scripts through the Script Manager API. Additionally, you’ll still want to show the old manual installation steps when a store does not support Stencil. \n\n### Existing Blueprint Installations \n\nExisting blueprint installations won’t be affected, but remember that if you are prompting existing Stencil users to upgrade to the Script Manager, you’ll want to suppress this message for Blueprint users. ",
                          "header": {
                            "anchor": "scripts_upgrades-installation"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### Fixing Missing Scripts\n\nIt’s possible that your App installation may find itself unexpectedly missing one or more scripts. Below are some possible causes of this issue.\n\n1.) __The Merchant Deleted Your Script__ \n\nMerchants are given a warning when attempting to delete a script belonging to an App, but we do allow them to do so.\n\nIf you want to handle this situation gracefully, we recommend you check the [Get Scripts](/api-reference/storefront/content-scripts-api/scripts/getscripts) endpoint on your App Detail Page (returned by the [Load Callback URI](/api-docs/getting-started/building-apps-bigcommerce/building-apps#building-apps_processing-signed-payload) to determine whether the expected scripts are present. If they are not, you can prompt the user to click a button to automatically repair their installation.\n\nWe ask that you request the user’s permission rather than doing this automatically, as they may have had a good reason for deleting the missing script. \n\n2.) __The Merchant's Theme is Not Set Up Correctly__ \n\nIn order to render scripts, the theme templates must have the handlebars expressions {{head.scripts}} and {{footer.scripts}} in the pages where scripts should be rendered. If either of these is absent, scripts on that page with location set to head or footer (respectively) will not be rendered.\n\nOf particular note, {{head.scripts}} was only recently added to the checkout and order confirmation pages in our Cornerstone theme, and widespread adoption of this standard outside of Cornerstone is still an ongoing process.\n\nTo ensure your App is compatible with as many themes as possible, we recommend footer over head for checkout, order_confirmation and all_pages visibilities. \n\n3.) __Scripts Are Not Rendering in the Checkout and Order Confirmation__ \n\nIn order to render scripts, the store must have BigCommerce’s Optimized one-page checkout enabled. This is the default checkout type for all new Stencil stores. Existing stores have to manually change the checkout type as detailed in this article. \n\nStencil themes from the marketplace support the [Optimized One-Page Checkout](https://support.bigcommerce.com/articles/Public/Optimized-Single-Page-Checkout#signup). However, there could be instances where the merchant maintains their own private theme and the theme has not been updated to support the Optimized one-page checkout. In this case, the merchant is required to add the theme support, following the steps [here](https://stencil.bigcommerce.com/docs/optimized-checkout-prereqs).  ",
                          "header": {
                            "anchor": "scripts_fixing-missing-scripts"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Notes\n\n- If you are injecting scripts into the Checkout, you will need to update the scope to Checkout Content. Accounts can only be created by the [store owner](https://support.bigcommerce.com/articles/Public/Store-API-Accounts/).\n- Merchants will be able to see the scripts installed on the store in the Control Panel. Within the native tag manager, merchant actions will be limited to viewing a script and deleting a script.\n- Scripts can be located in the header `{{head.scripts}}` or footer `{{footer.scripts}}`.\n- Scripts Manager is only for Stencil themes. Blueprint store users will still need to copy and paste in code.\n- The current visibility options are `storefront`, `checkout`, `all_pages` and `order_confirmation`.\n- Scripts injected via the Scripts API will not render when you are developing a theme locally via Stencil CLI.",
                          "header": {
                            "anchor": "scripts_scripts-notes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Script Visibility Locations\n\n| Scope | Visibility |\n| -- | -- |\n| `all_pages` | Add Wishlist </br> Blog List </br> Blog Post</br> Brand Pages </br> All Brands Page </br> Cart </br> Category </br> Checkout </br> Checkout </br> Product Compare </br> Order Confirmation </br> Page </br> Contact Form </br> Product </br> Search </br> All Wishlist </br> Wish List |\n| `storefront` |  Add Wishlist </br> Blog List </br> Blog Post</br> Brand Pages </br> All Brands Page </br> Cart </br> Category </br> Checkout </br> Checkout </br> Product Compare </br> Page </br> Contact Form </br> Product </br> Search </br> All Wishlist </br> Wish List |\n| `checkout` | Checkout | \n| `order_confirmation` | Order Confirmation | \n\nScripts can not be injected to:\n- giftcertificates.php\n- sitemap.php\n- account.php\n- login.php\n- 404 pages",
                          "header": {
                            "anchor": "scripts_scripts-visibility"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## OAuth Scopes\n* Checkout Content\t\n* Content\n\nFor more details and a full list of available scopes, see [Oauth Scopes](/api-docs/getting-started/basics/authentication#authentication_oauth-scopes).",
                          "header": {
                            "anchor": "scripts_oauth-scopes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Related Endpoints\n* [Get Scripts](/api-reference/content/content-scripts-api)",
                          "header": {
                            "anchor": "scripts_related-endpoints"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Widgets",
                    "route": {
                      "path": "/widgets"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Overview",
                          "route": {
                            "path": "/widgets-overview"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Widgets API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#widgets_regions\">Regions</a></li>\n        <li><a href=\"#widgets_widget-templates\">Widget Templates</a></li>\n        <li><a href=\"#widgets_widgets\">Widgets</a></li>\n        <li><a href=\"#widgets_placements\">Placements</a></li>\n        <li><a href=\"#widgets_layouts\">Layouts</a></li>\n    <li><a href=\"#widgets_placement-and-layouts\">Placements and Layouts</a></li>\n    \t\t<li><a href=\"#widgets_storefront\">Widgets on the Storefront</a></li>\n    \t\t<li><a href=\"#widgets_definitions\">Definitions</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "The Widgets API allows developers to programmatically associate content with regions on a BigCommerce storefront. The content can consist of HTML, CSS, and JavaScript, and the API supports configuration via Handlebars variables. It can support many types of content such as YouTube Videos, image sliders, and chat apps.\n\nSome benefits are:\n* Inject modular, reusable blocks of content inside new and existing store pages\n* Build tools that allow non-technical users to control content without editing theme files\n* Target specific products, categories or brands with widgets\n\nWe are going to review all the components that make a widget. Then, we’ll use what we’ve learned to create a widget .",
                                "header": {
                                  "anchor": "widgets_introduction"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Regions\n\n[Regions](/api-reference/storefront/widgets-api/models/themeregion) are specific locations in the Stencil theme files where a widget is placed. A region is added at the file level using the format {{{region name=\"...\"}}}. A region can be named however you like, but it is best practice to give it a name that is descriptive of the location and function. A theme file can have as many regions as you want, with more than one widget assigned to the region and the [Placement](/api-docs/storefront/widgets/widgets-overview#widgets_placements) `sort_order` controlling how the widgets appear on the Storefront.",
                                "header": {
                                  "anchor": "widgets_regions"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551970794664",
                                "header": {
                                  "title": "Storefront --Content Region"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551970767918",
                                "header": {
                                  "title": "Template File -- Content Region"
                                },
                                "config": {
                                  "fluid": true,
                                  "maxWidth": "805"
                                }
                              },
                              {
                                "type": "text",
                                "data": "Most themes in the BigCommerce marketplace come with predefined regions. It is best to utilize those first. By editing the theme and adding theme regions, updates will need to be manually managed. "
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Widget Templates\n\n[Widget Templates](/api-reference/storefront/widgets-api/models/widgettemplate) are handlebars-enabled HTML templates which define the structure of the widget on a page. Widget Templates can use the built in handlebar helpers such as {{if}} and {{each}}. Using the helpers allows for conditional logic to be built into the Widget Templates. Widget templates can be reused to build multiple widgets.\n\n### Widget Template Examples\n**Simple List**\n\nThe Simple List template creates a list where each item in the list can have a different color. This example uses the [each block helper](https://handlebarsjs.com/builtin_helpers.html) in handlebars to loop through each item in the list and display it. The text and color are determined by handlebars placeholders that are set when creating the [Widget]((/api-reference/storefront/widgets-api/widget/createwidget).",
                                "header": {
                                  "anchor": "widgets_widget-templates"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"name\": \"Simple List\",\n  \"template\": \"<ul>{{#each list_items}}<li style=\\\"color:{{color}};\\\">{{text}}</li>{{/each}}</ul>\"\n}",
                                "header": {
                                  "title": "Simple List",
                                  "subtitle": "The list takes advantage of loops to display each list item on the page. "
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\"name\": \"Simple Slider\",\n\"template\": \"<ul class='slider'>{{#each slides}}<li class='slide'><img src={{image}}'/</li>{{/each}}</ul>\"\n}",
                                "header": {
                                  "title": "Image Slider",
                                  "subtitle": "The slider takes advantage of loops to display each slide on the page."
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Widgets\n\n[Widgets](/api-reference/storefront/widgets-api/models/widget) are a unit of content that are placed on specific pages in a Stencil theme. Widgets are made of a widget configuration written in json and a widget template UUID. Widgets are rendered as part of the HTML on the storefront.",
                                "header": {
                                  "anchor": "widgets_widgets"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551971053085",
                                "header": {
                                  "title": "Storefront -- Widget"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Widget Configuration\n\nA Widget Configuration is the JSON payload that defines the content to be rendered with a given Widget Template. In the previous simple list example, the widget template loops over a list_items array using `{{#each}}`. \n\nIn the example below, we define the list_items array and supply values for the color and text of each list item. Since the template is created separately from the configuration, the same template UUID can be used multiple times for configuration."
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"slides\": [\n    {\"image\":\"http://imageurl.com/nh35jn/test.png\"},\n    {\"image\":\"http://imageurl.com/fdhdfh/test2.png\"}\n  ]\n}",
                                "header": {
                                  "title": "Widget Configuration Slides"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\"list_items\":[\n{ \n\"color\": \"orange\", \n\"text\": \" Item One\"\n},\n{ \n\"color\": \"blue\", \n\"text\": \"Item Two\"\n}\n]\n}\n",
                                "header": {
                                  "title": "Widget Configuration List Items"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Keep in mind that when reusing the `widget_configuration` the array will have to be called `list_items`. Otherwise, the widget will be created on the frontend, but there will be no data, so nothing is rendered. This is because `list_items` was defined when the widget template was originally created. The widget configuration name can anything that is set when the widget_template is created."
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"name\": \"Simple List\",\n  \"widget_configuration\": {\n    \"list_items_two\": [\n      {\n        \"color\": \"orange\",\n        \"text\": \"Fifth item\"\n      },\n      {\n        \"color\": \"blue\",\n        \"text\": \"Sixth item\"\n      }\n    ]\n  },\n  \"widget_template_uuid\": \"7bfb9a46-75cc-45bc-bf39-a6a43b77111f\"\n}",
                                "header": {
                                  "title": "List Items Example: Incorrect"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "4",
                                      "to": "4"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": "The example above uses `list_items_two`, on line four, in the configuration which is not the same as `list_items`. If `list_items` has already been established during the initial configuration it must be set as `list_items` when being used again. "
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"name\": \"Simple List\",\n  \"widget_configuration\": {\n    \"list_items\": [\n      {\n        \"color\": \"orange\",\n        \"text\": \"Fifth item\"\n      },\n      {\n        \"color\": \"blue\",\n        \"text\": \"Sixth item\"\n      }\n    ]\n  },\n  \"widget_template_uuid\": \"7bfb9a46-75cc-45bc-bf39-a6a43b77111f\"\n}",
                                "header": {
                                  "title": "List Items Example: Correct"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "4",
                                      "to": "4"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Placements\n\n[Placements](/api-reference/storefront/widgets-api/placement/createplacement) determine the Region where the Widget is placed and in what order. The order of the placement is controlled by the `sort_order` when creating the placement. \nA placement must be created in order use a Widget on the storefront.\n\n\nPlacements can be used in two ways:\n* On their own using the `sort_order` and region to determine placement in a theme.\n* With a Layout, for more control arranginging widgets such as a table or column. Using Layouts is an optional step. The Widget can still be rendered without a Layout.\n\n### Placements `entity_id`\n\nWhen creating a placement, there is an option to provide an `entity_id`. \nThis is the ID for a specific page, brand, category or page. For example, if a Widget needs to be on all product pages, leave `entity_id` blank. If the Widget should only appear on a certain product page, then assign `entity_id` the product ID. \n\n`entity_id` can be used with the following page types:\n* pages/brand\n* pages/category\n* pages/page\n* pages/product\n\n\n### Create a Widget Placement with Region\n\nBelow, the region and sort order have a value, so the widget will appear on the home page. ",
                                "header": {
                                  "anchor": "widgets_placements"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"widget_uuid\": \"2dfeb50e-5f8c-4df2-8525-a338091eed32\",\n    \"entity_id\": \"14\",\n    \"sort_order\": 1,\n    \"region\": \"home_header_image\",\n    \"template_file\": \"pages/home\",\n    \"status\": \"active\"\n}",
                                "header": {
                                  "title": "Widget with Region"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "5",
                                      "to": "5"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Create a Widget Placement Without a Region\nLeaving the region and sort order off the request will return just the `placement_id` in the response, allowing for the widget to be rendered using Layouts. "
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"widget_uuid\": \"2dfeb50e-5f8c-4df2-8525-a338091eed32\",\n    \"entity_id\": \"14\",\n    \"template_file\": \"pages/home\",\n    \"status\": \"active\"\n}",
                                "header": {
                                  "title": "Widget Without a Region"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "### Layouts\n[Layouts](/api-reference/storefront/widgets-api/models/layout) allow a developer to control the position of widgets on the storefront. A Layout allows you to style around the Placement. Layout uses the markup field which accepts any valid HTML and CSS. A Layout can contain multiple Placements.",
                                "header": {
                                  "anchor": "widgets_layouts"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551971170727",
                                "config": {
                                  "fluid": true,
                                  "maxWidth": "805"
                                },
                                "header": {
                                  "title": "Storefront -- Layouts"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Layouts `bc-placements`\n\n`bc-placements` is a special field that takes in a placement id and allows the widget to be positioned anywhere in the layout. The `id` is the Placement ID."
                              },
                              {
                                "type": "code",
                                "data": "<div>\n   <div style=\"width: 33.3%; float: left; display: inline-block; padding: 5px; box-sizing: border-box\">\n     <bc-placement id=\"73ee60d9-72e4-4dce-be93-c96b861cb5ff\"></bc-placement>\n   </div>\n   <div style=\"width: 33.3%; float: left; display: inline-block; padding: 5px; box-sizing: border-box\">\n     <bc-placement id=\"3466ccb8-cb3e-4811-8266-acae20d1bb93\"></bc-placement>\n   </div>\n     <div style=\"width: 33.3%; float: left; display: inline-block; padding: 5px; box-sizing: border-box\">\n     <bc-placement id=\"73ee60d9-72e4-4dce-be93-c96b861cb5ff\"></bc-placement>\n   </div>\n</div>",
                                "header": {
                                  "title": "Layouts bc-placements Example"
                                },
                                "config": {
                                  "mode": "html"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Placements and Layouts\n\nIn order to position widgets inside a page you need to use placements. Placements determine in which region the widgets is located and in what the order it will be displayed in case there are other widgets in the same region. \n\nPlacements can be used in two ways:\n\n**1. Placement + Widget:**  \nWhen creating a placement with a widget, the widget content takes the full region width. Any additional widgets that are placed onto the same region will be stacked above or below based on the `sort_order` property for each placement.\n\nIf you are creating marketplace applications that create placements directly, you don’t need to use the `sort_order` property. \n\n**2. Placement + Layout:**  \nIf you want to arrange widgets inside a page using a multi-column style system, then you can create the placement with a Layout. You can also add additional styling around placements when using Layouts.  \n\nUsing Layouts is optional and most recommended when you have multiple placements that you want to arrange in a particular way. You can still arrange content in a multi-column style system using HTML and CSS only without having to use Layouts when creating a single placement. ",
                                "header": {
                                  "anchor": "widgets_placement-and-layouts"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Widgets on the Storefront\n\nWidgets are rendered on the storefront as a data tag in the HTML.\n\n* Region -- data-content-region\n* Layout -- data-layout-id\n* Widget -- data-widget-id\n* Placement does not generate a data tag. Only the Widget.\n\nA Region can contain multiple Layouts with Widgets and Placements or Widgets without a Layout. Within a single region, you might have widgets whose positioning is determined by a Layout, as well as widgets whose positioning is determined simply by a Placement. In the example below, the region is named “widget_page.” Nested within that region is a Layout, which contains a widget. The region also contains a Placement, or a widget that’s been placed on the page without a Layout.",
                                "header": {
                                  "anchor": "widgets_storefront"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551971208326",
                                "header": {
                                  "title": "Storefront"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551895293134",
                                "header": {
                                  "title": "Widgets Console"
                                },
                                "config": {
                                  "fluid": true,
                                  "maxWidth": "805"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Definitions\n\n| Name | Definition |\n|--|--|\n| Widgets | Widgets are the units of content to be placed on specific pages in a Stencil theme. Each widget is comprised of a widget configuration and a widget template. *There is a limit of 1000 widgets per store.* | \n| Widget Templates | Widget Templates are Handlebars-enabled HTML templates which define the widget’s structure on a page. These templates can include conditional logic as well as looping. *There is a limit of 100 total widget templates per store.* |\n| Placements | Placements are the records to track which widget appears on which page, and in what order.  Currently, placements can only exist on the following pages: </br>* pages/blog-post </br> * pages/blog</br>* pages/brand</br>* pages/brands</br>* pages/cart</br>* pages/category</br>* pages/home</br>* pages/page</br>* pages/product</br>* pages/search</br> *There is a limit of 75 placements per template file and 6500 total placements per store.*|\n| Regions | Regions are specific spots in a Stencil template file where Widgets can be placed. Regions are defined at the theme file level using the following syntax: `{{{region name=\"...\"}}}`. There can be many widgets inside a given region, and these widgets can have an assigned sort order. |\n| Widget Configuration | This is a JSON payload that contains data used when rendering the widget. Each widget has a configuration, and there is a 64kb limit on the size of the JSON. The widget configuration must be valid JSON, but we don’t enforce any additional requirement on the structure of the configuration. |\n| Layout | A way to style multiple widgets on a page or position a Widget. A Layout will accept any HTML and CSS. *There is a limit of 1000 total layouts per store.* |",
                                "header": {
                                  "anchor": "widgets_definitions"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Endpoints\n* [Widgets API](/api-reference/storefront/widgets-api)",
                                "header": {
                                  "anchor": "widget_resources"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Next Steps\n* [Widgets Tutorial](/api-docs/storefront/widgets/widgets-tutorial)\n* [Wigets Code Samples](/api-docs/storefront/widgets/widgets-code-samples)",
                                "header": {
                                  "anchor": "widget_next-steps"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Widgets Tutorial",
                          "config": {
                            "sidebar": {
                              "token": "tutorial"
                            }
                          },
                          "route": {
                            "path": "/widgets-tutorial"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Widgets Tutorial</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#widget-tutorial_add-a-region\">Add a Region</a></li>\n        <li><a href=\"#widget-tutorial_create-widget-template\">Create a Widget Template</a></li>\n        <li><a href=\"#widget-tutorial_create-widget\">Create a Widget</a></li>\n        <li><a href=\"#widget-tutorial_create-placement\">Create the Placement</a></li>\n        <li><a href=\"#widget-tutorial_create-layout\">Create the Layout</a></li>\n    \t\t<li><a href=\"#widget-tutorial_reuse-widget-template\">Reuse the Widget</a></li>\n        <li><a href=\"#widget-tutorial_resources\">Resources</a></li>\n    <li><a href=\"#widget-tutorial_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "In this tutorial, we will cover:\n* Creating a Region\n* Creating a Widget Template\n* Creating a Widget\n* Placing the Widget\n* Creating the Layout\n\nThis tutorial assumes knowlege of [Widgets](/api-docs/storefront/widgets/widgets-overview). "
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "The instructions below use the Cornerstone Theme. Your theme may differ."
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Prerequisites:\n* Stencil Theme. This tutorial uses Cornerstone.\n* Scopes  \nThe following Oauth scopes are required:\n\t* [Content](/api-docs/getting-started/authentication#authentication_oauth-scopes) set to Modify\n* Image URL. If you don’t have one, there is an example in the tutorial.\n* Category Page ID. A [GET Categories](/api-reference/catalog/catalog-api/category/getcategories) request will returns a list of category IDs.\n\nWe will be making a widget that shows three images, with a hover effect and each image linking out to a different location. "
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551898706416",
                                "header": {
                                  "title": "Category Page Widget"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Add a Region\nAdd `{{{region name=\"category_header_banner\"}}}` to <span class=”fp”>pages/category.html</span>. This is where the widgets will appear on the category page. In this example, the region is added to line 24. ",
                                "header": {
                                  "anchor": "widget-tutorial_add-a-region"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551898921184",
                                "header": {
                                  "title": "Add Region to category.html"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "info",
                                  "body": "Regions can only be added to files under pages/templates, including subfolders."
                                }
                              },
                              {
                                "type": "text",
                                "data": "To check the region was added successfully, use [Get Content Regions](/api-reference/storefront/widgets-api/regions/getcontentregions)."
                              },
                              {
                                "type": "http",
                                "data": {
                                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/content/regions",
                                  "method": "get",
                                  "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json",
                                    "X-Auth-Client": "{$$.env.X-Auth-Client}",
                                    "X-Auth-Token": "{$$.env.X-Auth-Token}"
                                  },
                                  "query": {
                                    "templateFile": "pages/category"
                                  }
                                },
                                "header": {
                                  "title": "Get Content Region"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"data\": [\n        {\n            \"name\": \"header_bottom\"\n        },\n        {\n            \"name\": \"category_header_banner\"\n        }\n    ],\n    \"meta\": {}\n}",
                                "header": {
                                  "title": "Sample Response",
                                  "subtitle": "Get Content Regions"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Create a Widget Template\n\nWidget Templates are the reusable piece of structure. In this walkthrough we are creating a header image. `image_source` is set using handlebars so the header image can be changed every time the template is reused. The template also takes advantage of conditional logical with `#each images`. Instead of creating a template with three lines of code for each image, one line can loop through each image provided. \n\n\n* name -- Name of the widget template (required)\n* template -- Html to create the widget template (required)\n\nIn the response the Widget Template UUID returned. Make note of it for use later when creating the Widget.",
                                "header": {
                                  "anchor": "widget-tutorial_create-widget-template"
                                }
                              },
                              {
                                "type": "http",
                                "data": {
                                  "method": "post",
                                  "body": "{\n\t\"name\": \"Header Images\",\n\t\"template\": \"{{#each images}}<a href='{{image_url}}'><img src={{image_source}} style='width:33.3%'/></a>{{/each}}\"\n}",
                                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/content/widget-templates",
                                  "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json",
                                    "X-Auth-Client": "{$$.env.X-Auth-Client}",
                                    "X-Auth-Token": "{$$.env.X-Auth-Token}"
                                  }
                                },
                                "header": {
                                  "title": "Create a Widget Template"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"data\": {\n        \"uuid\": \"3a1b0044-c9b3-47d3-9929-01ab0c20243b\",\n        \"name\": \"Header Images\",\n        \"schema\": [],\n        \"template\": \"{{#each images}}<a href='{{image_url}}'><img src={{image_source}} style='width:33.3%'/></a>{{/each}}\",\n        \"date_created\": \"2019-02-25T18:35:04.904Z\",\n        \"date_modified\": \"2019-02-25T18:35:04.904Z\",\n        \"kind\": \"custom\"\n    },\n    \"meta\": {}\n}",
                                "header": {
                                  "title": "Sample Response ",
                                  "subtitle": "Create Widget Template"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "3",
                                      "to": "3"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Create a Widget\n\nHere, we will use the Widget Template to add the links and the images. There are many ways to use widget templates and we will go over just one. For more examples, see [Code Samples](/api-docs/storefront/widgets/widgets-code-samples). \n\n* name -- Something short and descriptive. (required)\n* description -- a longer explanation if needed (not required)\n* widget_configuration -- Based on the original widget_template configuration and can vary by the widget created.\n\t* image_source -- Since this is the handlebar placeholder, it requires an image value.\n* widget_template_uuid -- UUID from the Widget Template response.\n\nFor widget_configuration `images is the top level array, with `image_url` and `image_source` for each object. There are three images in this example since the width of each was set to 33.3%.\n\nIn the response the Widget UUID is returned. Make note of it for use later when creating the Placement.",
                                "header": {
                                  "anchor": "widget-tutorial_create-widget"
                                }
                              },
                              {
                                "type": "http",
                                "data": {
                                  "method": "post",
                                  "body": "{\n  \"name\": \"Header Images\",\n  \"widget_configuration\": {\n    \"images\": [\n      {\n        \"image_url\": \"{where-the-image-should-link-to}\",\n        \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on\"\n      },\n      {\n        \"image_url\": \"{where-the-image-should-link-to}\",\n        \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on\"\n      },\n      {\n        \"image_url\": \"{where-the-image-should-link-to}\",\n        \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on\"\n      }\n    ]\n  },\n  \"widget_template_uuid\": \"{your-widget-template-uuid}\"\n}",
                                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/content/widgets",
                                  "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json",
                                    "X-Auth-Client": "{$$.env.X-Auth-Client}",
                                    "X-Auth-Token": "{$$.env.X-Auth-Token}"
                                  }
                                },
                                "header": {
                                  "title": "Create a Widget"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"data\": {\n        \"uuid\": \"a8940709-5655-4401-a341-62c44e3180b2\",\n        \"name\": \"Header Images\",\n        \"widget_configuration\": {\n            \"images\": [\n                {\n                    \"image_url\": \"{where-the-image-should-link-to}\",\n                    \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on\"\n                },\n                {\n                    \"image_url\": \"{where-the-image-should-link-to}\",\n                    \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on\"\n                },\n                {\n                    \"image_url\": \"{where-the-image-should-link-to}\",\n                    \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on\"\n                }\n            ],\n            \"_\": {\n                \"id\": \"a8940709-5655-4401-a341-62c44e3180b2\"\n            }\n        },\n        \"widget_template\": {\n            \"uuid\": \"3a1b0044-c9b3-47d3-9929-01ab0c20243b\",\n            \"name\": \"Header Images\",\n            \"schema\": [],\n            \"template\": \"{{#each images}}<a href='{{image_url}}'><img src={{image_source}} style='width:33.3%'/></a>{{/each}}\",\n            \"date_created\": \"2019-02-25T18:35:04.904Z\",\n            \"date_modified\": \"2019-02-25T18:35:04.904Z\",\n            \"kind\": \"custom\"\n        },\n        \"date_created\": \"2019-02-25T18:36:45.238Z\",\n        \"date_modified\": \"2019-02-25T18:36:45.238Z\",\n        \"description\": \"\"\n    },\n    \"meta\": {}\n}",
                                "header": {
                                  "title": "Sample Response",
                                  "subtitle": "Create a Widget"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "3",
                                      "to": "3"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Create the Placement\n\nPlacement defines the page and region where the widget should appear. Remember that [Placements](/api-docs/storefront/widgets/widgets-overview#widgets_placements) can either lead to a Layout or they can be used on their own. In this walkthrough we will use Layouts. \n\n* widget_uuid -- UUID of the Widget\n* entity_id -- The page, category, brand or product ID the widget should appear on\n* sort_order -- If there is more than one Widget on a page, use the sort order to control the order they are displayed\n* region -- region the template will show. It should match the template file\n* template_file -- template file the region was added to\n* status -- if the widget is active or inactive\n\n\nIf you wanted to see the results of the Widget without a layout, use the Placement without the layout code sample below. If you would like to learn more about Layouts use the Create Placement code sample below. ",
                                "header": {
                                  "anchor": "widget-tutorial_create-placement"
                                }
                              },
                              {
                                "type": "http",
                                "data": {
                                  "method": "post",
                                  "body": "{\n  \"widget_uuid\": \"{your-widget-uuid}\",\n  \"entity_id\": \"{your-category-id}\",\n  \"sort_order\": 1,\n  \"region\": \"category_header_banner\",\n  \"template_file\": \"pages/category\",\n  \"status\": \"active\"\n}",
                                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/content/placements",
                                  "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json",
                                    "X-Auth-Client": "{$$.env.X-Auth-Client}",
                                    "X-Auth-Token": "{$$.env.X-Auth-Token}"
                                  }
                                },
                                "header": {
                                  "title": "Create Placement Without a Layout",
                                  "subtitle": "The region and sort_order are filled in to make the Widget appear on the storefront."
                                }
                              },
                              {
                                "type": "text",
                                "data": "To make use of Layouts for custom markdown use the code sample below. Replace the `widget_uuid` with your own.\n\nMake note of the `placement_uuid` for use in Layouts later."
                              },
                              {
                                "type": "http",
                                "data": {
                                  "method": "post",
                                  "body": "{\n  \"widget_uuid\": \"{your-widget-uuid}\",\n  \"entity_id\": \"{your-category-id}\",\n  \"template_file\": \"pages/category\",\n  \"status\": \"active\"\n}",
                                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/content/placements",
                                  "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json",
                                    "X-Auth-Client": "{$$.env.X-Auth-Client}",
                                    "X-Auth-Token": "{$$.env.X-Auth-Token}"
                                  }
                                },
                                "header": {
                                  "title": "Create Placement With a Layout"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"data\": {\n        \"uuid\": \"bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08\",\n        \"template_file\": \"pages/category\",\n        \"region\": \"\",\n        \"sort_order\": 0,\n        \"entity_id\": \"21\",\n        \"status\": \"active\",\n        \"widget\": {\n            \"uuid\": \"a8940709-5655-4401-a341-62c44e3180b2\",\n            \"name\": \"Header Images\",\n            \"widget_configuration\": {\n                \"images\": [\n                    {\n                        \"image_url\": \"{where-the-image-should-link-to}\",\n                        \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on\"\n                    },\n                    {\n                        \"image_url\": \"{where-the-image-should-link-to}\",\n                        \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on\"\n                    },\n                    {\n                        \"image_url\": \"{where-the-image-should-link-to}\",\n                        \"image_source\": \"https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on\"\n                    }\n                ],\n                \"_\": {\n                    \"id\": \"a8940709-5655-4401-a341-62c44e3180b2\"\n                }\n            },\n            \"widget_template\": {\n                \"uuid\": \"3a1b0044-c9b3-47d3-9929-01ab0c20243b\",\n                \"name\": \"Header Images\",\n                \"schema\": [],\n                \"template\": \"{{#each images}}<a href='{{image_url}}'><img src={{image_source}} style='width:33.3%'/></a>{{/each}}\",\n                \"date_created\": \"2019-02-25T18:35:04.904Z\",\n                \"date_modified\": \"2019-02-25T18:35:04.904Z\",\n                \"kind\": \"custom\"\n            },\n            \"date_created\": \"2019-02-25T18:36:45.238Z\",\n            \"date_modified\": \"2019-02-25T18:36:45.238Z\",\n            \"description\": \"\"\n        },\n        \"date_created\": \"2019-02-25T18:37:10.658Z\",\n        \"date_modified\": \"2019-02-25T18:37:10.658Z\"\n    },\n    \"meta\": {}\n}\n",
                                "header": {
                                  "title": "Sample Response",
                                  "subtitle": "Create Placement"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "3",
                                      "to": "3"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Create a Layout\n\nA Layout accepts any html. Using a layout can allow you to create complicated widget placements on the storefront. \n\n* entity_id -- The page, category, brand or product ID the widget should appear on. \n* region -- region the template will show. It should match the template file\n* template_file -- template file the region was added to\n* markup -- this accepts any valid HTML and CSS including style tags. \n* bc-placement -- A special id that is used in layouts. It is populated with the placement ID.\n\nThe markup in the sample requst body adds the style of opacity to each image on hover.",
                                "header": {
                                  "anchor": "widget-tutorial_create-layout"
                                }
                              },
                              {
                                "type": "http",
                                "data": {
                                  "method": "post",
                                  "body": "{\n  \"entity_id\": \"{your-category-id}\",\n  \"region\": \"category_header_banner\",\n  \"template_file\": \"pages/category\",\n  \"markup\": \"<style>img:hover{opacity: 0.3;}</style><div><div style='padding:5px margin-bottom:40px;'><bc-placement id='bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08'></bc-placement></div></div>\"\n}",
                                  "url": "https://api.bigcommerce.com/stores/{store_hash}/v3/content/layouts",
                                  "headers": {
                                    "Accept": "application/json",
                                    "Content-Type": "application/json",
                                    "X-Auth-Client": "{$$.env.X-Auth-Client}",
                                    "X-Auth-Token": "{$$.env.X-Auth-Token}"
                                  }
                                },
                                "header": {
                                  "title": "Create a Layout"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"data\": {\n        \"uuid\": \"cacdadcf-07ec-43f3-aec4-f8e3382d7618\",\n        \"template_file\": \"pages/category\",\n        \"entity_id\": \"21\",\n        \"region\": \"category_header_banner\",\n        \"markup\": \"<style>img:hover{opacity: 0.3;}</style><div><div style='padding:5px;'><bc-placement id='bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08'></bc-placement></div></div>\",\n        \"date_created\": \"2019-02-25T18:38:08.455Z\",\n        \"date_modified\": \"2019-02-25T18:38:08.455Z\"\n    },\n    \"meta\": {}\n}",
                                "header": {
                                  "subtitle": "Create Layout",
                                  "title": "Sample Response"
                                }
                              },
                              {
                                "type": "text",
                                "data": "At this point you should see the widget on the category page of your choice. "
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Reuse the Widget Template\n\nNow that the Widget Template has been created it can be reused on a different page again. \n\nTo reuse the Widget Template:\n* Choose where to display the widget by either creating a [Region](/api-reference/storefront/widgets-api/regions/getcontentregions) or use and existing one\n* Decide if the Widget should appear on all pages or if it should use an `entity_id`\n* Get the [Widget Template ID](/api-reference/storefront/widgets-api/widget-template/getwidgettemplates)\n* [Create the Widget](/api-reference/storefront/widgets-api/widget/createwidget) with the Widget Template ID\n* Either [Create a Placement](/api-reference/storefront/widgets-api/placement/createplacement) or [Create a Layout](/api-reference/storefront/widgets-api/layout/createlayout) using the Widget",
                                "header": {
                                  "anchor": "widget-tutorial_reuse-widget-template"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Endpoints\n* [Widgets API](/api-reference/storefront/widgets-api)\n\n### Related Articles\n* [Widgets Overview](/api-docs/storefront/widgets/widgets-overview)",
                                "header": {
                                  "anchor": "widget-tutorial_resources"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "\n### Next Steps\n* [Wigets Code Samples](/api-docs/storefront/widgets/widgets-code-samples)",
                                "header": {
                                  "anchor": "widget-tutorial_next-steps"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Widgets Code Samples",
                          "config": {
                            "sidebar": {
                              "token": "code samples"
                            }
                          },
                          "route": {
                            "path": "/widgets-code-samples"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Widgets Code Samples</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#widget-code-sample_simple-list\">Simple List</a></li>\n        <li><a href=\"#widget-code-sample_simple-html\">Simple HTML</a></li>\n        <li><a href=\"#widget-code-sample_simple-text-styling\">Simple Text with Styling</a></li>\n        <li><a href=\"#widget-code-sample_you-tube-embed\">Youtube Embed with Layout</a></li>\n        <li><a href=\"#widget-code-sample_image-slider\">Image Slider</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Below are widgets that can be used as building blocks to expand on. Widgets are flexible and re-useable making them ideal for creating custom storefront. "
                              },
                              {
                                "type": "text",
                                "data": "## Simple List",
                                "header": {
                                  "anchor": "widget-code-sample_simple-list"
                                }
                              },
                              {
                                "type": "code",
                                "data": "\n<ul>\n{{#each list_items}}\n <li style=\"color:{{color}};\">{{text}}</li>\n{{/each}}\n</ul>\n",
                                "header": {
                                  "title": "Widget Template",
                                  "subtitle": "Simple List"
                                },
                                "config": {
                                  "mode": "html"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\t\"name\": \"Simple List Test\",\n\t\"widget_configuration\":{\n\t\t\"list_items\":[\n\t\t\t\t{\n\t\t\t\t\t\"color\": \"blue\",\n\t\t\t\t\t\"text\": \"The color is blue\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"color\": \"green\",\n\t\t\t\t\t\"text\": \"The color is green\"\n\t\t\t\t},\n\t\t\t\t\n\t\t\t\t{\n\t\t\t\t\t\"color\": \"red\",\n\t\t\t\t\t\"text\": \"The color is red\"\n\t\t\t\t}\n\t\t\t]\n\t},\n\t\"widget_template_uuid\":\"your-template-uuid\"\n}",
                                "header": {
                                  "title": "Sample Widget Configuration",
                                  "subtitle": "Simple List"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551901776600",
                                "header": {
                                  "title": "Storefront View",
                                  "subtitle": "Simple List"
                                },
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "maxWidth": "805"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Simple HTML",
                                "header": {
                                  "anchor": "widget-code-sample_simple-html"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{{{html}}}",
                                "header": {
                                  "title": "Widget Template",
                                  "subtitle": "Simple HTML"
                                },
                                "config": {
                                  "mode": "html"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\t\"name\": \"Simple List Test\",\n\t\"widget_configuration\":{\n\t\t\"html\":\"<h1> This widget will accept any HTML </h1>\"\n\t},\n\t\"widget_template_uuid\":\"your-template-uuid\"\n}",
                                "header": {
                                  "title": "Sample Widget Configuration",
                                  "subtitle": "Simple HTML"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551901919454",
                                "header": {
                                  "title": "Storefront",
                                  "subtitle": "Simple HTML"
                                },
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "maxWidth": "805"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Simple Text with Styling",
                                "header": {
                                  "anchor": "widget-code-sample_simple-text-styling"
                                }
                              },
                              {
                                "type": "code",
                                "data": "\"<style>#bc-simple-text-{{_.id}} {color: {{color}};background: {{background_color}};font-size: {{font_size}};font-style: {{font_style}};font-weight: {{font_weight}};font-family: {{font_family}};text-align: {{text_align}};margin-top: {{margin_top}};margin-bottom: {{margin_bottom}};margin-left: {{margin_left}};margin-right: {{margin_right}};padding-top: {{padding_top}};padding-bottom: {{padding_bottom}};padding-left: {{padding_left}};padding-right: {{padding_right}};}</style><p id='bc-simple-text-{{_.id}}'>{{text}}</p>\"",
                                "header": {
                                  "subtitle": "Simple Text with Styling",
                                  "title": "Widget Template"
                                },
                                "config": {
                                  "mode": "html"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\t\"name\": \"Simple Text with Styling\",\n\t\"widget_configuration\":{\n\t\t\"text\": \"Simple Text with Styling\",\n\t\t\"_.id\": \"1\",\n\t\t\"color\": \"white\",\n\t\t\"background_color\": \"#3C1F8C\",\n\t\t\"font_size\": \"45px\",\n\t\t\"font_weight\": \"bold\",\n\t\t\"font_family\": \"'Palatino Linotype', 'Book Antiqua', Palatino, serif\",\n\t\t\"text_align\": \"center\",\n\t\t\"margin_right\": \"50px\",\n\t\t\"margin_left\": \"50px\",\n\t\t\"padding_top\": \"25px\",\n\t\t\"padding_bottom\": \"25px\"\n\t},\n\t\"widget_template_uuid\":\"your-template-uuid\"\n}",
                                "header": {
                                  "title": "Sample Widget Configuration",
                                  "subtitle": "Simple Text with Styling"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551902366345",
                                "header": {
                                  "subtitle": "Simple Text with Styling",
                                  "title": "Storefront"
                                },
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "maxWidth": "805"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Youtube Embed with Layout",
                                "header": {
                                  "anchor": "widget-code-sample_you-tube-embed"
                                }
                              },
                              {
                                "type": "code",
                                "data": "\"<iframe    id='ytplayer-{{_.id}}'    type='text/html'    width='{{width}}'    height='{{height}}'    src='https://www.youtube.com/embed/{{video_id}}?autoplay={{autoplay}}&color={{color}}&controls={{controls}}&disablekb={{disablekb}}&fs={{fs}}&rel={{rel}}&showinfo={{showinfo}}'    frameborder='{{frameborder}}'>  </iframe>\"",
                                "header": {
                                  "title": "Widget Template",
                                  "subtitle": "Youtube Embed with Layout"
                                },
                                "config": {
                                  "mode": "html"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n\t\"name\": \"Website YouTube Embed\",\n\t\"widget_configuration\":{\n        \"width\": \"100%\",\n        \"height\": \"500px\",\n        \"video_id\": \"EhYBjzqd-nI\"\n\n\t},\n\t\"widget_template_uuid\":\"your-template-uuid\"\n}",
                                "header": {
                                  "subtitle": "Youtube Embed with Layout",
                                  "title": "Sample Widget Configuration"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n    \"region\": \"widget_page\",\n    \"template_file\": \"pages/page\",\n    \"markup\": \"<div style='text-align:center'; height:500px;><bc-placement id='c3c12f8b-d198-41b1-b2cc-f0801f6ad2e5'></bc-placement></div>\"\n}",
                                "header": {
                                  "title": "Sample Layout",
                                  "subtitle": "Youtube Embed with Layout"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551902559005",
                                "header": {
                                  "title": "Storefront",
                                  "subtitle": "Youtube Embed with Layout"
                                },
                                "config": {
                                  "fluid": true,
                                  "centered": true,
                                  "maxWidth": "805"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Image Slider",
                                "header": {
                                  "anchor": "widget-code-sample_image-slider"
                                }
                              },
                              {
                                "type": "code",
                                "data": "\"<ul class=\\\"slider\\\">\\n{{#each slides}}\\n<ul class=\\\"slide\\\"><img class=\\\"mySlides\\\" src=\\\"{{image}}\\\"/></ul>\\n{{/each}}\\n</ul>\\n<script>\\nvar slideIndex = 0;\\ncarousel();\\nfunction carousel() {\\nvar i;\\nvar x = document.getElementsByClassName(\\\"mySlides\\\");\\nfor (i = 0; i < x.length; i++) {\\nx[i].style.display = \\\"none\\\"; \\n}\\nslideIndex++;\\nif (slideIndex > x.length) {slideIndex = 1} \\nx[slideIndex-1].style.display = \\\"block\\\"; \\nsetTimeout(carousel, 4000); // Change image every 4 seconds\\n}\\n</script>\"",
                                "header": {
                                  "title": "Widget Template",
                                  "subtitle": "Image Slider"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"name\": \"Home Page Slider\",\n  \"widget_configuration\": {\n      \"slides\": [\n          {\n              \"image\": \"https://upload.wikimedia.org/wikipedia/commons/3/3f/Puppy_French_Bulldog.jpg\"\n          },\n          {\n              \"image\": \"https://upload.wikimedia.org/wikipedia/commons/c/c1/2009-04-21_APBT_pup_on_deck.jpg\"\n          },\n          {\n              \"image\": \"https://upload.wikimedia.org/wikipedia/commons/e/e7/Beagle_puppy_Cadet.jpg\"\n          }\n      ]\n  },\n  \"widget_template_uuid\":\"your-widget-id\"\n}",
                                "header": {
                                  "subtitle": "Image Slider",
                                  "title": "Widget Configuration"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1551906683783",
                                "header": {
                                  "subtitle": "Image Slider",
                                  "title": "Storefront"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Endpoints\n* [Widgets API](/api-reference/storefront/widgets-api)\n\n### Related Articles\n* [Widgets Overview](/api-docs/storefront/widgets/widgets-overview)\n* [Widgets Tutorial](/api-docs/storefront/widgets/widgets-tutorial)",
                                "header": {}
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Cart and Checkout",
              "route": {
                "path": "/cart-and-checkout"
              },
              "data": {
                "children": [
                  {
                    "title": "Overview",
                    "route": {
                      "path": "/cart-and-checkout-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Cart and Checkout</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#cart-checkout_storefrix otpont-cart-and-checkout\">Storefront Cart and Checkout</a></li>\n    <li><a href=\"#cart-checkout_server-to-server-cart-and-checkout\">Server-to-Server Cart and Checkout</a></li>\n    <li><a href=\"#cart-checkout_troubleshooting\">Troubleshooting Cart Errors</a></li>\n    <li><a href=\"#cart-checkout_available-webhooks\">Available Webhooks</a></li>\n    <li><a href=\"#cart-checkout_oauth-scopes\">OAuth Scopes</a></li>\n    <li><a href=\"#cart-checkout_related-endpoints\">Related Endpoints</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Storefront Cart and Checkout\n\nThe Storefront APIs are for managing the contents of a shopper's cart and checkout using JavaScript in the context of a storefront session. \n\n### When to Use the Storefront APIs\n\n* Analytics and Tracking\n* Retrieving cart data client-side\n* Quick Order Form\n* Upsell applications\n\n### Using the Fetch API\nThe [Fetch API](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API) is an alternative to [XMLHttpRequest](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) for making http requests in JavaScript. You can use the Fetch API to interact with the Storefront APIs and return a shopper's cart, checkout or order. \n\nFetch API is supported by most modern browsers, but it is not supported in Internet Explorer. We recommend using a [Polyfill](https://github.com/github/fetch) for Internet Explorer 10+ and XMLHttpRequest for earlier versions.\n\nTo learn more about using the Fetch API with the Storefront see our tutorial [here](/api-docs/cart-and-checkout/working-sf-apis). \n\nYou can run fetch requests from the browser console to test, or you can  use the [Scripts API](/api-docs/scripts/scripts-overview) to add inject JavaScript into your theme's footer.",
                          "header": {
                            "anchor": "cart-checkout_storefront-cart-and-checkout"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<script>\nconsole.log('Log Cart');\nfetch('/api/storefront/cart', {\n  credentials: 'include'\n}).then(function(response) {\n  return response.json();\n}).then(function(myJson) {\n  console.log(myJson);\n});\n</script>",
                          "header": {
                            "title": "Log Cart Details to the Console"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<script>\nconsole.log('Log Checkout');\nfetch('/api/storefront/cart?includes=consignments.availableShippingOptions', {\n        credentials: 'include'\n      })\n      .then(function(response) {\n        return response.json();\n      }).then(function(cartJson) {\n        console.log(cartJson);\n        return cartJson[0].id;\n      }).catch(function(error) {\n        console.log(error);\n      }).then(function(cartId) {\n        fetch('/api/storefront/checkouts/' + cartId, {\n          credentials: 'include'\n        }).then(function(response) {\n          return response.json();\n        }).then(function(checkoutJson) {\n          console.log(checkoutJson);\n        }).catch(function(error) {\n          console.log(error);\n        })\n      });\n\n</script>",
                          "header": {
                            "title": "Log Checkout Details to the Console"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<script>\nconsole.log(\"Log Order\");\nfetch('/api/storefront/order/{{checkout.order.id}}', {credentials: 'include'})\n.then(function(response) {\nreturn response.json();\n})\n.then(function(myJson) {\nconsole.log(myJson);\n});\n</script>",
                          "header": {
                            "title": "Log Order Details to the Console"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Server-to-Server Cart and Checkout\n\nThe Server-to-Server APIs are for managing the contents of a shopping cart and checkout remotely, from a server. Using the Cart, Checkout and Payment API allows for a fully headless ecommerce solution.\n\n### CaaS\n\n[Commerce-as-a-Service](https://www.bigcommerce.com/commerce-as-a-service/) is made possible with the Server-to-Server APIs. It lets the underlying cart, checkout, order and payment APIs be called from a separate app, allowing you to create a completely custom checkout without ever touching the BigCommerce storefront.\n\n\n## When to Use\n* Modifying cart contents, such as price matching\n* Taking a shopper through cart and checkout using an app\n* Quote Builder - Building a cart then restoring it on the storefront\n* Native mobile apps\n* Pre-filling customer information",
                          "header": {
                            "anchor": "cart-checkout_server-to-server-cart-and-checkout"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Troubleshooting Cart Errors\nWe will go over common Storefront Cart and Checkout as well as Server to Server Cart and Checkout errors. Each scenario will include the error message and how to fix the error. The most common errors are listed below.\n\n### Please create some text for the API option [422]\n*Server to Server Cart API*\n\n***Issue:*** When a cart is created containing a product that has an incorrect or missing text modifier. \n\n***Resolution:***\nOptions and modifiers refer to a list of choices on a product. Options are used to build out variants and modifiers are not tied to variants at all. To learn more about options and modifiers see [Products Overview](/api-docs/catalog/products-overview#products-overview_modifier-options).\n\nTo add a product to the cart that has a single modifier (text field), POST to the [Cart API](/api-reference/cart-checkout/server-server-cart-api/cart/createacart) without the `variant_id`. ",
                          "header": {
                            "anchor": "cart-checkout_troubleshooting"
                          }
                        },
                        {
                          "type": "code",
                          "data": "\n{\n  \"line_items\": [\n    {\n      \"quantity\": 1,\n      \"product_id\": 1001,\n      \"option_selections\": [\n        {\n          \"option_id\": 123,\n          \"option_value\": \"Hello!\"\n        }\n      ]\n    }\n  ]\n}\n",
                          "header": {
                            "title": "Single Modifier"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "To add a product to the cart that has one option (radio button)  associated with it, use just the `variant_id` in the request. "
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"line_items\": [\n    {\n      \"quantity\": 1,\n      \"product_id\": 1001,\n      \"variant_id\": 2331\n    }\n]\n}",
                          "header": {
                            "title": "Single Option"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "To add a product that has both an option and a modifier associated with it, then use the `option_id` and `option_value`. This example uses a radio button (option) and a text field (modifier)."
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"line_items\": [\n    {\n      \"quantity\": 1,\n      \"product_id\": 101,\n      \"option_selections\": [\n        {\n          \"option_id\": 231,\n          \"option_value\": 456\n        },\n\n        {\n          \"option_id\": 123,\n          \"option_value\": \"Hello!\"\n        }\n      ]\n    }\n  ]\n",
                          "header": {
                            "title": "Modifier and Option"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Missing line_items in request body [422]\n\n*Server to Server Cart API*\n\n***Issue:*** \nWhen a required product modifier is missing. A product can have a modifier that is not required. In those cases the product can be added to a cart without the modifier. \n\n***Resolution:***\nUse the [Get Products](/api-reference/catalog/catalog-api/products/getproducts) or [Get Modifier](/api-reference/catalog/catalog-api/product-modifiers/getmodifiers) endpoints to return the modifier ID. The `modifier_id` = `option_id`. \n\nTo create a cart with a product modifier:"
                        },
                        {
                          "type": "code",
                          "data": "\n{\n  \"line_items\": [\n    {\n      \"quantity\": 1,\n      \"product_id\": 1001,\n      \"option_selections\": [\n        {\n          \"option_id\": 123,\n          \"option_value\": \"Hello!\"\n        }\n      ]\n    }\n  ]\n}\n",
                          "header": {
                            "title": "Create cart with modifier"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### A shipping address for this order is incomplete [422]\n*Server to Server Cart API*\n\n***Issue:***\nThis can return when the customer ID of a cart has changed. \n\n***Resolution:***\nThe customer ID is linked to discounts and pricing available to that customer. If that is changed then anything that affects the cart price is invalidated. This includes coupons, discounts, taxes and shipping.\n\nA cart should be created with the `customer_id` as part of the request body. Use the [Get Customers](/api-reference/customer-subscribers/customers-api/customers/getallcustomers) endpoint to get the `customer_id`. \n\nTo create a cart with a `customer_id`:"
                        },
                        {
                          "type": "code",
                          "data": "{\n  “customer_id”: 12,\n  \"line_items\": [\n    {\n      \"quantity\": 5,\n      \"product_id\": 191\n    }\n  ]\n}\n",
                          "header": {
                            "title": "Create cart with customer ID"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### This product has options, variant ID is required [422]\n*Server to Server Cart API*\n\n***Issue:***  When a product has options and variant ID is not supplied in either the create or update cart request. \n\n***Resolution:***\nTo get the variant ID use the [Get Products](/api-reference/catalog/catalog-api/products/getproducts) endpoint or the [Get Variants](/api-reference/catalog/catalog-api/product-variants/getvariantsbyproductid) endpoint.\nTo create a cart with a variant ID:"
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"line_items\": [\n    {\n      \"quantity\": 1,\n      \"product_id\": 1001,\n      \"variant_id\": 2331\n    }\n]\n}",
                          "header": {
                            "title": "Create cart with variant ID"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "***Issue:***\nThe incorrect `option_id` is supplied.\n\n***Resolution:***\nTo get the correct option_id make a request to [Get Products\n](/api-reference/catalog/catalog-api/products/getproducts) or [Get Options](/api-reference/catalog/catalog-api/product-variant-options/getoptions). "
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"line_item\": {\n    \"quantity\": 1,\n    \"product_id\": 76,\n    \"list_price\": 170.00,\n    \"option_selections\": [\n      {\n        \"option_id\": 21506,\n        \"option_value\": 10090\n      }\n    ]\n  }\n}\n",
                          "header": {
                            "title": "Create cart option ID"
                          }
                        },
                        {
                          "type": "text",
                          "data": "*Storefront Cart API*\n\n***Issue:***\n\n* Missing required modifier on the storefront. This can include a text modifier with no selection. Make sure the optionValue is not blank.\n* The variantID is incorrect.\n* The modifierID is incorrect.\n\n\n**Resolution:**\nTo add a product to the cart that has a single modifier (text field), POST to the [Cart API](/api-reference/cart-checkout/storefront-cart-api/cart/createacart) without the `variant_id`. Use the `optionId` and `optionValue` instead. "
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"lineItems\": [\n    {\n      \"quantity\": 1,\n      \"product_id\": 1001,\n      \"optionSelections\": [\n        {\n          \"optionId\": 123,\n          \"optionValue\": \"Hello!\"\n        }\n      ]\n    }\n  ]\n}",
                          "header": {
                            "title": "Create cart optionId and optionValue"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "To add a product to the cart that has one option (radio button)  associated with it, use just the `variant_id` in the request. "
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"lineItems\": [\n    {\n      \"quantity\": 1,\n      \"productId\": 1001,\n      \"variantId\": 2331\n    }\n]\n}",
                          "header": {
                            "title": "Create Storefront Cart variantID"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "To add a product that has both an option and a modifier associated with it, then use the `option_id` and `option_value`. This example uses a radio button (option) and a text field (modifier)."
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"lineItems\": [\n    {\n      \"quantity\": 1,\n      \"product_id\": 101,\n      \"optionSelections\": [\n        {\n          \"optionId\": 231,\n          \"optionValue\": 456\n        },\n\n        {\n          \"optionId\": 123,\n          \"optionValue\": \"Hello!\"\n        }\n      ]\n    }\n  ]\n}",
                          "header": {
                            "title": "Add item with option and modifier"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### You can only purchase a maximum of :qty of the :product per order [409]\n*Server to Server Cart API*\n\n***Issue:***\nWhen less than a product’s minimum required purchase or more than the maximum allowed purchase is added to cart.\n\n***Resolution:***\nCheck the product for `order_quantity_minimum` and `order_quantity_maximum `for the correct amount to add the cart. Use the [Get Product](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/products/getproducts) endpoint."
                        },
                        {
                          "type": "text",
                          "data": "### Internal Server Error [500]\n\n*Server to Server Cart API* \n\n***Issue:***\nAdding more product quantity to a cart than what’s in stock. \n\n***Resolution:***\nCheck the product for `inventory_level` to see how many are in stock. Use the [Get Product](/api-reference/catalog/catalog-api/products/getproducts) endpoint.\n\n***Issue:***\nTrying to edit a Cart that does not exist. \n\n***Resolution:***\nCarts are only valid 30 days past the `date_last_modified`. Check the [Get Carts](/api-reference/cart-checkout/storefront-cart-api/cart/getacart) endpoint for the current available session cart.\n\n*Storefront Cart API*\n\n***Issue:***\nWhen less than a product’s minimum required purchase or more than the maximum allowed purchase is added to cart. Use the [Get Product](/api-reference/catalog/catalog-api/products/getproducts) endpoint to check for min/max purchase restrictions.\n\n***Resolution:***\nCheck the product for order_quantity_minimum and order_quantity_maximum for the correct amount to add the cart. Use the [Get Product](/api-reference/catalog/catalog-api/products/getproducts) endpoint."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Available Webhooks\n* [Orders](/api-docs/getting-started/webhooks/webhook-events#webhook-events_orders)\n* [SKU](/api-docs/getting-started/webhooks/webhook-events#webhook-events_sku)\n* [Cart](/api-docs/getting-started/webhooks/webhook-events#webhook-events_cart)",
                          "header": {
                            "anchor": "cart-checkout_available-webhooks"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## OAuth Scopes\n* Carts\n* Checkouts\n* Products\n* Checkout Content\n* Order Transactions\n\nFor more details and a full list of available scopes, see [Oauth Scopes](/api-docs/getting-started/basics/authentication#authentication_oauth-scopes).",
                          "header": {
                            "anchor": "cart-checkout_oauth-scopes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Related Endpoints\n* [Storefront Cart](/api-reference/cart-checkout/storefront-cart-api)\n* [Storefront Checkout](/api-reference/cart-checkout/storefront-checkout-api)\n* [Server-to-Server Cart](/api-reference/cart-checkout/server-server-cart-api)\n* [Server-to-Server Checkout](/api-reference/cart-checkout/server-server-checkout-api)",
                          "header": {
                            "anchor": "cart-checkout_related-endpoints"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Working with Storefront APIs",
                    "config": {
                      "sidebar": {
                        "token": "tutorial"
                      }
                    },
                    "route": {
                      "path": "/working-sf-apis"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Working with the Storefront APIs</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#working-sf-apis_prerequisites\">Prerequisites</a></li>\n    <li><a href=\"#working-sf-apis_create-postdata\">Create postData() Function</a></li>\n    <li><a href=\"#working-sf-apis_storefront-cart\">Storefront Cart</a></li>\n    <li><a href=\"#working-sf-apis_storefront-checkout\">Storefront Checkout</a></li>\n    <li><a href=\"#working-sf-apis_troubleshooting\">Troubleshooting</a></li>\n    <li><a href=\"#working-sf-apis_realated-endpoints\">Related Endpoints</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Prerequisites:\n* Chrome/Firefox/Safari - Fetch does not work every version of [Internet Explorer](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Browser_compatibility). We recommend installing a [polyfill](https://github.com/github/fetch#html), then use fetch as usual.\n* BigCommerce Store with at least two [products](/api-reference/catalog/catalog-api/products/createproduct) and a [shipping option](/api-docs/shipping/shipping-overview#shipping_shipping-zone-methods) available. \n* Familiar with browser developer console\n\nThis tutorial reviews the Fetch API and then uses it to complete some storefront actions. \n\nInteraction with the Storefront APIs should be done using JavaScript. The Storefront APIs do not require API Tokens to work. The URL should be served over https and be on the [permanent URL](https://forum.bigcommerce.com/s/article/Changing-Domains); otherwise, it can cause [CORs](https://developers.google.com/web/ilt/pwa/working-with-the-fetch-api#cross-origin_requests) errors in the console.",
                          "header": {
                            "anchor": "working-sf-apis_prerequisites"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create postData() function\n\nBelow is the function we are going to use to create a new cart using the Storefront Cart API.",
                          "header": {
                            "anchor": "working-sf-apis_create-postdata"
                          }
                        },
                        {
                          "type": "code",
                          "data": "postData(`/api/storefront/cart`, {\n        \"lineItems\": [\n        {\n            \"quantity\": 1,\n            \"productId\": 196\n        },\n        {\n            \"quantity\": 1,\n            \"productId\": 184\n        }\n        ]}\n    )\n  .then(data => console.log(JSON.stringify(data))) \n  .catch(error => console.error(error));\n\nfunction postData(url = ``, cartItems = {}) {\n      return fetch(url, {\n          method: \"POST\",\n          credentials: \"same-origin\",\n          headers: {\n              \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(cartItems), \n      })\n      .then(response => response.json()); \n  }",
                          "header": {
                            "title": "postData"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Let’s review the function. First, we call the `postData()` function, which is defined at the bottom of the code excerpt."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "JavaScript allows function declarations to be [hoisted](https://scotch.io/tutorials/understanding-hoisting-in-javascript#toc-hoisting-functions), so the function postData() can be called before being defined."
                          }
                        },
                        {
                          "type": "text",
                          "data": "The `postData()` function accepts two arguments: a URL string and a body. \n\nThe URL string that we pass in is `/api/storefront/cart`. There is no need to provide the full store URL when making the request in the browser because the URL path appends to the current website URL.\n\nFor the request body, we pass in the `lineItems` array, which contains the product IDs and quantities to add to cart. \n\nNote that when we define the `postData` function, we set the body parameter to cartItems, which is an empty object. When the `lineItems` array is passed to the function, the cartItems object automatically wraps the array in a set of outer curly braces. Keep this in mind when adapting this code to accept a different request body--otherwise, your request body may wind up with an extra set of curly braces.  \n\nAfter the line items, fetch uses [then()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) which accepts the data that is returned and prints it to the console. \n\nIf there is an error, the next line [catch()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/catch) prints the returned error to the console. "
                        },
                        {
                          "type": "code",
                          "data": "function postData(url = ``, cartItems = {}) {\n      return fetch(url, {\n          method: \"POST\",\n          credentials: \"same-origin\",\n          headers: {\n              \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(cartItems), \n      })\n     .then(response => response.json()); \n  }",
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Next, we are going to walk through the postData() function above. Here the arguments for `url` and `cartItems` are defined. In later examples, you will see we can pass in different items depending on what we need in the fetch request.  postData() returns another function, fetch(). Fetch takes a URL, method and a body. Other [arguments](https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch#Supplying_request_options) can be added such as credentials, headers, etc. \n\n[Credentials](https://github.com/github/fetch#sending-cookies) are set to [same-origin](https://developer.mozilla.org/en-US/docs/Web/API/Request/credentials). The credentials that you need will depend on your app setup. Review your app setup carefully; otherwise, this will cause [CORs](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) errors. Below is a simplified guide on when to use each type of credential.\n\n| Credential | When to Use |\n| -- | -- |\n| same-origin | If the request and response server is the same. Ex. bigcommerce.com => bigcommerce.com |\n| include | If the request and response domain are different. Ex. bigcommerce.com => developers.bigcommerce.com  |\n| omit | To disable sending cookies to any domain |\n\nContent-Type is set to application/json. The body data needs to match the content-type. BigCommerce only sends and accepts the Storefront API  data in json. \n\n The body is set to [JSON.stringify()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) which converts JavaScript values to a string. \n\nFinally, `.then()` is parsing the response to JSON. \n\nNow that we have the basics of creating a function with the fetch() API, we are going to use it to create a cart, get a cart and delete cart items. "
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Storefront Cart\n\n### Create Cart\n[*https://<store_url>/api/storefront/carts*](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-cart-api/cart/createacart)\n\nFirst, we pass in the request URL to create a cart into the function call. \n\nThen we need to pass in the `lineItems` array. The `quantity` and `productId` are required to create a cart. If there are [variants](/api-reference/catalog/catalog-api/product-variants/getvariantsbyproductid) then the variantId or optionId with the optionValues need to be added.  See [Create Cart](/api-reference/cart-checkout/storefront-cart-api/cart/createacart) for more examples. The response will be printed to the browser console.  Make sure to note the value for cartId as it will be used later.",
                          "header": {
                            "anchor": "working-sf-apis_storefront-cart"
                          }
                        },
                        {
                          "type": "code",
                          "data": "postData(`/api/storefront/cart`, {\n        \"lineItems\": [\n        {\n            \"quantity\": 1,\n            \"productId\": 191\n        },\n        {\n            \"quantity\": 1,\n            \"productId\": 185\n        }\n        ]}\n    )\n  .then(data => console.log(JSON.stringify(data))) \n  .catch(error => console.error(error));\n\nfunction postData(url = ``, cartItems = {}) {\n      return fetch(url, {\n          method: \"POST\",\n          credentials: \"same-origin\",\n          headers: {\n              \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(cartItems), \n      })\n      .then(response => response.json()); \n  }",
                          "header": {
                            "title": "Create Cart"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n\t\"id\": \"1650fb51-172b-4cde-a220-90c6a8ef9293\",\n\t\"customerId\": 0,\n\t\"email\": \"\",\n\t\"currency\": {\n\t\t\"name\": \"US Dollars\",\n\t\t\"code\": \"USD\",\n\t\t\"symbol\": \"$\",\n\t\t\"decimalPlaces\": 2\n\t},\n\t\"isTaxIncluded\": false,\n\t\"baseAmount\": 73.95,\n\t\"discountAmount\": 0,\n\t\"cartAmount\": 73.95,\n\t\"coupons\": [],\n\t\"discounts\": [{\n\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\"discountedAmount\": 0\n\t}, {\n\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\"discountedAmount\": 0\n\t}],\n\t\"lineItems\": {\n\t\t\"physicalItems\": [{\n\t\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\t\"parentId\": null,\n\t\t\t\"variantId\": 362,\n\t\t\t\"productId\": 191,\n\t\t\t\"sku\": \"\",\n\t\t\t\"name\": \"Openhouse No. 3\",\n\t\t\t\"url\": \"https://{store_url)/all/openhouse-no-3/\",\n\t\t\t\"quantity\": 1,\n\t\t\t\"brand\": \"Openhouse Magazine\",\n\t\t\t\"isTaxable\": true,\n\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_hash)/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2\",\n\t\t\t\"discounts\": [],\n\t\t\t\"discountAmount\": 0,\n\t\t\t\"couponAmount\": 0,\n\t\t\t\"listPrice\": 27.95,\n\t\t\t\"salePrice\": 27.95,\n\t\t\t\"extendedListPrice\": 27.95,\n\t\t\t\"extendedSalePrice\": 27.95,\n\t\t\t\"isShippingRequired\": true,\n\t\t\t\"type\": \"physical\",\n\t\t\t\"giftWrapping\": null\n\t\t}, {\n\t\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\t\"parentId\": null,\n\t\t\t\"variantId\": 356,\n\t\t\t\"productId\": 185,\n\t\t\t\"sku\": \"\",\n\t\t\t\"name\": \"Utility Caddy\",\n\t\t\t\"url\": \"https://{store_url)/all/utility-caddy/\",\n\t\t\t\"quantity\": 1,\n\t\t\t\"brand\": \"OFS\",\n\t\t\t\"isTaxable\": true,\n\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_hash)/products/185/images/449/utilitybucket1_1024x1024__78563__75042.1534344535.330.500.jpg?c=2\",\n\t\t\t\"discounts\": [],\n\t\t\t\"discountAmount\": 0,\n\t\t\t\"couponAmount\": 0,\n\t\t\t\"listPrice\": 46,\n\t\t\t\"salePrice\": 46,\n\t\t\t\"extendedListPrice\": 46,\n\t\t\t\"extendedSalePrice\": 46,\n\t\t\t\"isShippingRequired\": true,\n\t\t\t\"type\": \"physical\",\n\t\t\t\"giftWrapping\": null\n\t\t}],\n\t\t\"digitalItems\": [],\n\t\t\"giftCertificates\": [],\n\t\t\"customItems\": []\n\t},\n\t\"createdTime\": \"2018-11-06T19:22:51+00:00\",\n\t\"updatedTime\": \"2018-11-06T19:22:51+00:00\"\n}",
                          "header": {
                            "title": "Create Cart Response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Get Cart\n\n[*https://<store_url>/api/storefront/carts*](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-cart-api/cart/getacart)\n\nThe function below is slightly different. The postData() that was present in Create a Cart above is removed since the function only needs to print the response data to the console. To return the full product data in a cart, an include query parameter must be added. See [Get Cart endpoint](/api-reference/cart-checkout/storefront-cart-api/cart/getacart) for more details. "
                        },
                        {
                          "type": "code",
                          "data": "fetch('/api/storefront/cart?include=lineItems.digitalItems.options,lineItems.physicalItems.options', {\n  credentials: 'same-origin'}\n     )\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(myJson) {\n    console.log(JSON.stringify(myJson));\n  });",
                          "header": {
                            "title": "Get Cart"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "code",
                          "data": "[{\n\t\"id\": \"1650fb51-172b-4cde-a220-90c6a8ef9293\",\n\t\"customerId\": 0,\n\t\"email\": \"\",\n\t\"currency\": {\n\t\t\"name\": \"US Dollars\",\n\t\t\"code\": \"USD\",\n\t\t\"symbol\": \"$\",\n\t\t\"decimalPlaces\": 2\n\t},\n\t\"isTaxIncluded\": false,\n\t\"baseAmount\": 73.95,\n\t\"discountAmount\": 0,\n\t\"cartAmount\": 73.95,\n\t\"coupons\": [],\n\t\"discounts\": [{\n\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\"discountedAmount\": 0\n\t}, {\n\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\"discountedAmount\": 0\n\t}],\n\t\"lineItems\": {\n\t\t\"physicalItems\": [{\n\t\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\t\"parentId\": null,\n\t\t\t\"variantId\": 362,\n\t\t\t\"productId\": 191,\n\t\t\t\"sku\": \"\",\n\t\t\t\"name\": \"Openhouse No. 3\",\n\t\t\t\"url\": \"https://{store_url)/all/openhouse-no-3/\",\n\t\t\t\"quantity\": 1,\n\t\t\t\"brand\": \"Openhouse Magazine\",\n\t\t\t\"isTaxable\": true,\n\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_hash)/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2\",\n\t\t\t\"discounts\": [],\n\t\t\t\"discountAmount\": 0,\n\t\t\t\"couponAmount\": 0,\n\t\t\t\"listPrice\": 27.95,\n\t\t\t\"salePrice\": 27.95,\n\t\t\t\"extendedListPrice\": 27.95,\n\t\t\t\"extendedSalePrice\": 27.95,\n\t\t\t\"isShippingRequired\": true,\n\t\t\t\"type\": \"physical\",\n\t\t\t\"giftWrapping\": null,\n\t\t\t\"options\": [{\n\t\t\t\t\"name\": \"Add a $5 Donation\",\n\t\t\t\t\"nameId\": 82,\n\t\t\t\t\"value\": \"\",\n\t\t\t\t\"valueId\": 186\n\t\t\t}]\n\t\t}, {\n\t\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\t\"parentId\": null,\n\t\t\t\"variantId\": 356,\n\t\t\t\"productId\": 185,\n\t\t\t\"sku\": \"\",\n\t\t\t\"name\": \"Utility Caddy\",\n\t\t\t\"url\": \"https://{store_url)/all/utility-caddy/\",\n\t\t\t\"quantity\": 1,\n\t\t\t\"brand\": \"OFS\",\n\t\t\t\"isTaxable\": true,\n\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_hash)/products/185/images/449/utilitybucket1_1024x1024__78563__75042.1534344535.330.500.jpg?c=2\",\n\t\t\t\"discounts\": [],\n\t\t\t\"discountAmount\": 0,\n\t\t\t\"couponAmount\": 0,\n\t\t\t\"listPrice\": 46,\n\t\t\t\"salePrice\": 46,\n\t\t\t\"extendedListPrice\": 46,\n\t\t\t\"extendedSalePrice\": 46,\n\t\t\t\"isShippingRequired\": true,\n\t\t\t\"type\": \"physical\",\n\t\t\t\"giftWrapping\": null,\n\t\t\t\"options\": []\n\t\t}],\n\t\t\"digitalItems\": [],\n\t\t\"giftCertificates\": [],\n\t\t\"customItems\": []\n\t},\n\t\"createdTime\": \"2018-11-06T19:22:51+00:00\",\n\t\"updatedTime\": \"2018-11-06T19:22:51+00:00\"\n}]",
                          "header": {
                            "title": "Get Cart Response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Add Item to Cart\n[*https://<store_url>/api/storefront/carts/{cartId}/items*](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-cart-api/cart/addcartlineitem)\n\nTo add a line item, adjust the fetch statement. It needs to accept the `url` and `cartId`.  `cartItems` is again passed as the body of the request. "
                        },
                        {
                          "type": "code",
                          "data": "postData(`/api/storefront/carts/`, `1d2d2445-5e5d-4798-ada1-37652a7822c8` ,{\n    \"lineItems\": [\n      {\n        \"quantity\": 3,\n        \"productId\": 133\n      }\n    ]\n  })\n  .then(data => console.log(JSON.stringify(data))) \n  .catch(error => console.error(error));\n  \nfunction postData(url = ``, cartId = ``, cartItems = {}) {\n      return fetch(url + cartId + '/items', {\n          method: \"POST\",\n          credentials: \"same-origin\",\n          headers: {\n              \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(cartItems), \n      })\n      .then(response => response.json()); \n}",
                          "header": {
                            "title": "Add Item to Cart"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Delete Cart Item\n\n[*https://<store_url>/api/storefront/carts/{cartId}/items/{itemId}*](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-cart-api/cart/deletecartlineitem)\n\nIn the code below there are a few changes. One is the arguments for deleteCartItem() now accept a cartId and itemId as strings. These are passed into the deleteCartItem() at the top. The URL is being built using concatenation. \n\nWe have also introduced a new way to handle errors. Error handling in fetch can be pulled out into a standalone function and be used to return any data or messages you want as a way to keep the code [DRY](https://en.wikipedia.org/wiki/Don%27t_repeat_yourself). "
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "Deleting the last item in your cart deletes the cart."
                          }
                        },
                        {
                          "type": "code",
                          "data": "deleteCartItem(`/api/storefront/carts/`, `f996cb68-b1df-422e-b3dd-0f90faa10210`, `e51ac38d-dacd-449d-b503-f087f14bde67`)\n.then(data => console.log(JSON.stringify(data)))\n.catch(error => console.log(error))\n\nfunction deleteCartItem(url = ``, cartId = ``, itemId = ``) {\nreturn fetch(url + cartId + '/items/' + itemId, {\nmethod: \"DELETE\",\ncredentials: \"same-origin\",\nheaders:\n\n{ \"Content-Type\": \"application/json\", }\n})\n.then(response => response.json());\n}",
                          "header": {
                            "title": "Delete Cart Item"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Storefront Checkout\nNext, we will cover using the Storefront Checkout to add a billing address, add a shipping address and update a shipping address to add the shipping option.\n\nMake sure you have created a cart using the Storefront Cart, added two different `lineItems` and have a shipping method set up on the store. See [Create Cart](#working-sf-apis_storefront-cart) above if you deleted your cart and need to make a new one. ",
                          "header": {
                            "anchor": "working-sf-apis_storefront-checkout"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "checkoutId and the cartId are same."
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Add Billing Address to Checkout\n\n[*https://<store_url>/api/storefront/checkouts/{checkoutId}/billing-address*](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsbillingaddressbycheckoutidpost)\n\nA billing address is required to complete a checkout. In postData() we pass in the `checkoutId` and the billing address object."
                        },
                        {
                          "type": "code",
                          "data": "postData(`/api/storefront/checkouts/`, `e8b7c677-f67a-4e39-a5ed-f405c9a06bcf`, {\n\"firstName\": \"Jane\",\n            \"lastName\": \"Doe\",\n            \"email\": \"janedoe@email.com\",\n            \"company\": \"BigCommerce\",\n            \"address1\": \"123 Main Street\",\n            \"address2\": \"Apt 1\",\n            \"city\": \"Austin\",\n            \"stateOrProvinceCode\": \"TX\",\n            \"countryCode\": \"USA\",\n            \"postalCode\": \"78751\"\n})\n  .then(data => console.log(JSON.stringify(data))) \n  .catch(error => console.error(error));\n\nfunction postData(url = ``, checkoutId = ``, data = {},) {\n    return fetch(url + checkoutId + `/billing-address`,  {\n        method: \"POST\", \n        credentials: \"same-origin\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n    })\n    .then(response => response.json()); \n}\n",
                          "header": {
                            "title": "Add billing address"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Add Shipping Address or Consignment to Checkout \n\n[*https://<store_url>/api/storefront/checkouts/{checkoutId}/consignments*](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsconsignmentsbycheckoutidpost)\n\nA consignment consists of a shipping address with the associated lineItems.  At a minimum, at least one shipping address with line items and shipping options must be part of the checkout.\n\nA shipping address can only be added to checkout with lineItems. If multiple shipping locations are used, match each `lineItem` with the correct shipping address as shown in the example below. For more examples see [Create Consignment](/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsconsignmentsbycheckoutidpost).\n\nWhen adding a shipping address to the checkout `?include=consignments.availableShippingOptions` must be included to return the shipping options available for any address. To add the shipping option a [put request](/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsconsignmentsbycheckoutidandconsignmentidput) must be sent for each consignment. We will cover this in the next section. \n\nTo get the line item IDs needed for consignment, send a request to [/GET Checkout](/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsbycheckoutidget). Try to modify the /GET Cart request so it returns Checkout Details. If you are having trouble, see the code sample below. "
                        },
                        {
                          "type": "code",
                          "data": "fetch('/api/storefront/checkouts/1650fb51-172b-4cde-a220-90c6a8ef9293', {\n  credentials: 'same-origin'}\n     )\n  .then(function(response) {\n    return response.json();\n  })\n  .then(function(myJson) {\n    console.log(JSON.stringify(myJson));\n  });",
                          "header": {
                            "title": "Get Checkout by ID"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n\t\"id\": \"1650fb51-172b-4cde-a220-90c6a8ef9293\",\n\t\"cart\": {\n\t\t\"id\": \"1650fb51-172b-4cde-a220-90c6a8ef9293\",\n\t\t\"customerId\": 0,\n\t\t\"email\": \"janedoe@email.com\",\n\t\t\"currency\": {\n\t\t\t\"name\": \"US Dollars\",\n\t\t\t\"code\": \"USD\",\n\t\t\t\"symbol\": \"$\",\n\t\t\t\"decimalPlaces\": 2\n\t\t},\n\t\t\"isTaxIncluded\": false,\n\t\t\"baseAmount\": 73.95,\n\t\t\"discountAmount\": 0,\n\t\t\"cartAmount\": 73.95,\n\t\t\"coupons\": [],\n\t\t\"discounts\": [{\n\t\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\t\"discountedAmount\": 0\n\t\t}, {\n\t\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\t\"discountedAmount\": 0\n\t\t}],\n\t\t\"lineItems\": {\n\t\t\t\"physicalItems\": [{\n\t\t\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\t\t\"parentId\": null,\n\t\t\t\t\"variantId\": 362,\n\t\t\t\t\"productId\": 191,\n\t\t\t\t\"sku\": \"\",\n\t\t\t\t\"name\": \"Openhouse No. 3\",\n\t\t\t\t\"url\": \"https://{store_url)/all/openhouse-no-3/\",\n\t\t\t\t\"quantity\": 1,\n\t\t\t\t\"brand\": \"Openhouse Magazine\",\n\t\t\t\t\"isTaxable\": true,\n\t\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_hash)/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2\",\n\t\t\t\t\"discounts\": [],\n\t\t\t\t\"discountAmount\": 0,\n\t\t\t\t\"couponAmount\": 0,\n\t\t\t\t\"listPrice\": 27.95,\n\t\t\t\t\"salePrice\": 27.95,\n\t\t\t\t\"extendedListPrice\": 27.95,\n\t\t\t\t\"extendedSalePrice\": 27.95,\n\t\t\t\t\"isShippingRequired\": true,\n\t\t\t\t\"giftWrapping\": null,\n\t\t\t\t\"addedByPromotion\": false\n\t\t\t}, {\n\t\t\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\t\t\"parentId\": null,\n\t\t\t\t\"variantId\": 356,\n\t\t\t\t\"productId\": 185,\n\t\t\t\t\"sku\": \"\",\n\t\t\t\t\"name\": \"Utility Caddy\",\n\t\t\t\t\"url\": \"https://{store_url)/all/utility-caddy/\",\n\t\t\t\t\"quantity\": 1,\n\t\t\t\t\"brand\": \"OFS\",\n\t\t\t\t\"isTaxable\": true,\n\t\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_hash)/products/185/images/449/utilitybucket1_1024x1024__78563__75042.1534344535.330.500.jpg?c=2\",\n\t\t\t\t\"discounts\": [],\n\t\t\t\t\"discountAmount\": 0,\n\t\t\t\t\"couponAmount\": 0,\n\t\t\t\t\"listPrice\": 46,\n\t\t\t\t\"salePrice\": 46,\n\t\t\t\t\"extendedListPrice\": 46,\n\t\t\t\t\"extendedSalePrice\": 46,\n\t\t\t\t\"isShippingRequired\": true,\n\t\t\t\t\"giftWrapping\": null,\n\t\t\t\t\"addedByPromotion\": false\n\t\t\t}],\n\t\t\t\"digitalItems\": [],\n\t\t\t\"giftCertificates\": [],\n\t\t\t\"customItems\": []\n\t\t},\n\t\t\"createdTime\": \"2018-11-06T19:22:51+00:00\",\n\t\t\"updatedTime\": \"2018-11-06T19:25:26+00:00\"\n\t},\n\t\"billingAddress\": {\n\t\t\"id\": \"5be1eaa653e37\",\n\t\t\"firstName\": \"Jane\",\n\t\t\"lastName\": \"Doe\",\n\t\t\"email\": \"janedoe@email.com\",\n\t\t\"company\": \"BigCommerce\",\n\t\t\"address1\": \"123 Main Street\",\n\t\t\"address2\": \"Apt 1\",\n\t\t\"city\": \"Austin\",\n\t\t\"stateOrProvince\": \"\",\n\t\t\"stateOrProvinceCode\": \"\",\n\t\t\"country\": \"\",\n\t\t\"countryCode\": \"\",\n\t\t\"postalCode\": \"78751\",\n\t\t\"phone\": \"\",\n\t\t\"customFields\": []\n\t},\n\t\"consignments\": [],\n\t\"orderId\": null,\n\t\"shippingCostTotal\": 0,\n\t\"shippingCostBeforeDiscount\": 0,\n\t\"handlingCostTotal\": 0,\n\t\"taxTotal\": 12.22,\n\t\"coupons\": [],\n\t\"taxes\": [{\n\t\t\"name\": \"This is tax\",\n\t\t\"amount\": 12.22\n\t}],\n\t\"subtotal\": 73.95,\n\t\"grandTotal\": 86.17,\n\t\"giftCertificates\": [],\n\t\"createdTime\": \"2018-11-06T19:22:51+00:00\",\n\t\"updatedTime\": \"2018-11-06T19:25:26+00:00\",\n\t\"customerMessage\": \"\"\n}",
                          "header": {
                            "title": "Get Checkout Response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": " If your cart only has one lineItem or a quantity of one, run a [POST Cart](//api-reference/cart-checkout/storefront-cart-api/cart/createacart) request with a new lineItem, then come back here."
                          }
                        },
                        {
                          "type": "text",
                          "data": "Below, there are two shipping addresses in an array with a lineItem assigned to each. Note that `?include=consignments.availableShippingOptions` is being added as a query parameter. Without this, the `availableShippingOptions` will not return in the response. "
                        },
                        {
                          "type": "code",
                          "data": "postData(`/api/storefront/checkouts/`, `1650fb51-172b-4cde-a220-90c6a8ef9293`,\n[{\n        \"shippingAddress\": {\n            \"firstName\": \"Jane\",\n            \"lastName\": \"Doe\",\n            \"email\": \"janedoe@email.com\",\n            \"company\": \"BigCommerce\",\n            \"address1\": \"123 Main Street\",\n            \"address2\": \"Apt 1\",\n            \"city\": \"Austin\",\n            \"stateOrProvinceCode\": \"TX\",\n            \"countryCode\": \"US\",\n            \"postalCode\": \"78751\"\n        },\n        \"lineItems\": [{\n            \"itemId\": \"fb924c6c-10fb-456a-bccb-02d9fb426199\",\n            \"quantity\": 1\n        }]\n    },\n    {\n        \"shippingAddress\": {\n            \"firstName\": \"John\",\n            \"lastName\": \"Doe\",\n            \"email\": \"johnedoe@email.com\",\n            \"company\": \"BigCommerce\",\n            \"address1\": \"123 South Street\",\n            \"address2\": \"Apt 5\",\n            \"city\": \"Austin\",\n            \"stateOrProvinceCode\": \"TX\",\n            \"countryCode\": \"US\",\n            \"postalCode\": \"78726\"\n        },\n        \"lineItems\": [{\n            \"itemId\": \"98ceac68-cac9-49af-9050-95494f32474c\",\n            \"quantity\": 1\n        }]\n    }\n    ]\n\n)\n  .then(data => console.log(JSON.stringify(data))) // JSON-string from `response.json()` call\n  .catch(error => console.error(error));\n\nfunction postData(url = ``, checkoutId = ``, data = {},) {\n    return fetch(url + checkoutId + `/consignments?include=consignments.availableShippingOptions`,   {\n        method: \"POST\", \n        credentials: \"same-origin\",\n        headers: {\n            \"Content-Type\": \"application/json\" ,\n        },\n        body: JSON.stringify(data), \n    })\n    .then(response => response.json()); }",
                          "header": {
                            "title": "Create Consignment"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "When a signed in customer proceeds to the create consignment step with an incomplete shipping address, the shipping address will auto-populate with the the most recently used address from the customer's address book."
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n\t\"id\": \"1650fb51-172b-4cde-a220-90c6a8ef9293\",\n\t\"cart\": {\n\t\t\"id\": \"1650fb51-172b-4cde-a220-90c6a8ef9293\",\n\t\t\"customerId\": 0,\n\t\t\"email\": \"janedoe@email.com\",\n\t\t\"currency\": {\n\t\t\t\"name\": \"US Dollars\",\n\t\t\t\"code\": \"USD\",\n\t\t\t\"symbol\": \"$\",\n\t\t\t\"decimalPlaces\": 2\n\t\t},\n\t\t\"isTaxIncluded\": false,\n\t\t\"baseAmount\": 73.95,\n\t\t\"discountAmount\": 0,\n\t\t\"cartAmount\": 73.95,\n\t\t\"coupons\": [],\n\t\t\"discounts\": [{\n\t\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\t\"discountedAmount\": 0\n\t\t}, {\n\t\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\t\"discountedAmount\": 0\n\t\t}],\n\t\t\"lineItems\": {\n\t\t\t\"physicalItems\": [{\n\t\t\t\t\"id\": \"7349b13a-1453-4050-a769-1a6ad1823369\",\n\t\t\t\t\"parentId\": null,\n\t\t\t\t\"variantId\": 362,\n\t\t\t\t\"productId\": 191,\n\t\t\t\t\"sku\": \"\",\n\t\t\t\t\"name\": \"Openhouse No. 3\",\n\t\t\t\t\"url\": \"https://{store_url)/all/openhouse-no-3/\",\n\t\t\t\t\"quantity\": 1,\n\t\t\t\t\"brand\": \"Openhouse Magazine\",\n\t\t\t\t\"isTaxable\": true,\n\t\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_url)/products/191/images/475/openhousevol3_1024x1024__59692__16355.1534344544.330.500.jpg?c=2\",\n\t\t\t\t\"discounts\": [],\n\t\t\t\t\"discountAmount\": 0,\n\t\t\t\t\"couponAmount\": 0,\n\t\t\t\t\"listPrice\": 27.95,\n\t\t\t\t\"salePrice\": 27.95,\n\t\t\t\t\"extendedListPrice\": 27.95,\n\t\t\t\t\"extendedSalePrice\": 27.95,\n\t\t\t\t\"isShippingRequired\": true,\n\t\t\t\t\"giftWrapping\": null,\n\t\t\t\t\"addedByPromotion\": false\n\t\t\t}, {\n\t\t\t\t\"id\": \"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\",\n\t\t\t\t\"parentId\": null,\n\t\t\t\t\"variantId\": 356,\n\t\t\t\t\"productId\": 185,\n\t\t\t\t\"sku\": \"\",\n\t\t\t\t\"name\": \"Utility Caddy\",\n\t\t\t\t\"url\": \"https://{store_url)/all/utility-caddy/\",\n\t\t\t\t\"quantity\": 1,\n\t\t\t\t\"brand\": \"OFS\",\n\t\t\t\t\"isTaxable\": true,\n\t\t\t\t\"imageUrl\": \"https://cdn11.bigcommerce.com/s-{store_url)/products/185/images/449/utilitybucket1_1024x1024__78563__75042.1534344535.330.500.jpg?c=2\",\n\t\t\t\t\"discounts\": [],\n\t\t\t\t\"discountAmount\": 0,\n\t\t\t\t\"couponAmount\": 0,\n\t\t\t\t\"listPrice\": 46,\n\t\t\t\t\"salePrice\": 46,\n\t\t\t\t\"extendedListPrice\": 46,\n\t\t\t\t\"extendedSalePrice\": 46,\n\t\t\t\t\"isShippingRequired\": true,\n\t\t\t\t\"giftWrapping\": null,\n\t\t\t\t\"addedByPromotion\": false\n\t\t\t}],\n\t\t\t\"digitalItems\": [],\n\t\t\t\"giftCertificates\": [],\n\t\t\t\"customItems\": []\n\t\t},\n\t\t\"createdTime\": \"2018-11-06T19:22:51+00:00\",\n\t\t\"updatedTime\": \"2018-11-06T19:53:35+00:00\"\n\t},\n\t\"billingAddress\": {\n\t\t\"id\": \"5be1eaa653e37\",\n\t\t\"firstName\": \"Jane\",\n\t\t\"lastName\": \"Doe\",\n\t\t\"email\": \"janedoe@email.com\",\n\t\t\"company\": \"BigCommerce\",\n\t\t\"address1\": \"123 Main Street\",\n\t\t\"address2\": \"Apt 1\",\n\t\t\"city\": \"Austin\",\n\t\t\"stateOrProvince\": \"\",\n\t\t\"stateOrProvinceCode\": \"\",\n\t\t\"country\": \"\",\n\t\t\"countryCode\": \"\",\n\t\t\"postalCode\": \"78751\",\n\t\t\"phone\": \"\",\n\t\t\"customFields\": []\n\t},\n\t\"consignments\": [{\n\t\t\"id\": \"5be1f13f00e2c\",\n\t\t\"shippingCost\": 0,\n\t\t\"handlingCost\": 0,\n\t\t\"couponDiscounts\": [],\n\t\t\"discounts\": [],\n\t\t\"lineItemIds\": [\"7349b13a-1453-4050-a769-1a6ad1823369\"],\n\t\t\"shippingAddress\": {\n\t\t\t\"firstName\": \"Jane\",\n\t\t\t\"lastName\": \"Doe\",\n\t\t\t\"email\": \"janedoe@email.com\",\n\t\t\t\"company\": \"BigCommerce\",\n\t\t\t\"address1\": \"123 Main Street\",\n\t\t\t\"address2\": \"Apt 1\",\n\t\t\t\"city\": \"Austin\",\n\t\t\t\"stateOrProvince\": \"Texas\",\n\t\t\t\"stateOrProvinceCode\": \"TX\",\n\t\t\t\"country\": \"United States\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"postalCode\": \"78751\",\n\t\t\t\"phone\": \"\",\n\t\t\t\"customFields\": []\n\t\t},\n\t\t\"availableShippingOptions\": [{\n\t\t\t\"id\": \"9363fd74-8508-4f8b-beb2-77ede2beaa1c\",\n\t\t\t\"type\": \"shipping_byweight\",\n\t\t\t\"description\": \"Ship by Weight\",\n\t\t\t\"imageUrl\": \"\",\n\t\t\t\"cost\": 8,\n\t\t\t\"transitTime\": \"\",\n\t\t\t\"isRecommended\": false\n\t\t}, {\n\t\t\t\"id\": \"20ae4fdf-747f-4ec5-86da-11ecd70ae03e\",\n\t\t\t\"type\": \"shipping_flatrate\",\n\t\t\t\"description\": \"Flat Rate\",\n\t\t\t\"imageUrl\": \"\",\n\t\t\t\"cost\": 12,\n\t\t\t\"transitTime\": \"\",\n\t\t\t\"isRecommended\": false\n\t\t}, {\n\t\t\t\"id\": \"b7783bb7-7695-467f-afd0-bf1c84fffdd2\",\n\t\t\t\"type\": \"shipping_upsready\",\n\t\t\t\"description\": \"UPS® (UPS Next Day Air®)\",\n\t\t\t\"imageUrl\": \"/img/shipping-providers/upsready_70x70.png\",\n\t\t\t\"cost\": 44.41,\n\t\t\t\"transitTime\": \"1 business day\",\n\t\t\t\"isRecommended\": false\n\t\t}]\n\t}, {\n\t\t\"id\": \"5be1f13f07bae\",\n\t\t\"shippingCost\": 0,\n\t\t\"handlingCost\": 0,\n\t\t\"couponDiscounts\": [],\n\t\t\"discounts\": [],\n\t\t\"lineItemIds\": [\"4a69cbdf-4320-4e1f-852b-0edc2a55f13a\"],\n\t\t\"shippingAddress\": {\n\t\t\t\"firstName\": \"John\",\n\t\t\t\"lastName\": \"Doe\",\n\t\t\t\"email\": \"johnedoe@email.com\",\n\t\t\t\"company\": \"BigCommerce\",\n\t\t\t\"address1\": \"123 South Street\",\n\t\t\t\"address2\": \"Apt 5\",\n\t\t\t\"city\": \"Austin\",\n\t\t\t\"stateOrProvince\": \"Texas\",\n\t\t\t\"stateOrProvinceCode\": \"TX\",\n\t\t\t\"country\": \"United States\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"postalCode\": \"78726\",\n\t\t\t\"phone\": \"\",\n\t\t\t\"customFields\": []\n\t\t},\n\t\t\"availableShippingOptions\": [{\n\t\t\t\"id\": \"620a7267-8e0d-4868-bf24-2b3983ccc746\",\n\t\t\t\"type\": \"shipping_byweight\",\n\t\t\t\"description\": \"Ship by Weight\",\n\t\t\t\"imageUrl\": \"\",\n\t\t\t\"cost\": 8,\n\t\t\t\"transitTime\": \"\",\n\t\t\t\"isRecommended\": false\n\t\t}, {\n\t\t\t\"id\": \"834a4114-df5e-453d-a476-8de2287d1dfa\",\n\t\t\t\"type\": \"shipping_flatrate\",\n\t\t\t\"description\": \"Flat Rate\",\n\t\t\t\"imageUrl\": \"\",\n\t\t\t\"cost\": 12,\n\t\t\t\"transitTime\": \"\",\n\t\t\t\"isRecommended\": false\n\t\t}, {\n\t\t\t\"id\": \"9f40c667-0ab5-46d4-b436-c678517c5415\",\n\t\t\t\"type\": \"shipping_upsready\",\n\t\t\t\"description\": \"UPS® (UPS Next Day Air®)\",\n\t\t\t\"imageUrl\": \"/img/shipping-providers/upsready_70x70.png\",\n\t\t\t\"cost\": 44.41,\n\t\t\t\"transitTime\": \"1 business day\",\n\t\t\t\"isRecommended\": false\n\t\t}]\n\t}],\n\t\"orderId\": null,\n\t\"shippingCostTotal\": 0,\n\t\"shippingCostBeforeDiscount\": 0,\n\t\"handlingCostTotal\": 0,\n\t\"taxTotal\": 5.92,\n\t\"coupons\": [],\n\t\"taxes\": [{\n\t\t\"name\": \"This is tax\",\n\t\t\"amount\": 5.92\n\t}],\n\t\"subtotal\": 73.95,\n\t\"grandTotal\": 79.87,\n\t\"giftCertificates\": [],\n\t\"createdTime\": \"2018-11-06T19:22:51+00:00\",\n\t\"updatedTime\": \"2018-11-06T19:53:35+00:00\",\n\t\"customerMessage\": \"\"\n}",
                          "header": {
                            "title": "Create Consignment Response"
                          },
                          "config": {
                            "mode": "json",
                            "highlightRange": [
                              {
                                "from": "96",
                                "to": "141"
                              }
                            ]
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Update Consignment to Add a Shipping Option\n\n[*https://<store_url>/api/storefront/checkouts/{checkoutId}/billing-address/{addressId}*](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-checkout-api/checkout/checkoutsbillingaddressbycheckoutidandaddressidput)\n\nSo far we have created a cart, added a billing address and shipping address, and assigned the lineItems to the address they should be shipped. Now we are going to make two PUT requests to assign a shipping option for each address. Only one consignment can be updated at a time. If you sent in the `?include=consignments.availableShippingOptions` with the previous request, then pick the appropriate `shippingOptionId` for each consignment. "
                        },
                        {
                          "type": "code",
                          "data": "\t\"consignments\": [{\n\t\t\"id\": \"5be1f13f00e2c\",\n\t\t\"shippingCost\": 0,\n\t\t\"handlingCost\": 0,\n\t\t\"couponDiscounts\": [],\n\t\t\"discounts\": [],\n\t\t\"lineItemIds\": [\"7349b13a-1453-4050-a769-1a6ad1823369\"],\n\t\t\"shippingAddress\": {\n\t\t\t\"firstName\": \"Jane\",\n\t\t\t\"lastName\": \"Doe\",\n\t\t\t\"email\": \"janedoe@email.com\",\n\t\t\t\"company\": \"BigCommerce\",\n\t\t\t\"address1\": \"123 Main Street\",\n\t\t\t\"address2\": \"Apt 1\",\n\t\t\t\"city\": \"Austin\",\n\t\t\t\"stateOrProvince\": \"Texas\",\n\t\t\t\"stateOrProvinceCode\": \"TX\",\n\t\t\t\"country\": \"United States\",\n\t\t\t\"countryCode\": \"US\",\n\t\t\t\"postalCode\": \"78751\",\n\t\t\t\"phone\": \"\",\n\t\t\t\"customFields\": []\n\t\t},\n\t\t\"availableShippingOptions\": [{\n\t\t\t\"id\": \"9363fd74-8508-4f8b-beb2-77ede2beaa1c\",\n\t\t\t\"type\": \"shipping_byweight\",\n\t\t\t\"description\": \"Ship by Weight\",\n\t\t\t\"imageUrl\": \"\",\n\t\t\t\"cost\": 8,\n\t\t\t\"transitTime\": \"\",\n\t\t\t\"isRecommended\": false\n\t\t}, {\n\t\t\t\"id\": \"20ae4fdf-747f-4ec5-86da-11ecd70ae03e\",\n\t\t\t\"type\": \"shipping_flatrate\",\n\t\t\t\"description\": \"Flat Rate\",\n\t\t\t\"imageUrl\": \"\",\n\t\t\t\"cost\": 12,\n\t\t\t\"transitTime\": \"\",\n\t\t\t\"isRecommended\": false\n\t\t}, {\n\t\t\t\"id\": \"b7783bb7-7695-467f-afd0-bf1c84fffdd2\",\n\t\t\t\"type\": \"shipping_upsready\",\n\t\t\t\"description\": \"UPS® (UPS Next Day Air®)\",\n\t\t\t\"imageUrl\": \"/img/shipping-providers/upsready_70x70.png\",\n\t\t\t\"cost\": 44.41,\n\t\t\t\"transitTime\": \"1 business day\",\n\t\t\t\"isRecommended\": false\n\t\t}]",
                          "header": {
                            "title": "Example Consignment with Available Shipping Options"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "code",
                          "data": "postData(`/api/storefront/checkouts/`, `1650fb51-172b-4cde-a220-90c6a8ef9293`, `5be1f13f07bae`,{\"shippingOptionId\": \"9f40c667-0ab5-46d4-b436-c678517c5415\"})\n  .then(data => console.log(JSON.stringify(data))) \n  .catch(error => console.error(error));\n\nfunction postData(url = ``, checkoutId = ``, consignmentId = ``, data = {},) {\n    return fetch(url + checkoutId + `/consignments/` + consignmentId,   {\n        method: \"PUT\", \n        credentials: \"same-origin\",\n        headers: {\n            \"Content-Type\": \"application/json;\",\n        },\n        body: JSON.stringify(data), \n    })\n    .then(response => response.json()); \n}",
                          "header": {
                            "title": "Update Consignment with Available Shipping Options"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Troubleshooting\n\n* **Did you get a CORs error response?**  \nCheck to make sure you have the right credentials set up. Most requests will use same-origin or include. \n\n* **Did you get a 404?**  \nMake sure you have at least one item in your cart. Deleting all items removes the cart and returns a 404 in the browser console.",
                          "header": {
                            "anchor": "working-sf-apis_troubleshooting"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Related Endpoints\n- [Storefront Cart](/api-reference/cart-checkout/storefront-cart-api)\n- [Storefront Checkout](/api-reference/cart-checkout/storefront-checkout-api)\n\n### Related Articles\n- [How To Embed a Shipping Location Map on the BigCommerce Order Confirmation Page](https://medium.com/bigcommerce-developer-blog/how-to-embed-a-google-map-on-the-bigcommerce-order-confirmation-page-8264747e654d) (Developer Blog)\n- [Let’s Talk About CORS](https://medium.com/bigcommerce-developer-blog/lets-talk-about-cors-84800c726919) (Developer Blog)",
                          "header": {
                            "anchor": "working-sf-apis_realated-endpoints"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Checkout SDK",
                    "route": {
                      "path": "/checkout-sdk"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1> Checkout SDK </h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#checkout-sdk_what-can-i-do\"> What Can I Do with the SDK?</a></li>\n\t\t<li><a href=\"#checkout-sdk_where-to-get\">Where Can I Get the SDK?\n</a></li>\n    <li><a href=\"#checkout-sdk_support-customization\">Support and Customization\n</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "The Checkout JS SDK is a wrapper for the BigCommerce Storefront Checkout API.\n\nIt allows a developer to create a custom checkout experience to move a customer through the checkout process.\nThe SDK handles all the ‘heavy-lifting’ such as customer login, getting shipping quotes and submitting payment for an order.\nWith the Checkout JS SDK, you can build a [custom checkout presentation](https://github.com/bigcommerce/checkout-sdk-js-example) layer in popular frontend frameworks such as React."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## What Can I Do with the SDK?\n\n-   It can initialize payment and shipping providers that require client-side setup through a common interface. Below are some examples of these providers:\n    \n    -   PayPal Express\n    -   Braintree\n    -   Stripe \n    -   Square\n    -   Amazon\n    -   Klarna\n  \n-   It provides a JavaScript interface for interacting with the web API.\n    -   Fetch and submit resources:\n        -   Cart\n        -   Order\n        -   Customer\n    -   Fetch available options:\n        -   Shipping addresses\n        -   Shipping countries\n        -   Shipping states\n        -   Billing addresses\n        -   Billing countries\n        -   Billing states\n        -   Shipping methods\n        -   Payment methods\n \nThe Checkout JS SDK allows you to present the checkout process to the shopper in any way you like, and, through frontend technologies and external web services, augment the checkout with extra information. \n\nHowever, the Checkout JS SDK does not allow you to change the underpinnings of the checkout - you must still conform to the model of the Checkout API underpinning the SDK to complete a Checkout and create an Order in BigCommerce. \nThe SDK does not allow you to implement custom payment, shipping, or tax calculation providers into the checkout - instead, the configured providers for these services on a given store are expressed via our Checkout API.",
                          "header": {
                            "anchor": "checkout-sdk_what-can-i-do"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Where Can I Get the SDK?\nThe Checkout JS SDK and associated documentation is available from the [BigCommerce SDK Repo.]( https://github.com/bigcommerce/checkout-sdk-js)",
                          "header": {
                            "anchor": "checkout-sdk_where-to-get"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Support and Customization\n- Enterprise clients can reach out to their account manager to review services and resources available.\n- For more on our design policy please visit [Design Support](https://forum.bigcommerce.com/s/article/BigCommerce-Design-Policy#support).",
                          "header": {
                            "anchor": "checkout-sdk_support-customization"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Add to Cart URLs",
                    "route": {
                      "path": "/add-to-cart-url"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Add to Cart URLs</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#add-cart-url_select-specific-sku\">Select Specific SKU (Product/Variant) on Product Detail Page</a></li>\n        <li><a href=\"#add-cart-url_add-specific-sku-cart\">Add Specific SKU to Cart</a></li>\n        <li><a href=\"#add-cart-url_add-sku-checkout-go-to-cart\">Add Specific SKU to Cart and Go Directly to Checkout</a></li>\n    \t<li><a href=\"#add-cart-url_add-specific-sku-checkout-source\">Add Specific SKU, Go to Checkout, and Include Source</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Your apps can use a product's or variant's <a href=\"https://support.bigcommerce.com/s/article/Options-SKUs-Rules\" target=\"_blank\">SKU</a> to create custom product URLs in order to perform specific actions, like:\n\n* Pre-select a specific SKU’s product option values when loading a product detail page.\n* Add a specific SKU to the cart.\n* Add a specific SKU to the cart and go directly to checkout.\n* Add a specific SKU to the cart, go directly to checkout, and include a source parameter for analytics and conversion tracking."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "Limitation: One Item per URL",
                            "body": "Each of the custom links described here can add only a single item (quantity 1) to the cart at a time."
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Select Specific SKU (Product/Variant) on Product Detail Page\n\nTo link to a specific product variant, append `?sku=INSERT-SKU-HERE` to the product URL, as shown below. This will link to the product page, with the variant's options already selected.\n\n### Structure:\n`site.com/sample-test-product-w-options/?sku=INSERT-SKU-HERE`\n\n\n### Example:\n`myawesomestore.com/shirt/?sku=SHIRT-SM-RED`",
                          "header": {
                            "anchor": "add-cart-url_select-specific-sku"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Add Specific SKU to Cart\n\nTo automatically add a product or variant to a shopper's cart and take them directly to the cart page, append   \n`/cart.php?action=add&sku=INSERT-SKU-HERE` to the store's domain.\n\n### Structure:\n`/site.com/cart.php?action=add&sku=INSERT-SKU-HERE`\n\n### Example:\n`myawesomestore.com/cart.php?action=add&sku=SHIRT-SM-RED`",
                          "header": {
                            "anchor": "add-specific-sku-cart"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Add Specific SKU to Cart and Go Directly to Checkout\nTo automatically add a product or variant to a shopper's cart and forward them directly to checkout, append   \n`/cart.php?action=buy&sku=INSERT-SKU-HERE` to the store's domain.\n\n### Structure:\n`/site.com/cart.php?action=buy&sku=INSERT-SKU-HERE`\n\n### Example:\n`myawesomestore.com/cart.php?action=buy&sku=SHIRT-SM-RED`",
                          "header": {
                            "anchor": "add-cart-url_add-sku-checkout-go-to-cart"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Add Specific SKU, Go to Checkout, and Include Source\n\nTo automatically add a product or variant to a shopper's cart, forward them to checkout, and also include a source parameter for analytics/conversion tracking, append `cart.php?action=buy&sku=INSERT-SKU-HERE&source=SOURCE-HERE` to the store's domain. (The&#160;source parameter can be any string.)\n\n### Structure:\n`site.com/cart.php?action=buy&sku=INSERT-SKU-HERE&source=SOURCE-HERE`\n\n### Example:\n`myawesomestore.com/cart.php?action=buy&sku=SHIRT-SM-RED&source=JULY-EMAIL-NEWSLETTER`",
                          "header": {
                            "anchor": "add-cart-url_add-specific-sku-checkout-source"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Headless Commerce",
              "route": {
                "path": "/developers-guide-headless"
              },
              "config": {
                "sidebar": {
                  "token": "GUIDE"
                }
              },
              "data": {
                "blocks": [
                  {
                    "type": "html",
                    "data": "<h1>Developers Guide to Headless Commerce</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#headless-commerce_prerequisites\">Prerequisites</a></li>\n        <li><a href=\"#headless-commerce_ways-to-implement-headless\">Ways to Implement Headless</a></li>\n        <li><a href=\"#headless-commerce-customer_login\">Customer Login</a></li>\n        <li><a href=\"#headless-commerce_sample-integration\">Sample Integration</a></li>\n        <li><a href=\"#headless-commerce_pci-compliance\">PCI Compliance</a></li>\n        <li><a href=\"#headless-commerce_sample-api-workflows\">Sample API Workflows</a></li>\n\t</ul>\n</div>\n"
                  },
                  {
                    "type": "text",
                    "data": "Headless commerce decouples the front end from the ecommerce platform that powers it, allowing developers to build flexible and content-rich storefronts. BigCommerce provides APIs for the Catalog, Cart, Checkout, Orders, Customers, Authentication and Payments. The APIs can be plugged into an existing CMS or website for flexible content management. BigCommerce used this approach to create our [WordPress Plugin](https://www.bigcommerce.com/solutions/wordpress-ecommerce-plugin/). The WordPress Plugin allows for a developer to take advantage of WordPress content management while using our APIs to manage the catalog and shopper checkout.\nFor a deeper guide on Headless, see our Whitepaper, [A New Era of Ecommerce: Headless Commerce](https://www.bigcommerce.com/new-era-headless-caas/).  \n\n### Multisite\n\nWith headless, developers can use BigCommerce as the back-end for several stores. By placing an application layer between the storefront and the APIs, the application can control which catalog information is pushed to which storefront. To learn more about Multisite, see [Multisite Ecommerce with WordPress and BigCommerce](https://medium.com/bigcommerce-developer-blog/multi-site-ecommerce-with-wordpress-and-bigcommerce-40dee194f8a).\n\nIn this article we will review ways you can implement headless, what requires PCI compliance audits and go through sample workflows for cart and checkout.\n"
                  },
                  {
                    "type": "text",
                    "data": ""
                  },
                  {
                    "type": "text",
                    "data": "## Prerequisites\nTo use the BigCommerce platform for headless commerce, you must have a store on an active plan. The store does not need to be [launched](https://support.bigcommerce.com/s/article/Launching-Your-Store).",
                    "header": {
                      "anchor": "headless-commerce_prerequisites"
                    }
                  },
                  {
                    "type": "text",
                    "data": ""
                  },
                  {
                    "type": "text",
                    "data": "## Ways to Implement Headless\nThere are many ways to implement headless commerce. Below are just a few ways to start with Headless commerce.\n* Use our Wordpress Plugin to leverage a custom CMS powered by the BigCommerce Catalog, Cart and Checkout APIs.\n* Create a custom shopper experience by creating your own storefront and checkout using our APIs to manage the Catalog, Cart, Checkout and Payments. \n* Use the BigCommerce storefront with a customized checkout using the Checkout SDK. \n\nBelow are ways to manage the catalog, cart and checkout. With the flexibility of using APIs, you can use one or all the options for a store.\n\n### Catalog Management\nUsing the [Catalog API](https://developer.bigcommerce.com/api-reference/catalog/catalog-api) you can return product data to your product details page and product listing page.\n\n**Sync the Catalog**  \nBest practice is to get product details and cache them in a database to display them. This will speed up the application and allow you to control what information is shown to the customer. Caching the details also lets you implement search in your application.\n\n**Real Time Catalog**  \nIf your catalog is changing all the time, you can use the Catalog API to return real time product information.\n\n**Real Time Pricing + Inventory**  \nIf you prefer working with a local copy of your data, but want to make sure that high priority pieces of data like pricing and inventory are always up to date, you can consider a hybrid model. A hybrid model would cache only  certain product details and pull the other information in real time. BigCommerce has webhooks that BigCommerce has webhooks you can use for listening to store events.\n\n### Cart Management \nUse the [Server to Server Cart API](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api) to create carts for existing customers and guest customers.\n\n**Guest Cart**  \nA guest cart assumes the shopper is not a customer and is not logging in or creating an account during checkout. Handle guest checkouts by displaying the cart data to the customer and then moving them to Checkout using the Checkout API.\n\n**Content Management System**  \nUsing a CMS is a good way to offer a custom shopper experience without needing build a content engine as well. The CMS needs to have a database so catalog information can be stored and retrieved and a way to store accounts. The [BigCommerce WordPress plugin](https://wordpress.org/plugins/bigcommerce/) loads the catalog into the database while using an embedded checkout to display cart and checkout details to customers. \n\n### Checkout Management\nUse the [Checkout API](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api) to move the cart to checkout and turn an existing checkout into an order.\n\n**Redirect to a BigCommerce Checkout**  \nWhen creating a cart, there is an optional query to create a redirect URL. Use this to redirect the shopper to a BigCommerce hosted checkout page.\n\nIf you are using the hosted checkout option shoppers will be able to navigate to other pages of the store. To prevent this, there are two options: \n\n* Hide non essential pages by removing the back links in Cart and Checkout.\n* Edit the theme files to hide the other pages from all visitors except for those who need to see them for maintenance. The steps to edit the theme files are outlined below.\n\nEdit the schema.json file\n\n",
                    "header": {
                      "anchor": "headless-commerce_ways-to-implement-headless"
                    }
                  },
                  {
                    "type": "code",
                    "data": "{\n   \"name\": \"Administrators\",\n   \"settings\": [\n     {\n       \"type\": \"text\",\n       \"label\": \"Administrator Emails (separated by commas)\",\n       \"id\": \"admin_emails\"\n     }\n   ]\n }",
                    "header": {
                      "title": "Edit the schema.json file",
                      "subtitle": " Add the following object to the settings array"
                    },
                    "config": {
                      "mode": "json"
                    }
                  },
                  {
                    "type": "text",
                    "data": "Edit the <span class=”fn”>config.json</span> file and add `\"admin_emails\": \"\"` to the settings object. Add the emails to the object that should have access to all store pages.\n\nModify the following pages to gate all pages except checkout, order confirmation, down for maintenance, and order invoices:\n* <span class=”fn”>layout/amp-iframe</span>\n* <span class=”fn”>layout/amp</span>\n* <span class=”fn”>layout/base</span>\n\nAdd the following conditional wrapper to each page:"
                  },
                  {
                    "type": "code",
                    "data": "{{#contains theme_settings.admin_emails customer.email}}\n<-- page content -->\n{{#else}}\n<-- display login form -->\n{{/contains}}",
                    "header": {
                      "title": "Conditional Wrapper"
                    },
                    "config": {
                      "mode": "html"
                    }
                  },
                  {
                    "type": "text",
                    "data": "To customize the checkout when using a redirect URL, use our [Checkout SDK](https://github.com/bigcommerce/checkout-sdk-js). The Checkout JS SDK is a library of methods for interacting with the checkout page's underlying Storefront Checkout API, allowing you to build a custom checkout page UI in the framework of your choice.\n\n**Checkout API**  \nIf you need complete control over the checkout page, you have the option to build an external checkout in your CMS or app using the server-to-server Checkout API. Then use the Payments API to process a payment through BigCommerce to take payment for the order. If you are using the Payments API, you are responsible for [PCI compliance](#headless-commerce_pci-compliance)."
                  },
                  {
                    "type": "text",
                    "data": ""
                  },
                  {
                    "type": "text",
                    "data": "## Customer Login\n\n### Associate Cart with a Customer\n\nIf a shopper creates a cart as a guest then logs into the store, you can use the following process to associate the cart to the customer and log them in at the same time. The [Server to Server Cart API](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api) is used since it allows for the front end to be bypassed when creating a cart.\n\nWhen a cart is created, your app should store the `cart_id`.  The `cart_id` is used to generated a [`redirect_url`](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api/cart/createcartredirecturl). Using the [Customer Login API](https://developer.bigcommerce.com/api-docs/customers/customer-login-api) set the `redirect_to` parameter as the generated cart or checkout redirect url. This will both log the customer in and show them either the cart or checkout depending on which url was used.  To make sure the cart is matched to the right customer you should compare the entered email address to what is the store’s database.\n\nTo populate the `customer_id` on the cart with the correct data, use the email address entered to match against the [Customers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api). If the email address matches what the customer input and what is in the BigCommerce database then proceed with login. If a match is not found then direct the customer to a [sign up](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api/customers/customerspost) screen.\n\n### Creating a New Customer\nOur WordPress plugin uses the approach of using the Customer API to [validate the password](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/customer-passwords/validatecustomerpassword) against what is stored in BigCommerce.\n\nIf a new account is created in WordPress, the password is written to the customer account in BigCommerce and used as the validation in future requests. The password is never stored in the WordPress database. You can match customers using the email address and the [Customers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api).",
                    "header": {
                      "anchor": "headless-commerce-customer_login"
                    }
                  },
                  {
                    "type": "text",
                    "data": ""
                  },
                  {
                    "type": "text",
                    "data": "## Sample Integration\n\nIn the diagram below, the Storefront is any location the products are being rendered and where the shopper browses for products. With headless the storefront can be a CMS or an app. The Application is making API calls to BigCommerce in order to perform certain actions and return data either to display to the shopper or pass it along to another system. BigCommerce is creating the order and processing payments so you don’t need to worry about building the infrastructure.\n\n### Storefront\n\nThe storefront is the front end presentation layer where a shopper interacts with products. In a headless architecture, the storefront might be a CMS, native mobile app, kiosk, static site, or any other front end solution you can imagine. The BigCommerce WordPress plugin is built using an existing CMS and injecting a stores catalog. Any CMS that accepts custom integrations can be used. Another option is to build a storefront from scratch using a framework such as [Gatsby](https://www.bigcommerce.com/blog/flexible-headless-commerce-solutions/#overview-of-bigcommerce-for-react-gatsby).\n\n### Application\nThe application is what a developer builds to control the requests and responses from the BigCommerce APIs. In addition to handling essential ecommerce tasks like requesting product information or sending the request to process a payment, the application layer can also handle logic for custom functionality, like presenting discount codes based on a shopper's history or pre filling details on the checkout page. \n\n\n### BigCommerce\nBigCommerce will respond to the application with the requested data to power the backend ecommerce functionality. It can handle processing payments, storing customer data, retrieving the catalog and order information.",
                    "header": {
                      "anchor": "headless-commerce_sample-integration"
                    }
                  },
                  {
                    "type": "image",
                    "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1554323466855",
                    "header": {
                      "title": "Sample Headless Integration"
                    },
                    "config": {
                      "centered": true,
                      "fluid": true,
                      "maxWidth": "802"
                    }
                  },
                  {
                    "type": "text",
                    "data": ""
                  },
                  {
                    "type": "text",
                    "data": "## PCI Compliance\n\nBigCommerce offers different avenues or channels for integration, depending on your business needs. The ultimate responsibility of PCI compliance lies with you and takes into consideration the architecture of your e-commerce store and multiple channels of integrations.\nBigCommerce is a PCI DSS compliant service provider and certifies annually [all requirements (1-12)](https://www.pcisecuritystndards.org/pci_security/maintaining_payment_security) including as a shared hosting provider. \n\nThe BigCommerce [PCI DSS attestation of compliance (AOC)](https://support.mybigcommerce.com/content/dojo/BigCommerce_PCI_DSS_v3.2.1_AOC_2019_Service_Provider.pdf) outlines the description of the technology stack certified annually.\n\nMerchants can use BigCommerce's [PCI DSS AOC](https://support.mybigcommerce.com/content/dojo/BigCommerce_PCI_DSS_v3.2.1_AOC_2019_Service_Provider.pdf) to satisfy the compliance requirements for the part that outlines its responsibilities.\n\n### Integrations with BigCommerce and Responsibility Matrix\n\n|  |BigCommerce Responsibility  |Merchant Responsibility |\n|--|--| -- |\n| BigCommerce as a storefront and backend | Responsible for all [PCI DSS requirements (1-12)](https://www.pcisecuritystandards.org/pci_security/maintaining_payment_security) of the product to the point that it has control of Merchants stores. | Responsible for ensuring that all modifications that result in external calls to, or integrations with outside parties are done in a PCI DSS compliant manner.<br><br>Responsible for ensuring all design modifications are done in a PCI DSS compliant manner.<br><br>Responsible for ensuring that all service providers it uses are compliant with PCI DSS. |\n| BigCommerce as a backend for example [headless integrations](https://developer.bigcommerce.com/api-docs/developers-guide-headless) or the [BigCommerce WordPress Plugin](https://wordpress.org/plugins/bigcommerce/). | Responsible for all PCI DSS requirements from the point at which cardholder data is handed to a BigCommerce controlled interface. (see [BigCommerce Attestation of PCI DSS 2019-2020](https://support.mybigcommerce.com/content/dojo/BigCommerce_PCI_DSS_v3.2.1_AOC_2019_Service_Provider.pdf)) | Responsible for the PCI DSS compliance of its storefront plus all of the above. |\n| Checkout and Payments SDK | Not Responsible<br> The way your business consumes the SDKs (either BigCommerce as a storefront and backend or BigCommerce as a backend ) would determine BigCommerce's  responsibilities. | Responsible for the PCI DSS compliance requirements applicable stated in BigCommerce as a storefront or BigCommerce as a backend. <br><br> The way your business consumes the SDKs (either BigCommerce as a storefront and backend or BigCommerce as a backend ) would determine BigCommerce's responsibilities.|\n| Checkout and Payments API | Not Responsible* <br> The way your business consumes the SDKs (either BigCommerce as a storefront and backend or BigCommerce as a backend ) would determine BigCommerce's  responsibilities. | Responsible for the PCI DSS compliance requirements applicable stated in BigCommerce as a storefront or BigCommerce as a backend. <br><br> The way your business consumes the SDKs (either BigCommerce as a storefront and backend or BigCommerce as a backend ) would determine BigCommerce's responsibilities. |\n\nIt is possible to use one more of BigCommerce's technology stack at the same time. Your PCI DSS compliance responsibilities will be a combination of each stack consumed.\n\n### Additional Resources\n-   [Merchants Classification Levels Visa](https://usa.visa.com/support/small-business/security-compliance.html#3)\n-   [Merchants Classification Levels Mastercard](https://www.mastercard.us/en-us/merchants/safety-security/security-recommendations/merchants-need-to-know.html)\n-   [Self Assessment Questionaire (SAQ) Types and Identifying which SAQ is for you](https://www.pcisecuritystandards.org/documents/SAQ-InstrGuidelines-v3_2_1.pdf?agreement=true&time=1562173376464)\n",
                    "header": {
                      "anchor": "headless-commerce_pci-compliance"
                    }
                  },
                  {
                    "type": "callout",
                    "data": {
                      "type": "warning",
                      "body": "If your application handles credit card data, you will need to be PCI Compliant. SAQs (self-assessment questionnaires) can be submitted to <a href=\"mailto:compliance@bigcommerce.com\">compliance@bigcommerce.com</a>."
                    }
                  },
                  {
                    "type": "text",
                    "data": ""
                  },
                  {
                    "type": "text",
                    "data": "## Sample API Workflows\n\nBelow are example workflows that list which APIs are needed to create a Cart, Checkout and Order on BigCommerce. Our headless implementation is based on the Server to Server Cart and Checkout APIs. There are currently two ways to handle this:\n\n* Create an order from a cart\n* Creating an order directly to bypass the cart and checkout\n\n\n### Create an Order from a Cart\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/f4dbc360974d4b5eff77)\n\n1.  Create a [Cart](/api-reference/cart-checkout/server-server-cart-api/cart/createacart) with a redirect url\n\t1.  Add the Customer ID or leave blank if shopper is a guest\n\t2.  Add Line Items or Custom Line Items\n2.  Add a [Billing Address](/api-reference/cart-checkout/server-server-checkout-api/checkout/checkoutsbillingaddressbycheckoutidpost) to the [Cart](/api-reference/cart-checkout/server-server-cart-api/cart/createacart) changing it to a Checkout\n3.  Add a [Consignment](/api-reference/cart-checkout/server-server-checkout-api/checkout/checkoutsconsignmentsbycheckoutidpost) to Checkout with the line items and the `consignments.available_shipping_options` query\n4. Update each [Consignment](/api-reference/cart-checkout/server-server-checkout-api/checkout/checkoutsconsignmentsbycheckoutidandconsignmentidput) with the chosen shipping option from the Add Consignment response.\n5.  Create the Order by sending a request to [Create Order](/api-reference/cart-checkout/server-server-checkout-api/checkout/createanorder)\n\t6.  Returns an `order_id`\n\t7. Order is created in Incomplete status\n6.  Take a Payment for the Order using one of the two methods below\n7.  Vaulted Card -- The shopper has saved a credit card\n\t8. [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget)\n\t9.  [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost)\n\t10. [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost)\n8.  Credit Card -- The shopper has not saved a credit card\n\t9. [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost)\n\t10. [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost)\n\n### Create an Order Directly\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/f4dbc360974d4b5eff77)\n\n1.  Send a request /POST request to [Orders](/api-reference/orders/orders-api/orders/postorders)\n\t2. Make sure the `status_id` is 0\n\t3.  Add the Customer ID or leave blank if the shopper is a guest\n\t4. Add Line Items or Custom Line Items\n\t5. Add a Billing Address\n\t6. Add a Shipping Address\n\t7. Create a custom shipping quote\n2.  Take a Payment for the Order using one of the two methods below\n3.  Vaulted Card -- The shopper has saved a credit card\n\t8. [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget)\n\t9.  [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost)\n\t10. [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost)\n4.  Credit Card -- The shopper has not saved a credit card\n\t9. [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost)\n\t10. [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost)\n\n\n\n\n",
                    "header": {
                      "anchor": "headless-commerce_sample-api-workflows"
                    }
                  },
                  {
                    "type": "text",
                    "data": ""
                  },
                  {
                    "type": "text",
                    "data": "## Resources\n\n### Tools\n- [Cart, Checkout and Order Postman Collection](https://www.getpostman.com/collections/f4dbc360974d4b5eff77)\n- [Checkout SDK](https://github.com/bigcommerce/checkout-sdk-js)\n- [WordPress Plugin](https://wordpress.org/plugins/bigcommerce/) (WordPress Plugin Directory)\n\n### Related Endpoints\n\n- [Catalog API](https://developer.bigcommerce.com/api-reference/catalog/catalog-api)\n- [Server to Server Checkout API](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api)\n- [Server to Server Cart API](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api)\n- [Orders API](https://developer.bigcommerce.com/api-reference/orders/orders-api)\n- [Payments API](https://developer.bigcommerce.com/api-reference/payments)\n- [Customers API](https://developer.bigcommerce.com/api-reference/customer-subscribers/v3-customers-api)\n- [Validate Customer Password](https://developer.bigcommerce.com/api-reference/customer-subscribers/customers-api/customer-passwords/validatecustomerpassword)\n\n### Related Articles\n\n- [Orders API](https://developer.bigcommerce.com/api-reference/orders/orders-api)\n- [Customers Overview](https://developer.bigcommerce.com/api-docs/customers/customers-subscribers-overview)\n- [Customer Login API](https://developer.bigcommerce.com/api-docs/customers/customer-login-api)\n- [Launching your store](https://support.bigcommerce.com/s/article/Launching-Your-Store) (BigCommerce Support)\n- [PCI Compliance](https://support.bigcommerce.com/s/article/PCI-Compliance) (BigCommerce Support)\n- [Multisite Ecommerce with WordPress and BigCommerce](https://medium.com/bigcommerce-developer-blog/multi-site-ecommerce-with-wordpress-and-bigcommerce-40dee194f8a) (BigCommerce Developers Blog)\n- [Matter Makes Waves with a Headless Build using BigCommerce for WordPress](https://medium.com/bigcommerce-developer-blog/matter-makes-waves-with-a-headless-build-using-bigcommerce-for-wordpress-a572bad4bdf8) (BigCommerce Developers Blog)\n- [New Era in Headless CaaS](https://www.bigcommerce.com/new-era-headless-caas/) (BigCommerce Whitepaper)\n- [BigCommerce Doubles Down on Headless Commerce with BloomReach, Sitecore, Adobe Experience Manager, and More](https://www.bigcommerce.com/blog/flexible-headless-commerce-solutions/) (BigCommerce Blog)\n\n### Additional Resources\n-   [Merchants Classification Levels Visa](https://usa.visa.com/support/small-business/security-compliance.html#3) (Visa USA)\n-   [Merchants Classification Levels Mastercard](https://www.mastercard.us/en-us/merchants/safety-security/security-recommendations/merchants-need-to-know.html) (Mastercard)\n-   [Self Assessment Questionaire (SAQ) Types and Identifying which SAQ is for you](https://www.pcisecuritystandards.org/documents/SAQ-InstrGuidelines-v3_2_1.pdf?agreement=true&time=1562173376464) (PCI Security Standards)\n- [Maintaining Payment Security](https://www.pcisecuritystandards.org/pci_security/maintaining_payment_security) (PCI Security Standards)"
                  }
                ]
              }
            },
            {
              "title": "Payments",
              "route": {
                "path": "/payments"
              },
              "data": {
                "children": [
                  {
                    "title": "Payments API",
                    "route": {
                      "path": "/payments-api-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Payments API</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#payments_pci-compliance\">PCI Compliance</a></li>\n    <li><a href=\"#payments_processing-payment\">Processing a Payment</a></li>\n    <li><a href=\"#payments_stored-cards\">Stored Cards</a></li>\n    <li><a href=\"#payments_credit-cards\">Credit Cards</a></li>\n    <li><a href=\"#payments_orders-api\">Orders API</a></li>\n    <li><a href=\"#payments_technical-details\">Technical Details</a></li>\n    <li><a href=\"#payments_sample-app-diagram\">Sample App Diagram</a></li>\n    <li><a href=\"#payments_error-codes\">Error Codes</a></li>\n    <li><a href=\"#payments_faq\">FAQ</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "The Payments API enables you to process payments through the store’s connected payment gateway. A payment can be taken for an order that is created using either the [Server to Server Checkout API Orders](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api) endpoint or creating an order using [V2 Orders](https://developer.bigcommerce.com/api-reference/orders/orders-api/orders/postorders) endpoint.\n\nPayments are processed via a sequence of requests to two API hosts:\n* Create the payment token:   `https://api.bigcommerce.com/stores/{store_hash}/v3/payments/access_tokens`\n* Process the payment:   `https://payments.bigcommerce.com/stores/{store_hash}/payments`\n\n### Prerequisites\n**Scopes**  \nThe following [OAuth](/api-docs/getting-started/authentication#authentication_oauth-scopes) scopes are required:\n* Create Payments\n* Get Payment Methods"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## PCI Compliance\nBigCommerce is only responsible for the security of credit card to the extent that it is directly in the route of the payment request to payment processors during a payment processing request. To ensure secure handling of payment instruments, as a third-party developer, you are responsible for developing the storefronts or recurring billing apps in a PCI compliant manner and maintaining a PCI compliance certification for third-party service providers certified by an external Qualified Security Assessor (QSA).\n\nMerchants or shoppers personal identifiable information (PII) collected by recurring billing apps that consumes the BigCommerce Payments API must have it’s own Privacy Policy sufficient to the requirements of the European Union General Data Protection Requirements (GDPR) which must be available and displayed to the general public.",
                          "header": {
                            "anchor": "payments_pci-compliance"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "If your application handles credit card data, you will need to be PCI Compliant. SAQs (self-assessment questionnaires) can be submitted to \n<a href=\"mailto:compliance@bigcommerce.com\">compliance@bigcommerce.com</a>."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Processing a Payment\n\nPayments can be processed using cards stored with the BigCommerce Stored Credit Cards feature or by providing a credit card number.  \n\n**The following gateways are supported for stored cards:**\n\n* Authorize.net\n* Paypal Powered by Braintree\n* CyberSource\n* Stripe\n* Paymetric\n\n\n**The following gateways are supported for credit cards:**\n\n* Authorize.net\n* PayPal powered by Braintree\n* CardConnect\n* Chase Merchant Services\n* Chase Integrated Payments\n* Cybersource Direct\n* eWAY Rapid\n* First Data Payeezy Gateway\n* Heartland Payment Systems\n* MIGS\n* MyVirtualMerchant\n* NMI\n* PayPal Payments Pro (Payflow Edition) UK\n* PayPal Payments Pro (Payflow Edition) US\n* Sage Pay/Protx VSP Direct\n* QuickBooks Payments\n* SecureNet\n* Stripe\n* Worldpay Core\n* WorldPay\n* USA ePay\n* Paymetric",
                          "header": {
                            "anchor": "payments_processing-payment"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "The API flow does not currently support hosted/offsite providers such as PayPal and Adyen and wallet type payments such as Amazon Pay."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### Stored Cards\nThere are three steps to using a stored card to make a payment.\n\n1. [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget)\n2. [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost)\n3. [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost)\n\nTo use stored cards with the Payments API or the Checkout SDK make sure stored cards are enabled in the stores Control Panel. To enable stored credit cards on your storefront, navigate to **Store Setup › Payments** and click the tab for your payment gateway. Toggle the switch to enable Stored Credit Cards and Save. For more on enabling stored cards, see [Enabling Stored Credit Cards](https://support.bigcommerce.com/s/article/Enabling-Stored-Credit-Cards).\n\n**Requirements for Stored Cards**\n\n* Your store must be on a Plus plan or higher.\n* Your store needs to be using Optimized One-Page Checkout.\n* Your store needs to be using a compatible payment gateway.\n\n1. To pay with a stored card, first make a call to [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget) for the `stored_instruments > token`. The `order_id` is passed in as a query parameter.\n\nThis token is the same as `payment_instrument_token` from [Get Transactions](https://developer.bigcommerce.com/api-reference/orders/orders-transactions-api).\n\n\n<br>\n\n**Try it Now**  \n*Get Payment Methods*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/38daa68bda00ba9d4734)",
                          "header": {
                            "anchor": "payments_stored-cards"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": [\n    {\n      \"id\": \"stripe.card\",\n      \"name\": \"Stripe\",\n      \"test_mode\": true,\n      \"type\": \"card\",\n      \"supported_instruments\": [\n        {\n          \"instrument_type\": \"VISA\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"MASTERCARD\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"AMEX\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"DISCOVER\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"JCB\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"DINERS_CLUB\",\n          \"verification_value_required\": true\n        },\n        {\n          \"instrument_type\": \"STORED_CARD\",\n          \"verification_value_required\": true\n        }\n      ],\n      \"stored_instruments\": [\n        {\n          \"type\": \"stored_card\",\n          \"brand\": \"VISA\",\n          \"expiry_month\": 9,\n          \"expiry_year\": 2020,\n          \"issuer_identification_number\": \"424242\",\n          \"last_4\": \"4242\",\n          \"token\": \"050a1e5c982e5905288ec5ec33f292772762033a070a45g434qfb16bf1940b51ef\",\n          \"is_default\": true\n        }\n      ]\n    }\n  ],\n  \"meta\": {}\n}",
                          "header": {
                            "title": "Sample Response",
                            "subtitle": "Get Payment Methods"
                          },
                          "config": {
                            "mode": "json",
                            "highlightRange": [
                              {
                                "from": "46",
                                "to": "46"
                              }
                            ]
                          }
                        },
                        {
                          "type": "text",
                          "data": "On line 46 is the `token`. Make note of the token to use as part of processing the payment in the request body.\n\n### Create Access Token\n2. Make a request to [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost) to get the authorization token that needs to be passed in the header when processing the payment. The ID of the order needs to be part of the request body."
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"order\": {\n    \"id\": 215\n  }\n}",
                          "header": {
                            "title": "Sample Request",
                            "subtitle": "Create Payment Access Token"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try it Now**  \n*Create Access Token*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/38daa68bda00ba9d4734)"
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": {\n    \"id\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTEzOTQxNDIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXd4gJ8uHDk3kDhhuyefsrtr45mRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo\"\n  },\n  \"meta\": {}\n}",
                          "header": {
                            "title": "Sample Response",
                            "subtitle": "Create Payment Access Token"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Process the Payment\n3. To process the payment, send a POST to [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost). You will need the following information from [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget) in step one. \n\n**Get Payment Methods = Process Payment**\n* type = type\n* token = token\n* last_four = verfication_value\n* id = payment_method_id\n\nThe headers to process a payment are different than the headers you normally send with a BigCommerce API. The Authorization token is the ID that is returned in Get Payment Access Token (step two). \n\n**Headers**\n* Accept: application/vnd.bc.v1+json\n* Authorization: PAT {your-access-token}\n* Content-Type: application/json"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "There is a space between PAT {your-access-token}.",
                            "title": "PAT"
                          }
                        },
                        {
                          "type": "code",
                          "data": "curl -X POST \\\n  https://payments.bigcommerce.com/stores/{store_hash}/payments \\\n  -H 'Accept: application/vnd.bc.v1+json' \\\n  -H 'Authorization: PAT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTEzOTQxNDIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXQiOjE1NTEzOTA1NDIsImRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"stored_card\",\n      \"token\": \"050a1e5c982e5905288ec5ec33f292772762033a0704f46fccb16bf1940b51ef\", // from Get Payment Methods\n      \"verification_value\": \"4242\"\n    },\n    \"payment_method_id\": \"stripe.card\"\n  }\n}'\n",
                          "header": {
                            "title": "Sample Request",
                            "subtitle": "Process Payment"
                          },
                          "config": {
                            "mode": "shell"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": {\n    \"id\": \"693bb4cd-3f20-444a-8315-6369f582c68a\",\n    \"status\": \"success\",\n    \"transaction_type\": \"purchase\"\n  }\n}",
                          "header": {
                            "title": "Sample Response",
                            "subtitle": "Process Payment"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try it Now**  \n*Process Payment*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/38daa68bda00ba9d4734)"
                        },
                        {
                          "type": "text",
                          "data": "If the purchase was successful it will return a status of success.  The order is then automatically moved to an Awaiting Fulfillment status. If you get a different response, see [Error Codes](#payments_error-codes) for troubleshooting."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Credit Cards\n\nThere are two steps to using a credit card to make a payment.\n\n1. [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost)\n2. [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost)",
                          "header": {
                            "anchor": "payments_credit-cards"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create Access Token\n1. Make a request to [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost) to to get the authorization token that needs to be passed in the header when processing the payment. The ID of the order needs to be part of the request body."
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"order\": {\n    \"id\": 215\n  }\n}",
                          "header": {
                            "title": "Sample Request",
                            "subtitle": "Create Payment Access Token"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": {\n    \"id\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTEzOTQxNDIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzg3ZmU1Zi01OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXd4gJ8uHDk3kDhhuyefsrtr45mRhdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo\"\n  },\n  \"meta\": {}\n}",
                          "header": {
                            "title": "Sample Response",
                            "subtitle": "Create Payment Access Token"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try it Now**  \n*Get Payment Access Token*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/38daa68bda00ba9d4734)"
                        },
                        {
                          "type": "text",
                          "data": "### Process the Payment\n\n2. To process the payment, send a POST to [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost).\n\nThe headers to process a payment are different than the headers you normally send with a BigCommerce API. The Authorization token is the ID that is returned in Get Payment Access Token(step two). \n\n**Headers**\n* Accept: application/vnd.bc.v1+json\n* Authorization: PAT {your-access-token}\n* Content-Type: application/json\n\nSend the request with the following fields from the credit card:\n* type -- Will always be card\n* payment_method_id -- The name of the card in the format `payment-provider.card`\n* number\n* cardholder_name\n* expiry_month\n* expiry_year\n* verification_value\n\nIf any of these fields are incorrect, the payment might be rejected."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "There is a space between PAT {your-access-token}.",
                            "type": "warning",
                            "title": "PAT"
                          }
                        },
                        {
                          "type": "code",
                          "data": "curl -X POST \\\n  https://payments.bigcommerce.com/stores/{store_hash}/payments \\\n  -H 'Accept: application/vnd.bc.v1+json' \\\n  -H 'Authorization: PAT eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1NTEzOTQxNDIsIm5iZiI6MTU1MTM5MDU0MiwiaXNzIjoicGF5bWVudHMuYmlnY29tbWVyY2UuY29tIiwic3ViIjoianJhaDZnbW4iLCJqdGkiOiI3Nzgadskfjua451OWJmLTQ3ZWMtYTFmZC00ZDQ3ZTkwNjFlNWMiLCJpYXQiOjE1NTEzOTr4gk78dhshehdGEiOnsic3RvcmVfaWQiOjEwMjU2NDYsIm9yZGVyX2lkIjoyMTUsImFtb3VudCI6OTgwMCwiY3VycmVuY3kiOiJVU0QifX0.WbR90d8m4gn8wK7kPMDEoVq8B0hHC5Ul5H4Hpqq6Yvo' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n  \"payment\": {\n    \"instrument\": {\n      \"type\": \"card\",\n      \"number\": \"4242424242424242\",\n      \"cardholder_name\": \"Jane Doe\",\n      \"expiry_month\": 12,\n      \"expiry_year\": 2020,\n      \"verification_value\": \"422\"\n    },\n    \"payment_method_id\": \"stripe.card\"\n  }\n}'",
                          "header": {
                            "title": "Sample Request",
                            "subtitle": "Process Payment"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"data\": {\n    \"id\": \"693bb4cd-3f20-444a-8315-6369f582c68a\",\n    \"status\": \"success\",\n    \"transaction_type\": \"purchase\"\n  }\n}",
                          "header": {
                            "title": "Sample Response",
                            "subtitle": "Process Payment"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**Try it Now**  \n*Process Payment*\n\n[![Run in Postman](https://run.pstmn.io/button.svg)](https://app.getpostman.com/run-collection/38daa68bda00ba9d4734)"
                        },
                        {
                          "type": "text",
                          "data": "If the purchase was successful it will return a status of success.  The order is then automatically moved to an Awaiting Fulfillment status. If you get a different response, see [Error Codes](#payments_error-codes) for troubleshooting."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Using the Orders API\n\nIt is possible to take a payment for an order created using the [Orders API](orders/orders-api-overview). When creating the order using the Orders API make sure the `status_id:0`. If the order status is not created with the status set to `0` or `Incomplete`, the Payments API will return an [error](#payments_error-codes).\nThe billing address and line items should be filled in when creating the order. The order can be created as a guest order by either seeting the \n`customer_id:0`or leaving it blank. After the order is created, then follow the steps for either a [credit card](#payments_credit-cards) or a [stored card](#payments_stored-cards).",
                          "header": {
                            "anchor": "payments_orders-api"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"status_id\": 0,\n    \"customer_id\": 11,\n    \"billing_address\": {\n        \"first_name\": \"Jane\",\n        \"last_name\": \"Does\",\n        \"company\": \"\",\n        \"street_1\": \"123 Main Street\",\n        \"street_2\": \"\",\n        \"city\": \"Austin\",\n        \"state\": \"Texas\",\n        \"zip\": \"78751\",\n        \"country\": \"United States\",\n        \"country_iso2\": \"US\",\n        \"email\": \"janedoe@email.com\"\n    },\n    \"shipping_addresses\": [\n        {\n            \"first_name\": \"Trishy\",\n            \"last_name\": \"Test\",\n            \"company\": \"Acme Pty Ltd\",\n            \"street_1\": \"666 Sussex St\",\n            \"street_2\": \"\",\n            \"city\": \"Anywhere\",\n            \"state\": \"Some State\",\n            \"zip\": \"12345\",\n            \"country\": \"United States\",\n            \"country_iso2\": \"US\",\n            \"phone\": \"\",\n            \"email\": \"janedoe@email.com\"\n        }\n    ],\n    \"products\": [\n        {\n            \"name\": \"BigCommerce Poster\",\n            \"quantity\": 1,\n            \"price_inc_tax\": 10.98,\n            \"price_ex_tax\": 10\n        },\n        {\n            \"name\": \"BigCommerce Poster II\",\n            \"quantity\": 1,\n            \"price_inc_tax\": 50,\n            \"price_ex_tax\": 45\n        }\n    ]\n}",
                          "header": {
                            "title": "Example Create Order"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Technical Details \n\n### Using Test Credit Cards\n\nThe following is a list of supported gateways and a list of their test credit cards. These can be useful while getting your app setup. Check your credit card setup in both [BigCommerce](https://support.bigcommerce.com/s/article/Online-Payment-Methods#setup) and the payment gateway to make sure testing is configured properly. If the credit cards do not work or stop working please reach out the payment provider as these are not maintained by BigCommerce. \n\n* [Authorize.Net](https://developer.authorize.net/hello_world/testing_guide/)\n* [Paypal Powered by Braintree](https://developers.braintreepayments.com/guides/credit-cards/testing-go-live/php)\n* [CyberSource](https://www.cybersource.com/developers/other_resources/quick_references/test_cc_numbers/)\n* [Stripe](https://stripe.com/docs/testing#cards)\n\n\n### Token\nThe `payment_access_token` is not from the payment provider. It is created by BigCommerce.\n\n### Decline Payments\nIf a payment is declined it will return a 4XX error with details if available. \n\n### Authorization\nIf a payment gateway is configured for authorization only, the payment will be authorized at the time of processing. The order will have to later be captured through the control panel. If the gateway is set for authorization and capture, the payment will be authorized and captured when payment is processed.\n\n### Stored Cards\nThe Payments API supports payment with cards that are currently stored. It does not provide a method for storing new cards.\n\n### Control Panel\nOrders created and captured via the API will look the same as other orders created via the storefront or other apps. The order source will be “Checkout API.” \n\n### Data Access\nThe card data is not accessible via the API once the payment is processed. \n\n### Rate Limits\nBigCommerce has rates limits in place for this API. Some payment providers will provide checks on the incoming requests.",
                          "header": {
                            "anchor": "payments_technical-details"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Sample App Diagram\n\nThe following diagram shows how the `payment_access_token` interacts with BigCommerce API and BigCommerce payments. \n\nOrders can be created using the [Server to Server API Endpoints](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-checkout-api/checkout/createanorder) or [Orders API](https://developer.bigcommerce.com/api-reference/orders/orders-api).",
                          "header": {
                            "anchor": "payments_sample-app-diagram"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1553180551833",
                          "header": {
                            "title": "Sample App"
                          },
                          "config": {
                            "centered": true,
                            "fluid": true,
                            "maxWidth": "805"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Error Codes\n\n| Code | Description | Possible Causes | Possible Solutions |\n|    |   |  - |  - |\n| `10000` |  An internal error has occurred within the API. |  Connection error | Try the request again. |\n| `10001` | Missing or incorrect required fields. | Missing or Incorrect Fields |  Check the request for any data that is incorrect or is missing |\n| `30000` | Merchant payment configuration could not be found. | * The payment provider has not been configured in the store. | Check the [payment gateways](https://support.bigcommerce.com/s/article/Online-Payment-Methods#setup) settings in your BigCommerce store. |\n| `3001` | Merchant payment configuration is not correctly being configured. | The payment configuration is being rejected by the payment gateway. | Check the [payment gateways](https://support.bigcommerce.com/s/article/Online-Payment-Methods#setup) settings in your BigCommerce store. <br> Reach out the the payment gateway to check the information is correct. | \n| `30002` | Vaulting service is currently not available. |  The vaulting feature is not enabled on this store. | Reach out to the store owner to enable [Stored Credit Cards](https://support.bigcommerce.com/s/article/Enabling-Stored-Credit-Cards) |\n| `30003` | Order could not be found. | The order does not exist. <br> The order ID is not correct. |  Check the current orders in the store using [Get All Orders](https://developer.bigcommerce.com/api-reference/orders/orders-api/orders/getorders) |\n| `30004` | The validation on line item and grand total does not match. | N/A| Recreate the payment access token <br> Recreate the order <br> Ensure the store settings for taxes and discounts are setup correctly| \n| `30050` | Payment instrument could not be saved. | Credit card information is incorrect. | Check that the card information is correct.<br> * `expiry_month` is two digits<br>* `expiry_year` is four digits |\n| `30051` | The stored card was not found. |  The card requested for payment is not associated to the shopper.| Use [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget) to see available vaulted cards |\n|`30100` | Payment access token could not be created. | N/A|N/A|\n| `30101` | Order is invalid. | The order is in the wrong status. | Orders must be in Incomplete Status with a `status_id:0` <br>  The order must be created by the Checkout SDK, Checkout API or V2 Orders API. Orders created in the Control and set to an incomplete status will return this error. | \n| `30102` | The payment was declined. | The card information provided was incorrect<br>The token provided was incorrect | Check that the provider shopper information is correct<br>Make sure the token in the Authorization header field is correct |\n| `30103` | Card has expired |N/A | N/A|\n| `30104` | The payment was declined. Please contact card issuer for more information. |N/A |N/A|\n| `30105` | The payment was declined due to duplicate payment being submitted. |N/A |N/A |\n| `30106` | The payment was declined due to insufficient funds. |N/A |N/A|",
                          "header": {
                            "anchor": "payments_error-codes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## FAQ\n\n\n**How can I store a credit card?**\n\nWhen processing a credit payment set `save_instrument: true`. The shopper can also store credit cards during checkout. If you are using the Checkout SDK, it can store the credit card as part of the checkout.\n\n**How do I get a list of stored credit cards?**\n\nUse the Get Payment Methods to get a list of stored payment instruments. \n\n**Can I add my payment gateway?**\n\nThe Payments API does not support adding a third party gateway. Payments are processed through BigCommerce.\n\n**Can I issue a refund?**\n\nRefunds can be issued either using the [Control Panel](https://support.bigcommerce.com/s/article/Processing-Refunds) or through the payment gateway directly.\n\n**How do I process payment for a capture credit card?**\n\nOnce a payment has been authorized, the capture step will need to be completed using the [Control Panel](https://support.bigcommerce.com/s/article/How-can-I-set-my-payment-gateway-to-only-authorize-transactions-and-not-capture-the-funds-automatically).\n\n**Can I use this on orders with more than one shipping address?**\nYes, checkouts and orders with more than one consignment can use the Payments API. \n\n**Is store credit supported?**\n\nStore credit is not a supported payment method with the Payments API. Store credit can still be used by the shopper on the storefront, part of the control panel or with the Checkout API.\n\n**Are gift certificates supported?**\n\nGift certificates are not supported with the Payments API. Gift certificates can still be used by the shopper on the storefront, part of the control panel or with the Checkout API.\n",
                          "header": {
                            "anchor": "payments_faq"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Webhooks\nThere are no specific webhooks for payments. \n\n**Related Webhooks:**\n- [Orders](https://developer.bigcommerce.com/api-docs/getting-started/webhooks/webhook-events#webhook-events_orders)\n- [Cart](https://developer.bigcommerce.com/api-docs/getting-started/webhooks/webhook-events#webhook-events_cart)\n\n### Related Endpoints\n* [Create Access Token](/api-reference/payments/payments-create-payment-token-api/payment-access-token/paymentsaccesstokenspost)\n* [Get Payment Methods](/api-reference/payments/payments-create-payment-token-api/payment-methods/paymentsmethodsget)\n* [Process Payment](/api-reference/payments/payments-process-payments/payment/paymentspost)\n\n### Related Articles\n* [Enabling Stored Credit Cards](https://support.bigcommerce.com/s/article/Enabling-Stored-Credit-Cards) (BigCommerce Support)\n* [Processing Refunds](https://support.bigcommerce.com/s/article/Processing-Refunds) (BigCommerce Support)\n* [Manually Capturing Transactions (Authorize Only)](https://support.bigcommerce.com/s/article/How-can-I-set-my-payment-gateway-to-only-authorize-transactions-and-not-capture-the-funds-automatically) (BigCommerce Support)\n* [Available Payment Gateways](https://support.bigcommerce.com/s/article/Available-Payment-Gateways) (BigCommerce Support)"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Orders",
              "route": {
                "path": "/orders"
              },
              "data": {
                "children": [
                  {
                    "title": "Overview",
                    "route": {
                      "path": "/orders-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Orders</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    \t\t<li><a href=\"#order-overview_what-is-a-order\">What is a Order?</a></li>\n    \t\t<li><a href=\"#order-overview_available-endpoints\">Available Endpoints</a></li>\n        <li><a href=\"#order-overview_storefront-orders\">Storefront Orders API</a></li>\n        <li><a href=\"#order-overview_server-server-checkout\">Server to Server Checkout Orders</a></li>\n        <li><a href=\"#order-overview_v2-orders\">Orders API</a></li>\n    \t\t<li><a href=\"#order-overview_transactions\">Order Transactions</a></li>\n        <li><a href=\"#order-overview_oauth-scopes\">OAuth Scopes</a></li>\n        <li><a href=\"#order-overview_available-webhooks\">Webhooks Available</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## What is an Order?\nAn order is a collection of items, along with customer and shipping information, that has been finalized with a payment or attempted payment. \n\nOrders can contain both digital or physical products. Digital items are delivered via email and do not require a shipping address, whereas physical items require a shipping address and a delivery method. \n\nBigCommerce offers two possible workflows for creating orders via the API: the Server-to-Server Checkout API or  the Orders API.\n* The Server-to-Server Checkout API represents an extension of the Server-to-Server Cart API and can be used to complete a purchase from product selection to conversion.\n* The Orders API is used to retrieve or update existing orders or to push orders from a third party, like a POS, to BigCommerce.",
                          "header": {
                            "anchor": "order-overview_what-is-a-order"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Available Endpoints\n\n| Name | Description |\n| -- | -- |\n| [Storefront Orders](/api-reference/orders/storefront-orders-api) | Retrieve order information from the Order Confirmation page using JavaScript |\n| [Server to Server Checkout](/api-reference/cart-checkout/server-server-checkout-api/checkout/createanorder) | Create an order from an existing checkout |\n| [Orders API](/api-reference/orders/orders-api) | Create and manage orders. Can manage orders created via API or the Control Panel |\n| [Order Transactions](/api-reference/orders/orders-transactions-api) | Get transaction information for existing orders. Read Only Endpoint |",
                          "header": {
                            "anchor": "order-overview_available-endpoints"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "##  Storefront Orders API \nThe Storefront Orders API can be used to return information about a just-placed order on the order confirmation page. You can interact with the Storefront Orders API using an app or a browser API. \n\nFor an example using the Fetch API to log order information to the console, see [Storefront Orders API](http://).\n\n### When to Use:\n* Scrape order information\n* Send order data to an analytics app",
                          "header": {
                            "anchor": "order-overview_storefront-orders"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<script>\nconsole.log(\"Log Orders\")\nfetch('/api/storefront/order/{{checkout.order.id}}', {credentials: 'include'})\n.then(function(response) {\nreturn response.json();\n})\n.then(function(myJson) {\nconsole.log(myJson);\n});\n</script>",
                          "header": {
                            "title": "Log Orders to Console"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Server-to-Server Checkout API\n\nThe Server-to-Server Checkout API allows you to create a checkout programmatically and then convert it to an order. From there, the order can be managed in the Control Panel or using the V2 Orders API. [See Server-to-Server Checkout](http://) for more.\n\n### When to Use:\n* Create an order from an existing checkout",
                          "header": {
                            "anchor": "order-overview_server-server-checkout"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Orders API\nThe Orders API can be used to create an order without first creating a cart and checkout. It also allows you to manage an order's billing address, products, coupons, and taxes. See [Orders API](/api-reference/orders/orders-api) for a complete list of methods.\n\n### When to Use: \n* Create an order and bypass creating a cart and checkout\n* Make changes to existing orders\n* Export or import order information to a third-party system",
                          "header": {
                            "anchor": "order-overview_v2-orders"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Order Transactions\nThe Order Transactions API is a read-only endpoint that returns transaction or payment data about an order. The data returned does not include payment tokens for a third party such as Braintree. \n\n### When to Use:\n* View transaction information about an Order. ",
                          "header": {
                            "anchor": "order-overview_transactions"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## OAuth Scopes\n- Orders\n- Carts\n- Checkouts\n\nFor a more details and a full list of available scopes, see [Oauth Scopes](/api-docs/getting-started/basics/authentication#authentication_oauth-scopes).",
                          "header": {
                            "anchor": "order-oauth-scopes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n### Webhooks Available\n- [Orders](/api-docs/getting-started/webhooks/webhook-events#webhook-events_orders)\n\n### Related Articles\n### Related Articles\n- [How To Embed a Shipping Location Map on the BigCommerce Order Confirmation Page](https://medium.com/bigcommerce-developer-blog/how-to-embed-a-google-map-on-the-bigcommerce-order-confirmation-page-8264747e654d) (Developer Blog)",
                          "header": {
                            "anchor": "order-webhooks-available"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Orders API",
                    "route": {
                      "path": "/orders-api-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Orders API Overview</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    \t\t<li><a href=\"#orders-api-overview_create-order\">Create an Order</a></li>\n            <ul>\n                <li><a href=\"#orders-api-overview_add-produt-options\">Add an Existing Product with Options</a></li>\n                <li><a href=\"#orders-api-overview_add-custom-product\">Create a Custom Product</a></li>\n                <li><a href=\"#orders-api-overview_order-products\">Order Products</a></li>\n                <li><a href=\"#orders-api-overview_add-billing-address\">Add a Billing Address</a></li>\n                <li><a href=\"#orders-api-overview_add-shipping-address\">Add a Shipping Address</a></li>\n                <li><a href=\"#orders-api-overview_other-recommended-fields\">Other Recommended Fields</a></li>\n                <li><a href=\"#orders-api-overview_create-order-example\">Create Order Example</a></li>\n            </ul>\n            <li><a href=\"#orders-api-guide_order-response\">Order Response</a></li>\n            <li><a href=\"#orders-api-overview_shipping-order\">Shipping an Order</a></li>\n            <ul>\n                <li><a href=\"#orders-api-overview_create-order-shipment\">Create an Order Shipment</a></li>\n                <li><a href=\"#orders-api-overview_multiple-locations\">Multiple Locations</a></li>\n                <li><a href=\"#orders-api-overview_custom-quotes\">Custom Quotes</a></li>\n                <li><a href=\"#orders-api-overview_shipping-carrier\">Shipping Carrier</a></li>\n            </ul>\n            <li><a href=\"#orders-api-overview_taxes\">Taxes</a></li>\n                <ul><li><a href=\"#orders-api-overview_taxes_avalara\">Avalara</a></li></ul>\n            <li><a href=\"#orders-api-overview_calculation_totals\">Calculation of Totals</a></li>\n            <li><a href=\"#orders-api-overview_order_status\">Order Status</a></li>\n            <ul><li><a href=\"#orders-api-overview_custom-order-status\">Custom Order Status</a></li></ul>\n            <li><a href=\"#orders-api-overview_faq\">FAQ</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Introduction\n\nThe Orders API is used when an order is being created manually. If you are using the Server to Server Checkout an Order can be created using the orders endpoint. The order can then be updated if needed.\n\nA sample order workflow might include:\n* Creating the order for either an existing customer or guest\n* Taking payment using either the Control Panel or third party payment solutions\n* Creating a shipment for the order to generate an order confirmation email and mark it as shipped\n\n\n### Prerequisites:\n**BigCommerce Store**  \nAn active BigCommerce store with a sellable [product](/api-reference/catalog/catalog-api/products/createproduct)\n\n**Scopes**  \nThe following [OAuth](/api-docs/getting-started/authentication#authentication_oauth-scopes) scopes are required:\n* Modify Orders",
                          "header": {
                            "anchor": "orders-api-overview_introduction"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create an Order\n\nWe will go over adding an existing product, adding a custom product, adding a billing address and adding a shipping address. At the end of this section, you will be able to see the full sample request to create an order.\n\nWant to skip ahead and see the [full request](/api-docs/orders/orders-api-overview#orders-api-overview_create-order-example)?\n\nAt a minimum, an order needs products and a billing address. If either of these fields are left off the order is rejected.\n\nA order can be created with either an existing Product or using a Custom Product.",
                          "header": {
                            "anchor": "orders-api-overview_create-order"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Add an Existing Product with Options\n\n**Required Fields:**\n- product_id\n- product_options (required if adding a product with variants)\n\t- product_option > id\n\t- product_option > value\n- quantity\n- price_inc_tax (optional)\n- price_ex_tax (optional)\n\nTo get the `product_option > id` and `product_option > value`, make a request to [Get Variants](/api-reference/catalog/catalog-api/product-variants/getvariantsbyproductid). Variants will return the `option_value > id` and `option_values > option_id`.\n\nMake note of the `option_values > id` and `option_values > option_id`. These will be passed into the products array.",
                          "header": {
                            "anchor": "orders-api-overview_add-produt-options"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "If price_ex_tax or price_inc_tax is set, then they both need to bet specified. Otherwise the order total will not calculate correctly."
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"data\": [\n        {\n            \"id\": 421,\n            \"product_id\": 184,\n            \"sku\": \"RED\",\n            \"sku_id\": 383,\n            \"price\": null,\n            \"calculated_price\": 249,\n            \"sale_price\": null,\n            \"retail_price\": null,\n            \"map_price\": null,\n            \"weight\": null,\n            \"calculated_weight\": 15,\n            \"width\": null,\n            \"height\": null,\n            \"depth\": null,\n            \"is_free_shipping\": false,\n            \"fixed_cost_shipping_price\": null,\n            \"purchasing_disabled\": false,\n            \"purchasing_disabled_message\": \"\",\n            \"image_url\": \"\",\n            \"cost_price\": 0,\n            \"upc\": \"\",\n            \"mpn\": \"\",\n            \"gtin\": \"\",\n            \"inventory_level\": 0,\n            \"inventory_warning_level\": 0,\n            \"bin_picking_number\": \"\",\n            \"option_values\": [\n                {\n                    \"id\": 180,\n                    \"label\": \"Red\",\n                    \"option_id\": 200,\n                    \"option_display_name\": \"Color\"\n                },\n                {\n                    \"id\": 192,\n                    \"label\": \"Small\",\n                    \"option_id\": 230,\n                    \"option_display_name\": \"T-Shirt Size\"\n                }\n            ]\n        }\n...",
                          "header": {
                            "title": "Example /GET Variants Response",
                            "subtitle": "https://api.bigcommerce.com/stores/{store_hash}/v3/catalog/products/{product_id}/variants"
                          },
                          "config": {
                            "mode": "json",
                            "highlightRange": [
                              {
                                "from": "30",
                                "to": "42"
                              }
                            ]
                          }
                        },
                        {
                          "type": "text",
                          "data": "Next, create the products array which includes the custom product and the existing product with product options. Using the `option_id` and `option_value > id` from the previous request we can build the products array. \n\n`product_options` > `id` = `option_values` > `option_id`\n\n`product_options` > `value` = `option_values` > `id`\n\nThe `product_options` > `value` must be passed in as a string."
                        },
                        {
                          "type": "code",
                          "data": "\"products\":[\n          {\n              \"name\": \"BigCommerce Poster\",\n              \"quantity\": 1,\n              \"price_inc_tax\": 10.98,\n              \"price_ex_tax\": 10.00\n          },\n          {\n              \"product_id\": 184,\n                \"product_options\":[\n                    {\n                        \"id\": 200,\n                        \"value\": \"180\"\n                    },\n                    {\n                        \"id\": 230,\n                        \"value\": \"192\"\n                    }\n                ]\n\n          }\n      ]",
                          "header": {
                            "title": "Example Products Array",
                            "subtitle": "This is an abbreviated request"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create a Custom Product\n\n**Required Fields:**\n* name – Product Name\n* quantity – Number of items\n* price_inc_tax – Price including tax\n* price_ex_tax – Price excluding tax\n* sku (optional)",
                          "header": {
                            "anchor": "orders-api-overview_add-custom-product"
                          }
                        },
                        {
                          "type": "code",
                          "data": "  \"products\": [\n    {\n      \"name\": \"BigCommerce Poster\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 10.98,\n      \"price_ex_tax\": 10\n    },\n\n     {\n      \"name\": \"BigCommerce Coffee Mug\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 50.00,\n      \"price_ex_tax\": 45.00\n    }\n  ]",
                          "header": {
                            "subtitle": "This is an abbreviated request",
                            "title": "Custom Order Products Array"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Creating a custom product does not add it to the catalog. Only to the current order."
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Order Products\n\n**Pricing**\n\nIf price is not specified, it will automatically pick up the price from the store’s product catalog. However, you can override this via `price_inc_tax` and `price_ex_tax`.\n\nIf the `price_inc_tax` or `price_ex_tax` specified then any variant pricing is ignored and the order products base_price is updated according to the store settings. For example, if the store is set to display prices with tax included, then the `base_price` will be `price_inc_tax`.\n\n\n**Stock**\n\nFor products that are configured to track stock, the quantity specified on the order will reduce the stock on hand. When there is not enough inventory to fulfill the order, the order will be rejected with an “out of stock” error code.\n\n**Min and Max Quantities**\n\nFor products that have min and max quantities specified in their settings, the API will honor these, and will reject orders appropriately.\n\n**Options**\n\nFor products where product options are required, the API will validate these requirements to ensure that the product options are specified.",
                          "header": {
                            "anchor": "orders-api-overview_order-products"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Add a Billing Address\n\n**Required Fields:**\n* first_name \n* last_name \n* street_1 \n* city \n* state \n* zip \n* country \n* country_iso2 \n* email",
                          "header": {
                            "anchor": "orders-api-overview_add-billing-address"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"billing_address\": {\n        \"first_name\": \"Jane\",\n        \"last_name\": \"Doe\",\n        \"company\": \"\",\n        \"street_1\": \"123 Main Street\",\n        \"street_2\": \"\",\n        \"city\": \"Austin\",\n        \"state\": \"Texas\",\n        \"zip\": \"78751\",\n        \"country\": \"United States\",\n        \"country_iso2\": \"US\",\n        \"email\": \"janedoe@email.com\"\n    }",
                          "header": {
                            "title": "Add a Billing Address",
                            "subtitle": "This is an abbreviated request"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "If a shipping address is not provided, it defaults to the billing address."
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Add a Shipping Address - optional\n\n**Required Fields:**\n* first_name \n* last_name \n* street_1 \n* city \n* state \n* zip \n* country \n* country_iso2 \n* email\n\nThe shipping address is input as an array object since more than one shipping address can be added at a time. Adding multiple shipping addresses allows for an order to ship to multiple locations.",
                          "header": {
                            "anchor": "orders-api-overview_add-shipping-address"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"shipping_addresses\": [\n        {\n            \"first_name\": \"Trishy\",\n            \"last_name\": \"Test\",\n            \"company\": \"Acme Pty Ltd\",\n            \"street_1\": \"666 Sussex St\",\n            \"street_2\": \"\",\n            \"city\": \"Anywhere\",\n            \"state\": \"Some State\",\n            \"zip\": \"12345\",\n            \"country\": \"United States\",\n            \"country_iso2\": \"US\",\n            \"phone\": \"\",\n            \"email\": \"trish@testing.com\"\n        }",
                          "header": {
                            "title": "Add a shipping address",
                            "subtitle": "This is an abbreviated request"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Other Recommended Fields\nBelow are fields which are recommended but not required when creating an order.\n\n**Customer ID**\n\nThe customer_id will determine the price the shopper pays for an item. Customer ID’s are tied to customer group discounts and Price Lists. Set the `customer_id` to 0 when creating a guest order.\n\n**Shipping Address**\n\nIf a shipping address is not provided, it will default to the billing addresses provided.\n\n**Status**\n\nIf a status is not provided, it defaults to a status of 1 or Pending. \n\n**Discounts**\n\nManual discounts are supported. To add a manual discount either overwrite the product price or use `discount_amount`. This accepts a fixed dollar amount.",
                          "header": {
                            "anchor": "orders-api-overview_other-recommended-fields"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create Order Example\n\nAfter the products, billing and shipping address are added, an order can be created.",
                          "header": {
                            "anchor": "orders-api-overview_create-order-example"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"status_id\": 0,\n  \"customer_id\": 11,\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"street_1\": \"123 Main Street\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": \"78751\",\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"email\": \"janedoe@email.com\"\n  },\n  \"shipping_addresses\": [\n    {\n      \"first_name\": \"Trish\",\n      \"last_name\": \"Test\",\n      \"company\": \"Acme Pty Ltd\",\n      \"street_1\": \"666 Sussex St\",\n      \"city\": \"Austin\",\n      \"state\": \"Texas\",\n      \"zip\": \"78751\",\n      \"country\": \"United States\",\n      \"country_iso2\": \"US\",\n      \"email\": \"elsie@example.com\"\n    }\n  ],\n  \"products\": [\n    {\n      \"name\": \"BigCommerce Poster\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 10.98,\n      \"price_ex_tax\": 10\n    },\n     {\n      \"name\": \"BigCommerce Coffee Mug\",\n      \"quantity\": 1,\n      \"price_inc_tax\": 50.00,\n      \"price_ex_tax\": 45.00\n    },\n          {\n              \"product_id\": 184,\n                \"product_options\":[\n                    {\n                        \"id\": 200,\n                        \"value\": \"180\"\n                    },\n                    {\n                        \"id\": 230,\n                        \"value\": \"192\"\n                    }\n                ]\n\n          }\n  ]\n}",
                          "header": {
                            "title": "Create an Order Request"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Order Response\n\nThe response will have abbreviated order contents with sub-resources available to get the full order information. The order is automatically set to a status of 1 or Pending. It also returns an id which is the order id. \n\nIn the example below, the order ID is 193.\n* The order products sub-resource will list the products added.\n* The shipping_addresses sub-resource will have the shipping addresses.\n* The coupons sub-resource will have any coupons added to the order.",
                          "header": {
                            "anchor": "orders-api-guide_order-response"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Coupons can not be added to an order via API. Use the `discount_amount` instead."
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"id\": 193,\n  \"customer_id\": 0,\n  \"date_created\": \"Fri, 12 Oct 2018 19:06:23 +0000\",\n  \"date_modified\": \"Fri, 12 Oct 2018 19:06:23 +0000\",\n  \"date_shipped\": \"\",\n  \"status_id\": 1,\n  \"status\": \"Pending\",\n  \"subtotal_ex_tax\": \"10.0000\",\n  \"subtotal_inc_tax\": \"10.9800\",\n  \"subtotal_tax\": \"0.9800\",\n  \"base_shipping_cost\": \"0.0000\",\n  \"shipping_cost_ex_tax\": \"0.0000\",\n  \"shipping_cost_inc_tax\": \"0.0000\",\n  \"shipping_cost_tax\": \"0.0000\",\n  \"shipping_cost_tax_class_id\": 0,\n  \"base_handling_cost\": \"0.0000\",\n  \"handling_cost_ex_tax\": \"0.0000\",\n  \"handling_cost_inc_tax\": \"0.0000\",\n  \"handling_cost_tax\": \"0.0000\",\n  \"handling_cost_tax_class_id\": 0,\n  \"base_wrapping_cost\": \"0.0000\",\n  \"wrapping_cost_ex_tax\": \"0.0000\",\n  \"wrapping_cost_inc_tax\": \"0.0000\",\n  \"wrapping_cost_tax\": \"0.0000\",\n  \"wrapping_cost_tax_class_id\": 0,\n  \"total_ex_tax\": \"10.0000\",\n  \"total_inc_tax\": \"10.9800\",\n  \"total_tax\": \"0.9800\",\n  \"items_total\": 1,\n  \"items_shipped\": 0,\n  \"payment_method\": \"Manual\",\n  \"payment_provider_id\": null,\n  \"payment_status\": \"\",\n  \"refunded_amount\": \"0.0000\",\n  \"order_is_digital\": false,\n  \"store_credit_amount\": \"0.0000\",\n  \"gift_certificate_amount\": \"0.0000\",\n  \"ip_address\": \"\",\n  \"geoip_country\": \"\",\n  \"geoip_country_iso2\": \"\",\n  \"currency_id\": 1,\n  \"currency_code\": \"USD\",\n  \"currency_exchange_rate\": \"1.0000000000\",\n  \"default_currency_id\": 1,\n  \"default_currency_code\": \"USD\",\n  \"staff_notes\": null,\n  \"customer_message\": null,\n  \"discount_amount\": \"0.0000\",\n  \"coupon_discount\": \"0.0000\",\n  \"shipping_address_count\": 1,\n  \"is_deleted\": false,\n  \"ebay_order_id\": \"0\",\n  \"cart_id\": null,\n  \"billing_address\": {\n    \"first_name\": \"Jane\",\n    \"last_name\": \"Doe\",\n    \"company\": \"\",\n    \"street_1\": \"123 Main Street\",\n    \"street_2\": \"\",\n    \"city\": \"Austin\",\n    \"state\": \"Texas\",\n    \"zip\": \"78751\",\n    \"country\": \"United States\",\n    \"country_iso2\": \"US\",\n    \"phone\": \"\",\n    \"email\": \"janedoe@email.com\",\n    \"form_fields\": []\n  },\n  \"is_email_opt_in\": false,\n  \"credit_card_type\": null,\n  \"order_source\": \"external\",\n  \"external_source\": null,\n  \"products\": {\n    \"url\": \"https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/products\",\n    \"resource\": \"/orders/193/products\"\n  },\n  \"shipping_addresses\": {\n    \"url\": \"https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/shippingaddresses\",\n    \"resource\": \"/orders/193/shippingaddresses\"\n  },\n  \"coupons\": {\n    \"url\": \"https://api.bigcommerce.com/stores/{store_hash}/v2/orders/193/coupons\",\n    \"resource\": \"/orders/193/coupons\"\n  },\n  \"external_id\": null,\n  \"external_merchant_id\": null,\n  \"custom_status\": \"Pending\"\n}",
                          "header": {
                            "title": "Create Order Response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Shipping an Order\nWe will go over creating a shipment for an order, shipping quotes, shipping carriers and shipping to multiple locations. ",
                          "header": {
                            "anchor": "orders-api-overview_shipping-order"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create an Order Shipment\n\n**Required Fields:**\n* order_address_id\n* shipping_provider\n* items\n\nOnce an Order has products, a billing address and at least one shipping address a order shipment can be created. Order shipments are a way to mark an order as shipped with the shipping information. \n\nTo get the `order_address_id`  use the ID returned in [Order Shipping Address](https://developer.bigcommerce.com/api-reference/orders/orders-api/order-shipping-addresses/getordersorderidshippingaddressesid).\n\nThe items array requires the product quantity and `order_product_id`. The `order_product_id` is the ID returned from [Order Products](https://developer.bigcommerce.com/api-reference/orders/orders-api/order-products/getordersorderidproducts).\n\nThere does not need to be a shipping provider. If the shipping provider is not sent in at all, it will default to custom and a tracking link is not generated. To have the tracking link generated without a shipping provider, provide an empty string. To add a shipping provider, see the available options on [Order Shipment](/api-reference/orders/orders-api/models/ordershipment). \n\nOnce the order shipment is created, it will automatically send out an email to the billing address with the shipment confirmation. To stop this behavior adjust the [Order Notification](https://support.bigcommerce.com/s/article/Customer-Order-Notifications#enable) settings in the Control Panel. \n\nIf the order shipment is deleted, the status of the shipment is still in shipped. The status will need to be [manually changed](/api-reference/orders/orders-api/order-status/getorderstatuses).",
                          "header": {
                            "anchor": "orders-api-overview_create-order-shipment"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"tracking_number\": \"EJ958083578UK\",\n  \"comments\": \"Janes Order\",\n  \"order_address_id\": \"128\",\n  \"shipping_provider\": \"\",\n  \"items\": [\n        {\n            \"order_product_id\": 194,\n            \"product_id\": 0,\n            \"quantity\": 1\n        },\n        {\n            \"order_product_id\": 195,\n            \"product_id\": 0,\n            \"quantity\": 1\n        }\n  ]\n}",
                          "header": {
                            "title": "Create Order Shipment"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"id\": 11,\n    \"order_id\": 228,\n    \"customer_id\": 11,\n    \"order_address_id\": 131,\n    \"date_created\": \"Wed, 13 Mar 2019 16:35:37 +0000\",\n    \"tracking_number\": \"EJ958083578US\",\n    \"merchant_shipping_cost\": \"0.0000\",\n    \"shipping_method\": \"None\",\n    \"comments\": \"Ready to go...\",\n    \"shipping_provider\": \"\",\n    \"tracking_carrier\": \"\",\n    \"billing_address\": {\n        \"first_name\": \"Jane\",\n        \"last_name\": \"Doe\",\n        \"company\": \"\",\n        \"street_1\": \"123 Main Street\",\n        \"street_2\": \"\",\n        \"city\": \"Austin\",\n        \"state\": \"Texas\",\n        \"zip\": \"78751\",\n        \"country\": \"United States\",\n        \"country_iso2\": \"US\",\n        \"phone\": \"\",\n        \"email\": \"janedoe@email.com\"\n    },\n    \"shipping_address\": {\n        \"first_name\": \"Trishy\",\n        \"last_name\": \"Test\",\n        \"company\": \"Acme Pty Ltd\",\n        \"street_1\": \"666 Sussex St\",\n        \"street_2\": \"\",\n        \"city\": \"Anywhere\",\n        \"state\": \"Some State\",\n        \"zip\": \"12345\",\n        \"country\": \"United States\",\n        \"country_iso2\": \"US\",\n        \"phone\": \"\",\n        \"email\": \"elsie@example.com\"\n    },\n    \"items\": [\n        {\n            \"order_product_id\": 194,\n            \"product_id\": 0,\n            \"quantity\": 1\n        },\n        {\n            \"order_product_id\": 195,\n            \"product_id\": 0,\n            \"quantity\": 1\n        }\n    ]\n}\n",
                          "header": {
                            "title": "Order Shipment Response"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Multiple Locations\n\nOrders can have multiple shipment locations. There needs to be more than one product or quantity of a product and more than one shipping addresses. A shipping address can be added either during the create or using an update.\n\nTo ship to multiple locations create an order shipment for each location and items. Only one POST request per shipment.",
                          "header": {
                            "anchor": "orders-api-overview_multiple-locations"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "When adding shipping addresses during an order PUT or POST, the API will allow you to add more than is necessary."
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Custom Quotes\nAn order can be created with a `shipping_cost_ex_tax` and `shipping_cost_inc_tax`. This is a way to add a custom shipping amount to an order. This can be added when creating or updating an order. ",
                          "header": {
                            "anchor": "orders-api-overview_custom-quotes"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Both `shipping_cost_ex_tax` and `shipping_cost_inc_tax` must be included otherwise, the final order amount will not be calculated correctly. "
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Shipping Carrier\nGenerating a quote through a shipping carrier is currently not supported. A shipping carrier can be specified when creating an Order Shipment. The quote can be generate elsewhere, then update the `shipping_cost_ex_tax` and `shipping_cost_inc_tax` for the order total to be correct.. ",
                          "header": {
                            "anchor": "orders-api-overview_shipping-carrier"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Taxes\nTax will be calculated based on the tax rules specified in the store, except in the case of automatic taxes. However, in both cases, you can optionally override the tax values by specifying `price_inc_tax` and `price_ex_tax`.\n\nIf a store has automatic tax enabled, BigCommerce does not compute sales tax on orders created via the API.",
                          "header": {
                            "anchor": "orders-api-overview_taxes"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Avalara\nWhen the store is subscribed to Avalara Premium, a value of API Tax Override is written to the Order Tax object’s name field.\n\nAbbreviated state names in shipping and billing addresses will prevent tax documents from being submitted to Avalara. To ensure successful Avalara tax-document submission, spell state names out in full. For example, supplying CA as a state name leads to no tax-document submission. Supplying California as a state name leads to a successful submission.\n\nPOST or PUT orders on stores with Avalara Premium cause tax documents to be submitted. If a store has subscribed to Avalara Premium, BigCommerce automatically submits tax documents to Avalara when the order achieves a paid status. See Order Status below for a list of paid statuses.\n\nYou can create overrides for calculated values such as product prices, subtotal and totals by sending a fixed value in the request. If values are not supplied for these properties, they will be automatically calculated based on the preset store values and tax rules.\n\n\n| Existing Status | Status Passed | Resultant Status | Avalara Tax Document Submission |\n|  |  |  |  |\n| Any | None | `Pending` | None |\n| Paid or `Refunded` | Paid | Paid | None |\n| Unpaid or `Refunded` | Unpaid | Unpaid | None |\n| Paid or `Refunded` | Unpaid | Unpaid | Tax document voided |\n| Unpaid or `Refunded` | Paid | Paid | Tax document submitted |",
                          "header": {
                            "anchor": "orders-api-overview_taxes_avalara"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Overriding Preset Values\nYou can create overrides for calculated values such as product prices, subtotal and totals by sending a fixed value in the request. If values are not supplied for these properties, they will be automatically calculated based on the preset store values and tax rules.",
                          "header": {
                            "anchor": "#orders-api-overview_override-preset-values"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Calculation of Totals\nWhen not specified, order subtotal and total are automatically calculated.\n\nYou can override order subtotal and/or total. If you choose to override one, we strongly recommend that override both, because the system will not be able to accurately calculate the other.\n\nEdits to the following properties will trigger a recalculation of the subtotal and total:\n\n*   products\n*   discount_amount\n*   shipping_cost_ex_tax\n*   shipping_cost_inc_tax\n*   handling_cost_ex_tax\n*   handling_cost_inc_tax\n*   wrapping_cost_ex_tax\n*   wrapping_cost_inc_tax\n*   billing_address\n*   shipping_addresses",
                          "header": {
                            "anchor": "orders-api-overview_calculation_totals"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Order Status\nWhen moving through order management, the order status is not automatically updated. This needs to be changed as needed. \n\nYou can specify `status_id`, which will automatically set the corresponding status. When `status_id` is not specified, it will be automatically set to 1, which will set status to Pending.\n\nThe following statuses are of the paid type:\n* Shipped\n* Partially Shipped\n* Awaiting Pickup\n* Awaiting Shipment\n* Completed\n* Awaiting Fulfillment\n\nBigCommerce considers all statuses other than those above to be of the unpaid type, except Refunded, which is considered neither paid or unpaid. ",
                          "header": {
                            "anchor": "orders-api-overview_order_status"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Custom Order Status\n\nThe order status label can be changed in the Control Panel. This **does not** change the underlying functionality. See our support article on [Order Status](https://support.bigcommerce.com/s/article/Order-Statuses#rename).",
                          "header": {
                            "anchor": "orders-api-overview_custom-order-status"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## FAQ\n\n**Is adding coupons available?**\n\nCoupon redemption is not currently supported. The `coupon_discount` field can not be written to. A discount can be added to the order by using the `discount_amount`.\n\n**How do I create an order for a guest?**\n\nTo specify a guest checkout, set `customer_id` to 0.\n\n**How do I set the order source?**\n\nThe `order_source` cannot be specified, and will be set to external. You can optionally specify a value for `external_source` to specify which external source the order is coming from - e.g., POS system X, accounting system Y, etc.\n\n**Can I create an order with only custom products?**\n\nYes, the products are not added to the store's catalog.\n\n**What is the difference between country_ISO2 and country?** \n\nIn the shipping and billing addresses, there is no requirement to specify country when `country_ISO2` is specified and vice versa.\n\n**How can I take a payment for an Order?**\nYou can either process payment through a third party or using the Control Panel. \n\n**Can I generate a shipping quote from a carrier using the API?**\n\nNot at this time. If an order is created either in the Control Panel or via API, then it returns a 204 when trying to get a [Shipping Quote](https://developer.bigcommerce.com/api-reference/orders/orders-api/models/shippingquotes).\n",
                          "header": {
                            "anchor": "orders-api-overview_faq"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n### Webhooks\n- [Orders](/api-docs/getting-started/webhooks/webhook-events#webhook-events_orders)\n\n### Related Endpoints\n- [Orders](/api-reference/orders/orders-api/orders/postorders)\n- [Order Shipments](/api-reference/orders/orders-api/order-shipments/postordersorderidshipments)\n- [Order Status](/api-reference/orders/orders-api/order-status/getorderstatuses)\n- [Shipping Quotes](/api-reference/orders/orders-api/order-shipping-addresses-quotes/getordersorderidshippingaddressesshippingaddressidshippingquotes)\n- [Order Products](/api-reference/orders/orders-api/order-products/getordersorderidproducts)\n- [Order Shipping Address](/api-reference/orders/orders-api/order-shipping-addresses/getordersorderidshippingaddresses)\n- [Order Coupons](/api-reference/orders/orders-api/order-coupons/getordersorderidcoupons)\n    \n### Related Articles\n- [Order Status](https://support.bigcommerce.com/s/article/Order-Statuses#rename) (BigCommerce Support)\n- [Order Notifications](https://support.bigcommerce.com/s/article/Customer-Order-Notifications#enable) (BigCommerce Support) ",
                          "header": {
                            "anchor": "orders-api-overview_resources"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "/api-reference": {
        "title": "API Reference",
        "data": {
          "children": [
            {
              "title": "Webhooks",
              "route": {
                "path": "/webhooks"
              },
              "data": {
                "$ref": "./BigCommerce_Webhooks.oas2.yml"
              },
              "config": {
                "includeDownloadLink": true
              }
            },
            {
              "title": "Catalog",
              "route": {
                "path": "/catalog"
              },
              "data": {
                "children": [
                  {
                    "title": "Catalog API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/catalog-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Catalog_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Price Lists API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/pricelists-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Price_Lists_API.oas2.yml"
                    }
                  }
                ]
              }
            },
            {
              "title": "Store Management",
              "route": {
                "path": "/store-management"
              },
              "data": {
                "children": [
                  {
                    "title": "Store Information API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/store-information-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Store_Information_API.oas2.yml"
                    }
                  },
                  {
                    "title": " Currency API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/currency-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Currency_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Geography API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/geography-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Geography_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Tax Class API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/tax-classes-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Tax_Class_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Shipping API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/shipping-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Shipping_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Shipping Provider API",
                    "route": {
                      "path": "/shipping-provider-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Shipping_Provider_API.oas2.yml"
                    },
                    "config": {
                      "includeDownloadLink": true
                    }
                  }
                ]
              }
            },
            {
              "title": "Customers & Subscribers",
              "route": {
                "path": "/customer-subscribers"
              },
              "data": {
                "children": [
                  {
                    "title": "V3 Customers API",
                    "config": {
                      "sidebar": {
                        "token": ""
                      },
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/v3-customers-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Customers_V3_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Customers API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/customers-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Customers_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Subscribers API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/subscribers-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Subscribers_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Wishlist API",
                    "config": {
                      "sidebar": {
                        "token": ""
                      },
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/wishlist-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Wishlist_API.oas2.yml"
                    }
                  }
                ]
              }
            },
            {
              "title": "Marketing",
              "route": {
                "path": "/marketing"
              },
              "data": {
                "children": [
                  {
                    "title": "Marketing API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/marketing-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Marketing_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Store Content API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/store-content-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Store_Content_API.oas2.yml"
                    }
                  }
                ]
              }
            },
            {
              "title": "Storefront",
              "route": {
                "path": "/storefront"
              },
              "data": {
                "children": [
                  {
                    "title": "Scripts API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/content-scripts-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Scripts_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Themes API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/themes-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Themes_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Widgets API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/widgets-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Widgets_API.oas2.yml"
                    }
                  }
                ]
              }
            },
            {
              "title": "Cart & Checkout",
              "route": {
                "path": "/cart-checkout"
              },
              "data": {
                "children": [
                  {
                    "title": "Storefront Cart API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/storefront-cart-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Storefront_Cart_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Storefront Checkout API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/storefront-checkout-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Storefront_Checkout_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Server to Server Cart API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/server-server-cart-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Server_to_Server_Cart_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Server to Server Checkout API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/server-server-checkout-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Server_to_Server_Checkout_API.oas2.yml"
                    }
                  }
                ]
              }
            },
            {
              "title": "Orders",
              "route": {
                "path": "/orders"
              },
              "data": {
                "children": [
                  {
                    "title": "Orders API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/orders-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Orders_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Order Transactions API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/orders-transactions-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Order_Transactions_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Storefront Orders API",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/storefront-orders-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Storefront_Orders_API.oas2.yml"
                    }
                  }
                ]
              }
            },
            {
              "title": "Payments",
              "route": {
                "path": "/payments"
              },
              "data": {
                "children": [
                  {
                    "title": "Payment Token & Payment Methods",
                    "route": {
                      "path": "/payments-create-payment-token-api"
                    },
                    "config": {
                      "includeDownloadLink": true
                    },
                    "data": {
                      "$ref": "./BigCommerce_Payments_API.oas2.yml"
                    }
                  },
                  {
                    "title": "Process Payment",
                    "route": {
                      "path": "/payments-process-payments"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Process_Payment_API.oas2.yml"
                    },
                    "config": {
                      "includeDownloadLink": true
                    }
                  },
                  {
                    "title": "Enabled Store Payment Methods",
                    "config": {
                      "includeDownloadLink": true
                    },
                    "route": {
                      "path": "/payment-methods-api"
                    },
                    "data": {
                      "$ref": "./BigCommerce_Enabled_Payment_Methods_API.oas2.yml"
                    }
                  }
                ]
              }
            },
            {
              "title": "Theme Objects",
              "route": {
                "path": "/theme-objects"
              },
              "data": {
                "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/spec/json/BigCommerce_Theme_Objects.json"
              }
            }
          ],
          "blocks": [
            {
              "type": "text",
              "data": "<h1 class=\"TextBlock-header-title wb-bw\">API Reference</h1>\n<ul>\n\t<li><a href=\"/api-reference/webhooks\">Webhooks</a></li>\n\t<li><a href=\"/api-reference/catalog\">Catalog</a></li>\n\t<li><a href=\"/api-reference/store-management\">Store Management</a></li>\n\t<li><a href=\"/api-reference/customer-subscribers\">Customers &amp; Subscribers</a></li>\n\t<li><a href=\"/api-reference/marketing\">Marketing</a></li>\n\t<li><a href=\"/api-reference/storefront\">Storefront</a></li>\n\t<li><a href=\"/api-reference/cart-checkout\">Cart &amp; Checkout</a></li>\n\t<li><a href=\"/api-reference/orders\">Orders</a></li>\n\t<li><a href=\"/api-reference/payments\">Payments</a></li>\n</ul>"
            }
          ]
        }
      },
      "/stencil-docs": {
        "title": "Stencil Docs",
        "data": {
          "children": [
            {
              "title": "Getting Started",
              "route": {
                "path": "/getting-started"
              },
              "data": {
                "children": [
                  {
                    "title": "About Stencil",
                    "route": {
                      "path": "/about-stencil"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>About Stencil</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#about_what-is-stencil\"> What is Stencil?</a></li>\n\t\t<li><a href=\"#about_features-and-stack\"> Stencil Development Features and Technology Stack</a></li>\n\t\t<li><a href=\"#about_blueprint\"> Blueprint (Legacy Framework) Documentation </a></li>\n    <li><a href=\"#about_support\">Support</a></li>\n\t</ul>\n</div>\n"
                        },
                        {
                          "type": "text",
                          "data": "## What is Stencil?\n\nStencil is BigCommerce's theme engine. It incorporates industry best practices in technology, design standards, and SEO, and allows you to build a stunning storefront that engages shoppers and encourages checkouts on any device. Stencil themes are supported on the [following browsers](https://support.bigcommerce.com/s/article/Themes-Supported-Browsers).\n\nIn addition to the features listed below, Stencil allows merchants to customize a storefront’s look and feel with no coding, making it accessible to a wide range of users.\n\nStencil powers BigCommerce’s [Cornerstone](https://github.com/bigcommerce/cornerstone) theme, which serves as your framework for creating custom sites. Cornerstone is available on Github and will be referenced throughout the documentation in order to demonstrate Stencil’s capabilities. See the [Cornerstone theme demo](http://cornerstone-light-demo.mybigcommerce.com/).",
                          "header": {
                            "anchor": "about_what-is-stencil"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Stencil Development Features and Technology Stack\n\nStencil provides the following features, allowing BigCommerce theme developers to create beautiful, dynamic, and powerful storefronts.\n\n\n### Stencil Command Line Interface (Stencil CLI)\n\nThe Stencil CLI enables developers to locally develop and customize on any Stencil theme with no impact on a merchant's live storefront during the development process. When developing locally, you will have access to real-time Browsersync preview and testing across desktop, mobile, and tablet devices/viewports.\n\nStencil CLI runs on the [Node.js](https://nodejs.org/en/) runtime environment. Installing Node.js also provides the required [npm package manager](https://www.npmjs.com/package/npm).\n\n### Logic-Based Templates\n\nStencil's logic based templates allow BigCommerce developers to customize storefront pages efficiently with the lightweight templating languge, Handlebars.js.  Handlebars allows you to efficiently embed dynamic and conditional logic onto your storefront pages.\n\n### CSS and Design Assets\n\nStencil's Sass and SCSS support allows developers to nest properties, variables, and mix-ins. Cornerstone uses a BigCommerce pattern library called Citadel, which is built on top of the ZURB Foundation framework, version 5.5.3.\n\n**Note:** Stencil does not support Foundation 6.x, due to incompatible updates introduced between versions 5.x and 6.x.\n\nFoundation offers the framework for creating a responsive theme. You have the option of swapping out Foundation for another framework, although doing so would require significant work.\n\nFoundation assets bundled with Cornerstone are located in these subdirectories: \n\n* `Cornerstone/assets/scss/settings/foundation/ `\n* `Cornerstone/assets/scss/components/foundation/`\n\n### Page-specific Resource Definition\n\nYAML front matter allows you to request only the objects you need on the storefront, increasing page speed and allowing you to define the content to render with just a few keystrokes.\n\n### Javascript Event Hooks\n\nStencil themes can access remote objects through event hooks, using the hooks to trigger defined events based on shopper behavior. This will allow you to collect product data and optimize a shopper's experience. To facilitate theme-building, BigCommerce provides the [stencil-utils client-side JavaScript library](/stencil-docs/adding-event-hooks-to-your-theme/stencil-utils-api-reference) for managing event hooks.\n\nFor more information, see the [Event Hook Overview](/stencil-docs/adding-event-hooks-to-your-theme/event-hook-overview-and-examples#event_event-hook).\n\n\n\n## Store Design\n\n[Store Design](https://support.bigcommerce.com/s/article/Store-Design) is a browser-based tool that enables merchants to rapidly customize a theme's look and feel with no coding.\n\nTheme developers' can customize the configuration of the Store Design tool. A developer's configuration choices determine the customizable theme aspects and the range of choices that exists for each customizable aspect using the Store Design tool. For example, a developer can grant access to customization to colors, fonts, display of page features, and number of products to display per feature with the Store Design tool.\n\n### Stencil Theme Variations\n\nEach Stencil theme can contain one to four variations. You can optimize individual variations for specific markets, audiences and styles – while still managing and distributing all of these variations as one theme.\nCornerstone comes with 3 variations: Cornerstone Light, Cornerstone Warm, and Cornerstone Bold.\n\n### Responsive, Mobile-Friendly Themes\n\nBigCommerce stores powered by Stencil allow shoppers to have a first class experience _across any device_.",
                          "header": {
                            "anchor": "about_features-and-stack"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Blueprint (Legacy Framework) Documentation\n\nIf you are looking for information on Blueprint, BigCommerce's legacy theme framework, you can visit [Blueprint Themes](https://developer.bigcommerce.com/legacy/blueprint-themes).",
                          "header": {
                            "anchor": "about_blueprint"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Support\n\n### [Developer Community](https://forum.bigcommerce.com/s/group/0F913000000HLjECAW/bigcommerce-developers)\n\nThis is a great place to get help from other developers who work on the BigCommerce platform. If you have BigCommerce specific questions this is the best place to ask. It’s also great for beginners to get assistance.\n\n### [StackOverflow](https://stackoverflow.com/questions/tagged/bigcommerce)\n\nAre you a more experienced developer or have a programming language specific question? This is a good place to ask questions and get help. The developer community is the best place to get answers about the BigCommerce platform specifically.\n\nIf you need direct assistance, you can contact BigCommerce Support through [Live Chat, Phone Support, or Email Support](https://support.bigcommerce.com/s/contact). \n",
                          "header": {
                            "anchor": "about_support"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n### Related Articles\n* [Store Design](https://forum.bigcommerce.com/s/article/Store-Design) (BigCommerce Knowledge Base)\n\n### Sample Apps \n* [Cornerstone Github Repository](https://github.com/bigcommerce/cornerstone)\n* [Cornerstone Theme Demo](http://cornerstone-light-demo.mybigcommerce.com/)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Transitioning to Stencil",
                    "route": {
                      "path": "/transitionining-to-stencil"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Transitioning to Stencil</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#transitionining-to-stencil_choosing-dev-path\"> Choosing a Development Path</a></li>\n\t\t<li><a href=\"#transitionining-to-stencil_front-matter-quick-start\">Front-Matter Quick Start</a></li>\n    <li><a href=\"#transitionining-to-stencil_handlebars_quick-start\">Handlebars Quick Start</a></li>\n\t\t<li><a href=\"#transitionining-to-stencil_seo-tips\">SEO Tips and Best Practices</a></li>\n\t\t<li><a href=\"#transitionining-to-stencil_blueprint-to-stencil\">Blueprint to Stencil Features Map</a></li>\n    <li><a href=\"#transitionining-to-stencil_interacting-with-api\">Interacting with the BigCommerce API</a></li>\n    <li><a href=\"#transitionining-to-stencil_partnering-with-bc\">Partnering with BigCommerce</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Choosing a Development Path\n\nAre you approaching Stencil from a different theming framework, like Blueprint, BigCommerce's legacy framework? Or moving to the Stencil templating environment from a pure HTML and CSS-based design?\n\nYou have four (non-mutually exclusive) options for developing Stencil themes:\n\n* Find an Agency Partner\n* Light Customization using the Theme Editor\n* Light Customization using HTML and CSS\n* Adapting a Stencil Theme or Developing from Scratch\n\n###  Find an Agency Partner\n\nIf you prefer to have an expert collaborator customize your theme, we recommend working with one of our certified certified BigCommerce Agency Partners. Reference the following resources to do so:\n\n* [Partner Directory](https://partners.bigcommerce.com/directory/) (BigCommerce)\n* [Working with a Design Partner](https://support.bigcommerce.com/articles/Learning/Working-with-a-Design-Partner) (Knowledge Base)\n\n### Light Customization with Stencil Theme Editor\n\nStencil can be customized without the use of any specialized development tools or techniques by using of the Stencil Theme Editor. The Stencil Theme Editor still enables customization of a theme's colors, typography, banners, headings, carousel, and footer. It also enables customization of broader layout characteristics, such as the number of products displayed in various panels, category pages, and brand pages.\n\nFor details, see the following support resources:\n\n* [Theme Editor](https://support.bigcommerce.com/s/article/Stencil-Themes) (Knowledge Base)\n* [Personalizing Your Theme](https://support.bigcommerce.com/articles/Learning/Personalizing-your-New-Theme) (Knowledge Base)\n\n### Light Customization with HTML and CSS\n\nIf you are most comfortable working in HTML and CSS, Stencil's *Edit Theme Files* feature allows you to directly edit most of your theme's files from the Control Panel. For details, see the following resources:\n\n* [Editing Stencil Theme Files](https://support.bigcommerce.com/s/article/Stencil-Themes#edit) (Knowledge Base)\n* [Getting Started with the Stencil Framework](https://www.youtube.com/watch?v=waJ1dg_dAh8&index=11&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) (Video overview of copying and editing a theme's files)\n\n### Adapt a Stencil Theme, or Develop from Scratch\n\nFor complete control over a theme's appearance and logic – including the ability to edit _all_ theme configuration files – you will want to use the Stencil Command-line interface, also known as the Stencil CLI.\n\nTo learn Stencil CLI's templating conventions, see Installing Stencil CLI. Also take a look at BigCommerce's [Getting Started with the Stencil Framework](https://www.youtube.com/playlist?list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) video playlist.",
                          "header": {
                            "anchor": "transitionining-to-stencil_choosing-dev-path"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Front-Matter Quick Start\n\nStencil templates start with a section of \"front matter\" where you can and concisely customize each page's design and layout details. \n\nThis front-matter section uses conventions from YAML, a simple, widely used markup language. If you haven't used these conventions before, refer to our [Front-Matter Overview](https://developer.bigcommerce.com/stencil-docs/front-matter/front-matter-overview).",
                          "header": {
                            "anchor": "transitionining-to-stencil_front-matter-quick-start"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Handlebars Quick Start\n\nStencil uses Handlebars.js to assemble dynamic content into the storefront pages that are displayed to shoppers. The dynamic content can be drawn from a few sources, like the store's catalog.\n\nHandlebars' syntax is quite simple, and it allows you to accomplish powerful JavaScript operations with minimal JavaScript code. To learn more about Handlebars.js, see these third-party tutorials: \n\n* [Learn Handlebars in 10 Minutes or Less](http://tutorialzine.com/2015/01/learn-handlebars-in-10-minutes/) (Tutorial Zine)\n* [A Beginner’s Guide to Handlebars](https://www.sitepoint.com/a-beginners-guide-to-handlebars/) (SitePoint)\n* [Getting Started with Handlebars.js](http://blog.teamtreehouse.com/getting-started-with-handlebars-js) (Team Treehouse)\n* [Handlebars interactive tutorial](http://tryhandlebarsjs.com/) (Try Handlebars)",
                          "header": {
                            "anchor": "transitionining-to-stencil_handlebars_quick-start"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## SEO Tips and Best Practices\n\nSearch-engine optimization (SEO) helps translate an elegant theme into a successful, high-conversion storefront. Because so many shoppers reach online stores through a search engine, a search-optimized site will be more visible – attracting more traffic. \n\nThe Stencil framework is [designed for high SEO performance](https://www.bigcommerce.com/improve-organic-traffic/) (BigCommerce). However, you will want to keep SEO in mind as you build out each theme and storefront. For guidelines, please see these BigCommerce support articles (which are a series of intermediate to advanced chapters in our Guide to SEO):\n\n* [SEO Do's and Don'ts](https://support.bigcommerce.com/s/article/What-is-SEO) (Knowledge Base)\n* [Developing a Keyword Strategy](https://support.bigcommerce.com/articles/Learning/Developing-a-Keyword-Strategy/) (Knowledge Base)\n* [SEO Success Essentials](https://support.bigcommerce.com/articles/Learning/Bigcommerce-SEO-Success-Essentials/) (Knowledge Base)\n* [Advanced SEO on BigCommerce](https://support.bigcommerce.com/s/article/Advanced-SEO-on-Bigcommerce) (Knowledge Base)\n\nAlso checkout our [Guide to Keyword Research](https://support.bigcommerce.com/s/article/Value-of-Keywords) (Knowledge Base).",
                          "header": {
                            "anchor": "transitionining-to-stencil_seo-tips"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Blueprint-to-Stencil Features Map \n\nThis following support and video resurces are designed to help you identify the Stencil counterparts to familiar Blueprint components.\n\n* [What to Consider When Changing Your Theme](https://support.bigcommerce.com/s/article/What-to-Consider-When-Changing-Your-Theme) (Knowledge Base)\n* [Stencil and the BigCommerce Control Panel](https://www.youtube.com/watch?v=d2F6F8LJXzs&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0&index=2) (Video tour of Blueprint-to-Stencil changes in the BigCommerce control panel)",
                          "header": {
                            "anchor": "transitionining-to-stencil_blueprint-to-stencil"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Interacting with the BigCommerce API\n\nInteracting with the BigCommerce API\nBigCommerce's growing API resources enable application developers to create private scripts or apps that support a single store, or to create public apps offered to multiple stores via BigCommerce's App Marketplace.\n\nAs a theme developer, you can rely on apps to enhance your themes' capabilities, and to extend or complement the storefront features built into the BigCommerce platform. Popular app areas include inventory management, email marketing, coupons, reviews, shipping, tax accounting, and security. For more information, see BigCommerce's:\n\n* [App Marketplace](https://www.bigcommerce.com/apps/) (BigCommerce)\n* [API Documentation](https://developer.bigcommerce.com/api-docs)",
                          "header": {
                            "anchor": "transitionining-to-stencil_interacting-with-api"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Partnering with BigCommerce\n\nNo formal business relationship is required to develop themes on the BigCommerce platform. However, consider applying to become a become a BigCommerce Agency Partner, in order to accelerate your development of new business and revenue. For details, see our:\n\n* [Overview of BigCommerce Partnerships](https://www.bigcommerce.com/partners/) (BigCommerce)\n* [Agency Partners](https://www.bigcommerce.com/partners/design-solution/) (BigCommerce)\n* [Technology Partners](https://www.bigcommerce.com/partners/developers/) (BigCommerce)\n* [Partnership Application](https://partners.bigcommerce.com/English/register_email.aspx) (BigCommerce)",
                          "header": {
                            "anchor": "transitionining-to-stencil_partnering-with-bc"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Related Articles\n* [Front-Matter Overview](https://developer.bigcommerce.com/stencil-docs/front-matter/front-matter-overview)\n* [API Documentation](https://developer.bigcommerce.com/api-docs)\n* [Editing Stencil Theme Files](https://support.bigcommerce.com/s/article/Stencil-Themes#edit) (Knowledge Base)\n* [Working with a Design Partner](https://support.bigcommerce.com/articles/Learning/Working-with-a-Design-Partner) (Knowledge Base)\n* [Theme Editor](https://support.bigcommerce.com/s/article/Stencil-Themes) (Knowledge Base)\n* [Personalizing Your Theme](https://support.bigcommerce.com/articles/Learning/Personalizing-your-New-Theme) (Knowledge Base)\n* [What to Consider When Changing Your Theme](https://support.bigcommerce.com/s/article/What-to-Consider-When-Changing-Your-Theme) (Knowledge Base)\n* [SEO Do's and Don'ts](https://support.bigcommerce.com/s/article/What-is-SEO) (Knowledge Base)\n* [Developing a Keyword Strategy](https://support.bigcommerce.com/articles/Learning/Developing-a-Keyword-Strategy/) (Knowledge Base)\n* [SEO Success Essentials](https://support.bigcommerce.com/articles/Learning/Bigcommerce-SEO-Success-Essentials/) (Knowledge Base)\n* [Advanced SEO on BigCommerce](https://support.bigcommerce.com/s/article/Advanced-SEO-on-Bigcommerce) (Knowledge Base)\n* [Guide to Keyword Research](https://support.bigcommerce.com/s/article/Value-of-Keywords) (Knowledge Base)\n* [Getting Started with the Stencil Framework](https://www.youtube.com/playlist?list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) (Video Playlist)\n* [Getting Started with the Stencil Framework](https://www.youtube.com/watch?v=waJ1dg_dAh8&index=11&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0) (Video overview of copying and editing a theme's files)\n* [Stencil and the BigCommerce Control Panel](https://www.youtube.com/watch?v=d2F6F8LJXzs&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0&index=2) (Video tour of Blueprint-to-Stencil changes in the BigCommerce control panel)\n* [Overview of BigCommerce Partnerships](https://www.bigcommerce.com/partners/) (BigCommerce)\n* [Agency Partners](https://www.bigcommerce.com/partners/design-solution/) (BigCommerce)\n* [Technology Partners](https://www.bigcommerce.com/partners/developers/) (BigCommerce)\n* [Partnership Application](https://partners.bigcommerce.com/English/register_email.aspx) (BigCommerce)\n* [App Marketplace](https://www.bigcommerce.com/apps/) (BigCommerce)\n\n### Additional Resources\n* [Learn Handlebars in 10 Minutes or Less](http://tutorialzine.com/2015/01/learn-handlebars-in-10-minutes/) (Tutorial Zine)\n* [A Beginner’s Guide to Handlebars](https://www.sitepoint.com/a-beginners-guide-to-handlebars/) (SitePoint)\n* [Getting Started with Handlebars.js](http://blog.teamtreehouse.com/getting-started-with-handlebars-js) (Team Treehouse)\n* [Handlebars interactive tutorial](http://tryhandlebarsjs.com/) (Try Handlebars)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Installing Stencil",
                    "route": {
                      "path": "/installing-stencil"
                    },
                    "data": {
                      "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/stencil-docs/getting-started/installing-stencil.md"
                    }
                  },
                  {
                    "title": "Authentication & Tokens",
                    "route": {
                      "path": "/authentication-and-tokens"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Creating an API Account to Obtain OAuth Tokens</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#authentication_creating-an-api-account\">Creating an API Account</a></li>\n    <li><a href=\"#authentication_issuing-additional\">Issuing Additional Tokens</a></li>\n    <li><a href=\"#authentication_revoking-tokens\">Revoking Tokens</a></li>\n    <li><a href=\"#authentication_copying-oauth-tokens\">Copying OAuth Tokens</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "body": "If you've successfully installed Stencil you're ready to create a BigCommerce API Account. \n_If you have not yet installed Stencil, see [Installing Stencil](/stencil-docs/getting-started/installing-stencil)._",
                            "title": "Status Check"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Creating an API Account \n\nFollow the steps below to create an API Account and obtain your OAuth Tokens.\n\n1. Using the store owner's credentials, log into the control panel of the store for which you are developing. \n\n2. From the left nav, select `Advanced Settings` > `API Accounts`.\n\n3. From the resulting Store API Accounts page, select the `Create API Account` button.\n\n4. Give your account a name that reflects its purpose.\n\n_The BigCommerce platform does not validate this name, however, we recommend naming accounts by purpose to help you keep track of which accounts you need to keep active. You should assign a name that will make the account's purpose clear to you and other store administrators._\n\n5. Under OAuth Scopes, set the Themes selector to either `modify` or `read-only`.\n\n_The read-only scope is sufficient to authorize/initialize a Stencil theme. However, the modify scope will achieve the same goal, while also authorizing this account to upload themes to the store from the command line._\n\n6. Click `Save`. \n\n_Doing so will display a modal, from which you can copy your `Client ID` and `Access Token` values. The modal will also prompt your browser to download a .txt file that contains your credentials. You will need these values to authorize and initialize your Stencil theme. If you're ready to do so now, move ahead to [Authorizing and Initializing Stencil](/stencil-docs/getting-started/launching-stencil/authorizing-and-initializing)._",
                          "header": {
                            "anchor": "authentication_creating-an-api-account"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "title": "Reserved Role",
                            "body": "Currently, only the store owner can create an OAuth API account according to the instructions below. Also, note that each store is limited to 50 accounts at a time."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Issuing Additional Tokens\n\nTo issue store tokens for additional themes or developers, repeat the process outlined in Creating an API Account.\n\n(Even if you originally initialized your theme using a legacy API [Basic-Auth] token, you will need to generate any new tokens using the new OAuth flow.)\n\nYou can create up to 50 API accounts/tokens per store. If you hit this limit and still need to create new tokens, you will need to delete existing accounts. Deleting an account will invalidate the corresponding token, which will affect any developer using that token.\n",
                          "header": {
                            "anchor": "authentication_issuing-additional"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Revoking OAuth Tokens",
                          "header": {
                            "anchor": "authentication_revoking-tokens"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "body": "Note: After completing the below process, there is no undo. The following process completely deletes the selected account(s), revoking the corresponding token(s)."
                          }
                        },
                        {
                          "type": "text",
                          "data": "If you are completely sure you would like to revoke an existing OAuth store token, delete the corresponding Store API account with the following steps:\n\n1. Navigate to the Control Panel’s API Accounts page.\n2. Select the trash-can button to the right of the account that you want to delete<sup>1</sup>."
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1537421464104"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "1. You can also use the check boxes at left to select multiple accounts to delete them all at once."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Copying OAuth Tokens \n\nTo access an existing OAuth token to authorize your theme:\n\n1. Open the `.txt` file<sup>2</sup> that the BigCommerce control panel generated when you created the API account.\n\n2. Note the Client ID and Access Token hashes in the file (or in the control-panel modal for your newly created token).\n\n3. If you are a merchant granting an outside theme developer access to your store, provide the Client ID and Access Token values to the developer. The developer will need these when [Authorizing and Initializing Stencil](/stencil-docs/getting-started/launching-stencil/authorizing-and-initializing). If you are a merchant developing a theme against your own store, you will use the same two values in the same [Authorizing and Initializing Stencil](/stencil-docs/getting-started/launching-stencil/authorizing-and-initializing) step.",
                          "header": {
                            "anchor": "authentication_copying-oauth-tokens "
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "",
                            "body": "2. If you did not retain this file, you will need to generate a new token by repeating the Creating an API Account procedure"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Running Stencil Locally",
                    "route": {
                      "path": "/running-stencil-locally"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Authorizing and Initializing Stencil",
                          "route": {
                            "path": "/authorizing-and-initializing"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Authorizing and Initializing Stencil</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#authorizing_prerequisites\">Prerequisites</a></li>\n    <li><a href=\"#authorizing_authorizing-oauth\">Authorizing with OAuth Tokens</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Prerequisites\n\nThe following are required from performing previous steps prior to authorizing and Initializing your Stencil theme:\n\n* An [API account](/stencil-docs/getting-started/authentication-and-tokens) with the Themes scope set to `read-only` or `modify`\n* a `Client ID` and `Access Token`, which are both generated when an API account is created\n\n**Note:** _`modify` access is required to run the `stencil push` command, which uploads and applies a theme to your store._",
                                "header": {
                                  "anchor": "authorizing_prerequisites"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "If you are sharing a theme across storefronts, we strongly recommend that you clone a separate subdirectory (each containing its own `.stencil` file) for each store. This helps isolate and secure each merchant's data.\n\nYou can clone your `/cornerstone/` subdirectory now to create your first isolated copy, and then switch to the resulting new subdirectory to continue. (Prior to March 2017, Stencil's default subdirectory name was `/stencil/`.)",
                                  "title": " Best Practice: Isolate Stores by Subdirectory"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Authorizing with OAuth Tokens\n\nUse these steps to authorize and initialize Stencil.\n\nUse the following steps to authorize your theme using an OAuth API account:\n\n1. Have your store API account's `Client ID` and `Access Token` hashes ready. \n(Refer back to [Authentication & Tokens](/stencil-docs/getting-started/authentication-and-tokens))\n\n2. Starting from the subdirectory for the appropriate theme (and store), initialize Stencil CLI by running the following command (_Windows users need to run this in git bash_):",
                                "header": {
                                  "anchor": "authorizing_authorizing-oauth"
                                }
                              },
                              {
                                "type": "code",
                                "data": "stencil init",
                                "config": {
                                  "mode": "shell"
                                }
                              },
                              {
                                "type": "text",
                                "data": "3. You will be prompted to provide the homepage URL of the production store against which you want to develop (for example, `https://storename.com` or `https://storename.mybigcommerce.com`). This can be your own store, or a client store that you are customizing. \n\n4. Next, you will be prompted to enter the port where you would like to run your store on your local machine. This can be any port you like, but we recommend using port 3000.\n\n5. Next, you will be prompted: `What is your Stencil OAuth Client ID?` Enter your store API account's Client ID.\n\n(If you used this Client ID when you last ran `stencil init`, you'll see it hinted on the command line, and can just confirm it.)\n\n6. Finally, you will be prompted: `What is your Stencil OAuth Access Token?` If you entered these credentials when you last ran stencil init, you'll see the token hinted in cleartext. If not, paste your `Access Token` hash onto the command line. Then press Enter.\n\nYour terminal window should now confirm that you have successfully initialized Stencil CLI on your local machine. With Stencil CLI initialized, you are ready to start Stencil and begin development."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Common Stencil CLI Pitfalls and How to Avoid Them](https://medium.com/bigcommerce-developer-blog/common-stencil-cli-pitfalls-and-how-to-avoid-them-7562dbbab793) (Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Troubleshooting Your Setup",
                          "route": {
                            "path": "/troubleshooting-your-setup"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Troubleshooting Your Setup</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#troubleshooting_unsupported\">Unsupported Node Version</a></li>\n    <li><a href=\"#troubleshooting_npm-install\"><code>npm install</code> errors</a></li>\n    <li><a href=\"#troubleshooting_npm-install-stencil-init\">npm install and stencil init Errors</a></li>\n    <li><a href=\"#troubleshooting_stencil-init\">\"stencil init/stencil start errors</a></li>\n    <li><a href=\"#troubleshooting_stencil-start-missing-module\"><code>stencil start</code>/missing module Errors</a></li>\n    <li><a href=\"#troubleshooting_uncaught\">\"Uncaught TypeError: Illegal invocation\" error</a></li>\n    <li><a href=\"#troubleshooting_mac-os\">Mac OS: \"Xcode/iOS license...\" Errors upon Stencil Commands</a></li>\n    <li><a href=\"#troubleshooting_etimeout\">ETIMEOUT Errors on Node >4.4.0</a></li>\n    <li><a href=\"#troubleshooting_stencil-command-not-found\"><code>stencil</code> command not found</a></li>\n    <li><a href=\"#troubleshooting_500-errors\">500 Errors</a></li>\n    <li><a href=\"#troubleshooting_lint-errors\">Lint Errors upon Bundling</a></li>\n    <li><a href=\"#troubleshooting_module-not-found\">\"Module Not Found\" Errors upon Bundling</a></li>\n    <li><a href=\"#troubleshooting_short\">Short or Undescriptive JavaScript Diagnostics</a></li>\n    <li><a href=\"#troubleshooting_tr-300\">TR-300 Error upon Theme Upload</a></li>\n    <li><a href=\"#troubleshooting_uninstalling\">Uninstalling and Reinstalling Stencil CLI</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "title": "First Check the Terminal Window",
                                  "body": "For any unexpected behavior that you encounter while developing your Stencil theme, first check your terminal window where you started Stencil CLI. \n\nIn some cases, the terminal will provide a verbose error message specifying where to look for problems. In any case, it has the potential to provide further insight on the issue. Diagnostic suggestions are listed on this page for error messages that may not be helpful in revealing the issue you're experiencing."
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Unsupported Node Version\n\nIf you receive the following error message, please reinstall Node.js to a supported \"LTS\" (\"Long-Term Support\") version:\n\n```\nDebug: internal, implementation, error\n        TypeError: Uncaught error: Object #<Object> has no method 'parse'\n        at internals.implementation \n        (/usr/local/lib/node_modules/stencil-cli/server/plugins/CssCompiler/index.js:32:26)\n```\n\nCurrently, we only support [Node 8](https://developer.bigcommerce.com/stencil-docs/getting-started/installing-stencil#installing_prerequisites) for stencil-cli.",
                                "header": {
                                  "anchor": "troubleshooting_unsupported"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## `npm install` Errors\n\nThe following headings represent errors that may occur when running the `npm install` command. The content under each heading issues a fix for the issue.\n\n### `Unmet Peer Dependency`\n\nIf you get any `Unmet Peer Dependency` errors when issuing the `npm install` command – or at other times – make sure you are running the `npm install` command **inside** your theme directory.\n\nIf running the `npm install ` command inside your theme directory does not resolve the error, try one of the following:\n\n* Try removing your theme directory's `/node_modules/` subdirectory, by running `rm -rf node_modules`\n\n* Run the `npm cache clean` command\n\n* Re-run `npm install`\n\n\n### Permissions (EPERM or EACCES) Error\n\nIf you get a file-permissions error such as `EPERM` or `EACCES` when issuing the `npm install` command, try one of the workarounds listed on this [external](https://docs.npmjs.com/getting-started/fixing-npm-permissions) page. \n\n### `Error loading \"js/bundle\"`\n\nIf you get errors of the following type upon executing the `stencil init` command:\n\n```\nPotentially unhandled rejection [6] TypeError: Error loading \"js/bundle\" \nat file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js\n\nError evaluating file:/Users/<username>/Desktop/Fortune-1.4.6/assets/js/bundle.js\n\nCannot read property 'createElement' of undefined...\n```\n\ntry the following workaround:\n\n1. Download and unzip a fresh copy of the theme.\n\n3. Refresh theme dependencies by running `npm install && jspm install`\n\n3. Run `stencil init`.\n\n*You will see the same error message as before, but proceed.*\n\n4. Delete the `<theme-name>/assets/js/bundle.js` file.\n\n5. Run `stencil init` again.\nThis should now execute properly.\n6. Run `stencil start`\n\n8. Verify your theme's launch at: http://localhost:3000.",
                                "header": {
                                  "anchor": "troubleshooting_npm-install"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## `npm install` and `stencil init` Errors\n\nIf you get unexpected error messages when issuing the `npm install` or `stencil init` commands, check your Node.js version and ensure it aligns with a version that is compatible for the Stencil framework.",
                                "header": {
                                  "anchor": "troubleshooting_npm-install-stencil-init"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## `stencil init`/`stencil start` Errors\n\nIf you get unexpected error messages or unexpected results upon executing the `stencil init`, `stencil start`, or other Stencil CLI commands, make sure you are working in the subdirectory for the specific theme you intend to launch. \n\nOne way of checking what directory you are working in is by running the `pwd` command in your terminal.",
                                "header": {
                                  "anchor": "troubleshooting_stencil-init"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## `stencil start`/missing module Errors\n\nIf executing `stencil start` provokes errors like the following\n\n```\nmodule.js:327\nthrow err;\n^\n\nError: Cannot find module 'webpack'\nat Function.Module._resolveFilename (module.js:325:15)\nat Function.Module._load (module.js:276:25)\nat Module.require (module.js:353:17)\nat require (internal/module.js:12:17)\nat Object. (/Users/jane.doe/themes/cornerstone/stencil.conf.js:2:15)\nat Module._compile (module.js:409:26)\nat Object.Module._extensions..js (module.js:416:10)\nat Module.load (module.js:343:32)\nat Function.Module._load (module.js:300:12)\nat Module.require (module.js:353:17)\n```\n\nswitch to your theme directory and run `npm install`. Running this command will add the missing JavaScript library dependencies.\n\nIf you receive the same error again after running `npm install`, you should completely uninstall and reinstall both the Stencil framework and Node.js.",
                                "header": {
                                  "anchor": "troubleshooting_stencil-start-missing-module"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## `Uncaught TypeError: Illegal invocation`\n\nIf you receive an `Uncaught TypeError: Illegal invocation` console error, and previously installed Stencil using the original jspm-based installation flow and later switched to our current webpack installation flow, please remove your theme's `/node_modules/` subdirectory, then re-run `npm install` inside your theme's directory.",
                                "header": {
                                  "anchor": "troubleshooting_uncaught"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Mac OS: `error: Agreeing to the Xcode/iOS license`\n\nOn Mac OS, if you have recently installed a new version of Xcode, the command line will display the following error when you next try to use or reinstall Stencil: \n\n`error: Agreeing to the Xcode/iOS license requires admin privileges, please re-run as root via sudo.`\n\nTo resolve this error, do the following:\n* Launch Xcode.\n* Accept its user agreement.\n* Quit Xcode.\n* Re-execute your Stencil command.\n",
                                "header": {
                                  "anchor": "troubleshooting_mac-os"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## `stencil` command not found\n\n### Reinstall Stencil CLI\n\nIf you receive the error message -bash: `stencil: command not found`, ensure that you have followed the steps on Installing Stencil CLI/Framework or attempt to reinstall the Stencil CLI. \n\n### Redirect Bash shell\n\nIf you receive the error message -bash: stencil: command not found, enter echo $NVM_DIR. If this command returns nothing, then run source ~/.bash_profile and try running running stencil commands again.\n\n### Check/Specify `nvm` Version\n\nIf you receive a `stencil: command not found` error message upon executing stencil start from inside your theme subdirectory: Check whether nvm has installed multiple versions of Node.js, by entering the following command:\n\n`ls ~/.nvm/versions/node`\n\nIf this reports more than one version, specify your platform's supported Node.js `<version_number>` by entering: \n\n`nvm use <version_number>`\n\nTo prevent this error from recurring, add the same `nvm use <version_number>` command to your ~/.bash_profile file.\n",
                                "header": {
                                  "anchor": "troubleshooting_stencil-command-not-found"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## `stencil start` errors\n\n### \"Unauthorized...username/token\" Error\n\nIf executing the `stencil start` command generates an `Unauthorized, please use a valid username/token` error: Please make sure that the `.stencil` file contains the correct store URL. Also, verify that you have copied the correct username and token. If you continue to get the same error, please reissue tokens.\n\n### \"Unable to load registry %bitbucket%\"\n\nIf you have downloaded and installed a Marketplace theme (other than Cornerstone), and after running stencil start, received the error `Unable to load registry %bitbucket%`: Try this workaround.\n\n1. Back up your current theme directory/directories. \n(In a default installation, the theme directory is named `.../cornerstone/`. Prior to March 2017, this directory's name defaulted to `.../stencil/`. Use the same substitutions for other code examples on this page.)\n\n2. To ensure that you install refreshed dependencies, delete your `<theme-name>/node_modules/` and `<theme-name>/assets/jspm_packages/` subdirectories. (You can check installed versions of dependencies by examining your `<theme-name>/package.json` file.)\n\n3. Starting inside your theme directory, enter this alternate sequence of commands:\n\n```\nnpm install -g jspm-git\nnpm install\njspm config registries.bitbucket.baseurl git+ssh://git@bitbucket.org/\njspm config registries.bitbucket.handler jspm-git\njspm install\n```\n\n4. Re-launch your theme."
                              },
                              {
                                "type": "text",
                                "data": "## 500 Errors\n\nIf you see errors like or _similar_ to below:\n\n`{\"statusCode\":500,\"error\":\"Internal Server Error\",\"message\":\"An internal server error occurred\"}`\n\nthey often indicate a template syntax error, such as unmatched or missing punctuation. Check your terminal window for more details.",
                                "header": {
                                  "anchor": "troubleshooting_500-errors"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Lint Errors upon Bundling\n\nIf bundling your theme triggers multiple lint errors related to the `bundle.js` file, your theme is missing the `.eslintignore` file. Please retrieve this file from the [Cornerstone repo](https://github.com/bigcommerce/cornerstone), then re-run `stencil bundle`.\n",
                                "header": {
                                  "anchor": "troubleshooting_lint-errors"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## \"Module Not Found\" Errors upon Bundling\n\nIf you see the following error when running stencil bundle, this is a past bug that has since been corrected.\n\n`[ModuleNotFoundError: Module not found: Error: Cannot resolve module 'pace' in...]`\n\nTo remove the error, please update your Cornerstone version. ",
                                "header": {
                                  "anchor": "troubleshooting_module-not-found"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Short or Undescriptive JavaScript Diagnostics\n\nIf JavaScript errors in your browser's developer tools are not reporting filenames and line numbers, try changing your `webpack.dev.js` (`webpack.conf.js` in Cornerstone < 2.0) file's' sourcemap entry from:\n\n`devtool: 'eval-cheap-module-source-map'`\n\nto:\n\n`devtool: 'eval-source-map'`\n\nThe `eval-cheap-module-source-map` option performs faster rebuilds, but omits line numbers. The `eval-source-map` option is slower, but more verbose. ",
                                "header": {
                                  "anchor": "troubleshooting_short"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## TR-300 Error upon Theme Upload\n\nIf uploading your theme triggers a TR-300 error, this can indicate an included source-map file (`bundle.js.map`) that exceeds its size limit of 5 MB. If your `bundle.js.map` exceeds that limit, the workaround is to move this file outside your theme directory before re-running `stencil bundle`. ",
                                "header": {
                                  "anchor": "troubleshooting_tr-300"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Uninstalling and Reinstalling Stencil CLI\n\nIf you encounter persistent problems in initializing or starting Stencil, you have the option of completely removing Stencil CLI and doing a fresh reinstall. You would do so as follows:\n\n1. From your command line, issue the command:\n`npm uninstall -g @bigcommerce/stencil-cli`\n\n2. Navigate back to the Installing and Launching Stencil section and repeat all installation steps to reinstall dependencies and restore your theme, according to your development scenario.\n\nA more-drastic measure is to **also** uninstall and reinstall Stencil CLI's Node.js prerequisites (along with uninstalling Stencil CLI). We do not recommend this, as it might disable other Node.js applications on your local machine.",
                                "header": {
                                  "anchor": "troubleshooting_uninstalling"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Common Stencil CLI Pitfalls and How to Avoid Them](https://medium.com/bigcommerce-developer-blog/common-stencil-cli-pitfalls-and-how-to-avoid-them-7562dbbab793) (Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "CLI Options and Commands",
                          "route": {
                            "path": "/stencil-cli-options-and-commands"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Stencil CLI Options and Commands</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil_basic-cli\">Basic CLI Options and Commands</a></li>\n    <li><a href=\"#stencil_stencil-start\">Stencil Start Options</a></li>\n    <li><a href=\"#stencil_stencil-push\">Stencil Push Options</a></li>\n    <li><a href=\"#stencil_quick\">Quick Reference</a></li>\n    <li><a href=\"#stencil_local-launch-theme\">Local Launch: Theme Only</a></li>\n    <li><a href=\"#stencil_local-launch-theme-and-editor\">Local Launch: Theme and Theme Editor</a></li>\n    <li><a href=\"#stencil_local-launch-theme-and-editor\">Local Launch: Disabling Caching</a></li>\n    <li><a href=\"#stencil_troubleshooting-token-errors\">Troubleshooting Token Errors</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Basic CLI Options and Commands\n\nThe syntax to run a basic Stencil CLI command is: `stencil <commands> [options] <parameter>`.\n\nTo see the basic options and commands that the Stencil CLI package supports, enter any of the following forms of the help option on your command line:\n\n```\nstencil\nstencil help\nstencil --help\nstencil -h\n```\n\nYour terminal window will display options and commands listed in the tables below. \n\t\n<table>\n  <tr>\n    <th>Option</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>-h, --help</td>\n    <td>Outputs usage information.</td>\n  </tr>\n  <tr>\n    <td>-V, --version</td>\n    <td>Outputs the version number (which is read from package.json file</span>).</td>\n  </tr>\n</table>\n\n<p></p>\n<table>\n\t\n  <tr>\n    <th>Command</th>\n    <th>Description</th>\n  </tr>\n\t\n  <tr>\n    <td>init</td>\n    <td >Interactively creates a .stencil file, which configures how to run a BigCommerce store locally.</td>\n  </tr>\n\t\n  <tr>\n    <td>start</td>\n    <td>Starts up the BigCommerce store, using theme files in the current directory. \n    </td>\n  </tr>\n\t\n  <tr>\n    <td>bundle</td>\n    <td>Bundles up the theme into a structured .zip file, which can be uploaded to BigCommerce. (Please see <a href=\"https://developer.bigcommerce.com/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading\">Bundling and Uploading a Theme)</a>.</td>\n  </tr>\n  \n  <tr>\n    <td>push</td>\n    <td>Bundles up the theme into a structured .zip file, then directly uploads (pushes) the .zip to BigCommerce.</td>\n  </tr>\n  \n  <tr>\n    <td>release</td>\n    <td>Creates a new release in a theme's GitHub repository. Developers outside BigCommerce can use this for forks (not master) of Stencil's Cornerstone base theme, or for their own parallel themes independent of Cornerstone.</td>\n  </tr>\n  \n  <tr>\n    <td>help &lt;command&gt;</td>\n    <td>Displays help and returns all the options available to use for the specified command. For example, <code>stencil help bundle</code> will return the options that are available to use specifically with the <code>stencil bundle</code> command.\n    </td>\n  </tr> \n\t\n</table>\n",
                                "header": {
                                  "anchor": "#stencil_basic-cli"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1538055264839",
                                "header": {
                                  "title": "Basic Stencil CLI Options and Commands"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "title": "'stencil start' and 'stencil push' Options",
                                  "body": "The `stencil start` and `stencil push` CLI Commands have additional custom options that can be used with the command, which are detailed below."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Stencil Start Options\n\nTo see Stencil CLI's additional options for the `stencil start` command (described above), enter the following on your command line:\n\n`stencil help start` \n\nYour terminal screen should read similar to the table below.\n\n<table>\n\t<tr>\n    <th>Option</th>\n    <th>Definition</th> \n\t</tr>\n  <tr>\n    <td>-V, --version</td>\n    <td>Outputs the version number</td> \n  </tr>\n  <tr>\n    <td>-o, --open</td>\n    <td>Automatically open default browser</td> \n  </tr>\n\t  <tr>\n\t\t\t<td>-v, --variation [name]</td>\n\t\t\t<td>Set which theme variation to use while developing</td> \n  </tr>\n\t  <tr>\n\t\t\t<td>-t, --test</td>\n\t\t\t<td>Enable QA mode which will bundle all javascript for speed to test locally</td> \n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>--tunnel</td>\n\t\t\t<td>Create a tunnel URL which points to your local server which anyone can use</td> \n\t\t</tr>\n\t  <tr>\n\t\t\t<td>-e, --theme-editor</td>\n\t\t\t<td>Run Theme Editor server</td> \n  </tr>\n\t  <tr>\n    <td>-n, --no-cache</td>\n    <td>Turns off caching for API resource data per storefront page. The cache lasts for 5 minutes before automatically refreshing.</td> \n  </tr>\n\t  <tr>\n\t\t\t<td>--theme-editor-port [port]</td>\n\t\t\t<td>Run the Theme Editor on a different port</td> \n  </tr>\n\t  <tr>\n\t\t\t<td>-h, --help</td>\n\t\t\t<td>output usage information</td> \n  </tr>\n</table>\n",
                                "header": {
                                  "anchor": "#stencil_stencil-start"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Stencil Push Options\n\nTo see Stencil CLI's additional options for the stencil push command (described above), enter the following on your command line:\n\n`stencil help push`\n\nYour terminal screen should read similar to the table below.\n\n<table>\n\t<tr>\n    <th>Option</th>\n    <th>Definition</th> \n\t</tr>\n  <tr>\n    <td>-V, --version</td>\n    <td>outputs the version number</td> \n  </tr>\n  <tr>\n    <td>--host [hostname]</td>\n    <td>specify the API host (default: https://api.bigcommerce.com)</td> \n  </tr>\n\t  <tr>\n\t\t\t<td>-f, --file [filename]</td>\n\t\t\t<td>specify the filename of the bundle to upload</td> \n  </tr>\n\t  <tr>\n\t\t\t<td>-s, --save [filename]</td>\n\t\t\t<td>specify the filename to save the bundle as</td> \n\t\t</tr>\n\t\t<tr>\n\t\t\t<td>-a, --activate [variationname]</td>\n\t\t\t<td>This will skip the prompts that normally come up asking if you would like to activate the theme and to specify a variation.\n\nYou can either specify the variation name after the flag or leave it blank to select the first variation (Light for Cornerstone).</td> \n\t\t</tr>\n\t  <tr>\n\t\t\t<td>-h, --help</td>\n\t\t\t<td>Output usage information.</td> \n\t\t</tr>\n</table>",
                                "header": {
                                  "anchor": "stencil_stencil-push"
                                }
                              },
                              {
                                "type": "text",
                                "data": "You can use the `-f` or `--filename` option in cases where you have already run `stencil bundle` to bundle your theme, but the resulting .zip file has not yet uploaded to BigCommerce. Use the generated .zip file's **filename** as a parameter to identify the generated file in your theme directory. An example of the command is outlined below.\n\n`stencil push -f Cornerstone-2.3.2.zip`\n\nIn this example, `Cornerstone-2.3.2.zip` is the name of the file that was generated after running `stencil bundle`.\n\nWhen you run `stencil push` with the `-f` or `--filename` option, Stencil CLI skips all its bundling steps and diagnostics. It proceeds directly to uploading the specified file, displaying its processing progress bar to show upload status.\n\n"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Theme Editor Local Launch Quick Reference\n\n<table> \n\t<tr>\n\t\t<th>Launch type</th>\n\t\t<th>Command</th>\n\t\t<th>Theme Port URL</th>\n\t\t<th>Theme Editor Port URL</th>\n\t</tr>\n\t<tr>\n\t\t<td>Theme Only</td>\n\t\t<td><code>stencil start</code></td>\n\t\t<td>http://localhost:3000 (or custom \n\t\tport)</td>\n\t\t<td>N/A</td>\n\t</tr>\n\t<tr>\n\t\t<td>Theme, Theme Editor</td>\n\t\t<td><code>stencil start -e</code>\n\t\t</td>\n\t\t<td>http://localhost:3000 (or custom \n\t\tport)</td>\n\t\t<td>http://localhost:8181</td>\n\t</tr>\n\t<tr>\n\t\t<td>Theme <b>and</b> Theme Editor \n\t\t</td>\n\t\t<td><code>stencil start -e --theme-\n\t\teditor-port 9000</code></td>\n\t\t<td>http://localhost:3000 (or custom \n\t\tport)</td>\n\t\t<td>http://localhost:9000\n(#### = custom port)</td>\n\t</tr>\n",
                                "header": {
                                  "anchor": "stencil_quick"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Local Launch: Theme Only\n\nAfter initializing Stencil, issue the following command in your theme directory (_Windows users need to run this in git bash_):\n\n`stencil start`\n\nWhen you navigate to your designated port (e.g `http://localhost:3000`), you should see the storefront you selected with the local Stencil theme applied.",
                                "header": {
                                  "anchor": "stencil_local-launch-theme"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Local Launch: Theme and Theme Editor\n\nIf you want to view or reconfigure the Theme Editor/Store Design settings, you can run Stencil locally while also launching a local version of Theme Editor. This will help you see the UX changes that result from editing the `schema.json` file. \n\nTo run Stencil locally while also launching a local version of Theme Editor, start in your theme directory and run the same command as above (`stencil start`), but append the `-e` option:\n\n`stencil start -e`\n\nThe Theme Editor server will run in parallel with the stencil theme at [http://localhost:8181](http://localhost:8181/).\n\n### Customizing Theme Editor's Port\n\nYou can override Theme Editor's default port by appending the \"--theme-editor-port [port]\" option. For example, to specify port `9000`, you would enter:\n\n`stencil start -e --theme-editor-port 9000\n`\n\nTo verify Theme Editor's launch, you would then go to http://localhost:9000. Using this option, you can specify any port between `1024` and `65535`.",
                                "header": {
                                  "anchor": "stencil_local-launch-theme-and-editor"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Local Launch: Disabling Caching\n\nBy default, Stencil caches API resource data per storefront page. This minimizes server traffic while you develop your theme locally.\nIf you prefer to see your changes reflected immediately from your live store, you can turn off caching by appending the `--no-cache` or `-n` option:\n\n`stencil start --no-cache`\n`stencil start -n`\n\n### To re-enable caching:\n\nKill the current Stencil server (_ctrl + c will do the job_) and restart Stencil, this time omitting the `--no-cache` or `-n` option.\n\n`stencil start` \n",
                                "header": {
                                  "anchor": "stencil_disabling"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Troubleshooting Token Errors\n\nIf you receive the following error message, \n\n`Unauthorized, please use a valid username/token`\n\nthen store token authentication has failed.\n\nIn this case, please track back and review the following articles:\n\n* [Authentication & Tokens](https://developer.bigcommerce.com/stencil-docs/getting-started/authentication-and-tokens): How to issue or reissue tokens in the BigCommerce control panel.\n* [Authorizing and Initializing Stencil](https://developer.bigcommerce.com/stencil-docs/getting-started/running-stencil-locally/authorizing-and-initializing): How to initialize Stencil with your username and token"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Authorizing and Initializing Stencil](https://developer.bigcommerce.com/stencil-docs/getting-started/running-stencil-locally/authorizing-and-initializing)\n* [Creating an API Account to Obtain OAuth Tokens](https://developer.bigcommerce.com/stencil-docs/getting-started/authentication-and-tokens)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Cornerstone File Structure",
                          "route": {
                            "path": "/cornerstone-file-structure"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Cornerstone File Structure</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#cornerstone_templates-pages\">templates/pages</a></li>\n    <li><a href=\"#cornerstone_templates-components\">templates/components</a></li>\n    <li><a href=\"#cornerstone_templates-layouts\">templates/layouts</a></li>\n    <li><a href=\"#cornerstone_assets\">assets/</a></li>\n    <li><a href=\"#cornerstone_lang\">lang/</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Cornerstone is the base Stencil theme, and serves as the default theme for all newly initialized local storefronts. Cornerstone provides the standard file structure, base design pattern, and default file assets necessary to start developing a custom storefront experience.\n\nThe Cornerstone file structure consists of four main subdirectories, which are detailed below.",
                                "header": {}
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## template/pages\n<span class=\"fp\">templates/pages</span> contains all the base template pages used in a BigCommerce Stencil storefront. The pages are grouped by page category.  For details, see [Pages Subdirectory](/stencil-docs/template-files/templates-directory/pages-subdirectory).",
                                "header": {
                                  "anchor": "cornerstone_templates-pages"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "title": "Prevent Rendering Errors ",
                                  "body": "In order to prevent any rendering errors, avoid changing the html file names in the <span class=\"fp\">template/pages</span> directory."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## template/components\nThe <span class=\"fp\">templates/components</span> directory consists of code snippets and partials that can be reused throughout your theme. This components directory is grouped by component type. For details, see [Components Subdirectory](/stencil-docs/template-files/templates-directory/components-subdirectory).",
                                "header": {
                                  "anchor": "cornerstone_templates-components"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## template/layout\nThe <span class=\"fp\">templates/layout</span> directory defines the overall structure (header, footer, etc.) for your storefront. Within this directory, you can create multiple layouts for different use cases, making it easy to switch between different variations for the same theme. For details, see [Layout Subdirectory](/stencil-docs/template-files/templates-directory/layout-subdirectory).",
                                "header": {
                                  "anchor": "cornerstone_templates-layouts"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## assets/\n<span class=\"fp\">assets/</span> (images, CSS and JavaScript files) will be located in this directory. For details, see [Assets Directory](/stencil-docs/css-and-design-assets/assets-directory).",
                                "header": {
                                  "anchor": "cornerstone_assets"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## lang/\n<span class=\"fp\">lang/</span> contains translation files, including the required <span class=\"fn\">en.json</span>. For details, see [Internationalization/Localization](/stencil-docs/internationalization-and-localization/localizing-stores)\n\nWhen developing in your local environment, all files that you change in your Stencil theme directory (<span class=\"fp\">/cornerstone/</span> in our default installation) will be reflected immediately at `http://localhost:3000`.\n",
                                "header": {
                                  "anchor": "cornerstone_lang"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Pages Subdirectory](/stencil-docs/template-files/templates-directory/pages-subdirectory)\n* [Components Subdirectory](/stencil-docs/template-files/templates-directory/components-subdirectory)\n* [Layout Subdirectory](/stencil-docs/template-files/templates-directory/layout-subdirectory)\n* [Assets Directory](/stencil-docs/css-and-design-assets/assets-directory)\n* [Localizing Stores](/stencil-docs/internationalization-and-localization/localizing-stores)"
                              }
                            ]
                          }
                        }
                      ],
                      "blocks": []
                    }
                  },
                  {
                    "title": "Advanced Installation Options",
                    "route": {
                      "path": "/advanced-installation-options"
                    },
                    "data": {
                      "blocks": [],
                      "children": [
                        {
                          "title": "Navigating Your Setup Scenario",
                          "route": {
                            "path": "/navigating-your-setup-scenario"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Navigating Your Setup Scenario</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#navigating_illustration\">Illustration of Stencil's Setup Options</a></li>\n    <li><a href=\"#navigating_initial\">Intial Cornerstone Setup</a></li>\n    <li><a href=\"#navigating_download-and-install\">Download and Install a New Version of Cornerstone</a></li>\n    <li><a href=\"#navigating_download-marketplace\">Download a Marketplace Theme</a></li>\n    <li><a href=\"#navigating_implementing-custom-build\">Implementing a Custom Build System</a></li>\n    <li><a href=\"#navigating_blueprint-store\">Blueprint Store Launched Before January 26th, 2016</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "success",
                                  "title": "Notes on Dependencies",
                                  "body": "Our installation instructions have been tested on Mac OS X Yosemite, Linux/Ubuntu v.14.04.4, and Windows. Dependencies for other platforms/releases will be added upon further testing.\n"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Illustration of Stencil's Setup Options\n\nThe diagram below visually illustrates _all_ currently supported workflows for setting up a Stencil theme. You will choose one pathway to setup Stencil for your store. The color codes for each setup scenario are as follows: \n\n* [Black arrows: Initial setup with the default Cornerstone theme.](#navigating_initial)\n\n* [Orange arrows: Refresh Cornerstone from Theme Marketplace.](#navigating_cornerstone-refresh)\n\n* [Purple arrows: Customize a theme (_other than_ Cornerstone) downloaded from Theme Marketplace.](#navigating_download-marketplace)\n\n* [Green arrows: Configure a custom JavaScript build system](#navigating_implementing-custom-build).\n\n* [Blue arrows: Adds onto any of the preceding four scenarios. If developing for a BigCommerce Blueprint production store launched before Jan. 26, 2016, you must add one extra step to enable Stencil in the store's control panel.](#navigating_blueprint-store)",
                                "header": {
                                  "anchor": "navigating_illustration"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1538540242143",
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "title": "Detailed Steps Described Below",
                                  "body": "Continue reading to get a detailed description and breakdown of the steps required for each setup scenario."
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Initial Cornerstone Setup \n\nThis is the workflow to start developing based on BigCommerce's default Cornerstone theme. This workflow uses Webpack as the JavaScript build system. Steps required:\n\n* [Install your necessary prerequisites](/stencil-docs/getting-started/installing-stencil#installing_prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-stencil#installing_installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-stencil#installing_cloning-cornerstone)\n* [Install JavaScript Utilities](/stencil-docs/getting-started/installing-stencil#installing_installing-stencils-js-utilities)\n* [Create an API Account to prepare store and tokens](/stencil-docs/getting-started/authentication-and-tokens#authentication_creating-an-api-account)\n\n\nOnce you have completed these steps, proceed to the _Launching Stencil_ section.",
                                "header": {
                                  "anchor": "navigating_initial"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Download and Install a New Version of Cornerstone \n\nIf you would like to download and install a **new** version of Cornerstone from BigCommerce's Theme Marketplace, perform the following steps:\n\n* Ensure all necessary prerequisites are installed\n* [Ensure Stencil CLI is installed](/stencil-docs/getting-started/installing-stencil#installing_installing-the-stencil-cli)\n* [Download a new Cornerstone .zip file](/stencil-docs/getting-started/advanced-installation-options/downloading-the-cornerstone-theme#downloading_downloading-cornerstone-zip)\n* [Reinstall JavaScript Utilities](/stencil-docs/getting-started/installing-stencil#installing_installing-stencils-js-utilities)\n* Repeat steps in _Launching Stencil_",
                                "header": {
                                  "anchor": "navigating_download-and-install"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Download a Marketplace Theme \n\nIf you would like to customize a theme _other than_ Cornerstone, follow the required steps to download a theme from BigCommerce's Theme Marketplace. This workflow requires BitBucket. Some earlier theme versions will also require additional steps for the jspm JavaScript build system. Steps required:\n\n* [Install all necessary prerequisites](/stencil-docs/getting-started/installing-stencil#installing_prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-stencil#installing_installing-the-stencil-cli)\n* [Set up BitBucket and Download the Marketplace theme's .zip file](/stencil-docs/getting-started/advanced-installation-options/downloading-a-marketplace-theme#downloading_setting-up-bitbucket)\n* [Install JavaScript Utilities within the Marketplace Theme](/stencil-docs/getting-started/installing-stencil#installing_installing-stencils-js-utilities)\n* [Create an API Account to Prepare Your Store and Tokens](/stencil-docs/getting-started/authentication-and-tokens#authentication_creating-an-api-account)\n* Complete the steps outlined in _Launching Stencil_",
                                "header": {
                                  "anchor": "navigating_download-marketplace"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Implement a Custom JavaScript Build System \n\nThe Stencil framework currently uses Webpack 4 as its default Javascript Build system (jspm for older versions), but if you prefer, you can substitute this for a custom JavaScript build system such as Grunt. Steps recommended:\n\n* [Install all necessary prerequisites](/stencil-docs/getting-started/installing-stencil#installing_prerequisites)\n* [Install Stencil CLI](/stencil-docs/getting-started/installing-stencil#installing_installing-the-stencil-cli)\n* [Clone the Cornerstone theme using Github](/stencil-docs/getting-started/installing-stencil#installing_cloning-cornerstone)\n* [Install JavaScript Utilities](/stencil-docs/getting-started/installing-stencil#installing_installing-stencils-js-utilities)\n* [Configure your custom build system](/stencil-docs/getting-started/advanced-installation-options/configuring-webpack-or-custom-build)\n* [Create an API Account to Prepare Your Store and Tokens](/stencil-docs/getting-started/authentication-and-tokens)\n* Proceed to _Launching Stencil_",
                                "header": {
                                  "anchor": "navigating_implementing-custom-build"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Blueprint Store Launched before January 26th, 2016\n\nIf your store is **both**:\n* running on a Blueprint theme\n* was launched before Jan. 26th, 2016 \n\nand you would like to enable Stencil development on it, you must perform the following steps:\n\n* Follow the installation path above that corresponds to your development scenario\n* Enable Stencil in the store’s control panel",
                                "header": {
                                  "anchor": "navigating_blueprint-store"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Downloading a Marketplace Theme from the BigCommerce Control Panel](https://developer.bigcommerce.com/stencil-docs/getting-started/advanced-installation-options/downloading-a-marketplace-theme)\n* [Configuring Webpack or a Custom Build System](https://developer.bigcommerce.com/stencil-docs/getting-started/advanced-installation-options/configuring-webpack-or-custom-build)\n* [Installing Stencil](https://developer.bigcommerce.com/stencil-docs/getting-started/installing-stencil)\n* [Creating an API Account to Obtain OAuth Tokens](https://developer.bigcommerce.com/stencil-docs/getting-started/authentication-and-tokens)\n* [Downloading the Cornerstone Theme from the BigCommerce Control Panel](https://developer.bigcommerce.com/stencil-docs/getting-started/advanced-installation-options/downloading-the-cornerstone-theme)\n"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Downloading the Cornerstone Theme",
                          "route": {
                            "path": "/downloading-the-cornerstone-theme"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Downloading the Cornerstone Theme from the BigCommerce Control Panel</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#downloading_backup-before-reinstalling\">Back Up Before Reinstalling</a></li>\n    <li><a href=\"#downloading_downloading-cornerstone-zip\">Downloading the Cornerstone .zip file</a></li>\n    <li><a href=\"#downloading_reinstalling-dependencies\">Reinstalling Dependencies and Relaunching</a></li>\n    <li><a href=\"#downloading_next-steps\">Next Steps</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Back Up Before Reinstalling\nIf you are reinstalling over a base theme on which you have already begun development, first back up at least your theme's .stencil file. This file contains your store URL, your BigCommerce username and access tokens, and other basic settings. Preserving those settings will speed up initializing and launching the new version. To allow complete rollback, back up your whole theme directory. (In a current default installation, this directory is named `cornerstone`. Prior to March 2017, this directory's name defaulted to `stencil`).",
                                "header": {
                                  "anchor": "downloading_backup-before-reinstalling\""
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "error",
                                  "title": "Back Up Your Themes",
                                  "body": "Remember to back up your .stencil file to speed up launching a new version of the theme."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Downloading the Cornerstone .zip file from the Control Panel\n\n### Prerequisites\n* If you have not yet added Cornerstone to your store, navigate to `Storefront` > `Themes Marketplace` and add the Cornerstone theme to your store.\n\nThe steps below are required only if you are downloading a clean copy of Stencil's default Cornerstone theme, specifically from the BigCommerce Theme Marketplace. If you are downloading a Marketplace theme other than Cornerstone for customization, you must follow the workflow outlined in [Downloading a Marketplace Theme](https://developer.bigcommerce.com/stencil-docs/getting-started/advanced-installation-options/downloading-a-marketplace-theme).\n\n\n1. Go to `Storefront` > `My Themes`.\n2. Click the Cornerstone theme's thumbnail:\n\t* If Cornerstone is the store's currently active theme, click its image thumbnail at the top of the page, under the `Current Theme` heading.\n\t* If Cornerstone is _not_ the current theme, scroll down below the lower My Themes subheading, find, and click the Cornerstone thumbnail.\n\nThe Cornerstone theme's description should zoom to full-page and display a Theme Options drop-down list at the upper right.\n\n3. From the `Theme Options` drop-down list, select `Download theme file` to download this Cornerstone release as it was refreshed on Theme Marketplace. \n4. Unpack the zipped theme to a working directory. This can either be the directory where you have been developing your theme or a new directory.",
                                "header": {
                                  "anchor": "#downloading_downloading-cornerstone-zip"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Reinstalling Dependencies and Relaunching\n\n* Ensure that your theme includes all current dependencies by repeating the [Stencil Utils installation.](https://developer.bigcommerce.com/stencil-docs/getting-started/installing-stencil#installing_installing-stencils-js-utilities) \n\n* To relaunch, repeat the steps listed in the _Launching Stencil_ section.\n",
                                "header": {
                                  "anchor": "#downloading_reinstalling-dependencies"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Next Steps\n\nWhen you are ready to upload your custom theme to a store, follow the instructions in [Bundling and Uploading a Theme](https://developer.bigcommerce.com/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading).",
                                "header": {
                                  "anchor": "#downloading_next-steps"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Distribution of Cornerstone-based themes is subject to BigCommerce's Cornerstone license, including the mandatory incorporation of BigCommerce's copyright statement.",
                                  "title": "Distribution of Cornerstone-based Themes",
                                  "type": "error"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Downloading a Marketplace Theme from the BigCommerce Control Panel](https://developer.bigcommerce.com/stencil-docs/getting-started/advanced-installation-options/downloading-a-marketplace-theme)\n* [Bundling and Uploading a Theme\n](https://developer.bigcommerce.com/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading)\n* [Installing Stencil](https://developer.bigcommerce.com/stencil-docs/getting-started/installing-stencil)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Downloading a Marketplace Theme",
                          "route": {
                            "path": "/downloading-a-marketplace-theme"
                          },
                          "data": {
                            "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/stencil-docs/getting-started/advanced-installation-options/downloading-a-marketplace-theme.md"
                          }
                        },
                        {
                          "title": "Theme Updates & Version Control",
                          "route": {
                            "path": "/theme-updates-and-version-control"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Theme Updates and Version Control</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#theme-updates_customizing\">Customizing Strategically for Easier Updates</a></li>\n    <li><a href=\"#theme-updates_goruck-best-pracs\">GoRuck's Best Practices for Handling Theme Updates</a></li>\n    <li><a href=\"#theme-updates_synchronizing-cornerstone\">Synchronizing Your Theme With Cornerstone's Updates</a></li>\n    <li><a href=\"#theme-updates_synchronizing-multiple\">Synchronizing Updates for Multiple Themes</a></li>\n    <li><a href=\"#theme-updates_preserving_client_changes\">Preserving a Client's Theme Setting Changes</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "title": "Distributed Version Control via Git",
                                  "body": "Many techniques discussed below rely on GitHub's _distributed version control_ model and features. For the underlying principles, please see [Git's own documentation](https://git-scm.com/book/en/v2/Getting-Started-About-Version-Control)."
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Customizing Strategically for Easier Updates\n\nIn order to keep your store and Stencil theme performant, it's crucial to know the best way to set up your customized Stencil theme in order to smoothly incorporate future bug fixes, enhancements, and updates that are applied to the base theme. ",
                                "header": {
                                  "anchor": "theme-updates_customizing"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## GoRuck's Best Practices for Handling Theme Updates\n\nThe guidelines provided are from Web Developement team from the BigCommerce client, [GoRuck](https://www.goruck.com/). \n\nGoRuck's scenario addresses maintaining a single custom theme that is based on a third-party Marketplace theme (a theme other than Cornerstone). These guidelines can also apply to maintaining a custom theme based on Stencil's default Cornerstone theme.\n\n### Handling and Managing Theme Updates\n\n_We've made significant changes to our theme, and one principle that I've found successful is isolating my changes as much as possible. I try to put my changes into their own files, whether they're changes to templates, JavaScript, or SCSS._\n\n_I also name all my files, CSS classes and identifiers, and JavaScript methods and classes with a `gr-` prefix (as an abbreviation for our company, GORUCK LLC). Also, any changes I make to standard theme files are identified with a comment, such as:_\n\n`//Go Ruck Customization`\n\t\t\n_For example, I have a file in `assets/scss/` named `gr-theme.scss`. All of the styles I've added to the theme are either in this file, or imported by this file. So for styling, my only changes to the theme itself are in a handful of places where I had to change an existing theme style (identified with a comment), plus this one line in `templates/layout/base.html`:_\n\n`{{{stylesheet '/assets/css/gr-theme.css'}}}`\n\n_I've found that this approach provides several advantages:_\n\n* It makes it easier to distinguish my custom code from code supplied by the default theme.\n* It makes it less likely that my code will get intermingled with the standard theme code. This, in turn, prevents my code from unexpectedly being affected by theme updates.\n* It makes it easier to merge base-theme updates into my theme code.\n\n### Comparing and Merging Theme Updates\n\n_Having isolated my changes as much as I can, I identify theme changes and updates by comparing base themes, rather than by comparing base themes to my customized theme. When a new version of the theme is released, I download the `.zip` file from the BigCommerce Control Panel._\n\n_I then use a desktop diff tool (Beyond Compare) to \ncompare the new version to the .zip file of the theme's previous release. I ignore changes in the .zip file's\n `meta/` and `parsed/` folders, and to its `manifest.json`, and do a `Compare Contents` on the rest of the files._\n\nUltimately, I need to examine the changes carefully, to identify any changes that might affect, or be affected by, my customizations. And I need to test thoroughly. But comparing the stock themes to each other reduces the number of changes I have to examine. \n\nAlso, because I isolate my changes, most of the theme changes can be copied directly into the corresponding file in my customized theme. In practice, this means that I can limit my testing to the areas affected by changes in the standard theme, rather than having to re-test all my own changes.\n\nI personally find that it is also helpful to migrate *every* theme update into my customized version, as the update is released. If I were to wait, and to allow changes to accumulate and become more substantial, I think it would be more difficult to adequately test – and correctly integrate – the changes. Similarly, I'm grateful to the developer of our base theme (Pixel Union) for updates that have always made small, incremental changes.\n\n### Dynamic Content Injection\n\n_We've also come up with a variety of techniques for dynamically placing content on a page. For example, we can dynamically add tabs to a product page, using content stored on our WebDAV. Similarly, we can inject content from an external file into the body of a page. This allows us to put something that appears in many places, like a sizing chart, in a single place where it can be easily updated._\n\n_Or, we can use the BigCommerce control panel's various HTML editors – for Products, Categories, and Content > Web Pages – to inject content into predefined \"dropzones\" (custom div's). This allows us to generate a wide variety of content pages using a single custom template._\n\nAll of these techniques minimize the complexity of merging base-theme updates into our customized theme. For further details and examples on how we implement these techniques, see [Dynamic Content Rendering on Stencil Storefronts](/stencil-docs/conditional-logic-examples/dynamic-content-rendering).",
                                "header": {
                                  "anchor": "theme-updates_goruck-best-pracs"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Synchronizing Your Theme With Cornerstone's Updates\n\nThis section addresses two methods that will allow you to keep your customized Stencil theme up to date with Cornerstone's updates, enhancements, and bug fixes:\n\n* Updating Lightly Customized Themes\n* Updating Heavily Customized Themes\n\nWe've adapted these tips from one a Stencil theme developer who is an active member of the BigCommerce Community.\n\n### Updating Lightly Customized Themes\n\nIn this scenario, you can use Git's cherry-pick option to merge in specific Cornerstone commits.\n\nUse the Stencil Framework Release Notes to look up specific updates' commit hashes on the Cornerstone repository.\n\nSee [this explanation of how to use the cherry-pick option](https://stackoverflow.com/questions/9339429/what-does-cherry-picking-a-commit-with-git-mean) (Stack Overflow).\n\n### Updating Highly Customized Themes\n\nHere, unexpected errors from automatic merges can be time-consuming to undo. So, consider this handtooled approach:\n\nUse GitHub's Web interface to inspect each Cornerstone commit (change) of interest. Each commit will show you – for all changed files – a diff view highlighting any deletions (left/red) and any insertions (right/green).\n\nFor changes that you want to incorporate into your theme, access the source code.\n\nAs illustrated below, you can either access individual files via Github's Raw view, or you can download a .zip of the whole Cornerstone repo in order to access all files locally.\n\nManually edit the changes into your theme's affected files.\n\n### Accessing Individual Files\n\nIn the file-by-file approach: For each commit that you would like to incorporate into your custom theme, do the following for each of the commit's changed files.\n\nIn GitHub's diff view, click the View button at the upper right. (We show it highlighted with a red border and a tooltip.) You will see the file's full contents, as shown below.\n\nClick the Raw button at the upper right (which we show highlighted in red). This will reveal the file's full contents as plaintext – allowing you to copy and paste without picking up the table metadata used to display line numbering.\n\n### Downloading the Cornerstone Repository\n\nThis approach downloads all theme files at once, allowing you to copy/paste their relevant contents locally.\n\n1. Navigate to the [Cornerstone Github Repository](https://github.com/bigcommerce/cornerstone).\n2. On the right hand side of the page, click the green `Clone or download` button, and select Download ZIP.",
                                "header": {
                                  "anchor": "theme-updates_synchronizing-cornerstone"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Synchronizing Updates for Multiple Themes\n\nThese tips run from simpler to more-complex scenarios, with a similar progression from simpler to more-complex tools.\n\n### Enlist Your Clients in Future-Proofing\nWarn your clients that editing their themes' .html files (via Edit Theme Files) will complicate future theme upgrades. Ask clients to keep a record of such changes, so that when you release a theme update, they can reapply their changes themselves.\n\n### Max Out Variations\nFor very simple theme differences (like changing color values), you can maintain a different theme variation per storefront or use case. Given Stencil's limit of four variations per theme, this approach obviously has limited scalability.\n\n### Customize Outside the Theme\nRely as much as possible on dynamic aspects of the BigCommerce control panel, like the Footer Scripts editor. (Control‑panel customizations are saved per store, without complicating your theme's codebase.) For other examples of control-panel options, please see Dynamic Content Injection above.\n\n### Use Conditional Logic within Master Templates\nFor subtle changes to a portion of a template file, use Handlebars helpers and conditionals to render different HTML for each client's flavor of the theme.\n\n### Parallel GitHub Repo's\nWhere different clients' theme flavors diverge into completely custom pages – for example, each client has a wildly different homepage layout – Git's systematic version control helps. You will probably want to fork or branch separate repo's, one per client, and maintain/update them in parallel.\n\nAs with relying on theme variations, this approach has limited scalability. Beyond a certain number of clients/themes (certainly by 10), it becomes cumbersome.\n\n### Buffered Updates to Multiple Themes\nFor greater scalability, you might choose to create your own master fork/branch of Cornerstone for your group of themes. Keep that fork/branch in sync with Cornerstone updates, then cascade the updates to theme-specific repo's that you fork/branch from this master. (This extends the approach of isolating customizations, outlined above.)",
                                "header": {
                                  "anchor": "theme-updates_synchronizing-multiple"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Preserving a Client's Theme Setting Changes\n\nOnce a client installs a theme, they are able to configure the theme's settings in **My Themes** > **Customize** within their BigCommerce control panel. These settings are stored in the theme's `config.json`. A client's changes to these settings will be inadvertently reverted if a developer pushes an update to the theme without first merging the changes into their local development copy of the theme. As such, we recommend developers download a fresh copy of the client's theme and merge in any changes made to `config.json` before pushing theme updates to the client's site.",
                                "header": {
                                  "anchor": "theme-updates_preserving_client_changes"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Configuring Webpack or a Custom Build System",
                          "route": {
                            "path": "/configuring-webpack-or-custom-build"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Configuring Webpack or a Custom Build System</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#configuring_webpack-jspm-other\">Webpack, jspm, or Other JavaScript Managers</a></li>\n    <li><a href=\"#configuring_webpack-specific\">Webpack-Specific Configuration</a></li>\n    <li><a href=\"#configuring_build-system\">Build-System Configuration File</a></li>\n    <li><a href=\"#configuring_watched-folders\">Watched Folders: watchOptions Object</a></li>\n    <li><a href=\"#configuring_javascript-rebundling\">JavaScript Rebundling: development Function</a></li>\n    <li><a href=\"#configuring_theme-packaging\">Theme Packaging: production Function</a></li>\n\t</ul>\n</div>\n\n\n\n\n"
                              },
                              {
                                "type": "text",
                                "data": "## Webpack, jspm, or Other JavaScript Managers\n\nStencil themes are Node.js applications, and therefore contain dependencies on other JavaScript libraries. For the default Cornerstone theme, we provide the [Webpack](https://webpack.js.org/) build manager to handle these dependencies. \n\nAs you develop and customize a theme based on Cornerstone, you have option to reconfigure Webpack's watched folders, and to even substitute a different build system. These options are explained below.\n\nAll themes in the BigCommerce Theme Marketplace use Webpack. However, older versions of certain themes used the jspm JavaScript dependency manager instead of Webpack. Please see this page to determine (by version number) whether you are developing based on one of these earlier versions, and to find the required jspm setup procedures.",
                                "header": {
                                  "anchor": "configuring_webpack-jspm-other"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "info",
                                  "body": "The steps below are required only if you plan to modify or override the default Webpack-based workflow that installs with Stencil's default Cornerstone theme or and current theme in the BigCommerce Theme Marketplace. If you do not require these advanced configuration options, you can safely skip this page.",
                                  "title": "Optional Workflow"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Webpack-Specific Javascript Diagnostics\n\nThe following Webpack configuration options can aid in troubleshooting.\n\nIf JavaScript errors in your browser's developer tools are not reporting filenames and line numbers, try changing your `webpack.*.js` file(s)' [sourcemap](https://webpack.js.org/guides/build-performance/#devtool) entry from:",
                                "header": {
                                  "anchor": "configuring_webpack-specific"
                                }
                              },
                              {
                                "type": "code",
                                "data": "devtool: 'source-map'",
                                "header": {
                                  "subtitle": "webpack.common.js"
                                },
                                "config": {
                                  "mode": "js"
                                }
                              },
                              {
                                "type": "text",
                                "data": "to"
                              },
                              {
                                "type": "code",
                                "data": "devtool: 'eval-source-map'",
                                "header": {
                                  "subtitle": "webpack.common.js"
                                },
                                "config": {
                                  "mode": "js"
                                }
                              },
                              {
                                "type": "text",
                                "data": "The `eval-source-map` option is slower, but more verbose. This [Webpack Devtool Configuration](https://webpack.js.org/configuration/devtool/) article provides an overview of all devtool options and details regarding each."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Build-System Configuration File\n\nTo take advantage of automatic JavaScript bundling and browser refresh, Stencil themes require the [`stencil.conf.js`](https://github.com/bigcommerce/cornerstone/blob/master/stencil.conf.js) file. If you would like to enable a custom build system, you will need to edit this file.\n\nWithin `stencil.conf.js`, Stencil CLI looks for the exported `watchOptions` object, and `development` and `production` callbacks, shown below. \n\nContinue reading to take a closer look at each of these three references.",
                                "header": {
                                  "anchor": "configuring_build-system"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Watched Folders: watchOptions Object\n\nThe `watchOptions` object defines directories for the [Browsersync](https://browsersync.io/docs) preview engine to watch or ignore, in two respective lists. You are free to edit these lists:",
                                "header": {
                                  "anchor": "configuring_watched-folders"
                                }
                              },
                              {
                                "type": "code",
                                "data": "var watchOptions = {\n    // If files in these directories change, reload the page.\n    files: [\n        '/templates',\n        '/lang'\n    ],\n\n    //Do not watch files in these directories\n     ignored: [\n        '/assets/scss',\n        '/assets/less',\n        '/assets/css',\n        '/assets/dist',\n    ]\n};",
                                "config": {
                                  "mode": "js"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### JavaScript Rebundling: `development` Function\n\nUpon the command-line instruction `stencil start`, Stencil CLI will look for and call the `development` function. \n\nIn the base Cornerstone theme, we have created a Webpack watcher to trigger a browser reload whenever theme edits cause JavaScript to be rebundled to the theme's `bundle.js` file. This watcher uses options configured in the `webpack.common.js` (`webpack.conf.js` in Cornerstone versions < 2.0) file passed by `webpackConfig`. So a JavaScript rebuild will refresh the browser:",
                                "header": {
                                  "anchor": "configuring_javascript-rebundling"
                                }
                              },
                              {
                                "type": "code",
                                "data": "function development() {\n    webpack(webpackConfig).watch({}, err => {\n        if (err) {\n            console.error(err.message, err.details);\n        }\n\n        process.send('reload');\n    });\n}"
                              },
                              {
                                "type": "text",
                                "data": "## Theme Packaging: `production` Function \n\nWhen you issue the command-line instruction `stencil bundle`, to process and package a completed theme for upload to a store, Stencil CLI will look for and call the `production` function. This function passes a callback as its first argument to support asynchronous builds. \n\nThe callback must be invoked somewhere inside the `production` function to notify Stencil CLI that the theme-specific build has completed and is ready to package:",
                                "header": {
                                  "anchor": "configuring_theme-packaging"
                                }
                              },
                              {
                                "type": "code",
                                "data": "function production() {\n    webpackConfig.watch = false;\n    webpackConfig.devtool = false;\n    webpackConfig.plugins.push(new webpack.LoaderOptionsPlugin({\n        minimize: true,\n    }));\n    webpackConfig.plugins.push(new webpack.optimize.UglifyJsPlugin({\n        comments: false,\n        compress: {\n            warnings: true,\n        },\n        sourceMap: false, // Toggle to turn on source maps.\n    }));\n\n    webpack(webpackConfig).run(err => {\n        if (err) {\n            console.error(err.message, err.details);\n            throw err;\n        }\n\n        process.send('done');\n    });\n}\n\nif (process.send) {\n    // running as a forked worker\n    process.on('message', message => {\n        if (message === 'development') {\n            development();\n        }\n\n        if (message === 'production') {\n            production();\n        }\n    });\n\n    process.send('ready');\n}",
                                "config": {
                                  "mode": "js"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "blocks": []
              }
            },
            {
              "title": "Development Quickstart",
              "route": {
                "path": "/development-quickstart"
              },
              "data": {
                "children": [
                  {
                    "title": "Customizing a Theme",
                    "route": {
                      "path": "/customizing-a-theme"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Customizing a Theme</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#customizing_video\">Customizing a Theme: Video Series</a></li>\n\t\t<li><a href=\"#customizing_config-json\">Configuring config.json Keys</a></li>\n    <li><a href=\"#customizing_basic-changes\">Making Basic Design/Layout Changes</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Customizing a Theme: Video Series\n\nIf you prefer to consume by watching video tutorials, this video series will quickly get you started in editing and customizing your Stencil theme.\n\n1. [Customizing a Theme (Part 1) - Config.json and Templates Directory](https://www.youtube.com/watch?v=HORseXHq-nI&index=6&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)\n2. [Customizing a Theme (Part 2) - Lang and Assets Directories](https://www.youtube.com/watch?v=OUg8ksWQGA0&index=7&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)\n3. [Customizing a Theme (Part 3) - Custom Pages, Fonts, and Icons](https://www.youtube.com/watch?v=ZwrVN5QrEZY&index=8&list=PLwTYtMwfzbe7EZiIWPAmPtuwRHkY7BG-0)\n\nContinue reading if you would like information to supplement the videos, or if you would get started customizing your theme by reading and following along.",
                          "header": {
                            "anchor": "customizing_video"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Configuring config.json Keys\n\n**Note:** these instructions will refer to the top-level theme directory as _cornerstone_.\n\nThe first thing you must do when beginning theme developement is configure certain values in the [cornerstone/config.json file](https://github.com/bigcommerce/cornerstone/blob/master/config.json). For example, here are the first few key/value sets in Cornerstone's config.json:\n\n```\n{\n\"name\": \"Cornerstone\",\n\"version\": \"1.0.0\",\n\"meta\": {\n  \"price\": 0,\n   \"documentation_url\": \t\t\n   \"https://support.bigcommerce.com/articles/Public/Cornerstone-\n   \tTheme-Manual\",\n  ...\n  }\n}\n```\n\nFor further details about `config.json` settings and a breakdown of each key/value set, see the in-depth [config.json metadata article](/stencil-docs/stencil-theme-editor/config-json-metadata). \n\nThe next code block shows how you might change these values to reflect your own theme’s name, version number, price on Theme Marketplace, and documentation URL:\n\n```\n{\n\"name\": \"MyTheme\",\n\"version\": \"1.1.2\",\n\"meta\": {\n  \"price\": 10000,\n  \"documentation_url\": \"https://www.mywebsite.com/theme-docs/my-theme.html\",\n  ...\n  }\n}\n```",
                          "header": {
                            "anchor": "customizing_config-json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Making Basic Design & Layout Changes\n\n### Changing the Footer’s Background Color (config.json)\n\nIn a browser, [load the local version](/stencil-docs/getting-started/launching-stencil/running-stencil-locally) of your storefront (by default, [http://localhost:3000](http://localhost:3000). Note the page footer’s appearance.\n\nNext, open your `<theme-name>/config.json` in a text editor. Change the page footer’s default background color to red, by changing the value `\"585858\"` to `\"#a96e6e\"` as indicated below:\n```\n{\n \"settings\": {\n  \"footer-backgroundColor\": \"#a96e6e\",\n  }\n}\n```\n\nThis new value will propagate through the theme’s CSS files and will globally change your footer. Refresh your store’s home page in your browser to verify the change.\n\n### Changing the Product Image Size (config.json and Handlebars)\n\nIn the `<theme-name>/config.json` file’s `\"settings\"` section, you can define theme-wide image sizes for rendering dynamic content. The excerpt below shows this section’s predefined keys and values (dimensions in pixels) for product thumbnails, galleries, and other standard sizes.\n\n```\n{\n  \"settings\": {\n     //...\n    \"logo_size\": \"250x100\",\n    \"brand_size\": \"190x250\",\n    \"gallery_size\": \"300x300\",\n    \"productgallery_size\": \"500x659\",\n    \"product_size\": \"500x659\",\n    \"productthumb_size\": \"100x100\",\n    \"thumb_size\": \"100x100\",\n    \"zoom_size\": \"1280x1280\",\n    \"blog_size\": \"190x250\",\n    // ...\n  },\n}\n```\n\nFor definitions of each key’s usage, please see the `config.json` reference. You can also create theme-wide custom sizes by defining new key/value pair properties in the `config.json` file.\n\nBelow is an example of code that calls one of the above variables, in Cornerstone's,`<theme-name>/templates/components/products/card.html` file. (This file defines the display of products’ panels or \"cards\" on multiple storefront pages.): \n\n\n```<img class=\"card-image\" src=\"{{getImage image 'productgallery_size' (cdn theme_settings.default_image_product)}}\" alt=\"{{image.alt}}\">\n```\n\nNote the `{{getImage image 'productgallery_size'}}` statement, a Handlebars reference to the standard `productgallery_size` size defined in config.json.\n\nFurther examples will guide you in customizing your storefront using the Handlebars templating language. \nFor now, open `config.json` and try redefining some of the default size values shown above. Then, refresh your storefront’s home page (or other pages or modals) in your browser, and note how the display of product images changes to match your new global size values.\n\n### Redesigning Page Elements (config.json and Handlebars)\n\nThe following example demonstrates how to redesign a storefront page’s layout by editing Handlebars statements in the page’s HTML. The goal here is simply to move the Product landing page’s \"Customers Also Viewed\" panel above that page’s \"Product Reviews\" panel.\n\nWith your storefront’s local version loaded in a browser, click through to any product, and note the relative positions of the \"Product Reviews\" and \"Customers Also Viewed\" panels.\n\nNext, open your working theme’s `<theme-name>/templates/components/products/tabs.html file`. As indicated below, delete or comment out the `similar_by_views` components that are shown below:\n\n```\n// delete the following component:\n  {{#if product.similar_by_views}}\n      <li class=\"tab\" role=\"presentational\">\n          <a class=\"tab-title\" href=\"#tab-similar\" role=\"tab\" tabindex=\"0\" aria-selected=\"false\" controls=\"tab-similar\">{{lang 'products.similar_by_views'}}</a>\n      </li>\n  {{/if}}\n</ul>\n\n\n// delete the following component:\n\n{{#if product.similar_by_views}}\n  <div role=\"tabpanel\" aria-hidden=\"true\" class=\"tab-content has-jsContent\" id=\"tab-similar\">\n      {{> components/products/carousel products=product.similar_by_views columns=6}}\n  </div>\n{{/if}}\n</div>\n```\n\nNow open your `/templates/pages/product.html` file. As indicated below (in bold), add the `similar_by_views` component with a reusable carousel wrapper:\n\n```\n{{#if product.videos.list.length}}\n  {{> components/products/videos product.videos}}\n{{/if}}\n\n{{#if product.similar_by_views}}\n   {{> components/products/carousel products=product.similar_by_views columns=6}}\n{{/if}}\n\n{{#if settings.show_product_reviews}}\n  {{> components/products/reviews reviews=product.reviews product=product urls=urls}}\n{{/if}}\n```\n\nIn your browser, refresh the product page, and check the new arrangement of these components.",
                          "header": {
                            "anchor": "customizing_basic-changes"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "config.json Resource Interactions",
                    "route": {
                      "path": "/config-json-resource-interactions"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1><code>config.json</code> Interactions</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#config_new\">New Products Example</a></li>\n    <li><a href=\"#config_changing\">Changing Page Layout using Local Front Matter</a></li>\n    <li><a href=\"#config_retrieving\">Retrieving Specific config. Values through Sass</a></li>\n    <li><a href=\"#config_adding\">Adding/Removing Components</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "To customize your theme’s appearance at a global level, the values that you define in the \n<span class=\"fp\">{theme-name}/config.json</span> file interact with local resources. Your <span class=\"fp\">config.json</span> definitions set global defaults for templates, front-matter attributes, and Handlebars resources throughout your theme. You can also define custom variables in <span class=\"fp\">config.json</span>, named according to your needs.\n\n## New Products Example\n\nTo see how interactions with <span class=\"fp\">config.json</span> values work, first note the default values in <span class=\"fp\">config.json</span> for the `homepage_new_products_count` and `product_list_display_mode` keys:",
                          "header": {
                            "anchor": "config_new"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n\"settings\": {\n  \"homepage_new_products_count\": 12,\n  \"product_list_display_mode\": \"grid\",\n  }\n}",
                          "config": {
                            "mode": "json"
                          },
                          "header": {
                            "title": "Setttings"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Next, open your <span class=\"fp\">{theme-name}templates/pages/home.html</span> file. Highlighted in bold below is a statement that uses the theme-wide settings above to customize an API request to the server.\n\n(Note the reference to the `homepage_new_products_count` key in the file’s front matter, between the two \"\" delimiters. If your current theme’s <span class=\"fp\">home.html</span> front matter omits this `products:new:limit` definition, paste it in for this demonstration.)"
                        },
                        {
                          "type": "code",
                          "data": "products:\n  new:\n    limit: {{theme_settings.homepage_new_products_count}}\n  featured:\n    limit: {{theme_settings.homepage_featured_products_count}}\n  top_sellers:\n    limit: {{theme_settings.homepage_top_products_count}}\ncarousel: {{theme_settings.homepage_show_carousel}}\nblog:\n    recent_posts:\n        limit: {{theme_settings.homepage_blog_posts_count}}\n\n{{#partial \"hero\"}}\n\n<!-- [...] -->\n\n{{/partial}}\n{{> layout/base}}",
                          "config": {
                            "mode": "html"
                          },
                          "header": {
                            "title": "Home.html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "If you load your storefront’s home page (by default, [http://localhost:3000](http://localhost:3000), you should see a \"New Products\" section that displays 12 products in a grid."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Changing Page Layout Using Local Front Matter\n\nIn the <span class=\"fp\">{theme-name}templates/pages/home.html</span> front matter, products > featured is listed. This controls\nhow many products appear on the home page. This is set by the <span class=\"fp\">config.json</span> `theme_settings.homepage_featured_products_count}`. This example shows how you can set theme wide configurations in the front matter using the <span class=\"fn\">config.json</span>.",
                          "header": {
                            "anchor": "config_changing"
                          }
                        },
                        {
                          "type": "code",
                          "data": "\n[...]\nproducts:\n  featured:\n      limit: {{theme_settings.homepage_featured_products_count}}\n[...]\n",
                          "config": {
                            "mode": "html"
                          },
                          "header": {
                            "title": "Home.html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Next, try changing the `limit: {{theme_settings.homepage_featured_products_count}}` statement in the `home.html` file to a hard-coded limit: 2, as indicated below in bold:"
                        },
                        {
                          "type": "code",
                          "data": "\nproducts:\n  // [...]\n  featured:\n      limit: 2\n  // [...]  \n\n\n<!-- [...] -->\n\n{{#partial \"page\"}}\n\n<!-- [...] -->\n\n<div class=\"main full\">\n  {{#if products.featured}}\n      {{> components/products/featured products=products.featured columns=2}}\n  {{/if}}\n</div>\n{{/partial}}\n{{> layout/base}}"
                        },
                        {
                          "type": "text",
                          "data": "If you now reload your storefront’s home page in your browser, you should see the number of displayed \"Featured Products\" change from its default number (as specified in <span class=\"fp\">config.json</span>) to two."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Retrieving Specific config.json Values through Sass\n\nIn <span class=\"fn\">config.json</span>, global variables bring dynamic values into the framework. Sass imports these global variables’ values to gracefully handle data like theme-wide colors’ hexadecimal values, and to make the data available to Theme Editor. Here is one short snippet from <span class=\"fn\">config.json</span>:",
                          "header": {
                            "anchor": "config_retrieving"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n// [...]\n\"color-highlight\": \"#00abc9\",\n\"color-highlightDark\": \"#f2f2f2\",\n\"color-highlightDarker\": \"#dfdfdf\",\n// [...]\n}",
                          "config": {
                            "mode": "css"
                          },
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": "Here are the corresponding references in the default Stencil theme’s<span class=\"fn\">{theme-name}/assets/scss/settings/global/color/_color.scss</span> file:"
                        },
                        {
                          "type": "code",
                          "data": "// [...]\n$color-highlight:       stencilColor(\"color-highlight\");\n$color-highlightDarker: stencilColor(\"color-highlightDarker\");\n$color-highlightDark:   stencilColor(\"color-highlightDark\");\n// [...]",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "In <span class=\"fn\">config.json</span>, try redefining one or more color variables to hex values of your choice. Then re-render your theme’s home page to see the effects."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Adding/Removing Components\n\nThe storefront properties that Stencil abstracts as Handlebars resources are completely portable between HTML files. For an example of how this works, first open any storefront page in a browser. In the page’s footer, note the appearance of Categories.\n\nNext, open your <span class=\"fn\">{theme-name}/templates/components/common/footer.html</span> file in a text editor. As indicated below, cut (or copy and comment out) the code section shown below. ",
                          "header": {
                            "anchor": "config_adding"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<footer class=\"footer\" role=\"contentinfo\">\n  <div class=\"container\">\n      <section class=\"footer-info\">\n          <!-- [...] -->\n<article class=\"footer-info-col footer-info-col--small\">\n  <h5 class=\"footer-info-heading\">{{lang 'footer.categories'}}</h5>\n  <ul class=\"footer-info-list\">\n      {{#each categories}}\n      <li>\n          <a href=\"{{url}}\">{{name}}</a>\n      </li>\n      {{/each}}\n  </ul>\n</article>",
                          "config": {
                            "mode": "html"
                          },
                          "header": {
                            "title": "footer.html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "If you now refresh the storefront page in your browser, the Categories list should disappear from the footer.\n\nNext, create a new <span class=\"fn\">{theme-name}/templates/components/footer/ subdirectory</span>. Paste the code block from the previous cut/copy into a new file named <span class=\"fn\">{theme-name}/templates/components/footer/categories.html</span>, and save it:"
                        },
                        {
                          "type": "code",
                          "data": "<article class=\"footer-info-col footer-info-col--small\">\n  <h5 class=\"footer-info-heading\">{{lang 'footer.categories'}}</h5>\n  <ul class=\"footer-info-list\">\n      {{#each categories}}\n      <li>\n          <a href=\"{{url}}\">{{name}}</a>\n      </li>\n      {{/each}}\n  </ul>\n</article>",
                          "config": {
                            "mode": "html"
                          },
                          "header": {
                            "title": "categories.html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Next, back in <span class=\"fp\">/templates/components/common/footer.html</span>, add a reference to your new path/file, as indicated below in comments:"
                        },
                        {
                          "type": "code",
                          "data": "<footer class=\"footer\" role=\"contentinfo\">\n  <div class=\"container\">\n      <section class=\"footer-info\">\n          <!-- [...] -->\n          {{> components/footer/categories}}\n          <!-- [...] -->\n      </section>\n  </div>\n</footer>",
                          "config": {
                            "mode": "html"
                          },
                          "header": {
                            "title": "footer.html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "If you now refresh storefront pages in your browser, the Categories list should reappear in the footer. The component returns even though you have moved its data resources to an arbitrary new location, and referenced them indirectly."
                        }
                      ]
                    }
                  },
                  {
                    "title": "Customizing Javascript",
                    "route": {
                      "path": "/customizing-javascript"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Customizing Javascript</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#customizing-javascript_customizing\">Modifying a Page's Javascript</a></li>\n    \t<li><a href=\"#customizing-javascript_bringing-handlebars\">Bringing In Handlebars Context</a></li>\n\t\t<li><a href=\"#customizing-javascript_installing-various\">Installing Libraries</a></li>\n    <li><a href=\"#customizing-example\">Example Links</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Most [Cornerstone theme](https://github.com/bigcommerce/cornerstone) page template files located in <span class=\"fp\">templates/pages/</span>  have a corresponding `.js` file in <span class=\"fp\">assets/js/theme/</span>.  These JavaScript files contain event handlers and logic  for managing page specific elements and actions. \n\nFor example, <span class=\"fp\">assets/js/theme/product.js</span> corresponds to <span class=\"fp\">templates/pages/product.html</span> and contains a `productReviewHandler()` and `bulkPricingHandler()` – these functions are implemented within a  derived `Product` class which extends an abstract class called `PageManager` (this same pattern is repeated in all <span class=\"fp\">assets/js/theme/*.js</span> files). \n\nBy default, all derived `PageManager` classes contain an `onReady` method functionally similar to `JQuery.ready()`. Additionally, certain pages have unique event handlers. For example the `cartUpdate` handler in <span class=\"fp\">assets/js/cart.js</span> runs each time certain cart elements are changed. Developers can customize and enhance page behavior and functionality by editing code within these event handlers (or by creating their own event handlers). \n\nTo demonstrate, this article describes how to add some very simple JavaScript to `product.js`."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Modifying a Page's Javascript\nIn this example, we will add some \"hello world\" text to the product page's onReady event. We'll first add a call to the function; then, we will implement the function itself. ",
                          "header": {
                            "anchor": "customizing-javascript_customizing"
                          }
                        },
                        {
                          "type": "text",
                          "data": "In <span class=\"fp\">assets/js/theme/product.js</span> file, add a call to `this.helloWorld()` to the bottom of the `onReady()` method (implemented in next step): "
                        },
                        {
                          "type": "code",
                          "data": "export default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = window.location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n        this.$bulkPricingLink = $('[data-reveal-id=\"modal-bulk-pricing\"]');\n    }    \n    \n    onReady() {\n      // ...\n      \n      // Example Code\n      this.helloWorld();\n    }\n    // ...\n}",
                          "header": {
                            "subtitle": "assets/js/theme/product.js",
                            "title": "Hello World Statement"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Next, implement the `helloWorld()` function by adding it to the `Product` class, just after the closing `onReady()` bracket:"
                        },
                        {
                          "type": "code",
                          "data": "export default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = window.location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n        this.$bulkPricingLink = $('[data-reveal-id=\"modal-bulk-pricing\"]');\n    }    \n    \n    onReady() {\n      // ...\n        \n      // Example Code\n      this.helloWorld();\n    }\n  \n    // Example Code\n    helloWorld() {\n        console.log(\"[assets/js/theme/product.js]: Hello World!\");\n    }\n    // ...\n}",
                          "header": {
                            "subtitle": "assets/js/theme/product.js",
                            "title": "Hello World Statement"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "In your browser, refresh any product-details pop-up or page to see your new `\"Hello World\"` message (If you are using the Stencil CLI and browsing to localhost, you may need to restart it for changes the most recent changes to be reflected). "
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Bringing in Handlebars Context\n\nYou can inject any variables from the Handlebars context into your client-side JavaScript by using the `{{inject...}}` expression like so: \n\n```\n{{inject 'productThumbSize' theme_settings.productthumb_size}}\n```\n\nTo inject `theme_settings.productthumb_size` into the product page's context, add `{{inject 'productThumbSize' theme_settings.productthumb_size}}` just under `{{#partial \"page\"}}` in <span class=\"fp\">templates/pages/product.html<span>:",
                          "header": {
                            "anchor": "customizing-javascript_bringing-handlebars"
                          }
                        },
                        {
                          "type": "code",
                          "data": "\nproduct:\n    videos:\n        limit: {{theme_settings.productpage_videos_count}}\n    reviews:\n        limit: {{theme_settings.productpage_reviews_count}}\n    related_products:\n        limit: {{theme_settings.productpage_related_products_count}}\n    similar_by_views:\n        limit: {{theme_settings.productpage_similar_by_views_count}}\n\n{{#partial \"page\"}}\n\n    <!-- Context Injection Example: -->\n    {{inject 'productThumbSize' theme_settings.productthumb_size}}\n    <!-- End Context Injection Example -->\n      \n    <!-- ... -->\n      \n{{/partial}}\n{{> layout/base}}",
                          "header": {
                            "subtitle": "templates/pages/product.html",
                            "title": "Context Injection"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "The injected `productThumbSize` property can then be accessed from `product.js` by calling `this.context.productThumbSize`:"
                        },
                        {
                          "type": "code",
                          "data": "export default class Product extends PageManager {\n    constructor(context) {\n        super(context);\n        this.url = window.location.href;\n        this.$reviewLink = $('[data-reveal-id=\"modal-review-form\"]');\n        this.$bulkPricingLink = $('[data-reveal-id=\"modal-bulk-pricing\"]');\n    }    \n    \n    onReady() {\n      //...\n        \n        // Example Code\n        this.helloWorld();\n    }\n  \n    // Example Code\n    helloWorld() {\n      console.log(\"[assets/js/theme/product.js]: Hello World!\");\n      console.log(\"[assets/js/theme/product.js]: \" + this.context.productThumbSize);\n    }\n    // ...\n}",
                          "header": {
                            "title": "PageManager class",
                            "subtitle": "templates/pages/product.html"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Note that the `console.log(this.context.themeImageSizes);` statement will report the configured image size, following the `\"Hello World\"` message previously defined in the [Customizing JavaScript for Individual Pages](#customizing-javascript_customizing) above:\n\n```\n[/assets/js/theme/product.js]: Hello World!\nproduct.js:63 [/assets/js/theme/product.js]: 100x100\n```"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Installing Libraries\n\nOnce you have installed the default Stencil theme, you can add custom JavaScript libraries. To see how this works, find your favorite library on GitHub – for example: https://github.com/jquery/jquery.\n\nTo install this particular library for Stencil themes, you would entering the following on the command line:\n\n`npm install jquery`\n\nNext, you would open <span class=\"fp\">assets/js/theme/product.js<span>, and insert the statements excerpted below:",
                          "header": {
                            "anchor": "customizing-javascript_installing-various"
                          }
                        },
                        {
                          "type": "code",
                          "data": "import $ from 'jquery';\n\n$('.myElement').click(() => {\n    alert(\"You clicked myElement\");\n});",
                          "header": {
                            "subtitle": "assets/js/theme/product.js"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "As always, for specifics, refer to your chosen library’s documentation."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Example Links \n\nFor more-extended examples of adding custom JavaScript to a theme, see the [Custom Javascript Implementations](/stencil-docs/custom-javascript-implementations) section.",
                          "header": {
                            "anchor": "customizing-example"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Rendering HTML with Ajax",
                    "route": {
                      "path": "/rendering-html-with-ajax"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Rendering HTML with Ajax</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#rendering_rendering-html\">Rendering HTML with Ajax</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Rendering HTML with Ajax\n\nStencil allows you to render dynamic components on the fly. For example, note this default code in `<theme-name>/templates/components/products/quick-view.html` (note also this file name, which Handlebars will reference later in this example):\n\n",
                          "header": {
                            "anchor": "rendering_rendering-html"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<div class=\"modal-body quickView\">\n  <a href=\"#\" class=\"modal-close\" aria-label=\"Close\"></a>\n  {{> components/products/product-view}}\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "To render a different template, you would instead reference that template’s file name. For example, assume that you want to substitute a custom template that you’ve named: <span class=\"fp\"><theme-name>/templates/components/products/quicker-view.html`</span>.\n\nThis next code block is from the Stencil default theme’s <span class=\"fp\">/assets/js/theme/global/quick-view.js</span> file. Note the <span class=\"fn\">quicker-view.html</span> statements brought in to reference the new file name:"
                        },
                        {
                          "type": "code",
                          "data": "let $modal = $('#modal'),\n  $modalContent = $('.modal-content', $modal),\n  $modalOverlay = $('.loadingOverlay', $modal),\n  modalModifierClasses = 'modal--large';\n\n$('body').on('click', '.quickview', (event) => {\n  let productId = $(event.currentTarget).data('product-id');\n\n  event.preventDefault();\n\n  // clear the modal\n  $modalContent.html('');\n  $modalOverlay.show();\n\n  // open modal\n  $modal.foundation('reveal', 'open');\n\n\t//quicker-view.html statement, replacing the standard template's quick-view.html template\n  utils.api.product.getById(productId, {template: 'products/quicker-view'}, function done(err, response) {\n      $modalOverlay.hide();\n      $modalContent.html(response);\n\n      return new ProductDetails($modalContent, context);\n  });\n});",
                          "config": {
                            "mode": "js"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Testing and Debugging Your Theme",
                    "route": {
                      "path": "/testing-and-debugging-your-theme"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Testing and Debugging Your Theme</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#testing_testing-and-debugging\">Testing and Debugging Your Theme</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Testing and Debugging Your Theme\n\nThe Stencil framework provides built-in debugging tools to aid in your custom front-end development.\nWhen you want to see what data is available on the page you are working on, you can simply add the `debug` query string to your store’s localhost URL. Here is an example:\n\n`http://localhost:3000/product/this-is-a-sample-product?debug=context\n`\n\nThis will return a list of all the objects available on the page, in JSON syntax.\n\nIf you want to view the available JSON objects and rendered page at the same time, simply change the `debug` value to `bar`. Here is an example:\n\n`http://localhost:3000/product/this-is-a-sample-product?debug=bar`\n\n### Using Browsersync to Render the Store on Desktop/Tablet/Mobile for Testing\n\nThe Stencil framework uses Browsersync to help you rapidly test your storefront themes across devices of different viewports. After you launch Stencil with stencil start, your console window will display several IP addresses below the BigCommerce \"B\".\n\n```\n                                     `+h\n                                   `+ddd\n                                 .oddddd\n                               .oddddddd\n                             -sddddddddd\n                          `-sddddddddddd\n                         -shdddddddddddd\n                         ...-:+ydddddddd\n                    `......`   `+ddddddd\n                    -ddddddh-    ddddddd\n                `   .yyyyyyo.  `+ddddddd\n              .o/    `````    :ydddddddd\n            -ohd+   `//////:` `.sddddddd\n          -sdddd+   -ddddddds   `hdddddd\n        :sdddddd+   .sssssso-   `ddddddd\n      :ydddddddd+              -yddddddd\n    /yddddddddddy+++++++++++oshddddddddd\n `/hdddddddddddddddddddddddddddddddddddd\n/hdddddddddddddddddddddddddddddddddddddd\n_________________________\n\nBigCommerce Stencil\n_________________________\n\n[BS] Proxying: http://localhost:4001\n[BS] Access URLs:\n\n      Local: http://localhost:4000\n   External: http://172.24.4.28:4000\n\n         UI: http://localhost:3001\nUI External: http://172.24.4.28:3001\n\n[BS] Watching files...\n```\n\nNote the `External` IP address. You can copy/paste this URL to access the Browsersync server from multiple devices. Then, watch as scrolling and other actions sync up across devices. (Note: Firewalls and other security measures might interfere with this feature.)\n\nTo maximize the adoption of your themes, we recommend that you use such testing to design responsive themes that display and function well across multiple viewport sizes.\n",
                          "header": {
                            "anchor": "testing_testing-and-debugging"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n* [Testing and Debugging Your Theme](https://developer.bigcommerce.com/stencil-docs/development-quickstart/testing-and-debugging-your-theme)\n* [Common Stencil CLI Pitfalls and How to Avoid Them](https://medium.com/bigcommerce-developer-blog/common-stencil-cli-pitfalls-and-how-to-avoid-them-7562dbbab793) (BigCommerce Developer Blog)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Managing Theme Variations",
                    "route": {
                      "path": "/manage-theme-variations"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Managing Theme Variations</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#managing_creating\">Creating and Naming a New Theme Variation </a></li>\n\t\t<li><a href=\"#managing_changing\">Changing a Theme Variation’s Font Family (config.json)</a></li>\n    <li><a href=\"#managing_preparing\">Preparing a Variation's Thumbnails</a></li>\n    <li><a href=\"#managing_using-cli\">Using Stencil CLI to Change Variations</a></li>\n    <li><a href=\"#managing_bundling-and-uploading\">Bundling and Uploading Your Theme</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Creating and Naming a New Theme Variation  \n### (Cascading Settings from <span class=\"fn\">config.json</span>)\n\nYou define variations in your <span>{theme-name}/config.json</span> file. From the default Stencil theme’s config.json, here is the Light variation’s definition, followed by the head of the `\"Bold\"` variation’s definition:",
                          "header": {
                            "anchor": "managing_creating"
                          }
                        },
                        {
                          "type": "code",
                          "data": "\"variations\": [\n{\n  \"name\": \"Light\",\n  \"id\": \"light\",\n  \"meta\": {\n    \"desktop_screenshot\": \"desktop_screenshot.jpg\",\n    \"mobile_screenshot\": \"mobile_screenshot.png\",\n    \"description\": \"This is the light style of the Stencil Theme\",\n    \"demo_url\": \"https://stencil-light.mybigcommerce.com\",\n    \"optimized_for\": [\"fashion\", \"image_heavy\", \"etc\"],\n    \"industries\": []\n  },\n{\n  \"name\": \"Bold\",\n  \"id\": \"bold\",\n...",
                          "header": {
                            "title": "Naming a New Theme Variation"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Try inserting a new custom variation of your own, below the `\"Light\"` block shown above. Your variation’s definition might look something like this:"
                        },
                        {
                          "type": "code",
                          "data": "\"variations\": [\n...\n{\n  \"name\": \"MyCustomVariation\",\n  \"id\": \"my_custom_variation\",\n  \"meta\": {\n    \"desktop_screenshot\": \"my_custom_desktop_screenshot.jpg\",\n    \"mobile_screenshot\": \"my_custom_mobile_screenshot.png\",\n    \"description\": \"This is a really cool custom style of the Stencil Theme\",\n    \"demo_url\": \"https://stencil-custom.mybigcommerce.com\",\n    \"optimized_for\": [\"fashion\", \"image_heavy\", \"etc\"],\n    \"industries\": []\n  },\n{\n  \"name\": \"Bold\",\n  \"id\": \"bold\",\n...\n\"variations\": [\n...\n{\n  \"name\": \"MyCustomVariation\",\n  \"id\": \"my_custom_variation\",\n  \"meta\": {\n    \"desktop_screenshot\": \"my_custom_desktop_screenshot.jpg\",\n    \"mobile_screenshot\": \"my_custom_mobile_screenshot.png\",\n    \"description\": \"This is a really cool custom style of the Stencil Theme\",\n    \"demo_url\": \"https://stencil-custom.mybigcommerce.com\",\n    \"optimized_for\": [\"fashion\", \"image_heavy\", \"etc\"],\n    \"industries\": []\n  },\n{\n  \"name\": \"Bold\",\n  \"id\": \"bold\",\n...",
                          "header": {
                            "title": "Multiple Theme Variation"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Changing a Theme Variation’s Font Family (config.json)\n\nTo learn more about defining variations, see the <span class=\"fn\">config.json</span> reference for details about each key’s usage and allowable values. \nIn particular, note the option to configure settings and variables that are scoped to each variation. For example, you could insert the `\"settings\":...”body-font-family”` block shown below to set body text throughout this variation (only) to a specific typeface/family:",
                          "header": {
                            "anchor": "managing_changing"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"name\": \"MyCustomVariation\",\n  \"id\": \"my_custom_variation\",\n  \"settings\": {\n    ...\n    \"body-font-family\": \"MyCoolFont, AnotherFont, sans-serif\",\n    ...\n  }\n}",
                          "header": {
                            "title": "body-font-family"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Preparing a Variation's Thumbnails\n\nFor details on preparing screenshots that enable merchants to preview each variation – and to preview your theme as a whole – in the BigCommerce control panel and Theme Marketplace, see [Preparing Thumbnail Images](/stencil-docs/stencil-theme-editor/preparing-thumbnail-images).\n",
                          "header": {
                            "anchor": "managing_preparing"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Using Stencil CLI to Change Variations\n\nTo locally test/debug a specific variation of your theme, launch it by invoking the Stencil CLI’s (command-line interface’s) `stencil start -v` switch. Depending on how you’ve named your variation in <span class=\"fn\">config.json</span>, you would type something like this on the command line:\n\n`stencil start -v MyCustomVariation`",
                          "header": {
                            "anchor": "managing_using-cli"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Bundling and Uploading Your Theme\n\nIf at this stage you are ready to bundle and upload your theme, refer to [Bundling and Uploading a Theme](/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading). ",
                          "header": {
                            "anchor": "managing_bundling-and-uploading"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n### Related Articles\n* [Preparing Thumbnail Images](https://developer.bigcommerce.com/stencil-docs/store-design/preparing-thumbnail-images)\n* [Bundling and Uploading a Theme](https://developer.bigcommerce.com/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading)"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Store Design",
              "route": {
                "path": "/store-design"
              },
              "data": {
                "children": [
                  {
                    "title": "Store Design Overview",
                    "route": {
                      "path": "/store-design-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Store Design Overview</h1>"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "success",
                            "body": "Stencil themes have now introduced the new rapid customization tool and experience called **Store Design** (previously Theme Editor). For more information on using Store Design from a merchant perspective, see our support [Store Design article](https://forum.bigcommerce.com/s/article/Store-Design) or [Changelog](https://developer-changelog.bigcommerce.com/posts/store-design-v-3-customers-api) for more information. ",
                            "title": "From Theme Editor to Store Design "
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Store Design Overview\n[Store Design](https://support.bigcommerce.com/s/article/Store-Design) is a Graphical User Interface (GUI) that allows BigCommerce merchants to rapidly modify and customize a storefront's look and feel without manually entering any code. A merchant using the Store Design can customize a storefront theme by modifying characteristics from a variety of menu options such as Styles, Colors, Typography, Buttons, and more. Furthermore, Store Design is a useful rapid-customization tool for developers. \n\nAs a theme developer, alongside the ability to use store design, you also have the capability to configure your own settings for Store Design (if you so choose). Your configuration will give merchants who download your theme the ability to use Store Design with your theme in the ways you provide access to. Like previously mentioned, Store Design by default allows merchants to customize everything from Styles, Colors, Typography, Buttons, and more. As a theme developer, you can choose and configure what features can be modified via the Store Design for the theme that you develop.\n\nThe remainder of this section guides you, as a developer, through configuring your own theme options.",
                          "header": {
                            "anchor": "stencil_stencil-theme-editor-overview"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "info",
                            "body": "Open only one instance of Store Design at a time against each storefront. There is currently no synchronization mechanism for configuration changes made by multiple Store Design instances.",
                            "title": " Single Instance per Storefront"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Related Articles\n* [Changelog Post](https://developer-changelog.bigcommerce.com/posts/store-design-v-3-customers-api)\n* [Store Design](https://support.bigcommerce.com/s/article/Store-Design) (Knowledge Base)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Configuring Store Design",
                    "route": {
                      "path": "/configuring-store-design"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Configuring Store Design</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#configuring_configuration-files\">Configuration Files</a></li>\n    <li><a href=\"#configuring_managing-keys\">Managing Keys between Versions</a></li>\n    <li><a href=\"#configuring_persistent-settings\">Persistent Settings Storage</a></li>\n    <li><a href=\"#configuring_theme-upgrades\">Theme Upgrades and Settings</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Configuration Files\n\nEach theme contains two related JSON files of key-value pairs: <span class=\"fn\">config.json</span> and <span class=\"fn\">schema.json.</span> These files' keys provide the following features:\n\n* Keys that you include in <span class=\"fn\">schema.json</span> – together with their corresponding <span class=\"fn\">config.json</span> default values – define the settings that merchants can customize through Store Design's graphical interface.\nOther <span class=\"fn\">config.json</span> keys contain metadata about the theme, such as the theme's name, version, and resource controls.\n* Keys located in <span class=\"fn\">config.json</span>'s `variations` object define variations of the theme. For example, a theme might have a \"Light\" variation and a \"Bold\" variation, each with different typography and colors. Each theme can include as many variations as you like.\n* Keys located under both files' `settings` objects define the theme's look, feel, and functionality.\n\nFor documentation on the principal keys included in Stencil's reference Cornerstone theme, see this section's [config.json Metadata](/stencil-docs/stencil-theme-editor/config-json-metadata) and [schema.json Metadata](/stencil-docs/stencil-theme-editor/schema-json-metadata) entries. For an introduction to the graphical editor, see\n[Store Design Overview](/stencil-docs/stencil-theme-editor/stencil-theme-editor-overview).",
                          "header": {
                            "anchor": "configuring_configuration-files"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Managing Keys between Versions\n\nTo make sure revisions to your theme are backward-compatibile, we generally recommend that you manage keys in both your <span class=\"fn\">config.json</span> and <span class=\"fn\">schema.json</span> files in an additive way. Specific recommendations:\n\nAdding new keys is generally fine. (However, each key in <span class=\"fn\">schema.json</span> must have a matching default in <span class=\"fn\">config.json</span>.)\n\n* Use caution in deleting any key. Doing so can break your new theme version's backward compatibility.\n* We do not recommend renaming keys. Instead, we recommend introducing a new key, while maintaining the old key until it is no longer in use by anyone using an older version of your theme.\n* Each object within your <span class=\"fn\">config.json</span> › `variations` object defines one theme variation. If you are adapting an existing theme and consciously want to remove one or more variations, you can do so by removing the corresponding key(s).",
                          "header": {
                            "anchor": "configuring_managing-keys"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Persistent Settings Storage\n\nWhen store administrators use Store Design to customize your theme for their store, the store's resulting configuration settings are saved to a separate configuration service at BigCommerce.",
                          "header": {
                            "anchor": "configuring_persistent-settings"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Theme Upgrades and Settings\n\nWhen a merchant upgrades your theme to a newer version, all key-value pairs that were saved to the BigCommerce configuration service are carried forward. For example, assume this customization/upgrade scenario:\n\nYou release your Star Glow theme, version 1. This theme's <span class=\"fn\">config.json</span> includes a key named `logo_size`, establishing a default value of 100x250. The combination of the key and the value compose a `logo_size` setting.\nThe merchant uses Store Design to change the `logo_size` setting to 175x275. This customized setting is stored in the BigCommerce configuration service.\nYou release Star Glow, version 1.1. In this theme revision, you have changed the `logo_size` to 300x300.\nWhen the merchant applies Star Glow version 1.1 to their store, their custom `logo_size` setting of 175x275 remains in effect.\nIf the merchant creates a second store and applies Star Glow version 1.1 to it, that store has no custom `logo_size` setting – so it will default to the new theme version's 300x300 value.",
                          "header": {
                            "anchor": "configuring_theme-upgrades"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n### Related Articles\n* [Store Design Overview](https://developer.bigcommerce.com/stencil-docs/store-design/store-design-overview)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "schema.json (Store Design Metadata)",
                    "route": {
                      "path": "/schema-json-metadata"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>schema.json (Store Design Metadata)</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#schema_enabling\">Enabling Store Design</a></li>\n    <li><a href=\"#schema_best-practices\">Best Practices</a></li>\n    <li><a href=\"#schema_how-json\">How .json Entries Govern Store Design's UI</a></li>\n    <li><a href=\"#schema_theme-editor-data\">Store Designs Data Types</a></li>\n    <li><a href=\"#schema_data-structure\">Store Design Data Structure in schema.json</a></li>\n    <li><a href=\"#schema_ui-scope\">Arbitrary UI Scope and Sequence</a></li>\n    <li><a href=\"#schema_store-design-troubleshooting\">Store Design Troubleshooting</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Enabling Store Design\n\nTo provide merchants with Store Design support for your theme's settings, you must declare those settings in the theme's <span class=\"fn\">schema.json file</span>. You must also include those settings in your theme's <span class=\"fn\">config.json</span> file, templates, and Sass/CSS files. The basic division of labor is this:\n* <span class=\"fn\">schema.json</span> is an array of objects, declaring which theme settings are editable in Store Design. These objects also declare all possible values to display in Store Design's GUI.\n* <span class=\"fn\">config.json</span> assigns (and updates) a default value for each of the editable settings.\n* Each <span class=\"fn\">schema.json</span> entry has an id element that maps it to its corresponding config.json entry. The id value identifies the relevant config.json key name.\n* For front-matter properties to be editable, your theme's Handlebars template must call certain Handlebars helpers to transform the config.json entries into JavaScript values.\n* For fonts to be editable, a Sass stylesheet must call certain custom Sass functions to transform the <span class=\"fn\">config.json</span> font entries into CSS values.\n* For styles to be editable, a Sass stylesheet must call certain custom Handlebars helpers to transform the <span class=\"fn\">config.json</span> entries into CSS values.\n\nAs users select options within the Store Design UI (and save their selections), Stencil will automatically rewrite <span class=\"fn\">config.json</span> to record new defaults for the theme.\n\n### File Management Requirements\n\nSee Stencil's default Cornerstone theme for examples that fulfill all of the above requirements. However, remember these hard requirements:\n\n* For any theme setting (such as a Sass variable or a front-matter value) to be merchant-customizable,\nthat setting – and its possible values – must be present in <span class=\"fn\">schema.json</span>. You must manually provide these declarations, according to the structure described here.\n\n* Also, each key that you create in schema.json must have a corresponding <span class=\"fn\">config.json</span> key whose name matches its id value. This <span class=\"fn\">config.json</span> key sets the default value (even if that is simply an empty string). A <span class=\"fn\">schema.json</span> setting without an `id`-matched <span class=\"fn\">config.json</span> key will not appear to users in the Store Design GUI.",
                          "header": {
                            "anchor": "schema_enabling"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Best Practices\n\nPlease follow these guidelines to head off errors upon theme upload, and to avoid possible loss of customizations made via the Store Design GUI at runtime:\n\n* Single-Instance Restriction per Storefront: We strongly recommend opening only one instance of Store Design, at a time, against each storefront. This is because there is currently no synchronization mechanism to reconcile configuration changes made by multiple Store Design instances. So <span class=\"fn\">schema.json</span> will record the last changes made by any instance – but changes saved earlier by other instances might be lost.\n\n* Single-Storefront Restriction per Editor: In the current release, users can have only one storefront at a time open in Store Design. (A workaround is to open an \"Incognito\"/private-browsing window on an additional storefront, to bypass the cookie that imposes this restriction.)\n\n* File Name, Location, and Structure: Your theme's <span class=\"fn\">schema.json</span> file must be named schema.json, must reside in the root of your `<theme-name>` subdirectory (e.g.: <span class=\"fp\">/cornerstone/schema.json</span>), and must be valid JSON.\n\n* File Size: The maximum allowable size for a theme's <span class=\"fn\">schema.json</span> file is 64 KB. Exceeding this limit will trigger an error upon uploading the theme to BigCommerce. (Other than this size constraint, there is no limit on the number of keys and values that you can place in a theme's <span class=\"fn\">schema.json</span>.)\n\n",
                          "header": {
                            "anchor": "schema_best-practices"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## How .json Entries Govern Store Design's UI\n\nYour entries in the <span class=”fn”>schema.json</span> and <span class=”fn”>config.json</span> directly shape users' options in Store Design:\n* Theme Variations always appear at the top of the Store Design panel. These variations are defined only in <span class=\"fn\">config.json</span>, and their definition order in that file governs their display order in Store Design.\n* Merchants must select one variation to edit, at a time, in Store Design. The selections that they make in the remainder of Store Design's UI will apply to only that selected variation.\n* Store Design's remaining sequence of top-level (Section) headings corresponds directly to the sequence of top-level (Section) objects that you declare in `schema.json`\n\nThe options displayed within these expandable Section headings correspond directly to the keys/values that you nest within <span class=\"fn\">schema.json</span>'s corresponding Section objects.\n\nIn all, the structure that you give your theme's <span class=\"fn\">config.json</span> and <span class=\"fn\">schema.json</span> files directly governs the UI that Store Design exposes to merchants. So these files provide your UI design tools.",
                          "header": {
                            "anchor": "schema_how-json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Store Design Data Types\n\nStore Design supports these data types:\n* color\n* font\n* select [drop-down list]\n* checkbox\n* imageDimension\n* text\n\nWithin <span class=\"fn\">schema.json</span>, each object's data type is declared in a statement like the one highlighted here:\n",
                          "header": {
                            "anchor": "schema_theme-editor-data"
                          }
                        },
                        {
                          "type": "code",
                          "data": " {\n        \"type\": \"color\",\n        \"label\": \"Text Color\",\n        \"id\": \"body-font-color\"\n      },",
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Types versus \"heading\" Labels\n\nWithin <span class=\"fn\">schema.json</span>, you will also see `\"type\": \"heading\"` statements like this one – highlighted earlier in the same object used for the above example:"
                        },
                        {
                          "type": "code",
                          "data": "{\n    \"name\": \"Colors\",\n    \"settings\": [\n      {\n        \"type\": \"heading\",\n        \"content\": \"General\"\n      },\n      {\n        \"type\": \"color\",\n        \"label\": \"Text Color\",\n        \"id\": \"body-font-color\"\n      },\n    {...}\n     ]\n}",
                          "header": {},
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "These `\"type\": \"heading\"` statements do not reference data types. Rather, they declare display captions for the Store Design UI's subcategories – the middle level nested within the Section headings, but outside the individual options from which merchants can select. (Those inner options are designated by `\"label\": <label-text>` statements.)"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Store Design Data Structure in <span class=\"fn\">schema.json</span> \n\nThe <span class=\"fn\">schema.json</span> nesting structure that you just saw maps directly to the Store Design UI displayed to merchants: Below the `variations` section (whose data are imported from <span class=\"fn\">config.json</span>), the order and nesting of options in Store Design's UI directly matches the order and nesting of your <span class=\"fn\">schema.json</span> entries.\n",
                          "header": {
                            "anchor": "schema_data-structure"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Arbitrary UI Scope and Sequence\n\nYou are free to decide which properties of your theme to make editable in Store Design, and in which order to display them. Store Design can expose any set of properties as long as your <span class=\"fn\">schema.json</span> declares them using the data types that Store Design supports.",
                          "header": {
                            "anchor": "schema_ui-scope"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Store Design UI Troubleshooting\n\nYou may experience an issue when setting up the Store Design UI. For any unexpected behavior that you encounter while developing your Stencil theme, we recommend that you check the terminal window where you started Stencil CLI. In some cases, the terminal will provide a verbose error message specifying where to look for problems. For less-detailed error messages, see the below list of potential issues and diagnostic suggestions.\n\n### Empty Drop-Down List in Store Design Panel\n\n* **Symptom:** A drop-down list’s outline appears below its configured label. However, the list appears to be empty.\n* **Likely Cause:** A default value specified in the theme’s config.json file is not enumerated in the schema.json file.\n* **Resolution:** Update schema.json to include the config.json value.\n\n### Configured Control Missing from Store Design Panel\n* **Symptom:** A control that you have configured within schema.json is completely absent from the Store Design UI.\n* **Likely Cause:** The specified “type” is one of: text, text area, radio [button], or image. (Store Design does not currently support these data types.)\n* **Resolution:** Display the user option via one of the supported data types: color, font, select [drop-down list], or checkbox.\n\n### Theme Changes Not Saved from Store Design UI\n* **Symptom:** Changes saved in a browser’s Store Design panel are not reflected in the storefront.\n* **Likely Cause:** Check whether Store Design to customize the same storefront.\n* **Resolution:** We strongly recommend opening only one instance of Store Design, at a time, per storefront. BigCommerce currently provides no synchronization mechanism for configuration changes from multiple Store Design instances. So the storefront’s schema.json will record the last changes made by any instance – but changes saved earlier by other instances might be lost.",
                          "header": {
                            "anchor": "schema_store-design-troubleshooting"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "config.json Metadata",
                    "route": {
                      "path": "/config-json-metadata"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>config.json Metadata</h1> \n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#config_keys-and-example\">Keys and Example Values</a></li>\n    <li><a href=\"#config_requirements-and-restrictions\">Requirements and Restrictions</a></li>\n    <li><a href=\"#config_video-demo\">Video Demo</a></li>\n\t</ul>\n</div>\n\n\n"
                        },
                        {
                          "type": "text",
                          "data": "The <span class=\"fp\">config.json</span> file is used to configure your Stencil theme. Use to manage custom theme settings. \nThe <span class=\"fp\">config.json</span>file allows you to:\n* Provide global context for Stencil’s CSS and Handlebars resources\n* Set values for [Store Design](https://support.bigcommerce.com/s/article/Store-Design)\n* Provide metadata for your theme’s listing in the Theme Marketplace\n* Define variations included in your theme",
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Keys and Example Values\nFor a list of all available keys and values in <span class=\"fp\">config.json</span>, see [Theme Objects](/api-reference/theme-objects/models/configjson) in the API Reference.",
                          "header": {
                            "anchor": "config_keys-and-example"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Requirements and Restrictions\n\nYour theme's <span class=\"fp\">config.json</span> file must meet the following requirements:\n\n* It must be named <span class=\"fp\">config.json</span>, must reside in the root of your `{theme-name}` top level subdirectory (e.g.: <span class=\"fp\">/cornerstone/config.json</span> or <span class=\"fp\">/stencil/config.json</span>), and must be valid JSON.\n* The maximum allowable size for a theme's <span class=\"fn\">config.json</span> file is 64 KB. Exceeding this limit will trigger an error upon uploading the theme to BigCommerce.\n* Each key's value is restricted to 64 characters. Exceeding this limit will similarly trigger an upload error.\n* Other than these size constraints, there is no limit on the number of keys and values that you can place in a theme's <span class=\"fn\">config.json</span>.",
                          "header": {
                            "anchor": "config_requirements-and-restrictions"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Carefully check your theme against all the requirements listed here – including the required keys within the `meta` object and `variations` array. While some requirements are not enforced in local development, they will be validated (and will trigger errors) when you later upload your theme to BigCommerce.",
                            "title": "Carefully Check Your Requirements",
                            "type": "warning"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Required Themewide Keys\nThe <span class=\"fn\">config.json</span> file must contain at least the following keys, with appropriate values (as outlined above):\n\n* `version`\n* `settings` (which must itself be a valid JSON object)\n* `variations` (an array of at least one, and at most four, variation objects)\n* `meta` (an object; see specific requirements below)\n\n### Required `meta` Keys\n\nThe meta object must contain at least the following keys, with appropriate values:\n\n* `price`\n* `author_name`\n* `author_email`\n* `author_support_url`\n* `documentation_url`\n\nFor illustration, here is a commented excerpt:"
                        },
                        {
                          "type": "code",
                          "data": "{\n  ...\n  \"meta\": {\n    \"price\": 15000, // in cents; non-negative integer, minimum 0\n    \"author_name:\" \"eCommerce Themes, Inc.\", // Must be a string, not null\n    \"author_email\": \"support@example.com\", // Must be a string, should be a valid email address, not null\n    \"author_support_url\": \"http://example.com/contactus\", //  Must be a string, should be a valid URL, not null\n    \"documentation_url\": \"http://example.com/guide\", // Must be a string, limit of 255 characters,\n          not null\n    \"composed_image\": \"path/to/composed.png\", // Must be a string path to the composed-image file\n    \"features\": [ // Array of feature strings, all of which must be in the list enumerated here: \n          https://github.com/bigcommerce/theme-registry/blob/master/app/schemas/theme_config.json#L33\n      \"fully_responsive\" // Must include at least one feature, and no duplicate entries\n    ]\n  },\n  ...\n}",
                          "header": {
                            "title": "Meta Keys Example"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Required `variation` Keys\n\nFor each variation that you choose to include in your theme (at least one is required), you must provide at least the following keys and sub-element, with appropriate values:\n\n* `name`\n* `id`\n* `meta` (an object, containing at least:)\n* `description`\n\nFor illustration, here is a redacted excerpt from Cornerstone:"
                        },
                        {
                          "type": "code",
                          "data": "\"variations\": [\n    {\n      \"name\": \"Light\",\n      \"id\": \"light\",\n      \"meta\": {\n        \"desktop_screenshot\": \"desktop_light.png\",\n        \"mobile_screenshot\": \"mobile_light.png\",\n        \"description\": \"Ideal for a wide range of businesses and brands, this design is fully responsive, simple, and ready for you to add your branding, logo, and products. ....\",\n    ...\n    }\n  ]",
                          "config": {
                            "mode": "json"
                          },
                          "header": {
                            "title": "variations"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Video Demo\nThe following video is a walkthrough of the config.json. It goes over what the file contains and how to set values.\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VZYZsDoEOpQ\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>",
                          "header": {
                            "anchor": "config_video-demo"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Additional Resources\n* [Cornerstone config.json](https://github.com/bigcommerce/cornerstone/blob/master/config.json) (BigCommerce Cornerstone GitHub)\n* [Theme Store](https://www.bigcommerce.com/theme-store/) (BigCommerce)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Preparing Thumbnail Images",
                    "route": {
                      "path": "/preparing-thumbnail-images"
                    },
                    "data": {
                      "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/stencil-docs/store-design/preparing-thumbnail-images.md"
                    }
                  }
                ]
              }
            },
            {
              "title": "Front Matter",
              "route": {
                "path": "/front-matter"
              },
              "data": {
                "children": [
                  {
                    "title": "Front Matter ",
                    "route": {
                      "path": "/front-matter-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Front Matter Overview</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#front-matter-overview_declaring-objects\">Declaring Objects</a></li>\n    <li><a href=\"#front-matter-overview_yaml-syntax\">YAML Syntax – Requirements</a></li>\n    <li><a href=\"#front-matter-overview_filtering-attributes\">Filtering Attributes</a></li>\n    <li><a href=\"#front-matter-overview_combining-front-matter\">Combining Front Matter with Handlebars Attributes</a></li>\n    <li><a href=\"#front-matter-overview_default-versus-custom\">Default versus Custom Attributes, per Page</a></li>\n    <li><a href=\"#front-matter-overview_declaring-multiple\">Declaring Multiple Attributes</a></li>\n\t</ul>\n</div>\n\n\n\n\n\n\n"
                        },
                        {
                          "type": "text",
                          "data": "## Declaring Front-Matter Objects\n\nWhen you create a store page that requires specific attributes (such as 'New Products') to be displayed, you must first declare the object and attribute on the page in a front-matter block at the top of the page's HTML template file. The front matter block makes the attribute accessible on the page. Then, to display the attribute on the storefront page, you will reference the the object using Handlebars within the page's HTML.\nFor example, to display 'new products' on a storefront's home page, you first need to make new products accessible on the home page. To achieve this, include the following front matter block at the top of the [home.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html) file to declare the products object with its new attribute. This allows a storefront's home page to access a store's \"New Products.\"\n\n```\n\nproducts:\n    new:\n    \tlimit: {{theme_settings.homepage_new_products_count}}\n\n```\n\n**Note:** A 'limit' is required for Product Objects to render on a storefront page. You can hard code the limit value or utilize handlebars.js to reference it from the theme's config.json file. In this case, the limit value is being referenced from the `settings` JSON object in the `config.json` file using handlebars.js. Information on required attributes is detailed in the Front Matter Attributes Reference. \n\nAfter including the front matter block at the top of the home.html file, the New Products attribute will be accessible in the home page's context. As previously stated, simply including the front matter block will not display the attribute on the page. In order to actually display the new products on the desired storefront page, you will refernce the attribute using Handlebars in the same file you have added the front matter block to.\nIn this example, we will include the following code in Cornerstone's [home.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html) file to display New Products on our store's home page. \n\n\n```\n  {{#if products.new}}\n        {{> components/products/new products=products.new columns=theme_settings.homepage_new_products_column_count}}\n    {{/if}}\n```\n",
                          "header": {
                            "anchor": "front-matter-overview_declaring-objects"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## YAML Syntax – Requirements\n\nStencil front matter uses the conventions of [YAML]() (short for the recursive \"YAML Ain't Markup Language\"). Here are the YAML conventions you must follow in front matter:\n\nPlace the front-matter block at the top of your template.\nFence the beginning and end of the front-matter block with a row of three hyphens (), as you see in the examples here.\nShow attribute > key relationship (or object > property relationship) by indenting the children. In the example above, products is the object,\nPlace a colon (:) directly after each attribute name, and directly after each key name. (Colons separate key:value pairs.)\nIdentifiers are case-sensitive.\n\n### Restrictions\n\nYou can use front matter to specify attributes on the tops of pages in your\n`<theme-name>/templates/pages/` subdirectory.\n\nYou **cannot** use front matter to accomplish this on pages in the following subdirectories:\n* `<theme-name>/templates/components/`\n* `<theme-name>/templates/layout/`\n* `<theme-name>/templates/pages/custom/` \n\n* Indent using only spaces, not tabs. (YAML forbids tabs, to avoid inconsistent encoding of tabs across platforms.) An indent of even one space indicates a child.\n\n* Front matter on a given page cannot exceed 64 KB.\n\n* If a front-matter directive contains an invalid option, Stencil CLI will silently ignore that option.\n\n",
                          "header": {
                            "anchor": "front-matter-overview_yaml-syntax"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Filtering Attributes\n\nSome attributes can accept indented keys, or key-value pairs, to further define the attribute. For example, limit is a key commonly used to restrict the number of objects to return for an attribute.\nTo return products similar to the product that a customer is currently viewing – with a limit of six – you would declare front matter as follows:\n\n```\n\nproducts:\n    similar_by_views:\n        limit: 6\n\n```\n\nMost keys have a default value, as listed in the [Front Matter Attributes]() Reference. Specifying the key without a value will call that default value. The default value for `similar_by_views:limit:` happens to be `4`, so inserting `limit` with no integer will display four products:\n\n```\n\nproducts:\n    similar_by_views:\n        limit:\n\n```\n",
                          "header": {
                            "anchor": "front-matter-overview_filtering-attributes"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "To keep your pages lightweight, specify only the attributes you need per page. Also, use the limit key (with appropriate values) for attributes that accept it.",
                            "title": "Filtering for Faster Page Loads"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Combining Front Matter with Handlebars Attributes\n\nThe next example builds on front-matter object invocation and filtering, by showing a corresponding Handlebars statement in HTML. Here is how you would declare the `products` object to return four new products, and to then display each product’s name:\n\n```\n\nproducts:\n    new:\n        limit: 4\n\n\n<h1> This is the HTML for the new-products example </h1>\n{{#each products.new}}\n    <p>{{ name }}</p>\n{{/each}}\n```",
                          "header": {
                            "anchor": "front-matter-overview_combining-front-matter"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "In the above HTML, the {{ name }} identifier calls an attribute of Stencil’s common product card model, which consolidates details about a given product. For this and other objects that you can access through HTML, please see our reference section on Handlebars objects.",
                            "title": " Reading the Handlebars"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Default versus Custom Attributes, per Page\n\nTo make templates readily useful, they automatically include a page’s default attributes. For example, a theme’s [product.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/product.html) page will automatically include a product attribute.\n\nHowever, if you want to include additional attributes on a page, you can declare those attributes in front matter using the conventions shown above. [The Declaring Objects](#front-matter-overview_declaring-objects) example shows the only way to display a \"new products\" storefront section, which requires front-matter invocation.",
                          "header": {
                            "anchor": "front-matter-overview_default-versus-custom"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Declaring Multiple Attributes\n\nBelow is an example that assumes you want to include a product’s reviews and also related products. To display images for the related products, the HTML statement `<img src=\"{{getImage image 'gallery'}}\">` relies on Stencil's `{{getImage}}` custom Handlebars helper:\n\n```\n\nproduct:\n   reviews:\n       limit: 9\n   related_products:\n       limit: 10\n\n\n\n<h2>{{ product.name }}</h2>\n{{#each product.reviews.list}}\n    <p>{{text}}</p>\n{{/each}}\n<h3>Related Products</h3>\n{{#each product.related_products}}\n  <img src=\"{{getImage image 'gallery'}}\">\n  <p>{{ name }}</p>\n{{/each}}\n```\n\n",
                          "header": {
                            "anchor": "front-matter-overview_declaring-multiple"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Front Matter Attributes",
                    "config": {
                      "sidebar": {
                        "token": "Reference"
                      }
                    },
                    "route": {
                      "path": "/front-matter-attributes-reference"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Front Matter Attributes Reference</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#front-matter-attributes-reference_global\">Global Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_category\">Category Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_blog\">Blog Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_product\">Product Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_brand\">Brand Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_brand-list\">Brand List Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_cart\">Cart Attributes</a></li>\n    <li><a href=\"#front-matter-attributes-reference_search\">Search Attributes</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Global Attributes\n\nGlobal attributes are available on all pages.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Option with Sample Assignment</th>\n    <th>Default Value</th>\n    <th>Details and Other Allowable Values/Results</th>\n  </tr>\n  <tr>\n    <td>customer:</td>\n    <td></td>\n    <td></td>\n    <td>Customer attributes are always included, and are available if the active shopper is logged in.</td>\n  </tr>\n\n  <tr>\n  \t<td></td>\n  \t<td>addresses: true</td>\n    <td>true – on address page null – on all other pages</td>\n    <td>Boolean indicating whether to retrieve addresses for this customer. No filtering available. Default sorting is by address id, from lowest to highest. <b>null or false:</b> Do not retrieve addresses. <b>true</b>: Retrieve addresses.</td>\n  </tr>\n  \n  <tr>\n    <td></td>\n    <td>returns: true</td>\n    <td></b>true – on returns page; <b>null</b> – on all other pages</td>\n    <td>Boolean indicating whether to retrieve product-return requests for this customer. No filtering available.<b>true</b>: Retrieve requests. <b>null</b> or <b>false</b>: Do not retrieve requests.</td>\n  </tr>\n  \n  <tr>\n    <td></td>\n    <td>wishlists: <br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No wishlists displayed.\n      <br><p></p>\n      &lt;number&gt; limits the number of wishlists displayed.\n      <br><p></p>\n      If &lt;number&gt; is not defined, retrieves an unlimited number of wishlists.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">orders: <br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">Contains all orders, complete or not.\n      <br><p></p>\n      null: no orders displayed.\n      <br><p></p>\n      &lt;number&gt; limits the number of orders displayed.\n      <br><p></p>\n      If &lt;number&gt; is not defined, displays 20 orders. (Default sorting is by order id, from lowest to highest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">recently_viewed_products:</td>\n    <td class=\"\">null</td>\n    <td class=\"\">Boolean indicating whether to display recently viewed products.<br><p></p>\n\nNo filtering available.</td>\n  </tr>\n\n  <tr>\n    <td class=\"\">products:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(When filtering/limiting, products' default sorting is by order id, from lowest to highest.)</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">featured: <br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No featured products displayed.<br><p></p>\n&lt;number&gt; limits the number of featured products displayed.\n      <br><p></p>\n      If &lt;number&gt; is not set, defaults to 4 products.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">new:<br>\n      <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\nnull</td>\n    <td class=\"\">null: No new products displayed.<br><p></p>\n&lt;number&gt; limits the number of new products displayed. Maximum allowable value is 25.\n      <br><p></p>\n      If &lt;number&gt; is not defined, defaults to 8 products.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">top_sellers: <br>\n      <span class=\"indent1\">limit:  &lt;number&gt;</span></td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No top-selling products displayed.\n      <br><p></p>\n      &lt;number&gt; limits the number of top sellers displayed.\n      <br><p></p>\n      If &lt;number&gt; is not defined, defaults to all top sellers.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">carousel: true</td>\n    <td class=\"\"></td>\n  <td class=\"\">null</td>\n    <td class=\"\">Boolean indicating whether to display a carousel on storefront.\n      <br><p></p>\n      No filtering available.\n      <br><p></p>\n      null or false: No carousel display.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">blog:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(Default sorting is by published_date, from most-recent to earliest.)</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">recent_posts:<br>\n      <span class=\"indent1\">limit: &lt;number&gt;</span>\n    </td>\n    <td class=\"\">20</td>\n    <td class=\"\">null: No recent blog posts displayed.\n      <br><p></p>      \n      &lt;number&gt; limits the number of recent blog posts displayed.\n      <br><p></p>      \n      If &lt;number&gt; is not defined, defaults to the maximum of 20 blog posts.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">summary: &lt;number&gt;</td>\n    <td class=\"\">100</td>\n    <td class=\"\"><!-- null: No summary characters displayed.<br><p></p> -->      \n      &lt;number&gt; sets the number of characters to display in each blog-post summary.\n      <br><p></p>\n      If &lt;number&gt; is not defined, displays 100 characters.</td>\n  </tr>\n  <tr>\n    <td class=\"\">cart: true</td>\n    <td class=\"\"></td>\n    <td class=\"\">false</td>\n    <td class=\"\">Boolean indicating whether to retrieve cart data.<br><p></p>\ntrue: Return cart data.<br><p></p>\nfalse: Do not return cart data.</td>\n  </tr>\n  \n  <tr>\n    <td>categories: true</td>\n    <td></td>\n    <td>false</td>\n    <td>Boolean indicating whether to retrieve the <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/categories\">category tree</a> during an AJAX request.\n      <br><p></p>\n      true: Retrieve the category tree.\n      <br><p></p>\n      false: Do not retrieve the category tree.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">description: true</td>\n    <td class=\"\">\nfalse</td>\n    <td class=\"\">\nBoolean indicating whether to retrieve category descriptions dynamically from the database.\n      <br><p></p>\n      Set to true for themes that must display category descriptions when pages render. (This can slow page loads.)</td>\n  </tr>\n    \n  <tr>\n    <td>shop_by_brand:</td>\n    <td>limit: &lt;number&gt;</td>\n    <td>null</td>\n    <td>Typically used in a footer or sidebar.<br><p></p>\nnull: Do not display this brand list.<br><p></p>\n&lt;number&gt; limits the number of brands to return.<br><p></p>\nIf &lt;number&gt; is not defined, returns 10 brands, ordered by the number of products per brand.</td>\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_global"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Category Attributes \n\nCategory attributes are available in the context of a category.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Option with Sample Assignment</th>\n    <th>Default Value</th>\n    <th>Details</th>\n  </tr>\n  <tr>\n    <td>category:</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n\n  <tr>\n    <td></td>\n    <td>shop_by_price:</td>\n    <td>\nfalse</td>\n    <td>\nBoolean indicating whether to display Shop-by-Price controls.</td>\n  </tr>\n\n  <tr>\n    <td></td>\n    <td>products:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td>\n16</td>\n    <td>\nDefines the number of products displayed per page for this category. Range of possible values is 1&ndash;100 products.</td>\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_category"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Blog Attributes\n\nBlog attributes are available in the context of a blog.\n\n<table>\n  <tr>\n    <th>Attribute</th>\n    <th>Sub-Attribute</th>\n    <th>Option with Sample Assignment</th>\n    <th>Default Value</th>\n    <th>Details</th>\n  </tr>\n  \n  <tr>\n    <td class=\"\">blog:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">posts:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(Default sorting is by published_date, from most-recent to earliest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: No blog posts displayed.<br><p></p>\n      &lt;number&gt; limits the number of blog posts displayed.<br><p></p>\n      Maximum is 20 blog posts per page.\n    </td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">pages: &lt;number&gt;</td>\n    <td class=\"\">5</td>\n    <td class=\"\"><b>null:</b> No pagination. <b>&lt;number&gt;</b> sets the number of pages to display in pagination links. If <b>&lt;number&gt; is not defined</b>, defaults to 5 pages.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">summary: &lt;number&gt;</td>\n    <td class=\"\">250</td>\n    <td class=\"\"> <!-- null: No summary characters displayed.<br><p></p> -->  \n      &lt;number&gt; sets the number of characters to display in each blog-post summary.<br><p></p>\nIf &lt;number&gt; is not defined, displays 250 characters.</td>\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_blog"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Product Attributes \n\nProduct attributes are available in the context of a product.\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td class=\"\">product:</td>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">(When filtering/limiting, products' default sorting is by order id, from lowest to highest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">videos:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n[unlimited]</td>\n    <td class=\"\">If <b>product.videos is not defined</b>, no videos are returned.\n      <b>If product.videos is defined</b>, the default behavior is to return all videos. <b>If product.videos.limit is also defined</b>, &lt;number&gt; sets the maximum number of videos returned.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">images:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n[unlimited]</td>\n    <td class=\"\"><b>If product.images is not defined</b>, no images are returned. <b>If product.images is defined</b>, you must also define product.images.limit, which throttles the number of images returned. The maximum allowable value for this option's &lt;number&gt; parameter is 5 images.</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">reviews: true<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td>[false]</td>\n    <td>Boolean indicating whether to display product reviews. <b>If product.reviews is present, and is not explicitly set to \"false\"</b>, reviews will appear. <b>If &lt;number&gt; is not defined</b>, defaults to 10 reviews (When filtering/limiting reviews, default sorting is by review id, from lowest to highest).</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">related_products:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n[unlimited]</td>\n    <td class=\"\">Displays products that are related by name. <b>&lt;number&gt;</b> limits the number of products displayed. <b>If &lt;limit&gt; is absent or undefined</b>, the default behavior is to display all related products. Inserting <b>“limit:”</b> with no integer will display 0 products.</td>\n  </tr>\n  \n  <tr>\n    <td></td>\n    <td>similar_by_views:<br>\n        <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td>[unlimited]</td>\n    <td>Displays products similar to those displayed in the current page context. <b>&lt;number&gt;</b> limits the number of products displayed. <b>If &lt;limit&gt; is absent or undefined</b>, default is to display 4 products.\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_product"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Brand Attributes\n\nBrand attributes are available in the context of a brand.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td>brand:</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">products: <br>\n      <span class=\"indent1\">limit: &lt;number&gt;</span></td>\n    <td class=\"\">\n50</td>\n    <td class=\"\">\nDefines the number of products displayed per page for this brand. Range of possible values is 1&ndash;50 products.</td>\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_brand"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Brand List Attributes\n\nThese attributes are available in the context of a list of brands.<br><br>\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td>brands:</td>\n    <td></td>\n    <td></td>\n    <td>(When retrieving a collection of brands, default sorting is by brand id, from lowest to highest.)</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">50</td>\n    <td class=\"\">\nSets the number of brands displayed in the list. If &lt;limit&gt; is not defined, returns all brands, up to a maximum of 50.</td>\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_brand-list"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Cart Attributes \n\nCart attributes are available in the context of a shopper's cart.\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Sub-Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td>cart</td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>suggestions:</td>\n    <td></td>\n    <td></td>\n    <td>Suggested products to display to shopper, based on cart contents. <NOBR>(If enabled,</nobr> these suggestions appear only immediately after the shopper adds an item to the cart.)</td>\n  </tr>\n  <tr>\n    <td class=\"\"></td>\n    <td class=\"\"></td>\n    <td class=\"\">limit: &lt;number&gt;</td>\n    <td class=\"\">null</td>\n    <td class=\"\">null: Do not display suggested products.<br><p></p>\n&lt;number&gt; limits the number of suggested products to return.\nIf &lt;number&gt; is not defined, returns 4 suggested products.</td>\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_cart"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Search Attributes \n\nSearch attributes are available in the context of a search results page.\n\n<table>\n  <tr>\n    <td>Attribute</td>\n    <td>Sub-Attribute</td>\n    <td>Option with Sample Assignment</td>\n    <td>Default Value</td>\n    <td>Details</td>\n  </tr>\n  <tr>\n    <td>search</td>\n    <td></td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n  <tr>\n    <td></td>\n    <td>product_results:</td>\n    <td></td>\n    <td></td>\n    <td></td>\n  </tr>\n\n  <tr>\n    <td></td>\n    <td></td>\n    <td>limit: &lt;number&gt;</td>\n    <td>16</td>\n    <td>\nDefines the number of product search results displayed per page. Range of possible values is 1&ndash;100 products.</td>\n  </tr>\n</table>",
                          "header": {
                            "anchor": "front-matter-attributes-reference_search"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Template Files",
              "route": {
                "path": "/template-files"
              },
              "data": {
                "children": [
                  {
                    "title": "Templates Directory",
                    "route": {
                      "path": "/templates-directory"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Components Subdirectory",
                          "route": {
                            "path": "/components-subdirectory"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Components Subdirectory</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#components_components-subdirectory\">Components Subdirectory</a></li>\n    <li><a href=\"#components_naming-requirements\">Naming Requirements</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Components Subdirectory\n\nThe <span class=\"fp\">/templates/components/</span> subdirectory contains Handlebars and HTML components (provided as <span class=\"fn\">.html</span> files) to create page structure. You can reuse these code snippets and partials throughout your theme.\n\nYou can take a look at the Cornerstone components subdirectory and its contents in the [Github repository here](https://github.com/bigcommerce/cornerstone/tree/master/templates/components).\n\nSubdirectories of <span class=\"fp\">/templates/components/</span> group together pages that serve a particular storefront function. For example, [here](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/search) are the <span class=\"fn\">.html</span> files contained in the <span class=\"fp\">/search/</span> subdirectory.\n\nFurthermore, the <a href=\"https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common\"><span class=\"fp\">/common/</span> subdirectory</a> contains forms and icons resources, plus a collection of single-purpose files.",
                                "header": {
                                  "anchor": "components_components-subdirectory"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Naming Requirements\n\nThree children of the <span class=\"fp\">/templates/components/</span> subdirectory each contain a set of templates whose file names must remain constant. However, you are free to move each set of template files to other path locations – as long as you keep each set together in one folder and specify the new location. Those folders are note below:\n\n* [common/forms](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms)\n* [common/faceted-search/facets](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/faceted-search/facets)\n* [common/products/options](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/products/options)",
                                "header": {
                                  "anchor": "components_naming-requirements"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "You can use front matter to specify resources only on pages in the `/templates/pages/` subdirectory, not on pages here in the `/templates/components/` subdirectory.\n\nPlease bear in mind that if a front-matter directive contains an invalid option, Stencil CLI will silently ignore that option.",
                                  "title": " Front-Matter Restrictions",
                                  "type": "warning"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Cornerstone GitHub Respository\n* [common/forms](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms)\n* [common/faceted-search/facets](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/faceted-search/facets)\n* [common/products/options](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/products/options)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Layout Subdirectory",
                          "route": {
                            "path": "/layout-subdirectory"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Layout Subdirectory</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#layout_layout-subdirectory\">Layout Subdirectory</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Layout Subdirectory\n\nThe <span class=\"fn\">/templates/layout/</span> subdirectory is where you assemble Handlebars resources to define your storefront site’s overall structure (header, footer, etc.). You can implement multiple layouts here for different use cases, making it easy to switch between different look-and-feel variations of the same theme.\n\nAs prototypes, we have provided a minimal <span class=\"fn\"><a href=\"https://github.com/bigcommerce/cornerstone/blob/master/templates/layout/base.html\">base.html</a></span> page in this subdirectory. To develop your theme, you can copy and/or modify this prototype.\n\nBe sure to set permission `755 (drwxr-xr-x)` on any new **subdirectories** that you add. Also, be sure to set permission `644 (rw-r--r--)` on any new **files** that you add. Without these permissions, running your theme locally will fail with multiple error messages. Bundling your theme will also fail, blocking its upload to a store.",
                                "header": {
                                  "anchor": "layout_layout-subdirectory"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "You can use front matter to specify resources only on pages in the <span class=\"fn\">/templates/pages/</span> subdirectory but **not** on pages here in the <span class=\"fn\">/templates/layout/</span> subdirectory. If a front-matter directive contains an invalid option, Stencil CLI will silently ignore that option.",
                                  "title": "Front Matter Restrictions",
                                  "type": "warning"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n* [Cornerstone Layout Directory](https://github.com/bigcommerce/cornerstone/blob/master/templates/layout/base.html)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Pages Subdirectory",
                          "route": {
                            "path": "/pages-subdirectory"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Pages Subdirectory</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#pages_pages-subdirectory\">Pages Subdirectory</a></li>\n    <li><a href=\"#pages_naming-requirements\">Naming Requirements</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Pages Subdirectory\n\nThe <span class=\"fp\">/templates/pages/</span> subdirectory contains the complete set of base template pages used to construct a BigCommerce online store. These pages call resources from the <span class=\"fp\">/templates/components/</span> and <span class=\"fp\">/templates/layout/</span> subdirectories.\n\nChildren of the [pages subdirectory](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages) group together pages that serve a particular **storefront function**. For example, you can view contents of the [/errors/](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages/errors) and [/gift-certificate/](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages/gift-certificate) subdirectories.\n\nThe subdirectory’s [.html files](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages) are single-purpose pages.",
                                "header": {
                                  "anchor": "pages_pages-subdirectory"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Naming Requirements\n\nDo not change the names of the <span class=\"fp\">/templates/pages/</span> subdirectory or its contained files. These default names are required for the storefront to compile properly. You can, however, edit pages’ front‑matter and Handlebars resources to customize the storefront theme’s look and function.",
                                "header": {
                                  "anchor": "pages_naming-requirements"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "body": "Pages in the <span class=\"fp\">/templates/pages/</span> subdirectory are the **only** place you can insert and modify\nYAML front-matter attributes to customize the rendered storefront.",
                                  "title": " Front-Matter Restriction"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n* [Cornerstone Pages Subdirectory](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Google Analytics Enhanced ECommerce",
                          "route": {
                            "path": "/google-analytics-enhanced-ecommerce"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Google Analytics Enhanced ECommerce</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#google-analytics_prerequisites\">Prerequisites</a></li>\n    <li><a href=\"#google-analytics_implementing\">Implementing Data Tags</a></li>\n    <li><a href=\"#google-analytics_data-tag-ref\">Data Tag Reference</a></li>\n    <li><a href=\"#google-analytics_additional-resources\">Additional Resources</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Google Analytics is a free analytics tool that helps you track visitors and conversions on your store. BigCommerce has updated the Google Analytics integration to support Enhanced Ecommerce.  As apart of the Enhanced ECommerce feature, Stencil themes now support Data Tags. \n\nData Tags provide detailed data on the way shoppers interact with your store’s products. However, data tags are not limited to only product data collection. Data Tags can also track your store’s header and footer for promotions and can collect data on whether those promotions were viewed and/or clicked. BigCommerce’s Data Tags are powered by [Segment](https://segment.com/docs/destinations/google-analytics/) and [Platform.js](https://github.com/segment-integrations/analytics.js-integration-google-analytics/blob/master/lib/index.js), and will send your store’s product data through to Google Analytics. \n\nCornerstone versions 2.6.0+ will have Data Tags already included in the theme.",
                                "header": {}
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "error",
                                  "body": "While you can implement data tags with Blueprint themes, we do not currently have specific documentation on how to do this. The data tag HTML structure, however, will be the same as it is in a Stencil theme. ",
                                  "title": "GAEE for Blueprint"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Prerequisites\n\n* Current active BigCommerce store\n* Using [Optimized One-Page Checkout](https://support.bigcommerce.com/s/article/Optimized-Single-Page-Checkout)\n\nData Tags will work on any theme. For this tutorial, we will be adding data tags to the Cornerstone theme. \n\n### Downloading a Theme\nThis tutorial will be based off of Cornerstone. If you do not already have a local copy of Cornerstone on your machine, see [Downloading the Cornerstone Theme](/stencil-docs/getting-started/advanced-installation-options/downloading-the-cornerstone-theme).\n\nIf you would like to implement Data Tags on your custom theme and do not already have a copy of your custom theme downloaded, see [Downloading/Customizing Marketplace Themes](/stencil-docs/getting-started/advanced-installation-options/downloading-a-marketplace-theme).\n\nNote: the remainder of this tutorial will be working off the refer to the theme’s base folder as ‘cornerstone’.",
                                "header": {
                                  "anchor": "google-analytics_prerequisites"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Implementing Data Tags on a Cornerstone Based Theme\n\n### Include the Enhanced ECommerce Property\n\n1. Open your local copy of your theme and navigate to the theme’s <span class=\"fp\">cornerstone/config.json</span> file.\n\n2. In the config.json file, navigate to the features array. There’s should be a property in this array called `enhanced ecommerce`. If the `enhanced ecommerce` property is not present in the features array, add it. The features object should then look similar to the code below.\n",
                                "header": {
                                  "anchor": "google-analytics_implementing"
                                }
                              },
                              {
                                "type": "code",
                                "data": "    \"features\": [\n      \"fully_responsive\",\n      \"mega_navigation\",\n      \"multi_tiered_sidebar_menu\",\n      \"masonry_design\",\n      \"frontpage_slideshow\",\n      \"quick_add_to_cart\",\n      \"switchable_product_view\",\n      \"product_comparison_table\",\n      \"complex_search_filtering\",\n      \"customizable_product_selector\",\n      \"cart_suggested_products\",\n      \"free_customer_support\",\n      \"free_theme_upgrades\",\n      \"high_res_product_images\",\n      \"product_filtering\",\n      \"advanced_quick_view\",\n      \"product_showcase\",\n      \"persistent_cart\",\n      \"one_page_check_out\",\n      \"product_videos\",\n      \"google_amp\",\n      \"customized_checkout\",\n      \"account_payment_methods\",\n      \"enhanced_ecommerce\",\n      \"csrf_protection\"\n    ]",
                                "header": {
                                  "subtitle": "config.json",
                                  "title": "Enhanced ECommerce Feature"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "25",
                                      "to": "25"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": "You are now ready to begin adding data tags into the HTML files across your Cornerstone theme. "
                              },
                              {
                                "type": "text",
                                "data": "### Adding Data Tags into Cornerstone’s HTML files\n\nData tags must be manually added to a product in order to track shopper events and interactions with a product. Since data tags collect product data at a very granular level, you will have to add tags in multiple locations for a single product to get a comprehensive look at the product's data. It's imperative to note that a product can be viewed by clicking any of the following:\n\n* The name of the product\n* The “Quick View” Button\n* The product image\n\nSo, if you would like to track the clicks on a specific product, in order to ensure you get a fully comprehensive look at shoppers’ interactions with a product, you will want to include a data tag on each of these fields. If a specific product possesses multiple data tags, the data tag that is closest to the product is the one that  will track clicks, product impressions, or product views.\n\nData tags will be implemented in your store by using simple HTML. In order to begin tracking, you will add data tags as an attribute to the already existing HTML tags present in your theme. \n\nSee [Pull Request #1377](https://github.com/bigcommerce/cornerstone/pull/1377/commits/55fc73eeb1edc6e140005ca811f090f06ab35435) to see how Data Tags were implemented in Cornerstone 2.6.0.\n\n### Data Tag Implementation Example\n\nYou can see a data tag implemented in the HTML form tag in the code sample below:"
                              },
                              {
                                "type": "code",
                                "data": "<form action=\"{{urls.compare}}\" method='POST' data-list-name=\"Brand: {{brand.name}}\" data-product-compare>\n    {{#if theme_settings.product_list_display_mode '===' 'grid'}}\n        {{> components/products/grid products=brand.products show_compare=brand.show_compare theme_settings=theme_settings event=\"list\"}}\n    {{else}}\n        {{> components/products/list products=brand.products show_compare=brand.show_compare theme_settings=theme_settings event=\"list\"}}\n    {{/if}}\n</form>\n\n{{> components/common/paginator pagination.brand}}",
                                "config": {
                                  "mode": "html",
                                  "highlightRange": [
                                    {
                                      "from": "1",
                                      "to": "2"
                                    }
                                  ]
                                },
                                "header": {
                                  "title": "Data Tag HTML"
                                }
                              },
                              {
                                "type": "text",
                                "data": "In the above snippet, the data tag is embedded in a `<form>` HTML tag. The data tag is `data-list-name` and its value is `“Brand: {{brand.name}}”`."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Data Tag Reference\n\nCurrently, BigCommerce supports 11 different data tags. Below is a table with a breakdown of each tag and its description.",
                                "header": {
                                  "anchor": "google-analytics_data-tag-ref"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "body": "* If tracking promotions data, either `data-banner-id` or `data-name` is required.\n* If tracking data for a product, either `data-entity-id` or `data-name` is required.\n* If tracking data for a product list, `data-product-list` or `data-entity-id` is required.\n\nThe “tracked product” refers to the product on which you are inserting the data tag.",
                                  "title": "Mandatory Data"
                                }
                              },
                              {
                                "type": "html",
                                "data": "<table>\n  <tr>\n  \t<th>Data Tag</th>\n    <th>Description</th>\n  \t<th>Value Type</th>\n  \t<th>Example</th>\n  </tr>\n   <tr>\n     <td><code>data-list-name</code></td>\n     <td>The <code>data-list-name</code> tag denotes the name of the list that will be reflected on Google Analytics.</td>\n  \t<td>string or handlebars helper</td>\n     <td> <b>String Example</b>:<code>data-list-name=“Kitchen Appliances”</code> \t\n       <br><br>\n<b>Handlebars Value Example</b>: The <code>data-list-name</code> tag can also get its value using Handlebars. For example, if you are adding a data tag to your carousel products in products/carousel.html, you could create the tag <code>data-list-name=\"{{list}}\"</code> and define the list value in products/new.html to be: <code>list=\"New products\"</code></td>\n  </tr>\n   <tr>\n     <td><code>data-entity-id</code></td>\n     <td>The <code>data-entity-id</code> is equal to the tracked item’s id.</td>\n  \t<td>integer</td>\n    <td><code>data-entity-id=12</code></td>\n  </tr>\n   <tr>\n    <td><code>data-position</code></td>\n       <td>The <code>data-position</code> tag is equal to the tracked product’s position or the tracked promotion’s position.</td>\n  \t<td>If the data-tag is for a promotion, the value type should be string. The string should denote where the promotion is.\n       <br><br>\n       Value is an integer if creating the data tag for a product. The integer should represent the product’s placement. An example use case for this data tag is to answer a question like, “does the product in position one sell more than the product in position four?”</td>\n       <td><b>String Value Example:</b> <code>data-position=\"center\"</code>\n       <br><br>\n         <b>Integer Value Example:</b> <code>data-position=2\n</code>\n       </td>\n  </tr>\n     <tr>\n    <td><code>data-banner-id</code></td>\n       <td>The <code>data-banner-id</code> tag is the id of the banner being tracked. The banner id is not to be mistaken with the promotion id.</td>\n  \t<td>integer</td>\n       <td><code>data-banner-id=5</code></td>\n  </tr>\n     <tr>\n  \t<td><code>data-event-type</code></td>\n       <td>The <code>data-event-type</code> tag is equal to the shopper event that will be tracked. There are four shopper/product interactions you can measure and set. Custom events are not yet implemented.</td>\n  \t<td>string that can be either:\n      <ul>\n        <li>“promotion”</li> \n        <li>“promotion click”</li>\n        <li>“product”</li>\n        <li>“list”</li>\n       <td><code>data-event-type=“promotion”</code></td>\n  </tr>\n     <tr>\n  \t<td><code>data-name</code></td>\n       <td>The <code>data-name</code> tag is equal to the tracked product’s or banner’s name. \n</td>\n  \t<td>string or handlebars helper</td>\n       <td><b>String Value Example:</b> <code>data-name=“Ruffle Off-the-Shoulder Top”</code>\n         \n         <br><br>\n         \n         <b>Handlebars Value Example:</b> The <code>data-name</code> tag can also get its value using Handlebars.\n\n For example, if you are adding a data tag to your footer in products/footer.html, you could create the tag: <code>data-name=”{{this.banner-name}}”</code>\n\nAlternatively, if you are adding a data tag to a product list item in products/list-item.html, you could create the tag below <code>data-name=“{{name}}”</code> as long as these values are defined.</td>\n  </tr>\n     <tr>\n  \t<td><code>data-product-category</code></td>\n       <td>The <code>data-product-category</code> tag is equal to the tracked product’s category.\n</td>\n  \t<td>string</td>\n       <td><code>data-product-category=“Women’s Apparel”</code></td>\n  </tr>\n     <tr>\n  \t<td><code>data-product-brand</code></td>\n       <td>The <code>data-product-brand</code> tag is equal to the tracked product’s brand.\n</td>\n  \t<td>string</td>\n       <td><code>data-product-brand=“Ralph Lauren Corporation”</code></td>\n  </tr>\n     <tr>\n  \t<td><code>data-product-price</code></td>\n       <td>The <code>data-product-price</code> tag is equal to the tracked product’s price.\n</td>\n  \t<td>integer</td>\n       <td><code>data-product-price=“27.99”</code></td>\n  </tr>\n     <tr>\n  \t<td><code>data-product-sku</code></td>\n       <td>The <code>data-product-sku</code> tag is equal to the tracked product’s sku value.\n</td>\n  \t<td>string</td>\n       <td><code>data-product-sku=”S18T-Ots-YM”</code></td>\n  </tr>\n     <tr>\n  \t<td><code>data-product-variant</code></td>\n       <td>The <code>data-product-variant</code> is equal to the tracked product’s variant.\n</td>\n  \t<td>string</td>\n       <td><code>data-product-variant=”4-Yellow”</code></td>\n  </tr>\n</table>"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "\n## Resources\n\n### Pull Requests\n* [Cornerstone PR #1377](https://github.com/bigcommerce/cornerstone/pull/1377/commits/55fc73eeb1edc6e140005ca811f090f06ab35435) (BigCommerce Github)\n* [Google Analytics Product Data Tags](https://github.com/bigcommerce/cornerstone/commit/9a4ddcae7f531a9d542aeb8ebf38c8bda2656b1c) (BigCommerce Github)\n### Related Articles\n* [Customizing the BigCommerce Google Analytics Enhanced ECommerce Integration](https://medium.com/bigcommerce-developer-blog/customizing-the-bigcommerce-google-analytics-enhanced-ecommerce-integration-803d4338d018) (BigCommerce Developer Blog)\n### Additonal Resources\n* [Google Analytics Enhanced ECommerce](https://developers.google.com/analytics/devguides/collection/analyticsjs/enhanced-ecommerce#ecommerce-data) (Google)",
                                "header": {
                                  "anchor": "google-analytics_additional-resources"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Google AMP",
                          "route": {
                            "path": "/google-amp"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Google AMP</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#google-amp_overview\">Google AMP Overview</a></li>\n    <li><a href=\"#google-amp_implement\">Implement Google AMP into your Stencil theme</a></li>\n    <li><a href=\"#google-amp_location-of-amp-files\">Location of AMP Files within Cornerstone</a></li>\n    <li><a href=\"#google-amp_local-testing\">Local Testing</a></li>\n    <li><a href=\"#google-amp_additional-resources\">Additional Resources</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Google AMP Overview\n\nGoogle AMP aka Accelerated Mobile Pages is an [open source initiative](https://www.ampproject.org/) to make websites load faster across mobile devices.",
                                "header": {
                                  "anchor": "google-amp_overview"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Implement Google AMP into your Stencil theme\n\nGoogle AMP will be automatically added if your store's theme is based on Cornerstone themes 1.6.0+.\n\nPlease see the user documentation on configuring Google AMP into your store via the [Control Panel](https://support.bigcommerce.com/articles/Public/Google-AMP?_ga=2.135679409.1406470381.1541441523-967431010.1523308107).\n\nIf you are using a custom theme for your storefront, you will have to perform a few extra steps in order to fully configure Google AMP on your store. Reference the text information and code samples below to do so. If you do not have a custom theme, you can bypass the remainder of this article.\n\nAfter you have completed the previous steps, move onto these steps if you have a custom storefront theme activated.\n\n1. Ensure the Google Analytics ID has been added in the control panel. This is what will be used to track AMP analytics. You can use more than one ID to track [AMP traffic vs non-AMP traffic](https://developers.google.com/analytics/devguides/collection/amp-analytics/#amp_vs_non-amp_traffic).\n2. In the `/amp/category.html`, `layout/amp.html` and `amp/product.html` template files replace `theme_settings` with `settings`.\n\n\nExample:  \nIn `layout/amp.html` (referenced below) replace `theme_settings.amp_analytics_id` with\n`settings.amp_analytics_id`.",
                                "header": {
                                  "anchor": "google-amp_implement"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{{{snippet 'htmlhead'}}}\n         <script async custom-element=\"amp-form\" src=\"https://cdn.ampproject.org/v0/amp-form-0.1.js\"></script>\n         <script async custom-element=\"amp-sidebar\" src=\"https://cdn.ampproject.org/v0/amp-sidebar-0.1.js\"></script>\n\t\t\t  {{#if settings.amp_analytics_id}}\n         \t\t\t<script async custom-element=\"amp-analytics\" src=\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\"></script>\n         {{/if}}\n         {{#block \"amp-scripts\"}}{{/block}}",
                                "header": {
                                  "title": "templates/layout/amp.html"
                                },
                                "config": {
                                  "highlightRange": [
                                    {
                                      "from": "4",
                                      "to": "4"
                                    }
                                  ],
                                  "mode": "js"
                                }
                              },
                              {
                                "type": "text",
                                "data": "In [config.json](https://github.com/bigcommerce/cornerstone/blob/master/config.json) (referenced below) make sure `google_amp` is still in the features array. See below for code snippet."
                              },
                              {
                                "type": "code",
                                "data": "  \"features\": [\n      \"fully_responsive\",\n      \"mega_navigation\",\n      \"multi_tiered_sidebar_menu\",\n      \"masonry_design\",\n      \"frontpage_slideshow\",\n      \"quick_add_to_cart\",\n      \"switchable_product_view\",\n      \"product_comparison_table\",\n      \"complex_search_filtering\",\n      \"customizable_product_selector\",\n      \"cart_suggested_products\",\n      \"free_customer_support\",\n      \"free_theme_upgrades\",\n      \"high_res_product_images\",\n      \"product_filtering\",\n      \"advanced_quick_view\",\n      \"product_showcase\",\n      \"persistent_cart\",\n      \"one_page_check_out\",\n      \"product_videos\",\n      \"google_amp\",\n      \"customized_checkout\"\n    ]",
                                "header": {
                                  "title": "config.json"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "If you are having any implementation issues, review the [full Pull Request #964](https://github.com/bigcommerce/cornerstone/pull/946/files) for changes that need to be made to implement Google AMP. "
                              },
                              {
                                "type": "text",
                                "data": "## Location of AMP Files within Cornerstone\n\n\nIn versions 1.6.0+ of Cornerstone, there are a few key file locations where the AMP information is located:\n\n* Base AMP layout template is located in [templates/layout/amp.html](https://github.com/bigcommerce/cornerstone/blob/master/config.json).\n* The files for Google AMP are located in [/templates/pages/amp](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages/amp). This is where `product.html` and `category.html` are located. (Note: there may be other files in this folder, but the product and category pages are the only one pages that currently support Google AMP).\n* The CSS is located in [templates/components/amp/css](https://github.com/bigcommerce/cornerstone/tree/master/templates/components/amp/css).\n\nAfter the Google Analytics ID has been added via Control Panel, you can toggle AMP on the product and category pages using the [settings](https://support.bigcommerce.com/articles/Public/Google-AMP?_ga=2.205799699.1406470381.1541441523-967431010.1523308107) there.\n",
                                "header": {
                                  "anchor": "google-amp_location-of-amp-files"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Local Testing\n\nYou can test your AMP enabled pages at the following endpoints when running your store locally:\n\n* `localhost:3000/amp/category_url/`\n* `localhost:3000/amp/product_url/`",
                                "header": {
                                  "anchor": "google-amp_local-testing"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Additional Resources\n\n* [Adding Analytics to your AMP Pages](https://developers.google.com/analytics/devguides/collection/amp-analytics/)\n* [Adding Google AMP in the Control Panel](https://support.bigcommerce.com/articles/Public/Google-AMP?_ga=2.228533533.1406470381.1541441523-967431010.1523308107)\n* [Google AMP Home Page](https://www.ampproject.org/)\n* [Google Developer AMP Resources](https://developers.google.com/amp/)",
                                "header": {
                                  "anchor": "google-amp_additional-resources"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Using Disqus with Stencil",
                          "route": {
                            "path": "/using-disqus-with-stencil"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Using Disqus with Stencil</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#using-disqus_stencil-blog\">Integrating Disqus with your Stencil blog</a></li>\n    <li><a href=\"#using-disqus_stencil-product-pages\">Integrating Disqus with your Stencil Product Pages</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Stencil themes have the ability to integrate with Disqus, a third-party commenting system that allows users to leave blog comments on blog posts made with Stencil's built-in blog. Disqus can also be used with on Stencil product pages to allow comment and review threads on individual products.",
                                "header": {}
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Integrating Disqus with your Stencil blog\n\nTo use Disqus blog comments in Stencil, follow the steps below:\n\n1. Log in to your BigCommerce Control Panel.\n2. Navigate to **Storefront Design** > **My Themes**.\n3. Open Edit Theme Files for your theme.\n4. Navigate to **Templates** > **Pages** > <sp class=\"fn\">blog-post.html</span>.\n5. Paste your Disqus Universal Code before the closing `{{/partial}}` tag.\n6. Save your files.\n7. Apply your theme.",
                                "header": {
                                  "anchor": "using-disqus_stencil-blog"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Integrating Disqus with your Stencil Product Pages\n\n1. Log in to your BigCommerce Control Panel.\n2. Navigate to **Storefront Design** > **My Themes**.\n3. Open Edit Theme Files for your theme.\n4. Navigate to **Templates** > **Pages** > <span class=\"fn\">product.html</span>.\n5. Paste your Disqus Universal Code before the closing `{{/partial}}` tag.\n6. In the Disqus Universal Code that you have posted, there is a function that reads like below:",
                                "header": {
                                  "anchor": "using-disqus_stencil-product-pages"
                                }
                              },
                              {
                                "type": "code",
                                "data": " var disqus_config = function () {\n        this.page.url = PAGE_URL;  // Replace PAGE_URL with your page's canonical URL variable\n        this.page.identifier = PAGE_IDENTIFIER; // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n    };",
                                "header": {
                                  "title": "Disqus Universal Code"
                                },
                                "config": {
                                  "mode": "js"
                                }
                              },
                              {
                                "type": "text",
                                "data": "Change the value of `this.page.url` to be `product.url;`, and the value of `this.page.identifier` to be `product.id`; so that the function now reads like below:"
                              },
                              {
                                "type": "code",
                                "data": "var disqus_config = function () {\n        this.page.url = product.url;\n        this.page.identifier = product.id;\n    };",
                                "header": {
                                  "title": "Disqus Universal Code",
                                  "subtitle": "Final Function"
                                }
                              },
                              {
                                "type": "text",
                                "data": "7. Save your files\n8. Apply your theme"
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Articles\n* [Enabling Disqus for Product Reviews](https://forum.bigcommerce.com/s/article/How-do-I-enable-Disqus-as-my-Comment-Service?_ga=2.224340315.1984523106.1539568940-967431010.1523308107#get-code)  (Blueprint)\n* [Using Disqus for Blog Comments](https://forum.bigcommerce.com/s/article/Using-Disqus-Comments?_ga=2.224340315.1984523106.1539568940-967431010.1523308107) (BigCommerce Community)"
                              }
                            ]
                          }
                        }
                      ],
                      "blocks": []
                    }
                  },
                  {
                    "title": "Custom Templates",
                    "route": {
                      "path": "/custom-templates"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "About Custom Templates",
                          "route": {
                            "path": "/about-custom-templates"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>About Custom Templates</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#custom-templates_stencil-versus-blueprint\">Stencil versus Blueprint Themes</a></li>\n    <li><a href=\"#custom-templates_video-demo\">Custom Templates Video Demo</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "The Stencil framework allows theme developers and merchants to assign custom layout templates to storefront pages of the following types:\n\n* Brand\n* Category\n* Product\n* Page (meaning \"Web Pages\" – the BigCommerce control panel's designation for static store pages, which can include the store's home page)\n",
                                "header": {
                                  "anchor": "custom-templates_about-custom"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Stencil versus Blueprint Themes\n\nIf you are migrating from BigCommerce's legacy Blueprint themes framework, please keep in mind these differences in how Stencil handles custom templates:\n\n* The brand option is entirely new in Stencil. If you are running on a Blueprint theme, you will not be able to create a custom template for brand pages.\n* Unlike Blueprint, Stencil does not require that custom templates' file names start with an underscore (_).\n* In the current Stencil release, you must create and bundle custom templates using Stencil CLI before you can upload the custom templates to stores. However, once you have created and uploaded templates, authorized store users can assign them to storefront pages through the control panel.",
                                "header": {
                                  "anchor": "custom-templates_stencil-versus-blueprint"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Custom Templates Video Demonstration\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/qgaDX7bhmd8\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>",
                                "header": {
                                  "anchor": "custom-templates_video-demo"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Articles\n * [Blueprint Themes](https://developer.bigcommerce.com/legacy/blueprint-themes)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Authoring, Testing, & Uploading Custom Templates",
                          "route": {
                            "path": "/authoring-testing-uploading-custom-templates"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Authoring, Testing, and Uploading Custom Templates</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#authoring-testing-uploading_authoring\">Authoring Templates</a></li>\n    <li><a href=\"#authoring-testing-uploading_local-mapping\">Local Mapping and Testing</a></li>\n\t\t<li><a href=\"#authoring-testing-uploading_theme-upload\">Theme Upload</a></li>\n\t\t<li><a href=\"#authoring-testing-uploading_troubleshooting\">Troubleshooting Template Authoring</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Authoring a Custom Template\n\nAs a the theme developer, you must first create the `custom` subdirectory in the `templates/pages` directory, and four required subdirectories inside of it (brand, category, product, page), which will result in the following directory paths:\n\n* <span class=”fp”>templates/pages/custom/brand</span> \n* <span class=”fp”>templates/pages/custom/category</span>\n* <span class=”fp”>templates/pages/custom/product</span>\n* <span class=”fp”>templates/pages/custom/page</span>\n\nNext,  create the template HTML files, and then place them in the appropriate `<theme-name>/templates/pages/custom/` subdirectories corresponding to the types listed above. ",
                                "header": {
                                  "anchor": "authoring-testing-uploading_authoring"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "body": "Be sure to set permission `755 (drwxr-x-r-x)` on any new subdirectories that you add.\nAlso, be sure to set permission `644 (rw-r–r–)` on any new files that you add.\n\nWithout these permissions, running your theme locally will fail with multiple error messages.\nBundling your theme will also fail, blocking its upload to a store.",
                                  "title": "Subdirectory/File Permissions Required"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Local Mapping and Testing\n\nTo test your custom templates locally, you must edit your `<theme-name>/.stencil` file to create mappings between each local template and a corresponding URL. Within the `.stencil` file, look for the following section:",
                                "header": {
                                  "anchor": "authoring-testing-uploading_local-mapping"
                                }
                              },
                              {
                                "type": "code",
                                "data": "\"customLayouts\": {\n    \"product\": {},\n    \"brand\": {},\n    \"category\": {},\n    \"page\": {}\n  }",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "In this section, you would populate keys to create mappings. As a simple example, assume that you have a product custom template named alternate-`product.html`, and you want to see that template locally at the URL: `http://localhost:3000/test-url/`. In this case, you must populate the product key as follows:"
                              },
                              {
                                "type": "code",
                                "data": "    \"product\": {\n    \t\"alternate-product.html\":\"/test-url/\"\n    },",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Expanded Mapping Example\n\nHere is a more-complete example in which the `brand`, `page`, and `category` keys are also populated:"
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"normalStoreUrl\": \"http://cornerstone-light-demo.mybigcommerce.com\",\n  \"port\": 3000,\n  \"username\": \"stencil\",\n  \"token\": \"xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\",\n  \"customLayouts\": {\n    \"product\": {\n      \"custom-product.html\": \"/custom-product/\"\n    },\n    \"brand\": {\n      \"custom-brand.html\": \"/brands/custombrand/\"\n    },\n    \"page\": {\n      \"custom-page.html\": \"/custom-page/\"\n    },\n    \"category\": {\n      \"custom-category.html\": \"/custom-category/\"\n    }\n  }\n}",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": "### Mapping Requirements and Options\n\nIn the .stencil mapping examples above:\n\n* Each mapped URL must be a URL for a brand, category, product, or static page that is _already configured in the store_. This means that you cannot insert a placeholder URL that is an arbitrary string of letters, such as /abcdefghijklmnop/.\n* Each URL’s trailing slash is _optional_.\n* The HTML files must reside in either the brand, category, product, or page subdirectories.\n* All brand URLs are nested under the /brands/ parent. Use URL encoding with brand URLs.\n* That parent for brand URLs is /brands/ (plural), while the corresponding subdirectory for HTML files is /brand/ (singular).\n* After editing your `.stencil` file, you must restart stencil to see your changes locally. Enter `stencil start` on the command line, appending any appropriate switches for your workflow (e.g.: `stencil start -e -n`).\n\n### Why These URL Requirements?\n\nWhen you create a local custom template page for products, you expect that page to have access to all Stencil product objects. However, the server cannot readily determine the page type of each local custom template. So we give it a hint: We instruct the server to look at the page type of the URL to which you have mapped the template.\n\nIn the above `.stencil` configuration example’s final entry, the server will look at the URL `/custom‑category/` within the store, deduce that the page type is `category`, and return a category context to Stencil CLI. This allows Stencil CLI to properly display the page in the browser when you visit http://localhost:3000/custom‑category/ locally, or when shoppers visit the corresponding public store page.\n\n### Mapping Multiple URLs\nBeyond the single URL mapped to each template in the above examples, you have the option of mapping an array of URLs to each template. This is shown in the following example for the product template:"
                              },
                              {
                                "type": "code",
                                "data": "  \"customLayouts\": {\n    \"product\": {\n      \"featured-product.html\": [\"/special-product-one\", \"/special-product-two\"],\n      \"clearance-product.html\": \"/clearance-product\"\n    },\n    \"brands\": {},\n    \"categories\": {},\n    \"page\": {}\n  }\n}",
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Theme Upload\n\nFinally, you must bundle and upload the theme to BigCommerce. See the Bundling and Uploading a Theme article for instructions on how to achieve this.",
                                "header": {
                                  "anchor": "authoring-testing-uploading_theme-upload"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Troubleshooting Template Authoring\n\nHere are solutions to some known problems in locally authoring and testing custom templates:\n\n### Viewing Custom Brand Templates Locally\n\nIf you are having trouble viewing custom brand templates locally, ensure that the URL used in your .stencil file is of the form: /brands/brandname. This is necessary because all the brand pages are located under the /brands/ URL path.\nAlso, bear in mind that currently, all brand URLs are Unicode-encoded. So, for example, you should replace a hyphen with: %252d.\n\n### Outdated Stencil CLI\n\nIf you have an old version of Stencil CLI installed, it might lack support for custom templates. You can easily update your CLI by executing the following command:",
                                "header": {
                                  "anchor": "authoring-testing-uploading_troubleshooting"
                                }
                              },
                              {
                                "type": "code",
                                "data": "npm install -g bigcommerce/stencil-cli",
                                "config": {
                                  "mode": "shell"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Assigning Templates to Pages",
                          "route": {
                            "path": "/assigining-templates-to-pages"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Assigning Templates to Pages</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#assigning_merchant-performed\">Merchant Performed Actions</a></li>\n\t\t<li><a href=\"#assigning_assigning-a-web-page\">Assigning a Web Page Template</a></li>\n    <li><a href=\"#assigning_assigning-a-product\">Assigning a Product, Brand, or Category Template</a></li>\n    <li><a href=\"#assigning_troubleshooting\">Troubleshooting Template Assignments</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Merchant Performed Actions\n\nOnce the developer has uploaded a theme to BigCommerce, the merchant (or other authorized store user) can assign custom templates to individual store pages in the BigCommerce Control Panel. The steps are similar whether assigning brands, categories, products, and static Web pages – with slight differences. Below, we show examples for assigning a Web Page and a Category. For further details, please see the [Stencil Custom Templates Knowledge Base article](https://forum.bigcommerce.com/s/article/Stencil-Themes#custom-template).",
                                "header": {
                                  "anchor": "assigning_merchant-performed"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Assigining a Web Page Template\n\nStarting from the BigCommerce control panel's left navigation pane:\n\n1. Select `Storefront` > `Web Pages`.\n2. From the resulting `View Web Pages` display, select the existing Page \n3. Name to which you want to assign a custom template. (Or select `Create a Web Page` to define a new page.)\n4. From the resulting `Edit a Web Page` display, scroll down to the `Template Layout File` drop-down list. Then select your desired custom template from that list, as shown below.",
                                "header": {
                                  "anchor": "assigning_assigning-a-web-page"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539930165487",
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true,
                                  "maxWidth": "600",
                                  "maxHeight": "400"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Some static page types do not allow you to assign custom templates. You can recognize these excluded pages because their `Edit a Web Page` display will not include a `Template Layout File` drop-down list.",
                                  "title": "Static Pages You Can't Assign",
                                  "type": "warning"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Assigning a Product, Brand, or Category Template\n\nStarting from the BigCommerce control panel's left navigation pane:\n\n1. Select `Products` > `View` (for a product page) `Products` > `Product Categories` (for a category page), or `Products` > `Brands` (for a brand page).\n2. Select the Product Name, Category Name, or Brand Name to which you want to assign a custom template. (Or select the `Add` or `Create` button at the upper left to define a new product, category, or band.)\n3. For a product page (only), you must select the `Other Details` tab to proceed to the next step.\n4. Scroll to the `Template Layout File` drop-down list, and select your desired custom template from that list, as shown below for a Category assignment.\n5. Click the Save & Exit or Save & Keep Editing button at the lower right.\n",
                                "header": {
                                  "anchor": "assigning_assigning-a-product"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539930552310",
                                "config": {
                                  "fluid": true,
                                  "centered": true,
                                  "bordered": true,
                                  "maxWidth": "500",
                                  "maxHeight": "200"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Troubleshooting Template Assignments\n\nIn case of problems a custom template in the control panel: Check whether your theme's root directory contains a file named `manifest.json`.\nIf you theme's root directory contains the file, perofrm the following:\n* delete the `manifest.json` file\n* bundle the theme again with the `stencil bundle` command\n* upload the theme\n* apply the theme\n\nThis should enable assigning the template in the control panel.",
                                "header": {
                                  "anchor": "assigning_troubleshooting"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Customizing Invoices",
                          "route": {
                            "path": "/customizing-invoices"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Customizing Invoices</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#customizing_email\">Email Invoice Template</a></li>\n\t\t<li><a href=\"#customizing_merchant\">Merchant Printable Invoice</a></li>\n    <li><a href=\"#customizing_customer\">Customer Printable Invoice</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "There are three editable invoices in BigCommerce:\n\n1. [Email Invoice](/customizing_email)\n2. [Merchant Printable Invoice](/customizing_merchant)\n3. [Customer Printable Invoice](/customizing_customer)\n\nMerchants commonly request developers modify the default content of invoices in order to satisfy specific business requirements and industry demands. In order to assist developers in making these changes, this articles contains instructions on how to edit each invoice."
                              },
                              {
                                "type": "text",
                                "data": "## Customizing the Email Invoice Template\n\nThe email invoice is sent to a customer after an order has been completed. The email invoice can be edited in the Control Panel in `Storefront` > `Email Templates` > `invoice_email.html`",
                                "header": {
                                  "anchor": "customizing_email"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1540376724645"
                              },
                              {
                                "type": "text",
                                "data": "After clicking the `edit` button on the right, the WYSIWYG Editor will appear. Follow [Editing and Printing Invoices](https://support.bigcommerce.com/s/article/Invoices#custom) (Knowledge Base) to complete customization of the Invoice Email template."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Customizing the Merchant Printable Invoice\n\nThe Merchant Printable Invoice is the invoice that can be printed from the control panel in `Orders` > `View`. Clicking the `...` in the Action column will generate a list of options, one option being `Print Invoice`.",
                                "header": {
                                  "anchor": "customizing_merchant"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1540376852310",
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true,
                                  "maxWidth": "200",
                                  "maxHeight": "600"
                                }
                              },
                              {
                                "type": "text",
                                "data": "The invoice that is generated by clicking Print Invoice relies on a template files and variables from [BigCommerce's legacy Blueprint](https://developer.bigcommerce.com/legacy/blueprint-themes/blueprint-email-templates) themes framework. This invoice can be customized by performing the following steps:\n\n1. Download the [invoice_printable.zip](https://storage.googleapis.com/bigcommerce-production-dev-center/template-files/invoice_printable.zip) file, which contains the skeleton of a printable invoice.\n\n2. Open the file in the text editor of your choice and edit the HTML file to match your desired customization."
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "For a list of available variables, see [Blueprint Email Templates](https://developer.bigcommerce.com/legacy/blueprint-themes/blueprint-email-templates).",
                                  "title": " Blueprint Variables and Customization\n"
                                }
                              },
                              {
                                "type": "text",
                                "data": "3. [Use WebDAV](https://support.bigcommerce.com/s/article/How-do-I-add-and-link-to-a-file-in-my-store#upload-a-file) to upload your customized HTML file to WebDAV's `/template/Snippets/` folder."
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "success",
                                  "title": "Recommended Client",
                                  "body": "We recommend the freeware [WebDAV](https://support.bigcommerce.com/s/article/File-Access-WebDAV#webdav-client) client CyberDuck (Windows and Mac OS), for which your store's control panel offers a downloadable connection file prefilled with most store credentials."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Customizing the Customer Printable Invoice\n\nThe customer printable invoice is the printable invoice that is available on a storefront’s order page for **shoppers that have registered accounts with your store**.",
                                "header": {
                                  "anchor": "customizing_customer"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1540377767108"
                              },
                              {
                                "type": "text",
                                "data": "This invoice becomes available in a shopper’s orders after completing an order. A shopper can generate this invoice by clicking `Print Invoice` on the right-hand side of the page.\n\nAs a developer, you can customize this invoice by editing your theme’s `invoice.html` file that is present in your theme's files. In Cornerstone, this file is located in `/cornerstone/templates/pages/account/orders/invoice.html`."
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Shrinking a Theme by Excluding Static Assets Using WebDAV](https://developer.bigcommerce.com/stencil-docs/prepare-and-upload-a-theme/shrinking-your-theme)\n* [Blueprint Theme Email Templates](https://developer.bigcommerce.com/legacy/blueprint-themes/blueprint-email-templates)\n* [Uploading and Linking to a File in Your Store](https://support.bigcommerce.com/s/article/How-do-I-add-and-link-to-a-file-in-my-store#upload-a-file) (Knowledge Base)\n* [Editing and Printing Invoices](https://support.bigcommerce.com/s/article/Invoices#custom) (Knowledge Base)\n* [File Access (Web Dav)](https://support.bigcommerce.com/s/article/File-Access-WebDAV) (Knowledge Base)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Customizing Printable Packing Slips",
                          "route": {
                            "path": "/customizing-printable-packing-slips"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Customizing Printable Packing Slips</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#customizing_packing\">Customizing Printable Packing Slips</a></li>\n    <li><a href=\"#customizing_packing_resources\">Resources</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Merchants commonly request developers modify the default content of packing slips in order to satisfy specific business requirements and industry demands. In order to assist developers in making these changes, this articles contains instructions on how to edit the printable packing slip's HTML."
                              },
                              {
                                "type": "text",
                                "data": "## Customizing Printable Packing Slips\n\nCustomizing your Stencil theme's printable packing slips currently relies on a template and variables from BigCommerce's legacy Blueprint themes framework. Here are the steps:\n\n1. Download [this printable packing slip .zip file](https://storage.googleapis.com/bigcommerce-production-dev-center/template-files/packing_slip_printable.zip), which contains the skeleton of a printable packing slip.\n\n2. Make your customizations to the HTML file.\n\n3. [Use WebDAV](https://support.bigcommerce.com/articles/Public/File-Access-WebDAV/) to upload your customized HTML file to WebDAV's `/template/` folder.",
                                "header": {
                                  "anchor": "customizing_packing"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n### Related Articles\n* [Shrinking Your Theme by Excluding Static Assets](https://developer.bigcommerce.com/stencil-docs/prepare-and-upload-a-theme/shrinking-your-theme)\n* [Blueprint Theme Email Templates](https://developer.bigcommerce.com/legacy/blueprint-themes/blueprint-email-templates)\n* [File Access (WebDAV)](https://support.bigcommerce.com/articles/Public/File-Access-WebDAV/) (Knowledge Base)\n* [Uploading and Linking to a File in Your Store](https://support.bigcommerce.com/s/article/How-do-I-add-and-link-to-a-file-in-my-store#upload-a-file) (Knowledge Base)",
                                "header": {
                                  "anchor": "customizing_packing_resources"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Customize Stencil Checkout",
                    "route": {
                      "path": "/customize-stencil-checkout"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Stored Credit Card Management",
                          "route": {
                            "path": "/stored-credit-card-management"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Stored Credit Card Management</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stored-cc-mgmt_adding\">Adding Credit Card Management</a></li>\n    <li><a href=\"#stored-cc-mgmt_step1\">Step 1: Add Payment Methods Page </a></li>\n\t\t<li><a href=\"#stored-cc-mgmt_step2\">Step 2: Add Translations </a></li>\n    <li><a href=\"#stored-cc-mgmt_step3\">Step 3: Include Credit Card Listing</a></li>\n    <li><a href=\"#stored-cc-mgmt_step4\">Step 4: Add Credit Card Actions</a></li>\n    <li><a href=\"#stored-cc-mgmt_step5\">Step 5: Implement Delete Payment Method</a></li>\n    <li><a href=\"#stored-cc-mgmt_step6\">Step 6: Implement Edit Payment Method</a></li>\n    <li><a href=\"#stored-cc-mgmt_step7\">Step 7: Implement Add Payment Method</a></li>\n    <li><a href=\"#stored-cc-mgmt_step8\">Step 8: Add Default Instrument</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "Stored Credit Card management<sup>1</sup> gives customer's the ability to manage their stored credit cards from the My Account page of the storefront. In the Cornerstone theme, shoppers with store accounts will have the ability to add new cards<sup>2</sup>, delete cards, select a default card, and edit the billing details<sup>3</sup> of existing cards from their customer account area of the storefront.",
                                "header": {
                                  "anchor": "stored-cc-mgmt_overview"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1541629003006",
                                "header": {
                                  "title": "Stored Credit Card Management "
                                },
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true,
                                  "maxWidth": "500",
                                  "maxHeight": "500"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "title": "",
                                  "body": "1. Cornerstone versions 2.6.0+ include the ability to manage [Stored Credit Cards](https://support.bigcommerce.com/s/article/Enabling-Stored-Credit-Cards).\n2. Card data is stored securely with the payment gateway.\n3. After adding a card, shoppers will only be able to modify the billing address. If other credit card details need to be modified (such as expiration date), the shopper must delete and re-add the card."
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Adding Stored Credit Card Management\n\nStored Credit Card Management was added to Cornerstone in [pull request #1376](https://github.com/bigcommerce/cornerstone/pull/1376). To add Stored Credit Cards to pre-2.6.0 Cornerstone or Marketplace themes, copy the changes from [PR #1376](https://github.com/bigcommerce/cornerstone/pull/1376) to your theme. This section will walk through [each individual commit](https://github.com/bigcommerce/cornerstone/pull/1376/commits), highlighting the changes that you will need to make to your template files.",
                                "header": {
                                  "anchor": "stored-cc-mgmt_adding"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 1:  [Add the Payment Methods Page to the Shopper's Account](https://github.com/bigcommerce/cornerstone/pull/1376/commits/24abc038fe346a8572b40da40c98a9465788957a)\n\n* Create the new Payment Methods page on a shopper's account by editing the following files:\n\t* `lang/en.json`\n\t* `templates/components/account/navigation.html`\n\t* `templates/pages/account/payment-methods.html`\n",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step1"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1541629154209",
                                "header": {
                                  "title": "Payment Methods Page Addition Example"
                                },
                                "config": {
                                  "centered": true,
                                  "bordered": true,
                                  "fluid": true,
                                  "maxWidth": "700",
                                  "maxHeight": "700"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 2: [Add Translations for Payment Methods Titles](https://github.com/bigcommerce/cornerstone/pull/1376/commits/9edf1a0f6907811abf470db1486b4fdb199b27ae)\n\n* Make the Payments Method page translatable by modifying the following:\n\t* `lang/en.json`\n\t* `templates/components/account/navigation.html`",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step2"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 3: [Include the Credit Card Listing](https://github.com/bigcommerce/cornerstone/pull/1376/commits/5574eb98c710f4540e8390420563099b6f5710bf)\n\n* Group the credit cards by payment providers\n* Include the payment method icons\n* Account for mobile and desktop layouts\n* Account for translations\n\n*Icons have been used to identify the credit card **type**. The data only provides the card brand in the credit card details.*",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step3"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1541630407609",
                                "config": {
                                  "maxWidth": "600",
                                  "maxHeight": "600",
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true
                                },
                                "header": {}
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 4: [Add the Credit Card Actions (Add, Edit, and Delete)](https://github.com/bigcommerce/cornerstone/pull/1376/commits/499016d320995852fe4ef621724e08556896b70d)\n\n*  add `Edit`, `Delete`, and `Add` buttons",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step4"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1541655663898",
                                "header": {
                                  "title": "Implementation of Add, Edit, and Delete Methods"
                                },
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true,
                                  "maxWidth": "500",
                                  "maxHeight": "500"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 5: [Implement the `Delete Payment` Method](https://github.com/bigcommerce/cornerstone/pull/1376/commits/cf102901d9061b7334e8c39f15a8904c37cf0652)\n\n* Bind the delete button's front end and back end\n\nFirst, the click will trigger window confirm. The confirmation modal has been added to prevent unintended action. Then, on confirming, a post request will be sent. The action is initiated through a localized form post request in the template which uses a [`delete_url`](https://github.com/bigcommerce/cornerstone/blob/master/templates/components/account/payment-methods-list.html#L34) key provided in the credit card details data. Finally, there will be a redirect to the credit card listing.",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step5"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 6: [Implement the `Edit Payment` Method](https://github.com/bigcommerce/cornerstone/pull/1376/commits/ab2fe1df455fa8ac93760904b718fbce7ce361ed)\n\n* Add the design for credit card details and the edit billing address form, synced with existing address fields validation\n\n*The action is initiated via a [redirect](https://github.com/bigcommerce/cornerstone/blob/master/templates/components/account/payment-methods-list.html#L36) to the edit page. The page uses HTML, CSS, and JavaScript for the billing address validation. The \"name on card\" label and values are also removed, as we do not store name along with the vaulted credit card. The full [edit-payment-method.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/account/edit-payment-method.html) can be viewed in the Cornerstone Github Repo.*",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step6"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1541654303488",
                                "header": {
                                  "title": "Edit Payment Method Form"
                                },
                                "config": {
                                  "centered": true,
                                  "bordered": true,
                                  "fluid": true,
                                  "maxHeight": "500",
                                  "maxWidth": "500"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 7: [Implement the `Add Payment` Method](https://github.com/bigcommerce/cornerstone/pull/1376/commits/c960338c32faa8fb798b2826c72dfe9d74bf9751)\n\n*  Adding new icon `lock.svg`\n*  Unify the CSS classes for the add and edit form.\n*  Add a new template for edit form with an injection of global variables into context.\n*  Extend the `account.js` file with a new method to initiate credit card and billing address fields validations, mapping form fields name and value to body request.\n*  Add a `payment-method.js` file for credit card validations and helpers with unit test.\n\n*The add form will use ajax to validate and submit the credit card details (this differs from the way the edit form validates and submits). The [payment-method.js file](https://github.com/bigcommerce/cornerstone/blob/master/assets/js/theme/common/payment-method.js) has been designed to be dragged and used in themes to simplify its implementation.*\n\n*The [add-payment-method.html template](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/account/add-payment-method.html) also requires some customization because variables need to pass through handlebars in order to be used by JavaScript. From [line 20 to 25 of the template](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/account/add-payment-method.html#L20-L25), we store variables, mostly for building the request url and header. The request body will directly use the form data. [More validations and extra mapping](https://github.com/bigcommerce/cornerstone/blob/24686de577c6ad5409ec8b82f5839c3d083cb760/assets/js/theme/account.js#L211) are added to the `add-payment-method.html` template as well.*",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step7"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1541629295212",
                                "header": {
                                  "title": "Example of the addition of the Add Payment Method"
                                },
                                "config": {
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true,
                                  "maxWidth": "500",
                                  "maxHeight": "700"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Step 8: [Add the default Instrument for the add/edit Payment Method](https://github.com/bigcommerce/cornerstone/pull/1376/commits/5576aee5af0194e85cb11dbf44563f89b2687f40)\n\n* Add HTML and CSS for a single checkbox, default instrument\n* Capture form data on ADD and transform to boolean\n* Fix HTML credit card for tabulation navigation\n* Fix for states reload list via AJAX",
                                "header": {
                                  "anchor": "stored-cc-mgmt_step8"
                                }
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1541655424566",
                                "header": {
                                  "title": "Add default instrument checkbox to edit and add form"
                                },
                                "config": {
                                  "maxWidth": "400",
                                  "maxHeight": "400",
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Since this feature involves heavy code changes, it may be easier to merge the necessary code into your theme by utilizing Github's automated process for syncing a fork. See Github's documentation on [Syncing a Fork](https://help.github.com/articles/syncing-a-fork/) for more details on this method.",
                                  "title": "Utilizing Github Automation to Merge the Changes\n"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Related Articles\n* [The Complete Guide to Checkout Customization on BigCommerce](https://medium.com/bigcommerce-developer-blog/the-complete-guide-to-checkout-customization-on-bigcommerce-6b566bc36fa9) (Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "PayPal Smart Buttons",
                          "route": {
                            "path": "/paypal-smart-buttons"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>PayPal Smart Buttons</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#paypal-smart_include-smart-buttons\">Enabling Smart Buttons</a></li>\n    <li><a href=\"#paypal-smart_additional-resources\">Additional Resources</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "PayPal Smart Buttons are available on Cornerstone versions 2.6.0+ for merchants who have **PayPal powered by Braintree** or **PayPal Express Checkout** enabled on their store. \n\nTheme developers can enable Smart Buttons on a custom Stencil theme by adding the required settings to the <span class=\"fn\">config.json</span> file. \n\nMerchants will have the ability to customize some style aspects of the PayPal payment buttons at checkout using Store Design for stores that have PayPal powered by Braintree or PayPal Express Checkout enabled. In order to make PayPal Smart Buttons customizable with Store Design, a theme developer will need to make its customization properties available by adding its schema to the <span class=\"fn\">schema.json</span> file. ",
                                "header": {
                                  "anchor": "paypal-smart_overview"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Enable Smart Buttons on Your Stencil Theme\n\nSmart Buttons are included on Cornerstone versions 2.6.0+. If your theme does not already include Smart Buttons, append the `paymentbuttons` settings to the _Settings_ object within your <span class=\"fn\">config.json</span> file. See the code sample below. ",
                                "header": {
                                  "anchor": "paypal-smart_include-smart-buttons"
                                }
                              },
                              {
                                "type": "code",
                                "data": " \"settings\": {\n    \"...\",\n    \"color_badge_product_sale_badges\": \"#007dc6\",\n    \"color_text_product_sale_badges\": \"#ffffff\",\n    \"color_hover_product_sale_badges\": \"#000000\",\n    \"restrict_to_login\": false,\n    \"swatch_option_size\": \"22x22\",\n    \"social_icon_placement_top\": false,\n    \"social_icon_placement_bottom\": \"bottom_none\",\n    \"geotrust_ssl_common_name\": \"\",\n    \"geotrust_ssl_seal_size\": \"M\",\n    \"navigation_design\": \"simple\",\n    \"price_ranges\": true,\n    \"pdp-price-label\": \"\",\n    \"pdp-sale-price-label\": \"Now:\",\n    \"pdp-non-sale-price-label\": \"Was:\",\n    \"pdp-retail-price-label\": \"MSRP:\",\n    \"paymentbuttons-paypal-layout\": \"horizontal\",\n    \"paymentbuttons-paypal-color\": \"gold\",\n    \"paymentbuttons-paypal-shape\": \"pill\",\n    \"paymentbuttons-paypal-size\": \"small\",\n    \"paymentbuttons-paypal-label\": \"checkout\",\n    \"paymentbuttons-paypal-tagline\": true,\n    \"paymentbuttons-paypal-fundingicons\": false\n  },",
                                "header": {
                                  "subtitle": "config.json",
                                  "title": "addition of `payment buttons` to \"settings\" object"
                                },
                                "config": {
                                  "mode": "json",
                                  "highlightRange": [
                                    {
                                      "from": "18",
                                      "to": "24"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "type": "warning",
                                  "body": "Adding the above keys to the <span class=\"fn\">config.json</span> file will enable Smart Buttons on a Stencil theme, however, the merchant will **not** be able to customize button styles with Store Design unless setting configurations are added to the <span class=\"fn\">schema.json</span> file.",
                                  "title": "Store Design Customization"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Enabling Smart Buttons Customization via Store Design\n\nMerchants who enable PayPal powered by Braintree and PayPal Express Checkout can also customize PayPal Smart Buttons via Store Design. As a theme developer, you can enable PayPal Smart Buttons customization via [Store Design](/stencil-docs/stencil-theme-editor/schema-json-metadata), by appending the following object to the <span class=\"fn\">schema.json</span> file:\n"
                              },
                              {
                                "type": "code",
                                "data": "{\n      \"name\": \"Payment Buttons\",\n      \"enable\": \"smartButtons\",\n      \"settings\": [\n          {\n            \"type\": \"checkbox\",\n            \"label\": \"Show Paypal tagline\",\n            \"force_reload\": true,\n            \"id\": \"paymentbuttons-paypal-tagline\"\n          },\n          {\n            \"type\": \"checkbox\",\n            \"label\": \"Show funding icons\",\n            \"force_reload\": true,\n            \"id\": \"paymentbuttons-paypal-fundingicons\"\n          },\n          {\n              \"type\": \"select\",\n              \"label\": \"Button color\",\n              \"id\": \"paymentbuttons-paypal-color\",\n              \"force_reload\": true,\n              \"options\": [\n                {\n                  \"value\": \"gold\",\n                  \"label\": \"Gold\"\n                },\n                {\n                  \"value\": \"blue\",\n                  \"label\": \"Blue\"\n                },\n                {\n                  \"value\": \"silver\",\n                  \"label\": \"Silver\"\n                },\n                {\n                  \"value\": \"black\",\n                  \"label\": \"Black\"\n                }\n              ]\n          },\n          {\n              \"type\": \"select\",\n              \"label\": \"Button shape\",\n              \"id\": \"paymentbuttons-paypal-shape\",\n              \"force_reload\": true,\n              \"options\": [\n                {\n                  \"value\": \"pill\",\n                  \"label\": \"Pill\"\n                },\n                {\n                  \"value\": \"rect\",\n                  \"label\": \"Rectangle\"\n                }\n              ]\n          },\n          {\n              \"type\": \"select\",\n              \"label\": \"Button size\",\n              \"id\": \"paymentbuttons-paypal-size\",\n              \"force_reload\": true,\n              \"options\": [\n                {\n                  \"value\": \"small\",\n                  \"label\": \"Small\"\n                },\n                {\n                  \"value\": \"medium\",\n                  \"label\": \"Medium\"\n                },\n                {\n                  \"value\": \"large\",\n                  \"label\": \"Large\"\n                },\n                {\n                  \"value\": \"responsive\",\n                  \"label\": \"Responsive\"\n                }\n              ]\n          },\n          {\n              \"type\": \"select\",\n              \"label\": \"Button content\",\n              \"id\": \"paymentbuttons-paypal-label\",\n              \"force_reload\": true,\n              \"options\": [\n                {\n                  \"value\": \"checkout\",\n                  \"label\": \"Paypal Checkout\"\n                },\n                {\n                  \"value\": \"pay\",\n                  \"label\": \"Pay with Paypal\"\n                },\n                {\n                  \"value\": \"buynow\",\n                  \"label\": \"Buy Now\"\n                },\n                {\n                  \"value\": \"paypal\",\n                  \"label\": \"Paypal\"\n                }\n              ]\n          },\n          {\n            \"type\": \"select\",\n            \"label\": \"Display style\",\n            \"id\": \"paymentbuttons-paypal-layout\",\n            \"force_reload\": true,\n            \"options\": [\n              {\n                \"value\": \"horizontal\",\n                \"label\": \"Show buttons horizontally\"\n              },\n              {\n                \"value\": \"vertical\",\n                \"label\": \"Show buttons vertically\"\n              }\n            ]\n",
                                "header": {
                                  "subtitle": "schema.json",
                                  "title": "Addition to schema.json file in order to enable Store Design customization"
                                },
                                "config": {
                                  "mode": "json"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "Some customization options are mutually exclusive, meaning when used in combination with other customization options, the smart button will completely fail to render on the page. \n\nAll mutually exclusive options are tied to the layout setting `vertical.` If your layout setting is `vertical,` take note of the following customization **restrictions**:\n\n* If you have a layout setting of `vertical`, you **can not** have a button size of `small`.\n* If you have a layout setting of `vertical`, you **can not** customize the `branding` of the button.\n* If you have a layout setting of `vertical`, you **can not** customize the `tagline` of the button.\n* If you have a layout setting of `vertical`, you **can not** customize the `funding icons` settings.",
                                  "title": "Mutually Exclusive Options",
                                  "type": "error"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Articles\n* [The Complete Guide to Checkout Customization on BigCommerce](https://medium.com/bigcommerce-developer-blog/the-complete-guide-to-checkout-customization-on-bigcommerce-6b566bc36fa9) (Developer Blog)\n\n## Additonal Resources\n* [PayPal Checkout Customization](https://developer.paypal.com/demo/checkout/#/pattern/checkout) (PayPal)\n\n",
                                "header": {
                                  "anchor": "paypal-smart_additional-resources"
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Restyle Optimized One-Page Checkout",
                          "route": {
                            "path": "/optimized-one-page-checkout"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Restyle Optimized One-Page Checkout</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#optimized_working\">Working with the Optimized Checkout SCSS File</a></li>\n    <li><a href=\"#optimized_configuring\">Configuring the Desktop Viewport</a></li>\n    <li><a href=\"#optimized_classes\">Classes Available for Customization</a></li>\n    <li><a href=\"#optimized_providing\">Providing User Options in Store Design</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Working with the Optimized Checkout SCSS File \n\nCornerstone includes an SCSS file that styles the Optimized Checkout page. In your local installation, this file is located at <span class=\"fn\">cornerstone/assets/scss/optimized-checkout.scss</span>\n\nYou can access the most recent version of this file in the [Cornerstone repository](https://github.com/bigcommerce/cornerstone/blob/master/assets/scss/optimized-checkout.scss) (Github). All themes share the same stylesheet for the Optimized One-Page checkout, even those not based on Cornerstone, so this stylesheet applies universally across Stencil themes.",
                                "header": {
                                  "anchor": "optimized_working"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "When customizing the checkout page, you are free to change classes' contents, however, **do not** nest elements or change any class names. BigCommerce imposes these restrictions because each class here maps to multiple Optimized Checkout elements. Changing the structure or naming would break updates available in future Optimized Checkout enhancements.\n",
                                  "type": "error",
                                  "title": "Customizing Checkout Restrictions"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Configuring the Desktop Viewport \n\nWithin the <span class=\"fn\">optimized-checkout.scss</span> file, to set up Optimized Checkout's responsive features, you should configure the following breakpoint to define your preferred desktop viewport size:",
                                "header": {
                                  "anchor": "optimized_configuring"
                                }
                              },
                              {
                                "type": "code",
                                "data": "// TODO:\n// Configure media query to be 'desktop' breakpoint size\n// --\n@media (min-width: 801px) {\n  text-align: stencilString(\"optimizedCheckout-logo-position\");\n}",
                                "config": {
                                  "mode": "css"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Classes Available for Customization \n\nBelow are the classes provided in Cornerstone's <span class=\"fn\">optimized-checkout.scss</span>, with the corresponding page elements that they style. _These class names and mappings are subject to change, so please check the inline comments in the <span class=\"fn\">optimized-checkout.scss</span> file that you downloaded with your current Cornerstone release._\n\n| **Class** | **Styles This Optimized One-Page Checkout Element:** |\n|||\n| `.optimizedCheckout-header` | Page header. |\n| `.optimizedCheckout-headingPrimary` | Top-level headings. |\n| `.optimizedCheckout-headingSecondary` | Certain lower-level elements, such as descriptions of cart items. |\n| `.optimizedCheckout-overlay` | Shipping Method box. |\n| `.optimizedCheckout-contentPrimary` | Body text in the desktop `Order Summary`/`Order Confirmation` (cart contents); drop-down-list items; and text that summarizes completed steps. |\n| `.optimizedCheckout-contentSecondary` | Text labels on check boxes, and lower-level text in the desktop Order Summary. |\n| `.optimizedCheckout-button--primary` | `CONTINUE` button and final `PAY` button. |\n| `.optimizedCheckout-button--secondary` | `Edit` buttons.\n| `.optimizedCheckout-orderSummary` | Colors in the `Order Summary` mobile drawer/modal.\n| `.optimizedCheckout-step` | Large step-number indicators on the page's left side. |\n| `.optimizedCheckout-form-label` | Styles form fields like `Email Address` – the field's text-label color. | \n| `.optimizedCheckout-form-input` | Styles form fields like `Email Address` – the entry box's background and border colors. |\n",
                                "header": {
                                  "anchor": "optimized_classes"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Providing Customizable Options in Store Design\n\nYou can determine which aspects of Optimized One-Page Checkout merchants will be able to customize with the Store Design tool. \n\nIn Cornerstone's <span class=\"fn\">optimized-checkout.scss</span>, each SCSS class and property available has a corresponding key/value pair in the <span class=\"fn\">config.json</span> file, which can be used as the `id` value in schema.json when [creating customizable Store Design options](/stencil-docs/store-design/schema-json-metadata).",
                                "header": {
                                  "anchor": "optimized_providing"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Articles\n* [The Complete Guide to Checkout Customization on BigCommerce](https://medium.com/bigcommerce-developer-blog/the-complete-guide-to-checkout-customization-on-bigcommerce-6b566bc36fa9) (Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Currency Conversion",
                          "route": {
                            "path": "/currency-conversion"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Currency Conversion</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#currency_currency-conversion\">Currency-Conversion Options</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Currency-Conversion Options\n\nYou can enable the display of alternate currencies on your Stencil theme's Optimized One-Page Checkout and order confirmation pages.",
                                "header": {
                                  "anchor": "currency_currency-conversion"
                                }
                              },
                              {
                                "type": "callout",
                                "data": {
                                  "body": "The options on this page require that you first enable Optimized One-Page Checkout. Find instructions on how to do this in Enable and Restyle Optimized One-Page Checkout.\n\nNote that regardless of the display options that you set below, transactions will always be processed in the store's single default currency. To change that setting, see Changing Your Default Currency.",
                                  "title": "Restrictions",
                                  "type": "warning"
                                }
                              },
                              {
                                "type": "text",
                                "data": "To allow shoppers to view prices in multiple currencies, you will need to add the desired currencies via the BigCommerce control panel.\n\nShoppers will then be able to use the `Currency` drop-down list, throughout the storefront, to switch displayed prices among the currencies you have enabled.\n\nAt checkout, the shopper will still be billed in the store's default currency. As shown below, the checkout and cart templates will show an annotation about this, while flagging any converted total (in a shopper's selected alternate currency) as an `Estimated Total`:"
                              },
                              {
                                "type": "image",
                                "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1540232528988",
                                "config": {
                                  "maxWidth": "400",
                                  "maxHeight": "600",
                                  "centered": true,
                                  "fluid": true,
                                  "bordered": true
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Articles\n* [The Complete Guide to Checkout Customization on BigCommerce](https://medium.com/bigcommerce-developer-blog/the-complete-guide-to-checkout-customization-on-bigcommerce-6b566bc36fa9) (Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Multi Language Checkout",
                          "route": {
                            "path": "/multi-language-checkout"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Multi Language Checkout</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#multi_multi-lang\">Multi Language Setup</a></li>\n    <li><a href=\"#multi_browsing\">Browsing Hidden Translation Keys</a></li>\n    <li><a href=\"#multi_adding\">Adding Your Own Translation Values</a></li>\n    <li><a href=\"#multi_localized\">Localized Country and State Names</a></li>\n    <li><a href=\"#multi_stencils-overall\">Stencil's Overall Limits on Translation</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Multi-Language Setup \n\nIn the Cornerstone theme, both the Optimized One-Page Checkout and the [order confirmation](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/order-confirmation.html) pages contain [Handlebars`{{lang}}`](/stencil-docs/handlebars-syntax-and-helpers/handlebars-helpers-reference/string-helpers/custom-string-helpers#handlebars_lang) statements to facilitate translation. The `{{lang}}` statements enable automatic rendering of their parameters into languages that shoppers have selected in their browser preferences.\n\nIn the [default checkout page template (cornerstone/templates/pages/checkout.html)](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/checkout.html), one example that you can directly view is the page header:",
                                "header": {
                                  "anchor": "multi_multi-lang"
                                }
                              },
                              {
                                "type": "code",
                                "data": "{{#partial \"head\"}}\n\n{{{ checkout.checkout_head }}}\n{{{ stylesheet '/assets/css/optimized-checkout.css' }}}\n{{ getFontsCollection }}\n\n<script type=\"text/javascript\">\n    window.language = {{{langJson 'optimized_checkout'}}};\n</script>\n\n{{{head.scripts}}}\n\n{{/partial}}\n\n{{#partial \"page\"}}\n<header class=\"checkoutHeader optimizedCheckout-header\">\n    <div class=\"checkoutHeader-content\">\n        <h1 class=\"is-srOnly\">{{lang 'checkout.title'}}</h1>\n        <h2 class=\"checkoutHeader-heading\">\n            <a class=\"checkoutHeader-link\" href=\"{{urls.home}}\">\n                {{#if checkout.header_image}}\n                    <img alt=\"{{settings.store_logo.title}}\" class=\"checkoutHeader-logo\" id=\"logoImage\" src=\"{{ checkout.header_image }}\"/>\n                {{ else }}\n                    <span class=\"header-logo-text\">{{settings.store_logo.title}}</span>\n                {{/if}}\n            </a>\n        </h2>\n    </div>\n</header>\n\n{{{ checkout.checkout_content }}}\n\n{{{ footer.scripts }}}\n\n{{/partial}}\n\n{{> layout/empty}}\n",
                                "header": {
                                  "title": "checkout.html",
                                  "subtitle": "{{lang}} statement in page header"
                                },
                                "config": {
                                  "mode": "html",
                                  "highlightRange": [
                                    {
                                      "from": "18",
                                      "to": "18"
                                    }
                                  ]
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Browsing Hidden Translation Keys\n\nBigCommerce exposes only part of the checkout page's structure through the local template referenced above. For security purposes – and also to offer all stores new checkout features simultaneously – most checkout content is hidden.\n\nThis hidden content includes many more key/value pairs that support translation. However, you can see all the available keys with their default English-language values in the [opt-checkout-en.json.zip file](https://storage.googleapis.com/bigcommerce-production-dev-center/template-files/opt-checkout-en.json.zip)",
                                "header": {
                                  "anchor": "multi_browsing"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Adding Your Own Translation Values\n\nYou can provide values for all of checkout's supported translation keys – for all the languages you want to support – even without direct access to the hidden parts of the checkout template. Here is how:\n\n1. Download and unzip a local copy of the [opt-checkout-en.json.zip file](https://storage.googleapis.com/bigcommerce-production-dev-center/template-files/opt-checkout-en.json.zip), also linked above in [Browsing Hidden Translation Keys](#multi_browsing).\n\n2. Copy and paste the whole file's contents into your theme's `en.json` file and into the `.json` file for each language you want to translate your checkout page's text. To see requirements for naming and deploying these translation files, please this documentation's [Internationalization section](/stencil-docs/internationalization-and-localization/).\n\n3. Replace the keys' values with appropriate phrases in each file's target language.",
                                "header": {
                                  "anchor": "multi_adding"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Localized Country and State Names \n\nIn the Optimized One-Page Checkout page's `Shipping Address` and `Billing Address` fields, BigCommerce currently provides automatic translation of drop-down lists' displayed `Country` and `State` names into 12 supported languages. Here are the steps for enabling this translation:\n\n1. As for the translation options described above, you must enable Optimized One-Page Checkout.\n\n2. Within your `<theme-name>/lang/` subdirectory, you must provide a `xx.json` file with the appropriate two-letter prefix for one or more of the `Supported Languages` in the Naming Requirements table below. (The naming conventions we follow are explained on this page.)\n\n3. We recommend that you populate that file with the checkout-specific keys/values covered above at Adding Your Own Translation Values. This is not strictly necessary to translate the drop-down lists, but it is necessary to provide a consistent translation of the surrounding Address sections. You do not need to provide any keys/values for the Country/State names, whose translations are predefined within the BigCommerce platform.\n\n4. As with the translation options described above, the storefront will automatically display the translated `Country/State` names to visitors who have selected one of the supported languages in their browser's locale preferences.\n\n### Country/State Translation – Naming Requirements\n\nBigCommerce Optimized One-Page Checkout will currently translate displayed `Country/State` names if your Stencil theme includes `.../lang/xx.json` files named as shown below.\n\n| Supported Language | Required Translation File Name |\n|||\n|  German | `de.json` |\n| Spanish | `es.json` |\n| French | `fr.json` |\n| Hindi | `hi.json` |\n| Italian | `it.json` |\n| Japanese | `ja.json` |\n| Korean | `ko.json` |\n| Dutch | `nl.json` |\n| Punjabi | `pa.json` |\n| Tamil | `ta.json` |\n| Chinese Simplified | `zh-TW.json` |\n| Chinese Traditional | `zh.json` |",
                                "header": {
                                  "anchor": "multi_localized"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Stencil's Overall Limits on Translation\n\n* Your theme's content will translate only to the extent that you have created JSON files in your `<theme-name>/lang/` subdirectory for each language that you choose to support, and have included key/value pairs for the parameters (beyond `Country/State`) that you choose to translate.\n\n* Stencil's multi-language capabilities are currently limited to these specific strings that you specify within the theme. The Stencil framework does not currently translate content rendered from a store's database – for example, products' names.\n\n* Within these limitations, if you intend to do business internationally, we recommend that you specify appropriate alternate-language strings for key parts of your storefront, product catalog, and checkout. Doing so will make browsing, purchasing, and payment easier for users in your target market(s). For an overview of all localization options, please see [Localizing Stores](/stencil-docs/internationalization-and-localization/localizing-stores).",
                                "header": {
                                  "anchor": "multi_stencils-overall"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Articles\n* [The Complete Guide to Checkout Customization on BigCommerce](https://medium.com/bigcommerce-developer-blog/the-complete-guide-to-checkout-customization-on-bigcommerce-6b566bc36fa9) (Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Checkout/Confirmation Injection Options",
                          "route": {
                            "path": "/checkout-confirmation-injection"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Checkout/Confirmation Injection Options</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#checkout_adding\">Adding Storewide Styles</a></li>\n    <li><a href=\"#checkout_applying-storewide-header\">Applying Storewide Header</a></li>\n    <li><a href=\"#checkout_applying-storewide-scripts\">Applying Storewide Scripts</a></li>\n    <li><a href=\"#checkout_adding-trust-seals\">Adding Trust Seals</a></li>\n    <li><a href=\"#checkout_app-injection\">Checkout App Injection</a></li>\n\t</ul>\n</div>\n  \n"
                              },
                              {
                                "type": "text",
                                "data": "## Adding Storewide Styles \n\nA prerequisite for the next two options is to add themewide styles to your Checkout or Order Confirmation page. To do so, add this statement:\n\n`{{{stylesheet '/assets/css/theme.css'}}}`\n\n...before this statement, which is already present at the head of each template:\n\n`{{{ checkout.checkout_head }}}`",
                                "header": {
                                  "anchor": "checkout_adding"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## Applying Storewide Header \n\nYou can replace each page's predefined header with your storewide header. To do so, first add themewide styles as described above. Next, replace the following code block (if present):\n\n```\n<header class=\"checkoutHeader optimizedCheckout-header\">\n    <div class=\"checkoutHeader-content\">\n        <h1 class=\"is-srOnly\">{{lang 'checkout.title'}}</h1>\n        <h2 class=\"checkoutHeader-heading\">\n            <a class=\"checkoutHeader-link\" href=\"{{urls.home}}\">\n                {{#if checkout.header_image}}\n                    <img alt=\"{{settings.store_logo.title}}\" class=\"checkoutHeader-logo\" id=\"logoImage\" src=\"{{ checkout.header_image }}\"/>\n                {{ else }}\n                    <span class=\"header-logo-text\">{{settings.store_logo.title}}</span>\n                {{/if}}\n            </a>\n        </h2>\n    </div>\n</header>\n```\n\nwith this simple Handlebars statement:\n\n`{{> components/common/header }}`\n\nEnsure that you paste it before this **existing** statement:\n\n`{{{ checkout.checkout_head }}}`\n\n",
                                "header": {
                                  "anchor": "checkout_applying-storewide-header"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Applying Storewide Scripts \n\nYou have the following options to add and customize headers and footers, on either or both templates:\n\n* Adding your themewide header/footer.\n* Adding themewide scripts (for analytics, etc.).\n* Adding both.\n\nIf you are working on a theme that does not have the scripts already enabled, here are the steps to enable these options:\n\n1. Add themewide styles, as described above.\n\n2. Towards the top of the checkout template (`checkout.html`), add this Handlebars statement to enable header scripts:\n\n`{{{ head.scripts }}}`\n\nAdd it between these existing statements, so it will ultimately read as shown below.\n\n```\n<script type=\"text/javascript\">\n    window.language = {{{langJson 'optimized_checkout'}}};\n</script>\n\n{{{head.scripts}}}\n\n{{/partial}}\n\n{{#partial \"page\"}}\n```\n\nAdditionally, at the bottom of the checkout template (`checkout.html`), add this Handlebars statement to enable footer scripts:\n\n`{{{ footer.scripts }}}`\n\nAdd it between these existing statements, so it will ultimately read as shown below.\n\n```\n    {{{ checkout.checkout_content }}}\n\n    {{{ footer.scripts }}}\n\n    {{/partial}}\n```\n\n3. Towards the top of the order confirmation template (`order-confirmation.html`), add this Handlebars statement to enable header scripts:\n\n`{{{ head.scripts }}}`\n\nAdd it between these existing statements, so it will ultimately read as shown below.\n\n```\n<script type=\"text/javascript\">\n    window.language = {{{langJson 'optimized_checkout'}}};\n</script>\n\n{{{head.scripts}}}\n\n{{/partial}}\n\n{{#partial \"page\"}}\n```\n\nAdditionally, at the bottom of the order confirmation template (`order-confirmation.html`), insert this Handlebars statement:\n\n`{{{ footer.scripts }}}`\n\nInsert it between these existing statements, so it will ultimately read as shown below.\n\n```\n{{{ checkout.order_confirmation_content }}}\n\n{{{ footer.scripts }}}\n\n{{/partial}}\n```\n\n4. In your store's BigCommerce control panel, ensure that you have inserted any desired script text in the `Storefront` > `Script Manager` field.",
                                "header": {
                                  "anchor": "checkout_applying-storewide-scripts"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Adding Trust Seals \n\nTo add a trust seal to either template:\n\n1. Generate a code snippet (seal script) from your trust-seal provider. You can find instructions for GeoTrust seals in [this BigCommerce KB article](https://support.bigcommerce.com/articles/Public/Adding-a-GeoTrust-SSL-seal-to-your--footer?_ga=2.254356814.718421096.1540222570-967431010.1523308107). (Instructions for other providers will vary.)\n\n2. Copy and paste the seal script into your checkout or order confirmation template, before or after the `{{{ checkout.checkout_content }}}` Handlebars statement.",
                                "header": {
                                  "anchor": "checkout_adding-trust-seals"
                                }
                              },
                              {
                                "type": "text",
                                "data": "## App Injection: Script Examples \n\nWith BigCommerce's extensible software, there are a variety of ways to add scripts to your store. The steps above outline only one method of adding header and footer scripts to your store, which is by directly editing the theme files.\n\nAs mentioned in the App Injection Script Examples, you can use BigCommerce's Script Manager and Script API to inject scripts to your store. The Script Manager user interface is available to store owners and other users via granted permission directly in the Control Panel, or scripts can be programmatically injected into the store by developers using the Scripts API. These are the recommended methods as they allow seamless and intuitive injection of scripts.\n\nThe following sections present examples of scripts that inject popular apps into the checkout/order confirmation sequence.\n\n### Olark Live Chat \n\nAs an example of injecting an app from the BigCommerce Apps Marketplace, you could enable the Olark Live Chat app on either page by by using the script manager or our new Scripts API:\n\n```\n<!-- begin olark code -->\n<script type=\"text/javascript\" async>\n;(function(o,l,a,r,k,y){if(o.olark)return;\nr=\"script\";y=l.createElement(r);r=l.getElementsByTagName(r)[0];\ny.async=1;y.src=\"//\"+a;r.parentNode.insertBefore(y,r);\ny=o.olark=function(){k.s.push(arguments);k.t.push(+new Date)};\ny.extend=function(i,j){y(\"extend\",i,j)};\ny.identify=function(i){y(\"identifyv\",k.i=i)};\ny.configure=function(i,j){y(\"configure\",i,j);k.c[i]=j};\nk=y._={s:[],t:[+new Date],c:{},l:a};\n})(window,document,\"static.olark.com/jsclient/loader.js\");\n/* Add configuration calls bellow this comment */\nolark.identify('4080-493-10-1035');</script>\n<!-- end olark code -->\n```\n\n### Bluecheck Age Verification\n\nSimilarly, you could enable the Bluecheck age-verification app by using the script manager or our new Scripts API:\n\n```\n<!-- Bluecheck AV Start Here -->\n   <script src=\"https://api.bluecheck.me/modal/latest/custom/bigcommerce.js\"></script>\n   <script src='//api.bluecheck.me/age-gate/v2/loader.js.php?domain_token=[user-token-value]'></script>\n   <span style='display:none' id='bc_selected_shipping_info'>%%GLOBAL_ShippingAddress%%</span>\n   <span style='display:none' id='bc_selected_billing_info'>%%GLOBAL_BillingAddress%%</span>\n   <span style='display:none' id='bc_customer_acct_email'>%%GLOBAL_CurrentCustomerEmail%%</span>\n   <span style='display:none' id='bc_customer_acct_id'>%%GLOBAL_CurrentCustomerID%%</span>\n   <span style='display:none' id='bc_customer_acct_fname'>%%GLOBAL_CurrentCustomerFirstName%%</span>\n   <span style='display:none' id='bc_customer_acct_lname'>%%GLOBAL_CurrentCustomerLastName%%</span>\n   <!-- Bluecheck AV End Here -->\n```\n\n### Rebillia Recurring Billing\n\nTo add the Rebillia app, you could add the following tags by using the script manager or our new Scripts API:\n\n```\n<div id='rebillia_overlay'></div>\n\n<script src=\"https://js.braintreegateway.com/v2/braintree.js\"></script>\n\n<script type=\"text/javascript\" src=\"https://js.stripe.com/v2/\"></script>\n\n<script type=\"text/javascript\">\nfunction customerJWT(a){var b=\"r1sc6nvnnhed377cozp2bfwfa69cfz5\",c=new XMLHttpRequest;c.onreadystatechange=function(){if(4==c.readyState)if(200==c.status){var b=new XMLHttpRequest;b.open(\"GET\",\"https://demo.rebillia.com/storefront/login/\"+c.responseText,!0),b.withCredentials=!0,b.send()}else if(404==c.status){var d=new XMLHttpRequest;params=\"bc_email=\"+a,d.open(\"POST\",\"https://demo.rebillia.com/storefront/login/guest\",!0),d.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\"),d.withCredentials=!0,d.send(params)}else console.log(\"Something went wrong\")},c.open(\"GET\",\"/customer/current.jwt?app_client_id=\"+b,!0),c.send()}var currentcustomeremail=\"%%GLOBAL_CurrentCustomerEmail%%\",shopPath=\"%%GLOBAL_ShopPathSSL%%\",domainName=\"https://demo.rebillia.com\",domainURL=\"https://demo.rebillia.com/\";$(document).ready(function(){$.getScript(domainName+\"/js/embed-common.js\");var a=window.location.href.match(/[^\\/]+$/);if(a&&a.length){var b=a[0].split(\".\");\"account\"!=b[0]&&\"checkout\"!=b[0]&&\"finishorder\"!=b[0]||$.getScript(domainName+\"/js/embed-\"+b[0]+\".js\"),\"account\"==b[0]&&customerJWT()}});\n</script>\n```\n\n### Conversion Tracking: Conversions on Demand \n\nHere is one final example of an app that you could enable by using the script manager or our new Scripts API. This example enables Conversions on Demand:\n\n```\n<script type='text/javascript'>// <![CDATA[\n    var cod_page_guid = 'CHECKOUT';\n    var COD_CONFIG = {'platform':'bigcommerce', 'stoken':'as2_bcmarket_org'};\n        (function(){\n            var divCOD = document.createElement('div');\n            divCOD.id = 'codScripts';\n            var bodytag = document.getElementsByTagName('body')[0];\n            bodytag.appendChild(divCOD);\n            var cod = document.createElement('script');\n            cod.type = 'text/javascript';\n            cod.src = 'https://www.conversionsondemand.com/codadmin2/framework/cod-scripts-loader.js';\n            var s = document.getElementById('codScripts');\n            s.parentNode.insertBefore(cod, s);\n        })(COD_CONFIG);\n// ]]></script>\n```\n\n### Google Analytics: Addrexx Address Verification \n\nThe Addrexx app is integrated to the Checkout or Order Confirmation page via the BigCommerce control panel's Google Analytics box, rather than through injection directly into either Stencil template file. Here is the corresponding script to enter into the control panel:\n\n```\n<!-- START  Addrexx -->\n<script type=\"text/javascript\">\nwwPage = window.location.href;\nif (wwPage.indexOf(\"billing_address\") >= 0 || wwPage.indexOf(\"create_account\") >= 0 || wwPage.indexOf(\"shipping_address\") >= 0 || wwPage.indexOf(\"checkout\") >= 0) {\nfunction loadaddrexx() {\n    var _cc_url = \"xxredda.s3.amazonaws.com/bcmarket/loader.js\";\n    var _cc_s = document.createElement('script');\n    _cc_s.type = 'text/javascript';\n    _cc_s.src = ((\"http:\" === document.location.protocol) ? \"http:\" : \"https:\") + \"//\" + _cc_url;\n    document.getElementsByTagName(\"head\")[0].appendChild(_cc_s);\n};\nloadaddrexx();\n}\n</script>\n<!-- END  Addrexx -->\n```\n",
                                "header": {
                                  "anchor": "checkout_app-injection"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Resources\n\n### Related Articles\n* [The Complete Guide to Checkout Customization on BigCommerce](https://medium.com/bigcommerce-developer-blog/the-complete-guide-to-checkout-customization-on-bigcommerce-6b566bc36fa9) (Developer Blog)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Restyling the Apple Pay Button",
                          "route": {
                            "path": "/restyling-the-apple-pay-button"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Restyling the Apple Pay Button</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#restyling_using\">Using Apple Pay</a></li>\n    <li><a href=\"#restyling_apple\">Apple Pay and Stencil Themes</a></li>\n    <li><a href=\"#restyling_implementing\">Implementing the Apple Pay Button</a></li>\n    <li><a href=\"#restyling_apple-pay-identity\">Apple Pay Identity Guidelines</a></li>\n    <li><a href=\"#restyling_styling\">Styling the Apple Pay Button</a></li>\n    <li><a href=\"#restyling_troubleshooting\">Troubleshooting</a></li>\n\t</ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "## Using Apple Pay\n\nApple Pay is a digital wallet that links to a shopper's chosen credit or debit cards. It reduces checkout friction in the same way other digital wallets like PayPal do: Once a shopper has set up Apple Pay, they don't need to enter or transfer their actual credit or debit-card number, nor do they need to re-enter their billing, shipping or contact details.\n\nDisplaying the Apple Pay button to shoppers on your storefront is subject to Apple's [geographic constraints](https://support.apple.com/en-us/HT204916), [supported devices and software](https://support.apple.com/en-us/KM207105), [industry and conduct restrictions](https://developer.apple.com/apple-pay/acceptable-use-guidelines-for-websites/), and policies regarding store checkout flow. ",
                                "header": {
                                  "anchor": "restyling_using"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Apple Pay and Stencil Themes\n\nThe Apple Pay button is included in most Stencil themes, but its default appearance might not match your store's theme. This article explains how to do the following:\n* Script the button in themes that don't already include it\n* Restyle the button within Apple's guidelines\n\n### Themes Incorporating Apple Pay \n\nMost current Stencil themes incorporate Apple Pay by default. These include Cornerstone 1.4.0 (or later) and most Theme Marketplace themes. \n\n### Themes Omitting Apple Pay \n\nThe following Stencil themes do **not** include Apple Pay:\n\n* Cornerstone 1.3.4 or earlier\n* Fortune\n* Geneva\n* Prosper\n* Solo\n* Earlier versions of Marketplace themes that have since added Apple Pay\n* Custom themes derived from any of the above\n\n### Apple Pay Button's Location \n\nBy default, the Apple Pay button will appear on a theme's Cart page. If the store has [enabled site-wide HTTPS](https://support.bigcommerce.com/s/article/Site-Wide-HTTPS), the Apple Pay button will also appear in the Quick Cart modal. The Apple Pay button does _not_ appear on the checkout page, because Apple Pay is designed as a low-friction alternative that bypasses the store's native checkout.",
                                "header": {
                                  "anchor": "restyling_apple"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Implementing the Apple Pay Button\n\n### Themes Incorporating Apple Pay\n\nTo display the Apple Pay button in themes incorporating Apple Pay, a store administrator only needs to enable Apple Pay in the BigCommerce [control panel](https://support.bigcommerce.com/articles/Public/Connecting-with-Apple-Pay#setup) by selecting **Store Setup** > **Payments** > **Digital Wallets** > **Apple Pay** > **Set up**.\n\n### Themes Omitting Apple Pay\n\nTo display the Apple Pay button on the Cart page of themes omitting Apple Pay, you or a store administrator must paste enabling CSS into the footer script, as follows: \n\n1. Copy the CSS below.\n2. In the BigCommerce control panel, select **Storefront Design** > **Design Options** > **Scripts tab**.\n3. Paste the copied code into the Footer script box and select **Save**.",
                                "header": {
                                  "anchor": "restyling_implementing"
                                }
                              },
                              {
                                "type": "code",
                                "data": "<style>\n/* don’t display the button by default */\n.apple-pay-checkout-button {\n  display: none;\n}\n\n/* display the button if apple pay is supported */\n.apple-pay-supported .apple-pay-checkout-button {\n  display: inline-block;\n}\n\n/* renders a black background with white logo */\n.apple-pay-checkout-button {\n  background-size: 100% 60%;\n  background-repeat: no-repeat;\n  background-position: 50% 50%;\n  border-radius: 5px;\n  padding: 0px;\n  box-sizing: border-box;\n  min-width: 175px;\n  min-height: 32px;\n  max-height: 64px;\n  background-image: -webkit-named-image(apple-pay-logo-white);\n  background-color: black;\n  text-indent: -9000em;\n  cursor: pointer;\n}\n\n/* for small screens, you should adjust the width of the button to\n   span the width of the containing block */\n@media screen and (max-width: 480px) {\n  .apple-pay-checkout-button {\n    width: 100%;\n    height: 60px;\n  }\n}\n</style>",
                                "config": {
                                  "mode": "css"
                                },
                                "header": {
                                  "title": "Themes Omitting Apple Pay CSS"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Apple Pay Identity Guidelines\n\nAs a condition for enabling Apple Pay, Apple requires merchants to style and display the button according to [Apple Pay Identity Guidelines](https://developer.apple.com/apple-pay/Apple-Pay-Identity-Guidelines.pdf). For BigCommerce's summary of the relevant guidelines, see the [Integrating the Apple Pay Button](https://support.bigcommerce.com/articles/Public/Integrating-the-Apple-Pay-button/#guidelines) support article.",
                                "header": {
                                  "anchor": "restyling_apple-pay-identity"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Styling the Apple Pay Button\n\nBy default, a black version of the Apple Pay button will display in the storefront. However, Apple permits you to change the following three styling elements of the button, to match the style of your storefront:\n\n* Button background color, which must only be either white or black. A white button can have a black border.\n* Button height\n* Button width\n\n### Button Color – No Custom CSS Required\n\nIn themes incorporating Apple Pay, you or a store administrator can change the Apple Pay button's color in Theme Editor. Select **Buttons** > **Apple Pay** > **Button Color**. \n\nThe drop-down list offers you the three options shown below: \n\n* Black (white text) – the default\n* White (black text)\n* White (black text with border)\n\n### Button Color – Custom CSS Required\n\nIn themes omitting Apple Pay, you must use custom CSS to change the Apple Pay button's color. Here are CSS snippets to recolor the default black button.\n\nTo render the button with a white background and black text, use this CSS:",
                                "header": {
                                  "anchor": "restyling_styling"
                                }
                              },
                              {
                                "type": "code",
                                "data": ".apple-pay-checkout-button {\n  background-image: -webkit-named-image(apple-pay-logo-black);\n  background-color: white;\n}",
                                "header": {
                                  "title": "White background and black text",
                                  "subtitle": "Apple Pay button"
                                },
                                "config": {
                                  "mode": "css"
                                }
                              },
                              {
                                "type": "text",
                                "data": "To render the white Apple Pay button with black text and a black border, use this CSS:"
                              },
                              {
                                "type": "code",
                                "data": ".apple-pay-checkout-button {\n  background-image: -webkit-named-image(apple-pay-logo-black);\n  background-color: white;\n  border: .5px solid black\n}",
                                "header": {
                                  "title": "Black text and a black border",
                                  "subtitle": "Apple Pay button"
                                }
                              },
                              {
                                "type": "text",
                                "data": "\n### Button Size – Custom CSS Required \n\nResizing the button normally requires custom CSS. The following example shows how, by targeting the \n`.apple-pay-checkout-button` CSS selector, you can also manipulate the Apple Pay button's width and height. (This is subject to certain constraints imposed by Apple and BigCommerce, which are listed in the example's comments.)"
                              },
                              {
                                "type": "code",
                                "data": ".apple-pay-checkout-button {\n  width: 200px; /* apple specified minimum is 175px, there is no maximum */\n  height: 60px; /* apple specified minimum is 32px, maximum is 64px */\n}\t",
                                "header": {
                                  "title": "Button Size",
                                  "subtitle": "Apple Pay button"
                                },
                                "config": {
                                  "mode": "css"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "## Troubleshooting\n\n**Is your Apple Pay button configured but not appearing on the storefront?**\n\nTo troubleshoot issues like this, see the [Integrating the Apple Pay Button](https://support.bigcommerce.com/articles/Public/Integrating-the-Apple-Pay-button/#troubleshoot) support article.",
                                "header": {
                                  "anchor": "restyling_troubleshooting"
                                }
                              },
                              {
                                "type": "text",
                                "data": ""
                              },
                              {
                                "type": "text",
                                "data": "\n## Resources\n\n### Related Articles\n* [Connection with Apple Pay](https://support.bigcommerce.com/s/article/Connecting-with-Apple-Pay) (Knowledge Base)\n* [Apple Pay Identity Guidelines](https://support.bigcommerce.com/articles/Public/Integrating-the-Apple-Pay-button/#guidelines) (Knowledge Base)\n* [Sitewide HTTPS](https://support.bigcommerce.com/s/article/Site-Wide-HTTPS) (Knowledge Base)\n* [The Complete Guide to Checkout Customization on BigCommerce](https://medium.com/bigcommerce-developer-blog/the-complete-guide-to-checkout-customization-on-bigcommerce-6b566bc36fa9) (Developer Blog)\n\n### Addtional Resources\n* [Apple Pay on the Web Acceptable Use Guidelines](https://developer.apple.com/apple-pay/acceptable-use-guidelines-for-websites/) (Apple Developer)\n* [Apple Pay is compatible with these devices](https://support.apple.com/en-us/HT208531) (Apple Developer)\n* [Apple Pay participating banks in Canada, Latin America, and the United States](https://support.apple.com/en-us/HT204916) (Apple Developer)\n* [Using Apple Pay in Your Marketing](https://developer.apple.com/apple-pay/marketing/) (Apple Developer)"
                              }
                            ]
                          }
                        },
                        {
                          "title": "Checkout JS SDK",
                          "route": {
                            "path": "/checkout-js-sdk"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Getting Started in Vanilla JS",
                                "route": {
                                  "path": "/getting-started-in-vanilla-js"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Getting Started in Vanilla JS</h1>\n<div class=\"otp\" id=\"no-index\">\n<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#getting-started_prerequisites\">Prerequisites</a></li>\n    <li><a href=\"#getting-started_installing\">Installing the Checkout JS SDK</a></li>\n    <li><a href=\"#getting-started_creating\">Creating a checkout.js File</a></li>\n    <li><a href=\"#getting-started_mapping\">Mapping the checkout.js File to the Checkout Page Type</a></li>\t\n    <li><a href=\"#getting-started_preparing\">Preparing the checkout.html Template File</a></li>\t\n    <li><a href=\"#getting-started_logging\">Logging the Checkout Object</a></li>\t\n    <li><a href=\"#getting-started_next-steps\">Next Steps</a></li>\t\n</ul>\n</div>\n\n\n\n\n\n\n"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The Checkout JS SDK is a JavaScript library of methods for performing actions related to checkout. It includes methods for logging in a customer, adding addresses to the checkout object, and surfacing the shipping and payment methods that a merchant has configured. It’s everything you need to build your own custom checkout page on BigCommerce.\n\nWe have provided a [sample checkout app](https://github.com/bigcommerce/checkout-sdk-js-example) built in React; the React sample app is a great place to get started if you prefer to build within a framework. However, because the SDK is built in vanilla JS, it’s framework agnostic. To illustrate that point, this tutorial will walk through the first steps for building a custom checkout directly into the theme files using vanilla JS. At the end of the tutorial, you will have installed the Checkout SDK, created a new JavaScript module for your custom checkout, and console logged the checkout object."
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Prerequisites\n* This tutorial uses [Cornerstone](https://github.com/bigcommerce/cornerstone). Your theme may differ.\n* Theme should be setup for [local development](https://developer.bigcommerce.com/stencil-docs/getting-started/installing-stencil).\n",
                                      "header": {
                                        "anchor": "getting-started_prerequisites"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Installing the Checkout JS SDK\n\n1. Open your terminal and navigate to your theme’s directory.\n\nFor example, `cd cornerstone`\n\n2. Run the following command: \n\n`npm install --save @bigcommerce/checkout-sdk`\n",
                                      "header": {
                                        "anchor": "getting-started_installing"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Creating a <span class=\"fn\">checkout.js</span> file\n\n1. In your text editor, open your theme and create a new file in the <span class=\"fp\">assets/js/theme</span> directory.\n\n2. Save the file as checkout.js. You can name your checkout JavaScript file anything you like, but the subsequent steps of this tutorial will assume the filename checkout.js.\n\n3. Add the following to your <span class=\"fn\">checkout.js</span> file:",
                                      "header": {
                                        "anchor": "getting-started_creating"
                                      }
                                    },
                                    {
                                      "type": "code",
                                      "data": "import PageManager from './page-manager';\nimport { createCheckoutService } from '@bigcommerce/checkout-sdk';\n\nconst service = createCheckoutService();\n\nexport default class Checkout extends PageManager {\n\tasync onReady() {\n\t\tconst state = await service.loadCheckout();\nconsole.log(state.data.getCheckout());\n\t}\n}",
                                      "header": {
                                        "title": "checkout.js"
                                      },
                                      "config": {
                                        "mode": "js"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "Importing and extending the PageManager abstract class sets the page context for the <span class=\"fn\">checkout.js</span> module. We also `import { createCheckoutService }` from the Checkout SDK. \n\nThe async keyword ensures that `onReady()` returns a Promise; the await keyword waits until the Promise resolves to load the checkout. Async/await is supported in nearly all modern browsers, but if you need to support older browsers like IE, you will require the [Promise polyfill](https://github.com/stefanpenner/es6-promise).\n\n4. Save the file. "
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Mapping the <span class=\"fn\">checkout.js</span> file to the checkout page type\n\n1. Open the <span class=\"fp\">assets/js/app.js</span> file in your text editor.\n\n2. Add the following to map your <span class=\"fn\">checkout.js</span> file to the checkout page type:\n\n`checkout: () => import('./theme/checkout'),`",
                                      "header": {
                                        "anchor": "getting-started_mapping"
                                      }
                                    },
                                    {
                                      "type": "code",
                                      "data": "...\nconst pageClasses = {\n    account_orderstatus: getAccount,\n    account_order: getAccount,\n    account_addressbook: getAccount,\n    shippingaddressform: getAccount,\n    account_new_return: getAccount,\n    'add-wishlist': () => import('./theme/wishlist'),\n    account_recentitems: getAccount,\n    account_downloaditem: getAccount,\n    editaccount: getAccount,\n    account_inbox: getAccount,\n    account_saved_return: getAccount,\n    account_returns: getAccount,\n    account_paymentmethods: getAccount,\n    account_addpaymentmethod: getAccount,\n    account_editpaymentmethod: getAccount,\n    login: getLogin,\n    createaccount_thanks: getLogin,\n    createaccount: getLogin,\n    getnewpassword: getLogin,\n    forgotpassword: getLogin,\n    blog: noop,\n    blog_post: noop,\n    brand: () => import('./theme/brand'),\n    brands: noop,\n    cart: () => import('./theme/cart'),\n    category: () => import('./theme/category'),\n\t\tcheckout: () => import('./theme/checkout'),\n    compare: () => import('./theme/compare'),\n    page_contact_form: () => import('./theme/contact-us'),\n    error: noop,\n    404: noop,\n    giftcertificates: () => import('./theme/gift-certificate'),\n    giftcertificates_balance: () => import('./theme/gift-certificate'),\n    giftcertificates_redeem: () => import('./theme/gift-certificate'),\n    default: noop,\n    page: noop,\n    product: () => import('./theme/product'),\n    amp_product_options: () => import('./theme/product'),\n    search: () => import('./theme/search'),\n    rss: noop,\n    sitemap: noop,\n    newsletter_subscribe: noop,\n    wishlist: () => import('./theme/wishlist'),\n    wishlists: () => import('./theme/wishlist'),\n};\n...",
                                      "header": {
                                        "title": "app.js"
                                      },
                                      "config": {
                                        "mode": "js",
                                        "highlightRange": [
                                          {
                                            "from": "29",
                                            "to": "29"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "3. Save the file."
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Preparing the <span class=\"fn\">checkout.html</span> template file\n\n1. Open the <span class=\"fn\">checkout.html</span> file in your text editor.\n2. Comment out the following statement:\n\n `{{{ checkout.checkout_content }}}` \n\n`<!--{{{ checkout.checkout_content }}}-->`\n\n3. On the next line, add the following:",
                                      "header": {
                                        "anchor": "getting-started_preparing"
                                      }
                                    },
                                    {
                                      "type": "code",
                                      "data": "<script>window.__webpack_public_path__ = \"{{cdn 'assets/dist/'}}\";</script>\n<script src=\"{{cdn 'assets/dist/theme-bundle.main.js'}}\"></script>\n\n<script>\n    window.stencilBootstrap(\"{{page_type}}\", {{jsContext}}).load();\n</script>",
                                      "header": {
                                        "title": "checkout.html"
                                      },
                                      "config": {
                                        "mode": "html"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "4. Save the file."
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Logging the Checkout Object\n\n1. Navigate to the storefront and open your browser console.\n2. Add an item to your cart and proceed to the checkout page. The checkout page will be blank below the header.\n3. Note the checkout object logged to the console. \n",
                                      "header": {
                                        "anchor": "getting-started_logging"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Next Steps\n\nBuild out your custom checkout page by entering your HTML into the `checkout.html` file and JavaScript into checkout.js. For detailed documentation on all of the Checkout SDK library methods visit the [SDK GitHub repository](https://github.com/bigcommerce/checkout-sdk-js).",
                                      "header": {
                                        "anchor": "getting-started_next-steps"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Resources\n\n### Sample Apps\n* [Checkout SDK Sample App](https://github.com/bigcommerce/checkout-sdk-js-example) (BigCommerce GitHub)\n* [Checkout SDK Source Code](https://github.com/bigcommerce/checkout-sdk-js) (BigCommerce GitHub)\n\n## Related Articles\n* [Installing Stencil](https://developer.bigcommerce.com/stencil-docs/getting-started/installing-stencil)\n\n## Additonal Resources\n* [Promise Polyfill]( https://github.com/stefanpenner/es6-promise) (GitHub)"
                                    }
                                  ]
                                },
                                "config": {
                                  "sidebar": {
                                    "token": "Tutorial"
                                  }
                                }
                              },
                              {
                                "title": "React.js Custom Checkout",
                                "route": {
                                  "path": "/implement-a-custom-checkout"
                                },
                                "data": {
                                  "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/stencil-docs/template-files/customize-stencil-checkout/checkout-js-sdk/implement-a-custom-checkout.md"
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Handlebars and Stencil",
              "route": {
                "path": "/handlebars-syntax-and-helpers"
              },
              "data": {
                "children": [
                  {
                    "title": "Handlebars.js Overview",
                    "route": {
                      "path": "/handlebars-overview"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Handlebars.js Overview</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_handlebars-js\">Handlebars.js</a></li>\n    <li><a href=\"#handlebars_template\">Template Logic</a></li>\n    <li><a href=\"#handlebars_stencil\">Stencil Handlebars Resources</a></li>\n    <li><a href=\"#handlebars_rendering\">Rendering Special Characters</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Handlebars.js\n\n[Handlebars.js](https://handlebarsjs.com/) is a minimal templating language, offering helpers that allow you to create dynamic and robust templates for any BigCommerce storefront. Alongside the standard helpers offered by Handlebars.js, BigCommerce has added a variety of custom helpers available for use. For example, in [Array Helpers](/stencil-docs/handlebars-syntax-and-helpers/handlebars-helpers-reference/array-helpers) you will see two types of helpers: Standard Array Helpers, which are the existing Handlebars.js helpers, and Custom Array Helpers, which are BigCommerce's extension of the helpers.\n\nA Handlebars template looks just like a regular HTML page, with the addition of Handlebars expressions for all dynamic logic that you embed into the page.\n\nA Handlebars expression begins with: ``{{`` and ends with: ``}}``.\n\nHere is a basic example that accesses the title and body variables:",
                          "header": {
                            "anchor": "handlebars_handlebars-js"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<div class=\"entry\">\n  <h1>{{ title }}</h1>\n  <div class=\"body\">\n    {{ body }}\n  </div>\n</div>",
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "In production, Handlebars statements run on the server side, generating HTML received by the shopper's browser.\n\nYou can view a [full reference page of all the handlebars helpers available to Stencil here](/stencil-docs/handlebars-syntax-and-helpers/handlebars-helpers-reference/handlebars-full), or explore them using navigation on the left hand side.\n\nFor a thorough overview of how to use Handlebars inside your templates, review the [Handlebars documentation](http://handlebarsjs.com/) (Handlebars)."
                        },
                        {
                          "type": "text",
                          "data": "## Template Logic\n\nWith Handlebars, it’s easy to embed logic right into your templates. Handlebars has [built-in helpers](http://handlebarsjs.com/builtin_helpers.html) for widely used functions.",
                          "header": {
                            "anchor": "handlebars_template"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Stencil Handlebars Resources\n\nFor a comprehensive reference to the Stencil data objects that you can manipulate via Handlebars statements, see the [Stencil Object Model Reference](/stencil-docs/stencil-object-model-reference).",
                          "header": {
                            "anchor": "handlebars_stencil"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Rendering Special Characters\n\nBy default, Handlebars HTML-escapes values returned by a standard Handlebars `{{expression}}`. So, if a Handlebars expression includes special characters, the character codes will render literally on the storefront as HTML entities as opposed to producing the character itself.\n\nAssume that the HTML title referenced by the`{{title}}` Handlebars expression contains an ampersand and a straight apostrophe. When this helper renders on the storefront, you will see the character codes `&amp;` and `&#039;` displayed literally on the storefront, instead of the intended characters `&` and `'`. Similar display errors will be triggered by apostrophes, quotation marks, primes, and other extended characters. The workaround is to place the Handlebars variable in triple braces, i.e. `{{{title}}}`. [Handlebars documentation](https://handlebarsjs.com/) refers to this technique as a \"triple-stash.\"",
                          "header": {
                            "anchor": "handlebars_rendering"
                          }
                        }
                      ],
                      "children": []
                    }
                  },
                  {
                    "title": "Handlebars Helpers",
                    "route": {
                      "path": "/handlebars-helpers-reference"
                    },
                    "data": {
                      "blocks": [],
                      "children": [
                        {
                          "title": "Handlebars Helpers Reference",
                          "route": {
                            "path": "/handlebars-full"
                          },
                          "data": {
                            "blocks": [
                              {
                                "type": "html",
                                "data": "<h1>Handlebars Helpers Reference</h1>"
                              },
                              {
                                "type": "html",
                                "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li>Array Helpers</li>\n    <li>Collection Helpers</li>\n    <li>Comparison Helpers</li>\n    <li>Control-Flow Helpers</li>\n    <li>Date Helpers</li>\n    <li>HTML Helpers</li>\n    <li>Image Helpers</li>\n    <li>Inflection Helpers</li>\n\t\t<li>Injection Helpers</li>\n\t\t<li>Markdown Helpers</li>\n\t\t<li>Math Helpers</li>\n\t\t<li>Number Helpers</li>\n\t\t<li>Object Helpers</li>\n\t\t<li>Operator Helpers</li>\n\t\t<li>String Helpers</li>\n\t\t<li>URL Helpers</li>\n\t\t<li>Miscellaneous Helpers</li>\n    </ul>\n</div>"
                              },
                              {
                                "type": "text",
                                "data": "This page describes all of the Handlebars helpers supported on the Stencil framework. It includes helpers that are custom to, or customized for, Stencil.\n\nFor background information on using Handlebars helpers, please see the [official Handlebars documentation](http://handlebarsjs.com).",
                                "header": {}
                              },
                              {
                                "type": "text",
                                "data": "# <a name=\"array\"></a> Array Helpers\n\nThe following helpers are available to manage arrays:\n\n* [Stencil Custom Array Helpers](#array_custom)\n* [Standard Array Helpers](#array_std) \n\n## <a name=\"array_custom\"></a> Stencil Custom Array Helpers\n\nThe following array helpers are custom to the Stencil framework.\n### {{itemAt}}\n\n_Block helper that returns the item at the specified index._\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `returns` {any} `value`\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{itemAt array 1}}\n//=> 'b'\n```\n\n### {{join}}\n\nThe `join` helper is custom to Stencil. It joins an array of string items, with separators. It returns a string. \n\n#### Parameters\n\n- `values`: {Array}\n- `separator`: {String}\n- `limit=<number>`: An optional limit.\n\n### {{limit}}\n\nThe `limit` helper is custom to Stencil. It limits the number of items returned from an array variable, and returns a new array.\n\n#### Parameters\n\n- `data`: {Array}\n- `limit`: {Number}\n\n#### {{limit}} Example \n\nAssume that `{{cart.items}}` would return 10 items. You could use this helper to limit that behavior to only the first four items, by specifying: \n\n```\n{{limit cart.items 4}}\n```\n\n### {{pluck}}\n\nThe `pluck` helper is custom to Stencil. For one specified search key(s), it retrieves corresponding values from some or all elements in a specified collection. \n\nThe `pluck` helper returns the retrieved values in a comma-separated string. This helper's general form is:\n\n```\n{{pluck ([limit] <collection> [<limit-value>]) '<search-key>'}}\n```\n\n#### Parameters\n\n- `limit`, `limit-value`: Optional parameters to limit the number of results returned.\n- `collection`: The collection to search.\n- `search-key`: The string to search for.\n\n\n#### {{pluck}} Example 1\n\nAssume that the `categories` collection contains:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\" },\n  { \"id\": 2, \"name\": \"Cookware\" },\n  { \"id\": 3, \"name\": \"Cutlery\" }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'name'}}\n```\n\n...would return:\n\n```\n\"Bakeware,Cookware\"\n```\n\n#### {{pluck}} Example 2\n\nIf the `categories` themselves each contained an image object, then you could use dot notation to access that image object's children:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\", \"image\": { \"data\": \"http://...\", \"alt\": \"Bakeware image\"} },\n  { \"id\": 2, \"name\": \"Cookware\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cookware image\"} },\n  { \"id\": 3, \"name\": \"Cutlery\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cutlery image\"} }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'image.data'}}\n```\n\n...would return a comma-separated list of image URLs.\n\n\n## <a name=\"array_std\"></a> Standard Array Helpers\n\nThe following standard array helpers are supported on the Stencil framework.\n\n### <a name=\"after\"></a> {{after}}\n\nReturns all of the items in an array after the specified index. Opposite of [before](#before).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}: Collection.\n* `n` {Number}: Starting index (number of items to exclude).\n* `returns` {Array}: Array exluding `n` items.\n\n#### Example\n\n```handlebars\n{{after array 1}}\n//=> '[\"c\"]'\n```\n\n### {{arrayify}}\n\nCasts the given `value` to an array.\n\n#### Parameters\n\n* `value` {any}\n* `returns` {Array}\n\n#### Example\n\n```handlebars\n{{arrayify \"foo\"}}\n//=> '[\"foo\"]'\n```\n\n### <a name=\"before\"></a> {{before}}\n\nReturns all of the items in the collection before the specified count. Opposite of [after](#after).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}\n* `returns` {Array}: Array excluding items after the given number.\n\n#### Example\n\n```handlebars\n{{before array 2}}\n//=> '[\"a\", \"b\"]'\n```\n\n### {{eachIndex}}\n\n#### Parameters\n\n* `array` {Array}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#eachIndex collection}}\n  {{item}} is {{index}}\n{{/eachIndex}}\n```\n\n### {{filter}}\n\nBlock helper that filters the given array. Renders the block for values that evaluate to `true`; otherwise, returns the inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#filter array \"foo\"}}AAA{{else}}BBB{{/filter}}\n//=> 'BBB\n```\n\n### <a name=\"first\"></a> {{first}}\n\nReturns the first item, or first `n` items, of an array.\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting at `0`.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{first array 2}}\n//=> '[\"a\", \"b\"]'\n```\n\n### {{forEach}}\n\nIterates over each item in an array, and exposes the current item in the array as context to the inner block. In addition to the current array item, the helper exposes the following variables to the inner block:\n\n* `index`\n* `total`\n* `isFirst`\n* `isLast`\n\nAlso, `@index` is exposed as a private variable, and additional private variables may be defined as hash arguments.\n\n#### Parameters\n\n* `array` {Array}\n* `returns` {String}\n\n#### Example\n\n```js\nvar accounts = [\n{'name': 'John', 'email': 'john@example.com'},\n{'name': 'Malcolm', 'email': 'malcolm@example.com'},\n{'name': 'David', 'email': 'david@example.com'}\n];\n\n// example usage\n// {{#forEach accounts}}\n//   <a href=\"mailto:{{ email }}\" title=\"Send an email to {{ name }}\">\n//     {{ name }}\n//   </a>{{#unless isLast}}, {{/unless}}\n// {{/forEach}}\n```\n\n### {{inArray}}\n\nBlock helper that renders the block if an array has the given `value`. Optionally, you can specify an inverse block to render when the array does not have the given value.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#inArray array \"d\"}}\n  foo\n{{else}}\n  bar\n{{/inArray}}\n//=> 'bar'\n```\n\n### {{isArray}}\n\nReturns true if `value` is an es5 array.\n\n#### Parameters\n\n* `value` {any}: The value to test.\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isArray \"abc\"}}\n//=> 'false'\n```\n\n### <a name=\"last\"></a> {{last}}\n\nReturns the last item, or last `n` items, of an array. Opposite of [first](#first).\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting with the last item.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{last array 2}}\n//=> '[\"d\", \"e\"]'\n```\n\n### {{lengthEqual}}\n\nBlock helper that compares the length of the given array to the number passed as the second argument. If the array length is equal to the given `length`, the block is returned. Otherwise, you have the option of returning an inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `length` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#lengthEqual array 10}}AAA{{else}}BBB{{/lengthEqual}}\n//=> 'BBB'\n```\n\n### {{map}}\n\nReturns a new array, created by calling `function` on each element of the given `array`. The `{{map}}` helper does not modify the original, provided array, but returns a new one.\n\n#### Parameters\n\n* `array` {Array}\n* `function` {Function}\n* `returns` {String}\n\n#### Example\n\nGiven an array `['c', 'a', 'b']`:\n\n```\n// then used like this:\n// {{map array sort}}\n//=> '[\"a\", \"b\", \"c\"]'\n```\n\n### {{some}}\n\nBlock helper that returns the block *if* the callback returns true for some value in the given array.\n\n#### Parameters\n\n* `array` {Array}\n* `cb` {Function}: Callback function.\n* {Options}: Handlebars-provided options object.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `[1, 'b', 3]`:\n\n```handlebars\n{{#some array isString}}\n  Render me if the array has a string.\n{{else}}\n  Render me if it doesn't.\n{{/some}}\n//=> 'Render me if the array has a string.'\n```\n\n### {{sort}}\n\nSorts the given `array`. If an array of objects is passed, you may optionally pass (as the second argument) a `key` to sort on. Alternatively, you may pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `key` {String|Function}: The object key to sort by, or a sorting function.\n\n#### Example\n\nGiven an array `['b', 'a', 'c']`:\n\n\n```handlebars\n{{sort array}}\n//=> '[\"a\", \"b\", \"c\"]'\n```\n\n### {{sortBy}}\n\nSorts an `array`. If an array of objects is passed, you may optionally pass a `key` to sort on as the second argument. You may alternatively pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `props` {String|Function}: One or more properties to sort by, or sorting functions to use.\n\n#### Example\n\nGiven an array `[{a: 'zzz'}, {a: 'aaa'}]`:\n\n```handlebars\n{{sortBy array \"a\"}}\n//=> '[{\"a\":\"aaa\"}, {\"a\":\"zzz\"}]'\n```\n\n### <a name=\"withAfter\"></a> {{withAfter}}\n\nUse the items in the array, _after_ the specified index, as context inside a block. Opposite of [withBefore](#withBefore).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withAfter array 3}}\n  {{this}}\n{{/withAfter}}\n//=> \"de\"\n```\n\n### <a name=\"withBefore\"></a> {{withBefore}}\n\nUse the items in the array, _before_ the specified index, as context inside a block. Opposite of [withAfter](#withAfter).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withBefore array 3}}\n  {{this}}\n{{/withBefore}}\n//=> 'ab'\n```\n\n### <a name=\"withFirst\"></a> {{withFirst}}\n\nUses a collection's first item inside a Handlebars block expression. Opposite of [withLast](#withLast).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#withFirst array}}\n  {{this}}\n{{/withFirst}}\n//=> 'a'\n```\n### <a name=\"withLast\"></a> {{withLast}}\n\nUse the last item, or `n` items, in an array as context inside a block. Opposite of [withFirst](#withFirst).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}: The starting index.\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#withLast array}}\n  {{this}}\n{{/withLast}}\n//=> 'c'\n```\n\n### {{withSort}}\n\nBlock helper that sorts a collection and exposes the sorted collection as context inside the block.\n\n#### Parameters\n\n* `array` {Array}\n* `prop` {String}\n* `options` {Object}: Specify `reverse=\"true\"` to reverse the array.\n* `returns` {String}\n\n#### Example\n\nGiven the array `['b', 'a', 'c']`:\n\n```handlebars\n{{#withSort array}}{{this}}{{/withSort}}\n//=> 'abc'\n```\n\n# <a name=\"collection\"></a> Collection Helpers\n\nThe following standard helpers are available to handle collections.\n\n### {{isEmpty}}\n\nBlock helper that returns a block *if* the given collection is empty. If the collection is not empty, returns the inverse block (if supplied).\n\n#### Parameters\n\n* `collection` {Object}\n* `options` {Object}\n* `returns` {String}\n\n### {{iterate}}\n\nIterates over an array or object.\n\n#### Parameters\n\n* `context` {Object|Array}: The collection to iterate over.\n* `options` {Object}\n* `returns` {String}\n\n### {{length}}\n\nReturns the length of the given collection. When using a string literal in the template, the string must be value JSON. See the example below. Otherwise, pass in an array or object from the context.\n\n#### Parameters\n\n* `value` {Array|Object|String}\n* `returns` {Number}: The length of the value.\n\n#### Example\n\n```handlebars\n{{length '[\"a\", \"b\", \"c\"]'}}\n//=> 3\n\n//=> myArray = ['a', 'b', 'c', 'd', 'e'];\n{{length myArray}}\n//=> 5\n\n//=> myObject = {'a': 'a', 'b': 'b'};\n{{length myObject}}\n//=> 2\n```\n\n# <a name=\"comparison\"></a> Comparison Helpers\n\nThe following standard helpers are available to handle comparisons.\n\n### {{and}}\n\nBlock helper that renders the block if *both* of the given values are truthy. If you specify an inverse block, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {any}\n* `b` {any}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}\n\n### {{gt}}\n\nBlock helper that renders a block if `a` is *greater than* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{gte}}\n\nBlock helper that renders a block if `a` is *greater than or equal to* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{has}}\n\nBlock helper that renders a block if `value` has `pattern`. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `val` {any}: The value to check.\n* `pattern` {any}: The pattern to check for.\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}\n\n### {{eq}}\n\nBlock helper that renders a block if `a` is *equal to* `b`. If an inverse block is specified,  it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{ifEven}}\n\nReturns `true` if the given value is an even number.\n\n#### Parameters\n\n* `number` {Number}\n* `options` {Object}: Handlebars-provided options object\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n#### Example\n\n```handlebars\n{{#ifEven value}}\n  render A\n{{else}}\n  render B\n{{/ifEven}}\n```\n\n### {{ifNth}}\n\nConditionally renders a block *if* dividing the `a` operand by `b` yields a remainder of zero. If you specify an inverse block, it will be rendered when the remainder is *not* zero.\n\n#### Parameters\n\n* {}: {Number}\n* {}: {Number}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{ifOdd}}\n\nBlock helper that renders a block if `value` is *an odd number*. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `value` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n#### Example\n\n```handlebars\n{{#ifOdd value}}\n  render A\n{{else}}\n  render B\n{{/ifOdd}}\n```\n\n### {{is}}\n\nBlock helper that renders a block if `a` is *equal to* `b`. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {any}\n* `b` {any}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}\n\n### {{isnt}}\n\nBlock helper that renders a block if `a` is *not equal to* `b`. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}\n\n### {{lt}}\n\nBlock helper that renders a block if `a` is *less than* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{lte}}\n\nBlock helper that renders a block if `a` is *less than or equal to* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{neither}}\n\nBlock helper that renders a block if *neither of* the given values are truthy. If you specify an inverse block, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {any}\n* `b` {any}\n* `options` {}: Handlebars options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{unlessEq}}\n\nBlock helper that always renders the inverse block *unless `a` is equal to `b`*.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Inverse block by default, or block if falsy.\n\n### {{unlessGt}}\n\nBlock helper that always renders the inverse block *unless `a` is greater than `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Inverse block by default, or block if falsy.\n\n### {{unlessLt}}\n\nBlock helper that always renders the inverse block *unless `a` is less than `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{unlessGteq}}\n\nBlock helper that always renders the inverse block *unless `a` is greater than or equal to `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n### {{unlessLteq}}\n\nBlock helper that always renders the inverse block *unless `a` is less than or equal to `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n\n# <a name=\"control\"></a> Control-Flow Helpers\n\nThe following control-flow helpers have been customized for the Stencil framework:\n\n* [Conditional Control Flow](#ctrl_conditional)\n* [Loop Control Flow](#ctrl_loop)\n\nBeyond the formal examples below, syntax and examples for control-flow helpers are covered in the official Handlebars documentation [here](http://handlebarsjs.com/builtin_helpers.html).\n\n\n## <a name=\"ctrl_conditional\"></a> Conditional Control Flow\n\nThe following helpers provide control structures that test for conditions, and branch accordingly.\n\n### <a name=\"if\"></a> {{if}}\n\nThe `if` helper has been customized for Stencil, and has the following syntax:\n\n```\n{{#if <statement>}}\n  ... \n{{else if}}  /* optional else-if block */\n  ...\n{{else}}  /* optional else block */\n  ...\n{{/if}}\n```\n\nThe `<statement>` that the `if` helper evaluates can take these forms:\n\n- An object, as in: `{{#if object}}`.\n- A comparison expression, as in: `{{#if <lvalue> <operator> <rvalue>}}`.\n\n\nWhen you pass only one parameter to the `if` helper, it will return the following:\n- For an array parameter, the array's length.\n- For an empty object, a value of `false`.\n\n\n### {{unless}}\n\nThe `unless` helper is logically the opposite of the [`if` helper](#if), subject to the [restrictions](#unless_restrix) below. The syntax for `unless` can be found in the official Handlebars documentation [here](http://handlebarsjs.com/builtin_helpers.html).\n\n#### Formal Example\n\n```\n{{#unless statement}}\n   ... /* block to display/execute unless statement is true */\n{{/unless}}\n```\n\n#### <a name=\"unless_restrix\"></a> Restrictions\n\nStatements using `unless` can refer to: \n\n* Objects, as in: `{{#unless object}}`.\n\nUnlike the `if` helper,  `unless` on the Stencil framework does not support operators for comparison expressions. \nSo, for example, the following expression would throw an error:\n\n```\n{{#unless this.alt \"===\" \"hidden\"}}\n```\n\nA workaround for this logic is to recast the expression as `if`/not-equal-to. So the following expression would be valid:\n\n```\n{{#if this.alt \"!==\" \"hidden\"}}\n```\n\n#### Stencil Example \n\nHere is a usage example from Stencil's Cornerstone base theme: The `templates/pages/search.html` template displays search results. In this template's section that displays search suggestions, an `#unless` loop determines what to output for the final result:\n\n```\n{{#each category_results}}\n<li class=\"category-suggestion\">\n    {{#each this}}\n        <a href=\"{{url}}\">{{name}}</a>\n        {{#unless @last}} > {{/unless}}\n    {{/each}}\n</li>\n{{/each}}\n```\n\n### Nested if/else Statements to Test for if/and Conditions\n\nHandlebars does not provide an `if`/`and` conditional structure. However, to test for multiple conditions, you can nest `if`/`else` statements, as shown in this example:\n\n```\n <nav class=\"navigation\">\n      <ul>\n        {{#each nav_items}}\n            {{#if name '===' 'About Us'}}\n            {{else}}\n              {{#if name '===' 'Contact Us'}}\n              {{else}}\n                <li>\n                  <a class=\"top-level-nav-link\" href=\"{{url}}\">\n                    {{name}}\n                  </a>\n                </li>\n              {{/if}}\n            {{/if}}\n        {{/each}}\n      </ul>\n    </nav>\n```\n\n## <a name=\"ctrl_loop\"></a> Loop Control Flow\n\nThe following helpers are used to control loop execution.\n\n### {{any}}\n\nThe `any` helper is custom to Stencil. It checks whether at least one parameter evaluates to `true`.  Parameters can be of different types (strings, numbers, arrays, or collections).\n\n#### Examples\n\nFormally, the `any` helper is invoked as shown here:\n\n```\n{{#any items selected=true}} \n  ... /* block to display if any items have selected=true */\n{{/any}}\n```\n\nA usage example is http://cornerstone-light-demo.mybigcommerce.com/shop-all/garden, a category page in Stencil's Cornerstone base theme that does _not_ have faceted search turned on. Shoppers will see \"Shop by price\" filters instead of product filters. \n\nThe Stencil code controlling this component resides in the theme's `templates/components/category/shop-by-price.html` file. In this component, the `{{#any...` Handlebars helper is used to determine whether a shopper has selected one of the filters, and whether a \"reset\" button needs to be displayed:\n\n```\n{{#any shop_by_price selected=true}}\n    <li class=\"navList-item\">\n        <a href=\"{{category_url}}\" class=\"navList-action\">\n            {{lang 'category.reset'}}\n        </a>\n    </li>\n{{/any}}\n```\n\n### {{all}}\n\nThe `all` helper is custom to Stencil. It checks whether _all_ parameters evaluate to `true`. Parameters can be of different types (strings, numbers, arrays, or collections).\n\n#### Example\n\n```\n{{#all items theme_settings.optionA theme_settings.optionB}}\n  ... /* block to display, if all items evaluate to true */\n{{/all}}\n```\n\n### contains Helper\n\nThe `contains` helper is custom to Stencil. It checks whether the second parameter is included in the first parameter (typically a collection).\n\n#### Example\n\n```\n{{#contains fonts \"Roboto\"}}\n  ... /* block to display, if any items contain \"Roboto\" */\n{{/contains}}\n```\n\n### {{each}}\n\nThe syntax for the `each` helper can be found in the official Handlebars documentation [here](http://handlebarsjs.com/builtin_helpers.html).\n\n#### Example\n\n```\n{{#each array | object}}\n  ...\n{{else}} /* optional block to execute if the the list is empty */\n  ...\n{{/each}}\n```\n\n#### Notes\n\n- Within an each block, use `{{this}}` to reference the current item.\n- Within an each block, use `{{@index}}` to reference the current item's index number.\n- When iterating through objects, `{{@key}}` returns the current key name.\n- `{{each}}` loops can be nested.\n\n\n### {{for}}\n\nThe `for` helper is a custom Stencil helper. In particular, this helper is limited to 100 iterations, in order to protect against infinite loops. \n\nThe `for` helper has the following syntax, where parameters `<from>` and `<to>` are numbers, and `<context>` is an object:\n\n```\n{{#for <from> <to> <context>}}\n  ...\n{{/for}}\n```\n\n\n# <a name=\"date\"></a> Date Helpers\n\nThe following standard Handlebars helper handles dates.\n\n### {{moment}}\n\nExposes `helper-date` as `moment`.\n\n\n# <a name=\"html\"></a> HTML Helpers\n\nThe following standard helpers are available to handle HTML content.\n\n### {{ellipsis}}\n\nTruncates a string to the specified `length`, and appends an elipsis, `…`.\n\n#### Parameters\n\n* `str` {String}\n* `length` {Number}: The desired length of the returned string.\n* `returns` {String}: The truncated string.\n\n#### Example\n\n```js\n{{ellipsis \"<span>foo bar baz</span>\", 7}}\n//=> 'foo bar…'\n```\n\n### {{sanitize}}\n\nStrips HTML tags from a string, so that only the text nodes are preserved.\n\n#### Parameters\n\n* `str` {String}: The string of HTML to sanitize.\n* `returns` {String}\n\n#### Example\n\n```js\n{{sanitize \"<span>foo</span>\"}}\n//=> 'foo'\n```\n\n### {{ul}}\n\nBlock helper for creating unordered lists (`<ul></ul>`).\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}\n\n### {{ol}}\n\nBlock helper for creating ordered lists  (`<ol></ol>`).\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}\n\n### {{thumbnailImage}}\n\nReturns a `<figure>` with a thumbnail linked to a full picture.\n\n#### Parameters\n\n* `context` {Object}: Object with values/attributes to add to the generated elements:\n* `context.alt` {String}\n* `context.src` {String}\n* `context.width` {Number}\n* `context.height` {Number}\n* `returns` {String}: HTML `<figure>` element with image and optional caption/link.\n\n\n# <a name=\"image\"></a> Image Helpers\n\nThe Stencil framework provides the following custom helper to manage images.\n\n## {{getImage}}\n\nThe `getImage` helper is custom to Stencil. It returns the URL for an image of the specified size. Values for the size parameter are defined in the `config.json` file’s `settings` section.\n\nThis helper's parameters are:\n\n- `stencilImage`: a StencilImage.\n- `size`: a string.\n- `defaultImage` (optional): a string. \n\nHere is an example: \n\n```\n{{getImage image \"thumbnail\"}}\n``` \n\nYou can use the optional `defaultImage` parameter to specify an image that will be displayed in cases where the passed `stencilImage` value is null.\n\n\n# <a name=\"inflection\"></a> Inflection Helpers\n\nThe following standard helpers are available to transform strings.\n\n### {{inflect}}\n\nHandles singular/plural forms.\n\n#### Parameters\n\n* `count` {Number}\n* `singular` {String}: The singular form\n* `plural` {String}: The plural form\n* `include` {String}\n* `returns` {String}\n\n### {{ordinalize}}\n\nReturns an ordinalized number (as a string).\n\n#### Parameters\n\n* `val` {String}: The value to ordinalize.\n* `returns` {String}: The ordinalized number.\n\n#### Example\n\n```handlebars\n{{ordinalize 1}}\n//=> '1st'\n{{ordinalize 21}}\n//=> '21st'\n{{ordinalize 29}}\n//=> '29th'\n{{ordinalize 22}}\n//=> '22nd'\n```\n\n# <a name=\"injection\"></a> Injection Helpers\n\nThe Stencil framework provides the following custom helpers to insert various resources into a page context:\n\n* [{{cdn}}](#cdn)\n* [{{getFontsCollection}}](#fonts)\n* [{{inject}} and {{jsContext}}](#inject)\n* [{{stylesheet}}](#stylesheet)\n\n### <a name=\"cdn\"></a> {{cdn}}\n\nThe `cdn` helper is custom to Stencil. It is a URL transformer for content delivery networks.\n\nWhen you reference static assets that you have locally staged outside your `<theme-name>` directory and uploaded using WebDAV, place the `webdav:` prefix before each corresponding `assetPath` parameter. For example, a link like:\n\n```\n<img src=\"{{cdn \"webdav:img/image.jpg\"}}\">\n```\n\n...will be transformed to a result like:\n\n```\n<img src=\"https://cdn.bcapp/3dsf74g/content/img/image.jpg\">\n```\n\nThe presumed WebDAV root directory is `/content/`. (So, in this example, the `image.jpg` file has been uploaded to the WebDAV `/content/` directory.) The presumed local directory is `<theme-name>/assets/`, so you can omit that path when referencing its contained files or subdirectories.\n\n\n#### <a name=\"cdn-custom\"></a> CDN Custom Endpoints\n\nYou can define custom CDN endpoints to use with the `cdn` Handlebars helper. This facilitates including large, high-resolution image assets in themes, without exceeding BigCommerce's [50 MB limit](/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading#bundling_bundling-your-theme) when bundling the theme for upload to BigCommerce. \n\nYou could use a local version of the image in development, and a version on a CDN (e.g. Imgix) in production. To do so, define custom CDN endpoints in your theme's <span class=\"fn\">config.json</span> [file](https://github.com/bigcommerce/cornerstone/blob/master/config.json), as highlighted in the example below:"
                              },
                              {
                                "type": "code",
                                "data": "{\n  \"name\": \"Cornerstone\",\n  \"version\": \"1.3.5\",\n  \"settings\": {\n    \"homepage_new_products_count\": 12,\n    \"homepage_featured_products_count\": 8,\n    \"cdn\": {\n      \"customcdn\": \"https://bigcommerce.customcdn.net\"\n          }\n     }\n}",
                                "header": {
                                  "title": "config.json",
                                  "subtitle": "custom cdn endpointexample"
                                }
                              },
                              {
                                "type": "text",
                                "data": "After defining an endpoint, you can use the short name in the same way as you would use a `webdav:` abbreviation:\n\n```\n<img src=\"{{cdn \"customcdn:img/image.jpg\"}}\" />\n```\n\nIn local development, that helper would return:\n\n<pre>&lt;img src=\"<b>/assets/cdn/</b>customcdn/img/image.jpg\" /&gt;\n</pre>\n\nWhereas in production, it would return:\n\n```\n<img src=\"https://bigcommerce.customcdn.net/img/image.jpg\" />\n```\nAs highlighted above, the helper is configured to rewrite *local* URLs to a `<theme-name>/assets/cdn/` subfolder. The `stencil bundle` command will exclude this local `assets/cdn/` subfolder from the bundle that it creates. This filtering circumvents the 50 MB size limit on the resulting .zip file.\n\n\n### {{getFontsCollection}}\n\nThe `getFontsCollection` helper is custom to Stencil. It returns a link tag that loads all selected font collections. You can optionally supply a parameter to control the `font-display` mode from this list:\n- `swap`\n- `auto`\n- `block`\n- `fallback`\n- `optional`\n\nThe default mode is `swap`.\n\nYou can read more about font-display [on the Mozilla Documentation](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display).\n\n### <a name=\"inject\"></a> {{inject}} and {{jsContext}}\n\nOccasionally, your theme's client-side application code might need to incorporate dynamic data from the template context. Stencil provides two custom Handlebars helpers to help you achieve this: `inject`  and `jsContext`.\n\n#### About the {{inject}} Helper\n\nThe `inject` helper collects data definitions for injection into the `jsContext` variable. It composes a JSON object containing a subset of the template context to be sent to the browser. Parameters of the `inject` helper are:\n\n- `key`: a string.\n- `value`: multiple types supported. \n\nAn `inject` call takes this form:\n\n```\n{{inject \"stringBasedKey\" contextValue}}\n```\n\n#### About the {{jsContext}} Helper\n\nThe `jsContext` helper takes no parameters; it simply returns a JSON object containing all data collected by the `inject` helper. To retrieve the parsable JSON object, just call `{{jsContext}}` after all of the `{{inject}}` calls.\n\n\n#### {{inject}} + {{jsContext}} Example 1\n\nTo set up the product name in your client-side app, you can do the following, if you are in the context of a product:\n\n```\n{{inject \"myProductName\" product.title}}\n\n<script>\n// Note the lack of quotes around the jsContext handlebars helper, it becomes a string automatically.\nvar jsContext = JSON.parse({{jsContext}}); \n\n// jsContext would output \"{\\\"myProductName\\\": \\\"Sample Product\\\"}\" which can feed directly into \nyour JavaScript.\n\nconsole.log(jsContext.myProductName); // Will output: Sample Product\n</script>\n```\n\n##### Notes on Example 1\n\nYou can compose your JSON object across multiple pages to create a different set of client-side data, depending on the currently loaded template context.\n\nThe Stencil theme makes the `jsContext` available on the active page scoped. It also makes it available on the global `PageManager` objects, as `this.context`.\n\n#### {{inject}} Example 2\n\nThe following code uses `inject` to add all product IDs into JavaScript on category pages. It resides in a theme's `<theme-name>/templates/pages/category.html` template. Note the two `inject` calls directly under the front matter:\n\n```\n\ncategory:\n    shop_by_price: true\n    products:\n        limit: {{theme_settings.categorypage_products_per_page}}\n\n{{inject \"categoryProductsPerPage\" theme_settings.categorypage_products_per_page}}\n{{inject \"productIds\" (pluck category.products 'id')}}\n{{#partial \"head\"}}\n    {{#if pagination.category.previous}}\n        <link rel=\"prev\" href=\"{{pagination.category.previous}}\">\n    {{/if}}\n    {{#if pagination.category.next}}\n        <link rel=\"next\" href=\"{{pagination.category.next}}\">\n    {{/if}}\n{{/partial}}\n\n{{#partial \"page\"}}\n\n{{> components/common/breadcrumbs breadcrumbs=breadcrumbs}}\n{{#if category.image}}\n    <img src=\"{{getImage category.image 'zoom_size'}}\">\n{{/if}}\n<h1 class=\"page-heading\">{{category.name}}</h1>\n{{{category.description}}}\n{{{snippet 'categories'}}}\n<div class=\"page\">\n    <aside class=\"page-sidebar\" id=\"faceted-search-container\">\n        {{> components/category/sidebar}}\n    </aside>\n\n    <main class=\"page-content\" id=\"product-listing-container\">\n        {{#if category.products}}\n            {{> components/category/product-listing}}\n        {{else}}\n            <p>{{lang 'categories.no_products'}}</p>\n        {{/if}}\n    </main>\n</div>\n\n{{/partial}}\n{{> layout/base}}\n```\n\n### <a name=\"stylesheet\"></a> {{stylesheet}}\n\nThe `stylesheet` helper is custom to Stencil. It renders a link tag to insert a stylesheet into your theme. (This is required if you want Theme Editor to rewrite the stylesheet file when a merchant customizes their theme.) This helper returns an HTML string.\n\n#### Parameters\n\n- path: String containing the path to the theme's CSS stylesheet file.\n- Other parameters are optional, appended in the form: `key=\"value\"`.\n\n#### Example\n\n```\n{{{stylesheet \"assets/css/style.css\" class=\"myStylesheet\"}}}\n```\n\n\n# <a name=\"markdown\"></a> Markdown Helpers\n\nThe following standard helper is available to convert markdown.\n\n### {{markdown}}\n\nBlock helper that converts a string of inline markdown to HTML.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```html\n{{#markdown}}\n# Foo\n{{/markdown}}\n//=> <h1>Foo</h1>\n```\n\n# <a name=\"math\"></a> Math Helpers\n\nThe following standard helpers are available to handle mathematical operations.\n\n\n### {{add}}\n\nReturns the sum of `a` plus `b`.\n\n#### Parameters\n\n* `a` {Number}\n* `b` {Number}\n\n### {{subtract}}\n\nReturn the differnece of `a` minus `b`.\n\n#### Parameters\n\n* `a` {Number}\n* `b` {Number}\n\n### {{divide}}\n\nDivides `a` by `b`.\n\n#### Parameters\n\n* `a` {Number}: numerator\n* `b` {Number}: denominator\n\n### {{multiply}}\n\nMultiplies `a` by `b`.\n\n#### Parameters\n\n* `a` {Number}: factor\n* `b` {Number}: multiplier\n\n### {{floor}}\n\nGets the `Math.floor()` of the given value.\n\n#### Parameters\n\n* `value` {Number}\n\n### {{ceil}}\n\nGets the `Math.ceil()` [ceiling] of the given value.\n\n#### Parameters\n\n* `value` {Number}\n\n### {{round}}\n\nRounds the given value.\n\n#### Parameters\n\n* `value` {Number}\n\n### {{sum}}\n\nReturns the sum of all numbers in the given array.\n\n#### Parameters\n\n* `array` {Array}: Array of numbers to add up.\n* `returns` {Number}\n\n#### Example\n\n```handlebars\n{{sum \"[1, 2, 3, 4, 5]\"}}\n//=> '15'\n```\n\n### {{avg}}\n\nReturns the average of all numbers in the given array.\n\n#### Parameters\n\n* `array` {Array}: Array of numbers to add up and average.\n* `returns` {Number}\n\n#### Example\n\n```handlebars\n{{avg \"[1, 2, 3, 4, 5]\"}}\n//=> '3'\n```\n\n# <a name=\"number\"></a> Number Helpers\n\nThe following standard helpers are available to handle and transform numbers.\n\n### {{addCommas}}\n\nAdds commas to numbers.\n\n#### Parameters\n\n* `num` {Number}\n* `returns` {Number}\n\n### {{phoneNumber}}\n\nConverts a string or number to a formatted phone number.\n\n#### Parameters\n\n* `num` {Number|String}: The phone number to format, e.g., `8005551212`\n* `returns` {Number}: The formatted phone number: `(800) 555-1212`\n\n### {{random}}\n\nGenerates a random number between two values.\n\n#### Parameters\n\n* `min` {Number}\n* `max` {Number}\n* `returns` {String}\n\n### {{toAbbr}}\n\nAbbreviates numbers to the given number of `precision`. This is for general numbers, not size in bytes.\n\n#### Parameters\n\n* `number` {Number}\n* `precision` {Number}\n* `returns` {String}\n\n### {{toExponential}}\n\nReturns a string, representing the given number in exponential notation.\n\n#### Parameters\n\n* `number` {Number}\n* `fractionDigits` {Number}: Optional. An integer specifying the number of digits to use after the decimal point. Defaults to as many digits as necessary to specify the number.\n* `returns` {Number}\n\n#### Example\n\n```js\n{{toExponential number digits}};\n```\n\n### {{toFixed}}\n\nFormats the given number, using fixed-point notation.\n\n#### Parameters\n\n* `number` {Number}\n* `digits` {Number}: Optional. The number of digits to use after the decimal point. This can be a value between 0 and 20, inclusive, and implementations may optionally support a larger range of values. If this argument is omitted, it is treated as 0.\n* `returns` {Number}\n\n### {{toFloat}}\n\n#### Parameters\n\n* `number` {Number}\n* `returns` {Number}\n\n### {{toInt}}\n\n#### Parameters\n\n* `number` {Number}\n* `returns` {Number}\n\n### {{toPrecision}}\n\n#### Parameters\n\n* `number` {Number}\n* `precision` {Number}: Optional. The number of significant digits.\n* `returns` {Number}\n\n\n# <a name=\"object\"></a> Object Helpers\n\nThe following standard helpers are available to handle objects.\n\n### {{extend}}\n\nExtends the context with the properties of other objects. A shallow merge is performed to avoid mutating the context.\n\n#### Parameters\n\n* `objects` {Object}: One or more objects to extend.\n* `returns` {Object}\n\n### {{forIn}}\n\nBlock helper that iterates over the properties of an object, exposing each key and value on the context.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}\n\n### {{forOwn}}\n\nBlock helper that iterates over the *own* properties of an object, exposing each key and value on the context.\n\n#### Parameters\n\n* `obj` {Object}: The object to iterate over.\n* `options` {Object}\n* `returns` {String}\n\n### {{toPath}}\n\nTakes arguments and, if they are string or number, converts them to a dot-delineated object property path.\n\n#### Parameters\n\n* `prop` {String|Number}: The property segments to assemble (can be multiple).\n* `returns` {String}\n\n### {{get}}\n\nUses property paths (`a.b.c`) to get a value or nested value from the context. Works as a regular helper or block helper.\n\n#### Parameters\n\n* `prop` {String}: The property to get, optionally using dot notation for nested properties.\n* `context` {Object}: The context object.\n* `options` {Object}: The Handlebars options object, if used as a block helper.\n* `returns` {String}\n\n### {{getObject}}\n\nUses property paths (`a.b.c`) to get an object from the context. Unlike the `get` helper, this helper will return the actual object, including the given property key. Also, this helper does not work as a block helper.\n\n#### Parameters\n\n* `prop` {String}: The property to get, optionally using dot notation for nested properties.\n* `context` {Object}: The context object.\n* `returns` {String}\n\n### {{hasOwn}}\n\nReturns true if `key` is an own, enumerable property of the given `context` object.\n\n#### Parameters\n\n* `key` {String}\n* `context` {Object}: The context object.\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{hasOwn context key}}\n```\n\n### {{isObject}}\n\nReturns true if `value` is an object.\n\n#### Parameters\n\n* `value` {String}\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isObject \"foo\"}}\n//=> false\n```\n\n### {{merge}}\n\nDeeply merges the properties of the given `objects` with the context object.\n\n#### Parameters\n\n* `object` {Object}: The target object. Pass an empty object to shallow-clone.\n* `objects` {Object}\n* `returns` {Object}\n\n### {{JSONparse}}\n\nBlock helper that parses a string using `JSON.parse`, then passes the parsed object to the block as context.\n\n#### Parameters\n\n* `string` {String}: The string to parse.\n* `options` {Object}: Handlebars options object.\n\n### {{JSONstringify}}\n\nStringifies an object using `JSON.stringify`.\n\n#### Parameters\n\n* `obj` {Object}: Object to stringify.\n* `returns` {String}\n\n\n# <a name=\"operator\"></a> Operator Helpers\n\nThe Stencil framework supports the following operator helpers:\n\n[Comparison Operators](#op_comparison)\n[Logical {{or}} Operator](#op_logical)\n[{{typeof}} Operator](#op_type)\n\n## <a name=\"op_comparison\"></a> Comparison Operators\n\nThe following helpers are available to handle comparisons.\n\n| Helper | Definition |\n|--|--|\n|`==`| equal to |\n|`===`| equal to and equal type |\n|`!=`| not equal |\n|`<`| less than |\n|`>`| greater than |\n|`<=`| less than or equal to |\n|`>=`| greater than or equal to |\n\n### Equal to and Equal Type Example\n\nTo compare a string, use the `===` operator, as in this example from `templates/components/common/share.html`: \n\n```\n  {{#if service '===' 'facebook'}}\n    <svg>\n      <use xlink:href=\"#icon-facebook\"/>\n    </svg>\n  {{/if}}\n```\n\n### Not Equal or Not Equal Type Example\n\nTo improvise a `!==` (not equal or not equal type) comparison operator in Handlebars, you can use an [if](#if)/else structure as shown in this example:\n\n```\n  <nav class=\"navigation\">\n      <ul>\n        {{#each nav_items}}\n            {{#if name '===' 'About Us'}}\n            {{else}}\n              <li>\n                <a class=\"top-level-nav-link\" href=\"{{url}}\">\n                  {{name}}\n                </a>\n              </li>\n            {{/if}}\n        {{/each}}\n      </ul>\n    </nav>\n```\n\n## <a name=\"op_logical\"></a> Logical {{or}} Operator\n\nThe `or` operator has been customized for Stencil. It checks whether at least one of its parameters evaluates to true, and has the following syntax:\n\n```\n{{#or 1 0 0 0 0 0 0}} \n  ... /* execute this block if OR evaluates to true */\n{{/or}}\n```\n\n### Example\n\nHere is a usage example from Stencil's Cornerstone base theme, where it displays the cart's contents. The `templates/components/cart/content.html` template uses the `or` operator to determine whether an item contains either product options _or_ configurable fields. If at least one condition is true, the template displays an edit link for the item:\n\n```\n{{#or options configurable_fields}}\n    <a href=\"#\" data-item-edit=\"{{id}}\">{{lang 'cart.checkout.change'}}</a>\n{{/or}}\n```\n\n### Parameters \n\nThe `or` operator's parameters are one or more strings, numbers, arrays, or collections. Parameters can be of mixed types. \n\n\n## <a name=\"op_type\"></a> {{typeof}} Operator\n\nThe `typeof` operator returns the JavaScript type of a variable, such as:\n\n- string\n- number\n- boolean\n- object\n\nBy design, an array will return a `typeof` value of `object`.\n\n### Example\n\n```\n<script>\n    if (typeof(addthis) === \"object\") {\n        addthis.toolbox('.addthis_toolbox');\n    }\n</script>\n```\n\n\n# <a name=\"string\"></a> String Helpers\n\nThe following helpers are available to manipulate strings:\n\n* [Stencil Custom String Helpers](#string_custom)\n* [Standard String Helpers](#string_std)\n\n\n## <a name=\"string_custom\"></a> Stencil Custom String Helpers\n\nThe following string helpers are custom to the Stencil framework.\n\n### <a name=\"block-helper\"></a> {{block}} </span>\n\nThe `block` string helper is custom to Stencil. It defines a block of content, which can be overwritten by the [partial](#partial-helper) helper.\n\n### {{concat}}\n\nThe `concat` helper is custom to Stencil. It concatenates two string objects from the page's context, which are passed as parameters. It returns a new string object.\n\n#### Example\n\n```\n{{concat breadcrumbs.[0].name breadcrumbs.[0].url}}\n```\n\n### {{dynamicComponent}}\n\nThe `dynamicComponent` string helper is custom to Stencil. It inserts a dynamic partial from within the path that is supplied as its parameter.\n\n\n### {{json}}\n\nThe `json` string helper is custom to Stencil. You can use this helper to convert a JavaScript string object (from the page's context) into a JSON string object.\n\n\n### {{lang}}\n\nThe `lang` string helper is custom to Stencil. It maps keys to translation files, based on the locale indicated by the visitor’s browser. Its parameters are the following keys:\n\n- `translationKey`: a string.\n- `options`: key-value pairs.\n\n\n### {{nl2br}}\n\nThe `nl2br` helper is custom to Stencil. You can call this helper on a string object from the page's context, to convert its contained newline characters (`\\r\\n`, `\\n\\r`, `\\r`, `\\n`) to `<br>` tags. The `nl2br` helper returns a new string object.\n\n#### Example\n\nThis Handlebars statement:\n\n```\n{{nl2br settings.address}}\n```\n\n...will take this example string:\n\n```\n\"settings\": {\n  \"address\": \"\\r\\n685 Market St\\r\\nSan Francisco\\r\\n94105\\r\\nCA\\r\\n\"\n}\n```\n\n...and return\n\n```\n\"<br>685 Market St<br>San Francisco<br>94105<br>CA<br>\"\n```\n\n### <a name=\"partial-helper\"></a> {{partial}}\n\nThe `partial` string helper is custom to Stencil. It overrides block content defined by the [block](#block-helper) helper.\n\n\n### {{replace}}\n\nThe `replace` string helper is custom to Stencil. It searches for the first parameter within the second parameter and, if it finds it, replaces the first parameter with the contents of the specified Handlebars block.\n\nFor example, the following code would search for the string `needle` within the scope defined by `haystack`. If found, it would replace that string with the Handlebars block defined by `<context...replacement>`:\n\n```\n{{#replace \"needle\" haystack}}\n  {{<context to use as a replacement>}}\n{{/replace}}\n```\n\n### {{toLowerCase}}\n\nThe `toLowerCase` helper is custom to Stencil. Use this helper to return a copy of a string object, in all-lowercase. The helper returns a new string object.\n\n#### Example\n\nThis Handlebars statement:\n\n```\n{{toLowerCase head.title}}\n```\n\n...will take this example string:\n\n```\n\"head\": {\n  \"title\": \"This is my TEST Store\"\n}\n```\n\n...and return:\n\n```\n\"this is my test store\"\n```\n\n\n## <a name=\"string_std\"></a> Standard String Helpers\n\nThe following standard string helpers are supported on the Stencil framework.\n\n### {{camelcase}}\n\ncamelCases the characters in the given `string`.\n\n#### Parameters\n\n* `string` {String}: The string to camelcase.\n* `returns` {String}\n\n#### Example\n\n```js\n{{camelcase \"foo bar baz\"}};\n//=> 'fooBarBaz'\n```\n\n### {{capitalize}}\n\nCapitalizes the first word in a sentence.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{capitalize \"foo bar baz\"}}\n//=> \"Foo bar baz\"\n```\n\n### {{capitalizeAll}}\n\nCapitalizes all words in a string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{capitalizeAll \"foo bar baz\"}}\n//=> \"Foo Bar Baz\"\n```\n\n### {{center}}\n\nCenters a string, using non-breaking spaces.\n\n#### Parameters\n\n* `str` {String}\n* `spaces` {String}\n* `returns` {String}\n\n### {{chop}}\n\nLike `trim`, but removes both extraneous whitespace *and non-word characters* from the beginning and end of a string.\n\n#### Parameters\n\n* `string` {String}: The string to chop.\n* `returns` {String}\n\n#### Example\n\n```js\n{{chop \"_ABC_\"}}\n//=> 'ABC'\n\n{{chop \"-ABC-\"}}\n//=> 'ABC'\n\n{{chop \" ABC \"}}\n//=> 'ABC'\n```\n\n### {{dashcase}}\n\ndash-cases the characters in `string`. Replaces non-word characters and periods with hyphens.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{dashcase \"a-b-c d_e\"}}\n//=> 'a-b-c-d-e'\n```\n\n### {{dotcase}}\n\ndot.cases the characters in `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{dotcase \"a-b-c d_e\"}}\n//=> 'a.b.c.d.e'\n```\n\n### {{hyphenate}}\n\nReplaces spaces in a string with hyphens.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{hyphenate \"foo bar baz qux\"}}\n//=> \"foo-bar-baz-qux\"\n```\n\n### {{isString}}\n\nReturns true if `value` is a string.\n\n#### Parameters\n\n* `value` {String}\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isString \"foo\"}}\n//=> 'true'\n```\n\n### {{lowercase}}\n\nLowercases all characters in the given string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{lowercase \"Foo BAR baZ\"}}\n//=> 'foo bar baz'\n```\n\n### {{occurrences}}\n\nReturns the number of occurrences of `substring` within the given `string`.\n\n#### Parameters\n\n* `str` {String}\n* `substring` {String}\n* `returns` {Number}: Number of occurrences.\n\n#### Example\n\n```handlebars\n{{occurrences \"foo bar foo bar baz\" \"foo\"}}\n//=> 2\n```\n\n### {{pascalcase}}\n\nPascalCases the characters in `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{pascalcase \"foo bar baz\"}}\n//=> 'FooBarBaz'\n```\n\n### {{pathcase}}\n\npath/cases the characters in `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{pathcase \"a-b-c d_e\"}}\n//=> 'a/b/c/d/e'\n```\n\n### {{plusify}}\n\nReplaces spaces in the given string with pluses.\n\n#### Parameters\n\n* `str` {String}: The input string\n* `returns` {String}: Input string with spaces replaced by plus signs\n\n#### Example\n\n```handlebars\n{{plusify \"foo bar baz\"}}\n//=> 'foo+bar+baz'\n```\n\n### {{reverse}}\n\nReverses a string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{reverse \"abcde\"}}\n//=> 'edcba'\n```\n\n### {{sentence}}\n\nSentence-cases the given string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{sentence \"hello world. goodbye world.\"}}\n//=> 'Hello world. Goodbye world.'\n```\n\n### {{snakecase}}\n\nsnake_cases the characters in the given `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{snakecase \"a-b-c d_e\"}}\n//=> 'a_b_c_d_e'\n```\n\n### {{split}}\n\nSplits `string` at the given `character`.\n\n#### Parameters\n\n* `string` {String}: The string to split.\n* `returns` {String} `character`: Default is `,`\n\n#### Example\n\n```js\n{{split \"a,b,c\" \",\"}}\n//=> ['a', 'b', 'c']\n```\n\n### {{startsWith}}\n\nTests whether a string begins with the given prefix.\n\n#### Parameters\n\n* `prefix` {String}\n* `testString` {String}\n* `options` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#startsWith \"Goodbye\" \"Hello, world!\"}}\n  Whoops\n{{else}}\n  Bro, do you even hello world?\n{{/startsWith}}\n```\n### {{titleize}}\n\nTitle-cases the given string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{titleize \"this is title case\"}}\n//=> 'This Is Title Case'\n```\n\n### {{trim}}\n\nRemoves extraneous whitespace from the beginning and end of a string.\n\n#### Parameters\n\n* `string` {String}: The string to trim.\n* `returns` {String}\n\n#### Example\n\n```js\n{{trim \" ABC \"}}\n//=> 'ABC'\n```\n\n### {{uppercase}}\n\nUppercases all of the characters in the given string. If used as a block helper, it will uppercase the entire block. This helper\ndoes not support inverse blocks.\n\n#### Parameters\n\n* `str` {String}: The string to uppercase.\n* `options` {Object}: Handlebars options object.\n* `returns` {String}\n\n\n# <a name=\"url\"></a> URL Helpers\n\nThe following standard helpers are available to transform URLs.\n\n\n### {{encodeURI}}\n\nEncodes a Uniform Resource Identifier (URI) component, by replacing each instance of certain characters by one, two, three, or four escape sequences that represent the UTF-8 encoding of the character.\n\n#### Parameters\n\n* `str` {String}: The un-encoded string.\n* `returns` {String}: The encoded string.\n\n### {{decodeURI}}\n\nDecodes a Uniform Resource Identifier (URI) component.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n### {{urlResolve}}\n\nTakes a base URL, and an href URL, and resolves them as a browser would for an anchor tag.\n\n#### Parameters\n\n* `base` {String}\n* `href` {String}\n* `returns` {String}\n\n### {{urlParse}}\n\nParses a `url` string into an object.\n\n#### Parameters\n\n* `str` {String}: URL string.\n* `returns` {String}: Returns stringified JSON.\n\n### {{stripQuerystring}}\n\nStrips the query string from a `url`.\n\n#### Parameters\n\n* `url` {String}\n* `returns` {String}: The URL without the queryString.\n\n### {{stripProtocol}}\n\nStrips the protocol from a `url`.\n\nUseful for displaying media that might have an `http` protocol on secure connections. Will change `http://foo.bar` to `//foo.bar`\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}: The URL with the `http` protocol stripped.\n\n\n# <a name=\"misc\"></a> Miscellaneous Helpers\n\nThe following standard helpers are also supported on the Stencil framework.\n\n\n### {{default}}\n\nReturns the first value, if that value is defined; otherwise, returns the \"default\" value.\n\n#### Parameters\n\n* `value` {any}\n* `defaultValue` {any}\n* `returns` {String}\n\n### {{option}}\n\nGiven the context `{options: {a: {b: {c: 'ddd'}}}}`, returns the given value of `prop` from `this.options`.\n\n#### Parameters\n\n* `prop` {String}\n* `returns` {any}\n\n#### Example\n\n```handlebars\n{{option \"a.b.c\"}}\n<!-- results => `ddd` -->\n```\n\n### {{noop}}\n\nBlock helper that renders the block without taking any arguments.\n\n#### Parameters\n\n* `options` {Object}\n* `returns` {String}\n\n### {{withHash}}\n\nBlock helper that builds the context for the block from the options hash.\n\n#### Parameters\n\n* `options` {Object}: Handlebars-provided options object."
                              }
                            ]
                          }
                        },
                        {
                          "title": "Array Helpers",
                          "route": {
                            "path": "/array-helpers"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Standard Array Helpers",
                                "route": {
                                  "path": "/standard-array-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Array Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_after\">{{after}}</a></li>\n    <li><a href=\"#handlebars_arrayify\">{{arrayify}}</a></li>\n    <li><a href=\"#handlebars_before\">{{before}}</a></li>\n    <li><a href=\"#handlebars_eachindex\">{{eachIndex}}</a></li>\n    <li><a href=\"#handlebars_filter\">{{filter}}</a></li>\n    <li><a href=\"#handlebars_first\">{{first}}</a></li>\n    <li><a href=\"#handlebars_foreach\">{{forEach}}</a></li>\n    <li><a href=\"#handlebars_inarray\">{{inArray}}</a></li>\n    <li><a href=\"#handlebars_isarray\">{{isArray}}</a></li>\n    <li><a href=\"#handlebars_last\">{{last}}</a></li>\n    <li><a href=\"#handlebars_lengthequal\">{{lengthEqual}}</a></li>\n    <li><a href=\"#handlebars_map\">{{map}}</a></li>\n    <li><a href=\"#handlebars_some\">{{some}}</a></li>\n    <li><a href=\"#handlebars_sort\">{{sort}}</a></li>\n    <li><a href=\"#handlebars_sortby\">{{sortBy}}</a></li>\n    <li><a href=\"#handlebars_withafter\">{{withAfter}}</a></li>\n    <li><a href=\"#handlebars_withbefore\">{{withBefore}}</a></li>\n    <li><a href=\"#handlebars_withfirst\">{{withFirst}}</a></li>\n    <li><a href=\"#handlebars_withlast\">{{withLast}}</a></li>\n    <li><a href=\"#handlebars_withsort\">{{withSort}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard array helpers are supported on the Stencil framework.\n\n## {{after}}\n\nReturns all of the items in an array after the specified index. Opposite of [before](#before).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}: Collection.\n* `n` {Number}: Starting index (number of items to exclude).\n* `returns` {Array}: Array exluding `n` items.\n\n#### Example\n\n```handlebars\n{{after array 1}}\n//=> '[\"c\"]'\n```",
                                      "header": {
                                        "anchor": "handlebars_after"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{arrayify}}\n\nCasts the given `value` to an array.\n\n#### Parameters\n\n* `value` {any}\n* `returns` {Array}\n\n#### Example\n\n```handlebars\n{{arrayify \"foo\"}}\n//=> '[\"foo\"]'\n```",
                                      "header": {
                                        "anchor": "handlebars_arrayify"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{before}}\n\nReturns all of the items in the collection before the specified count. Opposite of [after](#after).\n\nGiven the array `['a', 'b', 'c']`:\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}\n* `returns` {Array}: Array excluding items after the given number.\n\n#### Example\n\n```handlebars\n{{before array 2}}\n//=> '[\"a\", \"b\"]'\n```",
                                      "header": {
                                        "anchor": "handlebars_before"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{eachIndex}}\n\n#### Parameters\n\n* `array` {Array}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#eachIndex collection}}\n  {{item}} is {{index}}\n{{/eachIndex}}\n```",
                                      "header": {
                                        "anchor": "handlebars_eachindex"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{filter}}\n\nBlock helper that filters the given array. Renders the block for values that evaluate to `true`; otherwise, returns the inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#filter array \"foo\"}}AAA{{else}}BBB{{/filter}}\n//=> 'BBB\n```\n\n```handlebars\n{{#filter collection \"d\" property=\"first\"}}\n\t{{this.first}}\n{{else}}\n\tZZZ\n{{/filter}}\n```",
                                      "header": {
                                        "anchor": "handlebars_filter"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{first}}\n\nReturns the first item, or first `n` items, of an array.\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting at `0`.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{first array 2}}\n//=> '[\"a\", \"b\"]'\n```",
                                      "header": {
                                        "anchor": "handlebars_first"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{forEach}}\n\nIterates over each item in an array, and exposes the current item in the array as context to the inner block. In addition to the current array item, the helper exposes the following variables to the inner block:\n\n* `index`\n* `total`\n* `isFirst`\n* `isLast`\n\nAlso, `@index` is exposed as a private variable, and additional private variables may be defined as hash arguments.\n\n#### Parameters\n\n* `array` {Array}\n* `returns` {String}\n\n#### Example\n\n```js\nvar accounts = [\n{'name': 'John', 'email': 'john@example.com'},\n{'name': 'Malcolm', 'email': 'malcolm@example.com'},\n{'name': 'David', 'email': 'david@example.com'}\n];\n\n// example usage\n// {{#forEach accounts}}\n//   <a href=\"mailto:{{ email }}\" title=\"Send an email to {{ name }}\">\n//     {{ name }}\n//   </a>{{#unless isLast}}, {{/unless}}\n// {{/forEach}}\n```",
                                      "header": {
                                        "anchor": "handlebars_foreach"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{inArray}}\n\nBlock helper that renders the block if an array has the given `value`. Optionally, you can specify an inverse block to render when the array does not have the given value.\n\n#### Parameters\n\n* `array` {Array}\n* `value` {any}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#inArray array \"d\"}}\n  foo\n{{else}}\n  bar\n{{/inArray}}\n//=> 'bar'\n```",
                                      "header": {
                                        "anchor": "handlebars_inarray"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{isArray}}\n\nReturns true if `value` is an es5 array.\n\n#### Parameters\n\n* `value` {any}: The value to test.\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isArray \"abc\"}}\n//=> 'false'\n```",
                                      "header": {
                                        "anchor": "handlebars_isarray"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{last}}\n\nReturns the last item, or last `n` items, of an array. Opposite of [first](#first).\n\n#### Parameters\n\n* `array` {Array}\n* `n` {Number}: Number of items to return, starting with the last item.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{last array 2}}\n//=> '[\"d\", \"e\"]'\n```",
                                      "header": {
                                        "anchor": "handlebars_last"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{lengthEqual}}\n\nBlock helper that compares the length of the given array to the number passed as the second argument. If the array length is equal to the given `length`, the block is returned. Otherwise, you have the option of returning an inverse block.\n\n#### Parameters\n\n* `array` {Array}\n* `length` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#lengthEqual array 10}}AAA{{else}}BBB{{/lengthEqual}}\n//=> 'BBB'\n```",
                                      "header": {
                                        "anchor": "handlebars_lengthequal"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{map}}\n\nReturns a new array, created by calling `function` on each element of the given `array`. The `{{map}}` helper does not modify the original, provided array, but results in a new one.\n\n#### Parameters\n\n* `array` {Array}\n* `function` {Function}\n* `returns` {String}\n\n#### Example\n\nGiven an array `['c', 'a', 'b']`:\n\n```\n// then used like this:\n// {{map array sort}}\n//=> '[\"a\", \"b\", \"c\"]'\n```",
                                      "header": {
                                        "anchor": "handlebars_map"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{some}}\n\nBlock helper that returns the block *if* the callback<sup>1</sup> returns true for some value in the given array.\n\n#### Parameters\n\n* `array` {Array}\n* `cb` {Function}: Callback function.\n* {Options}: Handlebars-provided options object.\n* `returns` {Array}\n\n#### Example\n\nGiven the array `[1, 'b', 3]`:\n\n```\n{{#some array isString}}\n  Render me if the array has a string.\n{{else}}\n  Render me if it doesn't.\n{{/some}}\n//=> 'Render me if the array has a string.'\n```",
                                      "header": {
                                        "anchor": "handlebars_some"
                                      }
                                    },
                                    {
                                      "type": "callout",
                                      "data": {
                                        "title": "",
                                        "body": "1. Callback must be  a standard handlebars helper or a custom stencil helper that returns a Boolean value. For a list of helpers and their return types, see: [Handlebars Helpers Reference](https://developer.bigcommerce.com/stencil-docs/handlebars-syntax-and-helpers/handlebars-helpers-reference/handlebars-full)"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{sort}}\n\nSorts the given `array`. If an array of objects is passed, you may optionally pass (as the second argument) a `key` to sort on. Alternatively, you may pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `key` {String|Function}: The object key to sort by, or a sorting function.\n\n#### Example\n\nGiven an array `['b', 'a', 'c']`:\n\n\n```handlebars\n{{sort array}}\n//=> '[\"a\", \"b\", \"c\"]'\n```",
                                      "header": {
                                        "anchor": "handlebars_sort"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{sortBy}}\n\nSorts an `array`. If an array of objects is passed, you may optionally pass a `key` to sort on as the second argument. You may alternatively pass a sorting function as the second argument.\n\n#### Parameters\n\n* `array` {Array}: The array to sort.\n* `props` {String|Function}: One or more properties to sort by, or sorting functions to use.\n\n#### Example\n\nGiven an array `[{a: 'zzz'}, {a: 'aaa'}]`:\n\n```handlebars\n{{sortBy array \"a\"}}\n//=> '[{\"a\":\"aaa\"}, {\"a\":\"zzz\"}]'\n```",
                                      "header": {
                                        "anchor": "handlebars_sortby"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{withAfter}}\n\nUse the items in the array, _after_ the specified index, as context inside a block. Opposite of [withBefore](#withBefore).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withAfter array 3}}\n  {{this}}\n{{/withAfter}}\n//=> \"de\"\n```",
                                      "header": {
                                        "anchor": "handlebars_withafter"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{withBefore}}\n\nUse the items in the array, _before_ the specified index, as context inside a block. Opposite of [withAfter](#withAfter).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {Array}\n\n#### Example\n\nGiven the array `['a', 'b', 'c', 'd', 'e']`:\n\n```handlebars\n{{#withBefore array 3}}\n  {{this}}\n{{/withBefore}}\n//=> 'ab'\n```",
                                      "header": {
                                        "anchor": "handlebars_withbefore"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{withFirst}}\n\nUses a collection's first item inside a Handlebars block expression. Opposite of [withLast](#withLast).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#withFirst array}}\n  {{this}}\n{{/withFirst}}\n//=> 'a'\n```",
                                      "header": {
                                        "anchor": "handlebars_withfirst"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{withLast}}\n\nUse the last item, or `n` items, in an array as context inside a block. Opposite of [withFirst](#withFirst).\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}: The starting index.\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{#withLast array}}\n  {{this}}\n{{/withLast}}\n//=> 'c'\n```",
                                      "header": {
                                        "anchor": "handlebars_withlast"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{withSort}}\n\nBlock helper that sorts a collection and exposes the sorted collection as context inside the block.\n\n#### Parameters\n\n* `array` {Array}\n* `prop` {String}\n* `options` {Object}: Specify `reverse=\"true\"` to reverse the array.\n* `returns` {String}\n\n#### Example\n\nGiven the array `['b', 'a', 'c']`:\n\n```handlebars\n{{#withSort array}}{{this}}{{/withSort}}\n//=> 'abc'\n```",
                                      "header": {
                                        "anchor": "handlebars_withsort"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Custom Array Helpers",
                                "route": {
                                  "path": "/custom-array-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Custom Array Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_itemat\">{{itemAt}}</a></li>\n    <li><a href=\"#handlebars_join\">{{join}}</a></li>\n    <li><a href=\"#handlebars_limit\">{{limit}}</a></li>\n    <li><a href=\"#handlebars_pluck\">{{pluck}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{itemAt}}\n\n_Block helper that returns the item at the specified index._\n\n#### Parameters\n\n* `array` {Array}\n* `idx` {Number}\n* `returns` {any} `value`\n\n#### Example\n\nGiven the array `['a', 'b', 'c']`:\n\n```handlebars\n{{itemAt array 1}}\n//=> 'b'\n```",
                                      "header": {
                                        "anchor": "handlebars_itemat"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{join}}\n\nThe `join` helper is custom to Stencil. It joins an array of string items, with separators. It returns a string. \n\n#### Parameters\n\n- `values`: {Array}\n- `separator`: {String}\n- `limit=<number>`: An optional limit.",
                                      "header": {
                                        "anchor": "handlebars_join"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{limit}}\n\nThe `limit` helper is custom to Stencil. It limits the number of items returned from an array variable, and returns a new array.\n\n#### Parameters\n\n- `data`: {Array}\n- `limit`: {Number}\n\n#### {{limit}} Example \n\nAssume that `{{cart.items}}` would return 10 items. You could use this helper to limit that behavior to only the first four items, by specifying: \n\n```\n{{limit cart.items 4}}\n```",
                                      "header": {
                                        "anchor": "handlebars_limit"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{pluck}}\n\nThe `pluck` helper is custom to Stencil. For one specified search key(s), it retrieves corresponding values from some or all elements in a specified collection. \n\nThe `pluck` helper returns the retrieved values in a comma-separated string. This helper's general form is:\n\n```\n{{pluck ([limit] <collection> [<limit-value>]) '<search-key>'}}\n```\n\n#### Parameters\n\n- `limit`, `limit-value`: Optional parameters to limit the number of results returned.\n- `collection`: The collection to search.\n- `search-key`: The string to search for.\n\n\n#### {{pluck}} Example 1\n\nAssume that the `categories` collection contains:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\" },\n  { \"id\": 2, \"name\": \"Cookware\" },\n  { \"id\": 3, \"name\": \"Cutlery\" }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'name'}}\n```\n\n...would return:\n\n```\n\"Bakeware,Cookware\"\n```\n\n#### {{pluck}} Example 2\n\nIf the `categories` themselves each contained an image object, then you could use dot notation to access that image object's children:\n\n```\ncategories: [\n  { \"id\": 1, \"name\": \"Bakeware\", \"image\": { \"data\": \"http://...\", \"alt\": \"Bakeware image\"} },\n  { \"id\": 2, \"name\": \"Cookware\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cookware image\"} },\n  { \"id\": 3, \"name\": \"Cutlery\" \"image\": { \"data\": \"http://...\", \"alt\": \"Cutlery image\"} }\n]\n```\n\nIn this case, this Handlebars statement:\n\n```\n{{pluck (limit categories 2) 'image.data'}}\n```\n\n...would return a comma-separated list of image URLs.\n",
                                      "header": {
                                        "anchor": "handlebars_pluck"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Collection Helpers",
                          "route": {
                            "path": "/collection-helpers"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Standard Collection Helpers",
                                "route": {
                                  "path": "/standard-collection-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Collection Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_isempty\">{{isEmpty}}</a></li>\n    <li><a href=\"#handlebars_iterate\">{{iterate}}</a></li>\n    <li><a href=\"#handlebars_length\">{{length}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to handle collections.\n\n## {{isEmpty}}\n\nBlock helper that returns a block *if* the given collection is empty. If the collection is not empty, returns the inverse block (if supplied).\n\n#### Parameters\n\n* `collection` {Object}\n* `options` {Object}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_isempty"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{iterate}}\n\nIterates over an array or object.\n\n#### Parameters\n\n* `context` {Object|Array}: The collection to iterate over.\n* `options` {Object}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_iterate"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{length}}\n\nReturns the length of the given collection. When using a string literal in the template, the string must be value JSON. See the example below. Otherwise, pass in an array or object from the context.\n\n#### Parameters\n\n* `value` {Array|Object|String}\n* `returns` {Number}: The length of the value.\n\n#### Example",
                                      "header": {
                                        "anchor": "handlebars_length"
                                      }
                                    },
                                    {
                                      "type": "code",
                                      "data": "{{length '[\"a\", \"b\", \"c\"]'}}\n//=> 3\n\n//=> myArray = ['a', 'b', 'c', 'd', 'e'];\n{{length myArray}}\n//=> 5\n\n//=> myObject = {'a': 'a', 'b': 'b'};\n{{length myObject}}\n//=> 2",
                                      "header": {},
                                      "config": {
                                        "mode": "js"
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "blocks": []
                          }
                        },
                        {
                          "title": "Comparison Helpers",
                          "route": {
                            "path": "/comparison-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard Comparison Helpers",
                                "route": {
                                  "path": "/standard-comparison-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Comparison Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_and\">{{and}}</a></li>\n    <li><a href=\"#handlebars_gt\">{{gt}}</a></li>\n    <li><a href=\"#handlebars_gte\">{{gte}}</a></li>\n    <li><a href=\"#handlebars_has\">{{has}}</a></li>\n    <li><a href=\"#handlebars_eq\">{{eq}}</a></li>\n    <li><a href=\"#handlebars_ifeven\">{{ifeven}}</a></li>\n    <li><a href=\"#handlebars_ifnth\">{{ifNth}}</a></li>\n    <li><a href=\"#handlebars_ifodd\">{{ifOdd}}</a></li>\n    <li><a href=\"#handlebars_is\">{{is}}</a></li>\n    <li><a href=\"#handlebars_isnt\">{{isnt}}</a></li>\n    <li><a href=\"#handlebars_lt\">{{lt}}</a></li>\n    <li><a href=\"#handlebars_lte\">{{lte}}</a></li>\n    <li><a href=\"#handlebars_neither\">{{neither}}</a></li>\n    <li><a href=\"#handlebars_unlesseq\">{{unlessEq}}</a></li>\n    <li><a href=\"#handlebars_unlessgt\">{{unlessGt}}</a></li>\n    <li><a href=\"#handlebars_unlesslt\">{{unlesslt}}</a></li>\n    <li><a href=\"#handlebars_unlessgteq\">{{{unlessGteq}}</a></li>\n    <li><a href=\"#handlebars_unlesslteq\">{{{unlessLteq}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to handle comparisons.\n\n## {{and}}\n\nBlock helper that renders the block if *both* of the given values are truthy. If you specify an inverse block, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {any}\n* `b` {any}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_and"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{gt}}\n\nBlock helper that renders a block if `a` is *greater than* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_gt"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{gte}}\n\nBlock helper that renders a block if `a` is *greater than or equal to* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_gte"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{has}}\n\nBlock helper that renders a block if `value` has `pattern`. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `val` {any}: The value to check.\n* `pattern` {any}: The pattern to check for.\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_has"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{eq}}\n\nBlock helper that renders a block if `a` is *equal to* `b`. If an inverse block is specified,  it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_eq"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{ifEven}}\n\nReturns `true` if the given value is an even number.\n\n#### Parameters\n\n* `number` {Number}\n* `options` {Object}: Handlebars-provided options object\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n#### Example\n\n```handlebars\n{{#ifEven value}}\n  render A\n{{else}}\n  render B\n{{/ifEven}}\n```",
                                      "header": {
                                        "anchor": "handlebars_ifeven"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{ifNth}}\n\nConditionally renders a block *if* dividing the `a` operand by `b` yields a remainder of zero. If you specify an inverse block, it will be rendered when the remainder is *not* zero.\n\n#### Parameters\n\n* {}: {Number}\n* {}: {Number}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_ifNth"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{ifOdd}}\n\nBlock helper that renders a block if `value` is *an odd number*. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `value` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.\n\n#### Example\n\n```handlebars\n{{#ifOdd value}}\n  render A\n{{else}}\n  render B\n{{/ifOdd}}\n```",
                                      "header": {
                                        "anchor": "handlebars_ifOdd"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{is}}\n\nBlock helper that renders a block if `a` is *equal to* `b`. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {any}\n* `b` {any}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_is"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{isnt}}\n\nBlock helper that renders a block if `a` is *not equal to* `b`. If an inverse block is specified, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_isnt"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{lt}}\n\nBlock helper that renders a block if `a` is *less than* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_lt"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{lte}}\n\nBlock helper that renders a block if `a` is *less than or equal to* `b`.\n\nIf an inverse block is specified, it will be rendered when falsy. You may optionally use the `compare=\"\"` hash argument for the second value.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_lte"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{neither}}\n\nBlock helper that renders a block if *neither of* the given values are truthy. If you specify an inverse block, it will be rendered when falsy.\n\n#### Parameters\n\n* `a` {any}\n* `b` {any}\n* `options` {}: Handlebars options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_neither"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{unlessEq}}\n\nBlock helper that always renders the inverse block *unless `a` is equal to `b`*.\n\n#### Parameters\n\n* `a` {String}\n* `b` {String}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Inverse block by default, or block if falsy.",
                                      "header": {
                                        "anchor": "handlebars_unlesseq"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{unlessGt}}\n\nBlock helper that always renders the inverse block *unless `a` is greater than `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Inverse block by default, or block if falsy.",
                                      "header": {
                                        "anchor": "handlebars_unlessgt"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{unlessLt}}\n\nBlock helper that always renders the inverse block *unless `a` is less than `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_unlesslt"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{unlessGteq}}\n\nBlock helper that always renders the inverse block *unless `a` is greater than or equal to `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_unlessgteq"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{unlessLteq}}\n\nBlock helper that always renders the inverse block *unless `a` is less than or equal to `b`*.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}: Handlebars-provided options object.\n* `returns` {String}: Block, or inverse block if specified and falsy.",
                                      "header": {
                                        "anchor": "handlebars_unlesslteq"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Control Flow Helpers",
                          "route": {
                            "path": "/new-subpage"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Conditional Control Flow Helpers",
                                "route": {
                                  "path": "/conditional-control-flow-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Conditional Control Flow Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_if\">{{if}}</a></li>\n    <li><a href=\"#handlebars_unless\">{{unless}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following helpers provide control structures that test for conditions, and branch accordingly.\n\n## {{if}}\n\nThe `if` helper has been customized for Stencil, and has the following syntax:\n\n```\n{{#if <statement>}}\n  ... \n{{else if}}  /* optional else-if block */\n  ...\n{{else}}  /* optional else block */\n  ...\n{{/if}}\n```\n\nThe `<statement>` that the `if` helper evaluates can take these forms:\n\n- An object, as in: `{{#if object}}`.\n- A comparison expression, as in: `{{#if <lvalue> <operator> <rvalue>}}`.\n\n\nWhen you pass only one parameter to the `if` helper, it will return the following:\n- For an array parameter, the array's length.\n- For an empty object, a value of `false`.",
                                      "header": {
                                        "anchor": "handlebars_if"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{unless}}\n\nThe `unless` helper is logically the opposite of the [`if` helper](#if), subject to the [restrictions](#unless_restrix) below. The syntax for `unless` can be found in the official Handlebars documentation [here](http://handlebarsjs.com/builtin_helpers.html).\n\n#### Formal Example\n\n```\n{{#unless statement}}\n   ... /* block to display/execute unless statement is true */\n{{/unless}}\n```\n\n#### Restrictions\n\nStatements using `unless` can refer to: \n\n* Objects, as in: `{{#unless object}}`.\n\nUnlike the `if` helper,  `unless` on the Stencil framework does not support operators for comparison expressions. \nSo, for example, the following expression would throw an error:\n\n```\n{{#unless this.alt \"===\" \"hidden\"}}\n```\n\nA workaround for this logic is to recast the expression as `if`/not-equal-to. So the following expression would be valid:\n\n```\n{{#if this.alt \"!==\" \"hidden\"}}\n```\n\n#### Stencil Example \n\nHere is a usage example from Stencil's Cornerstone base theme: The `templates/pages/search.html` template displays search results. In this template's section that displays search suggestions, an `#unless` loop determines what to output for the final result:\n\n```\n{{#each category_results}}\n<li class=\"category-suggestion\">\n    {{#each this}}\n        <a href=\"{{url}}\">{{name}}</a>\n        {{#unless @last}} > {{/unless}}\n    {{/each}}\n</li>\n{{/each}}\n```\n\n### Nested if/else Statements to Test for if/and Conditions\n\nHandlebars does not provide an `if`/`and` conditional structure. However, to test for multiple conditions, you can nest `if`/`else` statements, as shown in this example:\n\n```\n <nav class=\"navigation\">\n      <ul>\n        {{#each nav_items}}\n            {{#if name '===' 'About Us'}}\n            {{else}}\n              {{#if name '===' 'Contact Us'}}\n              {{else}}\n                <li>\n                  <a class=\"top-level-nav-link\" href=\"{{url}}\">\n                    {{name}}\n                  </a>\n                </li>\n              {{/if}}\n            {{/if}}\n        {{/each}}\n      </ul>\n    </nav>\n```\n",
                                      "header": {
                                        "anchor": "handlebars_unless"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Loop Control Flow Helpers",
                                "route": {
                                  "path": "/loop-control-flow-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Loop Control Flow Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_any\">{{any}}</a></li>\n    <li><a href=\"#handlebars_all\">{{all}}</a></li>\n    <li><a href=\"#handlebars_contains\">{{contains}}</a></li>\n    <li><a href=\"#handlebars_each\">{{each}}</a></li>\n    <li><a href=\"#handlebars_for\">{{for}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following helpers are used to control loop execution.\n\n## {{any}}\n\nThe `any` helper is custom to Stencil. It checks whether at least one parameter evaluates to `true`.  Parameters can be of different types (strings, numbers, arrays, or collections).\n\n#### Examples\n\nFormally, the `any` helper is invoked as shown here:\n\n```\n{{#any items selected=true}} \n  ... /* block to display if any items have selected=true */\n{{/any}}\n```\n\nA usage example is http://cornerstone-light-demo.mybigcommerce.com/shop-all/garden, a category page in Stencil's Cornerstone base theme that does _not_ have faceted search turned on. Shoppers will see \"Shop by price\" filters instead of product filters. \n\nThe Stencil code controlling this component resides in the theme's `templates/components/category/shop-by-price.html` file. In this component, the `{{#any...` Handlebars helper is used to determine whether a shopper has selected one of the filters, and whether a \"reset\" button needs to be displayed:\n\n```\n{{#any shop_by_price selected=true}}\n    <li class=\"navList-item\">\n        <a href=\"{{category_url}}\" class=\"navList-action\">\n            {{lang 'category.reset'}}\n        </a>\n    </li>\n{{/any}}\n```",
                                      "header": {
                                        "anchor": "handlebars_any"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{all}}\n\nThe `all` helper is custom to Stencil. It checks whether _all_ parameters evaluate to `true`. Parameters can be of different types (strings, numbers, arrays, or collections).\n\n#### Example\n\n```\n{{#all items theme_settings.optionA theme_settings.optionB}}\n  ... /* block to display, if all items evaluate to true */\n{{/all}}\n```",
                                      "header": {
                                        "anchor": "handlebars_all"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{contains}}\n\nThe `contains` helper is custom to Stencil. It checks whether the second parameter is included in the first parameter (typically a collection).\n\n#### Example\n\n```\n{{#contains fonts \"Roboto\"}}\n  ... /* block to display, if any items contain \"Roboto\" */\n{{/contains}}\n```",
                                      "header": {
                                        "anchor": "handlebars_contains"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{each}}\n\nThe syntax for the `each` helper can be found in the official Handlebars documentation [here](http://handlebarsjs.com/builtin_helpers.html).\n\n#### Example\n\n```\n{{#each array | object}}\n  ...\n{{else}} /* optional block to execute if the the list is empty */\n  ...\n{{/each}}\n```\n\n#### Notes\n\n- Within an each block, use `{{this}}` to reference the current item.\n- Within an each block, use `{{@index}}` to reference the current item's index number.\n- When iterating through objects, `{{@key}}` returns the current key name.\n- `{{each}}` loops can be nested.",
                                      "header": {
                                        "anchor": "handlebars_each"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{for}}\n\nThe `for` helper is a custom Stencil helper. In particular, this helper is limited to 100 iterations, in order to protect against infinite loops. \n\nThe `for` helper has the following syntax, where parameters `<from>` and `<to>` are numbers, and `<context>` is an object:\n\n```\n{{#for <from> <to> <context>}}\n  ...\n{{/for}}\n```",
                                      "header": {
                                        "anchor": "handlebars_for"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Date Helpers",
                          "route": {
                            "path": "/date-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard Date Helpers",
                                "route": {
                                  "path": "/standard-date-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Date Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_moment\">{{moment}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard Handlebars helper handles dates.\n\n## {{moment}}\n\nExposes `helper-date` as `moment`.",
                                      "header": {
                                        "anchor": "handlebars_moment"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "HTML Helpers",
                          "route": {
                            "path": "/html-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard HTML Helpers",
                                "route": {
                                  "path": "/standard-html-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard HTML Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_ellipsis\">{{ellipsis}}</a></li>\n    <li><a href=\"#handlebars_sanitize\">{{sanitize}}</a></li>\n    <li><a href=\"#handlebars_ul\">{{ul}}</a></li>\n    <li><a href=\"#handlebars_ol\">{{ol}}</a></li>\n    <li><a href=\"#handlebars_thumbnailimage\">{{thumbnailImage}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to handle HTML content.\n\n## {{ellipsis}}\n\nTruncates a string to the specified `length`, and appends an elipsis, `…`.\n\n#### Parameters\n\n* `str` {String}\n* `length` {Number}: The desired length of the returned string.\n* `returns` {String}: The truncated string.\n\n#### Example\n\n```\n{{ellipsis \"<span>foo bar baz</span>\" 7}}\n//=> 'foo bar…'\n```",
                                      "header": {
                                        "anchor": "handlebars_ellipsis"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{sanitize}}\n\nStrips HTML tags from a string, so that only the text nodes are preserved.\n\n#### Parameters\n\n* `str` {String}: The string of HTML to sanitize.\n* `returns` {String}\n\n#### Example\n\n```js\n{{sanitize \"<span>foo</span>\"}}\n//=> 'foo'\n```",
                                      "header": {
                                        "anchor": "handlebars_sanitize"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{ul}}\n\nBlock helper for creating unordered lists (`<ul></ul>`).\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_ul"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{ol}}\n\nBlock helper for creating ordered lists  (`<ol></ol>`).\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_ol"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{thumbnailImage}}\n\nReturns a `<figure>` with a thumbnail linked to a full picture.\n\n#### Parameters\n\n* `context` {Object}: Object with values/attributes to add to the generated elements:\n* `context.alt` {String}\n* `context.src` {String}\n* `context.width` {Number}\n* `context.height` {Number}\n* `returns` {String}: HTML `<figure>` element with image and optional caption/link.\n",
                                      "header": {
                                        "anchor": "handlebars_thumbnailimage"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Image Helpers",
                          "route": {
                            "path": "/image-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Custom Image Helpers",
                                "route": {
                                  "path": "/custom-image-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Custom Image Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_getimage\">{{getImage}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The Stencil framework provides the following custom helper to manage images.\n\n## {{getImage}}\n\nThe `getImage` helper is custom to Stencil. It returns the URL for an image of the specified size. Values for the size parameter are defined in the `config.json` file’s `settings` section.\n\nThis helper's parameters are:\n\n- `stencilImage`: a StencilImage.\n- `size`: a string.\n- `defaultImage` (optional): a string. \n\nHere is an example: \n\n```\n{{getImage image \"thumbnail\"}}\n``` \n\nYou can use the optional `defaultImage` parameter to specify an image that will be displayed in cases where the passed `stencilImage` value is null.\n\n",
                                      "header": {
                                        "anchor": "handlebars_getimage"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Inflection Helpers",
                          "route": {
                            "path": "/inflection-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard Inflection Helpers",
                                "route": {
                                  "path": "/standard-inflection-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Inflection Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_inflect\">{{inflect}}</a></li>\n    <li><a href=\"#handlebars_ordinalize\">{{ordinalize}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to transform strings.\n\n## {{inflect}}\n\nHandles singular/plural forms.\n\n#### Parameters\n\n* `count` {Number}\n* `singular` {String}: The singular form\n* `plural` {String}: The plural form\n* `include` {String}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_inflect"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{ordinalize}}\n\nReturns an ordinalized number (as a string).\n\n#### Parameters\n\n* `val` {String}: The value to ordinalize.\n* `returns` {String}: The ordinalized number.\n\n#### Example\n\n```handlebars\n{{ordinalize 1}}\n//=> '1st'\n{{ordinalize 21}}\n//=> '21st'\n{{ordinalize 29}}\n//=> '29th'\n{{ordinalize 22}}\n//=> '22nd'\n```",
                                      "header": {
                                        "anchor": "handlebars_ordinalize"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Injection Helpers",
                          "route": {
                            "path": "/injection-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Custom Injection Helpers",
                                "route": {
                                  "path": "/injection-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Custom Injection Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_cdn\">{{cdn}}</a></li>\n    <li><a href=\"#handlebars_getfontscollection\">{{getFontsCollection}}</a></li>\n    <li><a href=\"#handlebars_inject-and-jscontext\">{{inject}} and {{jsContext}}</a></li>\n    <li><a href=\"#handlebars_stylesheet\">{{stylesheet}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The Stencil framework provides the following custom helpers to inject various resources into a page context:\n\n## {{cdn}}\n\nThe `cdn` helper is custom to Stencil. It is a URL transformer for content delivery networks.\n\nWhen you reference static assets that you have locally staged outside your `<theme-name>` directory and uploaded using WebDAV, place the `webdav:` prefix before each corresponding `assetPath` parameter. For example, a link like:\n\n```\n<img src=\"{{cdn \"webdav:img/image.jpg\"}}\">\n```\n\n...will be transformed to a result like:\n\n```\n<img src=\"https://cdn.bcapp/3dsf74g/content/img/image.jpg\">\n```\n\nThe presumed WebDAV root directory is `/content/`. (So, in this example, the `image.jpg` file has been uploaded to the WebDAV `/content/` directory.) The presumed local directory is `<theme-name>/assets/`, so you can omit that path when referencing its contained files or subdirectories.\n\n\n#### CDN Custom Endpoints\n\nYou can define custom CDN endpoints to use with the `cdn` Handlebars helper. This facilitates including large, high-resolution image assets in themes, without exceeding BigCommerce's [50 MB limit](/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading) when bundling the theme for upload to BigCommerce. \n\nYou could use a local version of the image in development, and a version on a CDN (for exampe, Imgix) in production. To do so, define custom CDN endpoints in your theme's [`config.json` file](/stencil-docs/stencil-theme-editor/config-json-metadata), as highlighted in this example:\n\n```\n{\n  \"name\": \"Cornerstone\",\n  \"version\": \"1.3.5\",\n  \"settings\": {\n    \"homepage_new_products_count\": 12,\n    \"homepage_featured_products_count\": 8,\n    \"cdn\": {\n      \"customcdn\": \"https://bigcommerce.customcdn.net\"\n          }\n     }\n}\n\n \n```\n\nAfter defining an endpoint, you can use the short name in the same way as you would use a `webdav:` abbreviation:\n\n```\n<img src=\"{{cdn \"customcdn:img/image.jpg\"}}\" />\n```\n\nIn local development, that helper would return:\n\n<pre>&lt;img src=\"<b>/assets/cdn/</b>customcdn/img/image.jpg\" /&gt;\n</pre>\n\nWhereas in production, it would return:\n\n```\n<img src=\"https://bigcommerce.customcdn.net/img/image.jpg\" />\n```\n\nAs highlighted above, the helper is configured to rewrite *local* URLs to a `<theme-name>/assets/cdn/` subfolder. The `stencil bundle` command will exclude this local `assets/cdn/` subfolder from the bundle that it creates. This filtering circumvents the 50 MB size limit on the resulting .zip file.\n",
                                      "header": {
                                        "anchor": "handlebars_cdn"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "### {{getFontsCollection}}\n\nThe `getFontsCollection` helper is custom to Stencil. It returns a link tag that loads all selected font collections. You can optionally supply a parameter to control the `font-display` mode from this list:\n- `swap`\n- `auto`\n- `block`\n- `fallback`\n- `optional`\n\nThe default mode is `swap`.\n\nYou can read more about font-display [on the Mozilla Documentation](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display).",
                                      "header": {
                                        "anchor": "handlebars_getfontscollection"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "### {{inject}} and {{jsContext}}\n\nOccasionally, your theme's client-side application code might need to incorporate dynamic data from the template context. Stencil provides two custom Handlebars helpers to help you achieve this: `inject`  and `jsContext`.\n\n#### About the {{inject}} Helper\n\nThe `inject` helper collects data definitions for injection into the `jsContext` variable. It composes a JSON object containing a subset of the template context to be sent to the browser. Parameters of the `inject` helper are:\n\n- `key`: a string.\n- `value`: multiple types supported. \n\nAn `inject` call takes this form:\n\n```\n{{inject \"stringBasedKey\" contextValue}}\n```\n\n#### About the {{jsContext}} Helper\n\nThe `jsContext` helper takes no parameters; it simply returns a JSON object containing all data collected by the `inject` helper. To retrieve the parsable JSON object, just call `{{jsContext}}` after all of the `{{inject}}` calls.\n\n\n#### {{inject}} + {{jsContext}} Example 1\n\nTo set up the product name in your client-side app, you can do the following, if you are in the context of a product:\n\n```\n{{inject \"myProductName\" product.title}}\n\n<script>\n// Note the lack of quotes around the jsContext handlebars helper, it becomes a string automatically.\nvar jsContext = JSON.parse({{jsContext}}); \n\n// jsContext would output \"{\\\"myProductName\\\": \\\"Sample Product\\\"}\" which can feed directly into \nyour JavaScript.\n\nconsole.log(jsContext.myProductName); // Will output: Sample Product\n</script>\n```\n\n##### Notes on Example 1\n\nYou can compose your JSON object across multiple pages to create a different set of client-side data, depending on the currently loaded template context.\n\nThe Stencil theme makes the `jsContext` available on the active page scoped. It also makes it available on the global `PageManager` objects, as `this.context`.\n\n#### {{inject}} Example 2\n\nThe following code uses `inject` to add all product IDs into JavaScript on category pages. It resides in a theme's `<theme-name>/templates/pages/category.html` template. Note the two `inject` calls directly under the front matter:\n\n```\n\ncategory:\n    shop_by_price: true\n    products:\n        limit: {{theme_settings.categorypage_products_per_page}}\n\n{{inject \"categoryProductsPerPage\" theme_settings.categorypage_products_per_page}}\n{{inject \"productIds\" (pluck category.products 'id')}}\n{{#partial \"head\"}}\n    {{#if pagination.category.previous}}\n        <link rel=\"prev\" href=\"{{pagination.category.previous}}\">\n    {{/if}}\n    {{#if pagination.category.next}}\n        <link rel=\"next\" href=\"{{pagination.category.next}}\">\n    {{/if}}\n{{/partial}}\n\n{{#partial \"page\"}}\n\n{{> components/common/breadcrumbs breadcrumbs=breadcrumbs}}\n{{#if category.image}}\n    <img src=\"{{getImage category.image 'zoom_size'}}\">\n{{/if}}\n<h1 class=\"page-heading\">{{category.name}}</h1>\n{{{category.description}}}\n{{{snippet 'categories'}}}\n<div class=\"page\">\n    <aside class=\"page-sidebar\" id=\"faceted-search-container\">\n        {{> components/category/sidebar}}\n    </aside>\n\n    <main class=\"page-content\" id=\"product-listing-container\">\n        {{#if category.products}}\n            {{> components/category/product-listing}}\n        {{else}}\n            <p>{{lang 'categories.no_products'}}</p>\n        {{/if}}\n    </main>\n</div>\n\n{{/partial}}\n{{> layout/base}}\n```",
                                      "header": {
                                        "anchor": "handlebars_inject-and-jscontext"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{stylesheet}}\n\nThe `stylesheet` helper is custom to Stencil. It renders a link tag to insert a stylesheet into your theme. (This is required if you want Theme Editor to rewrite the stylesheet file when a merchant customizes their theme.) This helper returns an HTML string.\n\n#### Parameters\n\n- path: String containing the path to the theme's CSS stylesheet file.\n- Other parameters are optional, appended in the form: `key=\"value\"`.\n\n#### Example\n\n```\n{{{stylesheet \"assets/css/style.css\" class=\"myStylesheet\"}}}\n```",
                                      "header": {
                                        "anchor": "handlebars_stylesheet"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Related Articles\n* [Improve Web Font Performance in Stencil Themes with Font-display](https://medium.com/bigcommerce-developer-blog/improve-web-font-performance-in-stencil-themes-with-font-display-e00d37916c9e)"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Markdown Helpers",
                          "route": {
                            "path": "/markdown-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard Markdown Helpers",
                                "route": {
                                  "path": "/standard-markdown-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Markdown Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_markdown\">{{markdown}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helper is available to convert markdown.\n\n## {{markdown}}\n\nBlock helper that converts a string of inline markdown to HTML.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}\n\n#### Example\n\n```html\n{{#markdown}}\n# Foo\n{{/markdown}}\n//=> <h1>Foo</h1>\n```",
                                      "header": {
                                        "anchor": "handlebars_markdown"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Math Helpers",
                          "route": {
                            "path": "/math-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard Math Helpers",
                                "route": {
                                  "path": "/standard-math-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Math Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_add\">{{add}}</a></li>\n    <li><a href=\"#handlebars_subtract\">{{subtract}}</a></li>\n    <li><a href=\"#handlebars_divide\">{{divide}}</a></li>\n    <li><a href=\"#handlebars_multiply\">{{multiply}}</a></li>\n    <li><a href=\"#handlebars_floor\">{{floor}}</a></li>\n    <li><a href=\"#handlebars_ceil\">{{ceil}</a></li>\n    <li><a href=\"#handlebars_round\">{{round}}</a></li>\n    <li><a href=\"#handlebars_sum\">{{sum}}</a></li>\n    <li><a href=\"#handlebars_avg\">{{avg}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to handle mathematical operations.\n\n## {{add}}\n\nReturns the sum of `a` plus `b`.\n\n#### Parameters\n\n* `a` {Number}\n* `b` {Number}",
                                      "header": {
                                        "anchor": "handlebars_add"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{subtract}}\n\nReturn the differnece of `a` minus `b`.\n\n#### Parameters\n\n* `a` {Number}\n* `b` {Number}",
                                      "header": {
                                        "anchor": "handlebars_subtract"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{divide}}\n\nDivides `a` by `b`.\n\n#### Parameters\n\n* `a` {Number}: numerator\n* `b` {Number}: denominator",
                                      "header": {
                                        "anchor": "handlebars_divide"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{multiply}}\n\nMultiplies `a` by `b`.\n\n#### Parameters\n\n* `a` {Number}: factor\n* `b` {Number}: multiplier",
                                      "header": {
                                        "anchor": "handlebars_multiply"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{floor}}\n\nGets the `Math.floor()` of the given value.\n\n#### Parameters\n\n* `value` {Number}",
                                      "header": {
                                        "anchor": "handlebars_floor"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{ceil}}\n\nGets the `Math.ceil()` [ceiling] of the given value.\n\n#### Parameters\n\n* `value` {Number}",
                                      "header": {
                                        "anchor": "handlebars_ceil"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{round}}\n\nRounds the given value.\n\n#### Parameters\n\n* `value` {Number}",
                                      "header": {
                                        "anchor": "handlebars_round"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{sum}}\n\nReturns the sum of all numbers in the given array.\n\n#### Parameters\n\n* `array` {Array}: Array of numbers to add up.\n* `returns` {Number}\n\n#### Example\n\n```handlebars\n{{sum \"[1, 2, 3, 4, 5]\"}}\n//=> '15'\n```",
                                      "header": {
                                        "anchor": "handlebars_sum"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{avg}}\n\nReturns the average of all numbers in the given array.\n\n#### Parameters\n\n* `array` {Array}: Array of numbers to add up and average.\n* `returns` {Number}\n\n#### Example\n\n```handlebars\n{{avg \"[1, 2, 3, 4, 5]\"}}\n//=> '3'\n```",
                                      "header": {
                                        "anchor": "handlebars_avg"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Number Helpers",
                          "route": {
                            "path": "/number-helpers"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Standard Number Helpers",
                                "route": {
                                  "path": "/standard-number-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Number Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_addcommas\">{{addCommas}}</a></li>\n    <li><a href=\"#handlebars_phonenumber\">{{phoneNumber}}</a></li>\n    <li><a href=\"#handlebars_random\">{{random}}</a></li>\n    <li><a href=\"#handlebars_toabbr\">{{toAbbr}}</a></li>\n    <li><a href=\"#handlebars_toexponential\">{{toExponential}}</a></li>\n    <li><a href=\"#handlebars_tofixed\">{{toFixed}}</a></li>\n    <li><a href=\"#handlebars_tofloat\">{{toFloat}}</a></li>\n    <li><a href=\"#handlebars_toint\">{{toInt}}</a></li>\n    <li><a href=\"#handlebars_toprecision\">{{toPrecision}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to handle and transform numbers.\n\n## {{addCommas}}\n\nAdds commas to numbers.\n\n#### Parameters\n\n* `num` {Number}\n* `returns` {Number}",
                                      "header": {
                                        "anchor": "handlebars_addcommas"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{phoneNumber}}\n\nConverts a string or number to a formatted phone number.\n\n#### Parameters\n\n* `num` {Number|String}: The phone number to format, e.g., `8005551212`\n* `returns` {Number}: The formatted phone number: `(800) 555-1212`",
                                      "header": {
                                        "anchor": "handlebars_phonenumber"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{random}}\n\nGenerates a random number between two values.\n\n#### Parameters\n\n* `min` {Number}\n* `max` {Number}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_random"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toAbbr}}\n\nAbbreviates numbers to the given number of `precision`. This is for general numbers, not size in bytes.\n\n#### Parameters\n\n* `number` {Number}\n* `precision` {Number}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_toabbr"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toExponential}}\n\nReturns a string, representing the given number in exponential notation.\n\n#### Parameters\n\n* `number` {Number}\n* `fractionDigits` {Number}: Optional. An integer specifying the number of digits to use after the decimal point. Defaults to as many digits as necessary to specify the number.\n* `returns` {Number}\n\n#### Example\n\n```js\n{{toExponential number digits}};\n```",
                                      "header": {
                                        "anchor": "handlebars_toexponential"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toFixed}}\n\nFormats the given number, using fixed-point notation.\n\n#### Parameters\n\n* `number` {Number}\n* `digits` {Number}: Optional. The number of digits to use after the decimal point. This can be a value between 0 and 20, inclusive, and implementations may optionally support a larger range of values. If this argument is omitted, it is treated as 0.\n* `returns` {Number}",
                                      "header": {
                                        "anchor": "handlebars_tofixed"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toFloat}}\n\n#### Parameters\n\n* `number` {Number}\n* `returns` {Number}",
                                      "header": {
                                        "anchor": "handlebars_tofloat"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toInt}}\n\n#### Parameters\n\n* `number` {Number}\n* `returns` {Number}",
                                      "header": {
                                        "anchor": "handlebars_toint"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toPrecision}}\n\n#### Parameters\n\n* `number` {Number}\n* `precision` {Number}: Optional. The number of significant digits.\n* `returns` {Number}",
                                      "header": {
                                        "anchor": "handlebars_toprecision"
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "blocks": []
                          }
                        },
                        {
                          "title": "Object Helpers",
                          "route": {
                            "path": "/object-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard Object Helpers",
                                "route": {
                                  "path": "/standard-object-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Object Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_extend\">{{extend}}</a></li>\n    <li><a href=\"#handlebars_forin\">{{forIn}}</a></li>\n    <li><a href=\"#handlebars_forown\">{{forOwn}}</a></li>\n    <li><a href=\"#handlebars_topath\">{{toPath}}</a></li>\n    <li><a href=\"#handlebars_get\">{{get}}</a></li>\n    <li><a href=\"#handlebars_getobject\">{{getObject}}</a></li>\n    <li><a href=\"#handlebars_hasown\">{{hasOwn}}</a></li>\n    <li><a href=\"#handlebars_isobject\">{{isObject}}</a></li>\n    <li><a href=\"#handlebars_merge\">{{merge}}</a></li>\n    <li><a href=\"#handlebars_jsonparse\">{{JSONparse}}</a></li>\n    <li><a href=\"#handlebars_jsonstringify\">{{JSONstringify}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to handle objects.\n\n## {{extend}}\n\nExtends the context with the properties of other objects. A shallow merge is performed to avoid mutating the context.\n\n#### Parameters\n\n* `objects` {Object}: One or more objects to extend.\n* `returns` {Object}",
                                      "header": {
                                        "anchor": "handlebars_extend"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{forIn}}\n\nBlock helper that iterates over the properties of an object, exposing each key and value on the context.\n\n#### Parameters\n\n* `context` {Object}\n* `options` {Object}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_forin"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{forOwn}}\n\nBlock helper that iterates over the *own* properties of an object, exposing each key and value on the context.\n\n#### Parameters\n\n* `obj` {Object}: The object to iterate over.\n* `options` {Object}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_forown"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toPath}}\n\nTakes arguments and, if they are string or number, converts them to a dot-delineated object property path.\n\n#### Parameters\n\n* `prop` {String|Number}: The property segments to assemble (can be multiple).\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_topath"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{get}}\n\nUses property paths (`a.b.c`) to get a value or nested value from the context. Works as a regular helper or block helper.\n\n#### Parameters\n\n* `prop` {String}: The property to get, optionally using dot notation for nested properties.\n* `context` {Object}: The context object.\n* `options` {Object}: The Handlebars options object, if used as a block helper.\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_get"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{getObject}}\n\nUses property paths (`a.b.c`) to get an object from the context. Unlike the `get` helper, this helper will return the actual object, including the given property key. Also, this helper does not work as a block helper.\n\n#### Parameters\n\n* `prop` {String}: The property to get, optionally using dot notation for nested properties.\n* `context` {Object}: The context object.\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_getobject"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{hasOwn}}\n\nReturns true if `key` is an own, enumerable property of the given `context` object.\n\n#### Parameters\n\n* `key` {String}\n* `context` {Object}: The context object.\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{hasOwn context key}}\n```",
                                      "header": {
                                        "anchor": "handlebars_hasown"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{isObject}}\n\nReturns true if `value` is an object.\n\n#### Parameters\n\n* `value` {String}\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isObject \"foo\"}}\n//=> false\n```",
                                      "header": {
                                        "anchor": "handlebars_isobject"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{merge}}\n\nDeeply merges the properties of the given `objects` with the context object.\n\n#### Parameters\n\n* `object` {Object}: The target object. Pass an empty object to shallow-clone.\n* `objects` {Object}\n* `returns` {Object}",
                                      "header": {
                                        "anchor": "handlebars_merge"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{JSONparse}}\n\nBlock helper that parses a string using `JSON.parse`, then passes the parsed object to the block as context.\n\n#### Parameters\n\n* `string` {String}: The string to parse.\n* `options` {Object}: Handlebars options object.",
                                      "header": {
                                        "anchor": "handlebars_jsonparse"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{JSONstringify}}\n\nStringifies an object using `JSON.stringify`.\n\n#### Parameters\n\n* `obj` {Object}: Object to stringify.\n* `returns` {String}\n",
                                      "header": {
                                        "anchor": "handlebars_jsonstringify"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Operator Helpers",
                          "route": {
                            "path": "/operator-helpers"
                          },
                          "data": {
                            "blocks": [],
                            "children": [
                              {
                                "title": "Standard Operator Helpers",
                                "route": {
                                  "path": "/standard-operator-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Operator Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_comparison\">Comparison Operators</a></li>\n    <li><a href=\"#handlebars_or\">{{or}}</a></li>\n    <li><a href=\"#handlebars_typeof\">{{forOwn}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Comparison Operators\n\nThe following helpers are available to handle comparisons.\n\n| Helper | Definition |\n|--|--|\n|`==`| equal to |\n|`===`| equal to and equal type |\n|`!=`| not equal |\n|`<`| less than |\n|`>`| greater than |\n|`<=`| less than or equal to |\n|`>=`| greater than or equal to |\n\n### Equal to and Equal Type Example\n\nTo compare a string, use the `===` operator, as in this example from `templates/components/common/share.html`: \n\n```\n  {{#if service '===' 'facebook'}}\n    <svg>\n      <use xlink:href=\"#icon-facebook\"/>\n    </svg>\n  {{/if}}\n```\n\n### Not Equal or Not Equal Type Example\n\nTo improvise a `!==` (not equal or not equal type) comparison operator in Handlebars, you can use an [if](#if)/else structure as shown in this example:\n\n```\n  <nav class=\"navigation\">\n      <ul>\n        {{#each nav_items}}\n            {{#if name '===' 'About Us'}}\n            {{else}}\n              <li>\n                <a class=\"top-level-nav-link\" href=\"{{url}}\">\n                  {{name}}\n                </a>\n              </li>\n            {{/if}}\n        {{/each}}\n      </ul>\n    </nav>\n```",
                                      "header": {
                                        "anchor": "handlebars-comparison"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Logical {{or}} Operator\n\nThe `or` operator has been customized for Stencil. It checks whether at least one of its parameters evaluates to true, and has the following syntax:\n\n```\n{{#or 1 0 0 0 0 0 0}} \n  ... /* execute this block if OR evaluates to true */\n{{/or}}\n```\n\n### Example\n\nHere is a usage example from Stencil's Cornerstone base theme, where it displays the cart's contents. The `templates/components/cart/content.html` template uses the `or` operator to determine whether an item contains either product options _or_ configurable fields. If at least one condition is true, the template displays an edit link for the item:\n\n```\n{{#or options configurable_fields}}\n    <a href=\"#\" data-item-edit=\"{{id}}\">{{lang 'cart.checkout.change'}}</a>\n{{/or}}\n```\n\n### Parameters \n\nThe `or` operator's parameters are one or more strings, numbers, arrays, or collections. Parameters can be of mixed types. ",
                                      "header": {
                                        "anchor": "handlebars_or"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{typeof}} Operator\n\nThe `typeof` operator returns the JavaScript type of a variable, such as:\n\n- string\n- number\n- boolean\n- object\n\nBy design, an array will return a `typeof` value of `object`.\n\n### Example\n\n```\n<script>\n    if (typeof(addthis) === \"object\") {\n        addthis.toolbox('.addthis_toolbox');\n    }\n</script>\n```",
                                      "header": {
                                        "anchor": "handlebars_typeof"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "String Helpers",
                          "route": {
                            "path": "/string-helpers"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Custom String Helpers",
                                "route": {
                                  "path": "/custom-string-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Custom String Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_block\">{{block}}</a></li>\n    <li><a href=\"#handlebars_concat\">{{concat}}</a></li>\n    <li><a href=\"#handlebars_dynamiccomponent\">{{dynamicComponent}}</a></li>\n    <li><a href=\"#handlebars_json\">{{json}}</a></li>\n    <li><a href=\"#handlebars_lang\">{{lang}}</a></li>\n    <li><a href=\"#handlebars_nl2br\">{{nl2br}}</a></li>\n    <li><a href=\"#handlebars_partial\">{{partial}}</a></li>\n    <li><a href=\"#handlebars_replace\">{{replace}}</a></li>\n    <li><a href=\"#handlebars_tolowercase\">{{toLowerCase}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following custom helpers are available to manipulate strings:\n\n## {{block}} \n\nThe `block` string helper is custom to Stencil. It defines a block of content, which can be overwritten by the [partial](#partial-helper) helper.",
                                      "header": {
                                        "anchor": "handlebars_block"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{concat}}\n\nThe `concat` helper is custom to Stencil. It concatenates two string objects from the page's context, which are passed as parameters. It returns a new string object.\n\n#### Example\n\n```\n{{concat breadcrumbs.[0].name breadcrumbs.[0].url}}\n```",
                                      "header": {
                                        "anchor": "handlebars_concat"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{dynamicComponent}}\n\nThe `dynamicComponent` string helper is custom to Stencil. It inserts a dynamic partial from within the path that is supplied as its parameter.",
                                      "header": {
                                        "anchor": "handlebars_dynamiccomponent"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{json}}\n\nThe `json` string helper is custom to Stencil. You can use this helper to convert a JavaScript string object (from the page's context) into a JSON string object.",
                                      "header": {
                                        "anchor": "handlebars_json"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{lang}}\n\nThe `lang` string helper is custom to Stencil. It maps keys to translation files, based on the locale indicated by the visitor’s browser. Its parameters are the following keys:\n\n- `translationKey`: a string.\n- `options`: key-value pairs.",
                                      "header": {
                                        "anchor": "handlebars_lang"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{nl2br}}\n\nThe `nl2br` helper is custom to Stencil. You can call this helper on a string object from the page's context, to convert its contained newline characters (`\\r\\n`, `\\n\\r`, `\\r`, `\\n`) to `<br>` tags. The `nl2br` helper returns a new string object.\n\n#### Example\n\nThis Handlebars statement:\n\n```\n{{nl2br settings.address}}\n```\n\n...will take this example string:\n\n```\n\"settings\": {\n  \"address\": \"\\r\\n685 Market St\\r\\nSan Francisco\\r\\n94105\\r\\nCA\\r\\n\"\n}\n```\n\n...and return\n\n```\n\"<br>685 Market St<br>San Francisco<br>94105<br>CA<br>\"\n```",
                                      "header": {
                                        "anchor": "handlebars_nl2br"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{partial}}\n\nThe `partial` string helper is custom to Stencil. It overrides block content defined by the [block](#block-helper) helper.",
                                      "header": {
                                        "anchor": "handlebars_partial"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{replace}}\n\nThe `replace` string helper is custom to Stencil. It searches for the first parameter within the second parameter and, if it finds it, replaces the first parameter with the contents of the specified Handlebars block.\n\nFor example, the following code would search for the string `needle` within the scope defined by `haystack`. If found, it would replace that string with the Handlebars block defined by `<context...replacement>`:\n\n```\n{{#replace \"needle\" haystack}}\n  {{<context to use as a replacement>}}\n{{/replace}}\n```",
                                      "header": {
                                        "anchor": "handlebars_replace"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{toLowerCase}}\n\nThe `toLowerCase` helper is custom to Stencil. Use this helper to return a copy of a string object, in all-lowercase. The helper returns a new string object.\n\n#### Example\n\nThis Handlebars statement:\n\n```\n{{toLowerCase head.title}}\n```\n\n...will take this example string:\n\n```\n\"head\": {\n  \"title\": \"This is my TEST Store\"\n}\n```\n\n...and return:\n\n```\n\"this is my test store\"\n```",
                                      "header": {
                                        "anchor": "handlebars_toLowerCase"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Standard String Helpers",
                                "route": {
                                  "path": "/standard-string-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard String Helpers</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_camelcase\">{{camelcase}}</a></li>\n    <li><a href=\"#handlebars_capitalize\">{{capitalize}}</a></li>\n    <li><a href=\"#handlebars_capitalizeall\">{{capitalizeAll}}</a></li>\n    <li><a href=\"#handlebars_center\">{{center}}</a></li>\n    <li><a href=\"#handlebars_chop\">{{chop}}</a></li>\n    <li><a href=\"#handlebars_dashcase\">{{dashcase}}</a></li>\n    <li><a href=\"#handlebars_dotcase\">{{dotcase}}</a></li>\n    <li><a href=\"#handlebars_hyphenate\">{{hyphenate}}</a></li>\n    <li><a href=\"#handlebars_isstring\">{{isString}}</a></li>\n    <li><a href=\"#handlebars_lowercase\">{{lowercase}}</a></li>\n    <li><a href=\"#handlebars_occurrences\">{{occurrences}}</a></li>\n    <li><a href=\"#handlebars_pascalcase\">{{pascalcase}}</a></li>\n    <li><a href=\"#handlebars_pathcase\">{{pathcase}}</a></li>\n    <li><a href=\"#handlebars_plusify\">{{plusify}}</a></li>\n    <li><a href=\"#handlebars_reverse\">{{reverse}}</a></li>\n    <li><a href=\"#handlebars_sentence\">{{sentence}}</a></li>\n    <li><a href=\"#handlebars_snakecase\">{{snakecase}}</a></li>\n    <li><a href=\"#handlebars_split\">{{split}}</a></li>\n    <li><a href=\"#handlebars_startswith\">{{startsWith}}</a></li>\n    <li><a href=\"#handlebars_titleize\">{{titleize}}</a></li>\n    <li><a href=\"#handlebars_trim\">{{trim}}</a></li>\n    <li><a href=\"#handlebars_truncate\">{{truncate}}</a></li>\n    <li><a href=\"#handlebars_uppercase\">{{uppercase}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{camelcase}}\n\ncamelCases the characters in the given `string`.\n\n#### Parameters\n\n* `string` {String}: The string to camelcase.\n* `returns` {String}\n\n#### Example\n\n```js\n{{camelcase \"foo bar baz\"}};\n//=> 'fooBarBaz'\n```",
                                      "header": {
                                        "anchor": "handlebars_camelcase"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{capitalize}}\n\nCapitalizes the first word in a sentence.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{capitalize \"foo bar baz\"}}\n//=> \"Foo bar baz\"\n```",
                                      "header": {
                                        "anchor": "handlebars_capitalize"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{capitalizeAll}}\n\nCapitalizes all words in a string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{capitalizeAll \"foo bar baz\"}}\n//=> \"Foo Bar Baz\"\n```",
                                      "header": {
                                        "anchor": "handlebars_capitalizeall"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{center}}\n\nCenters a string, using non-breaking spaces.\n\n#### Parameters\n\n* `str` {String}\n* `spaces` {String}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_center"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{chop}}\n\nLike `trim`, but removes both extraneous whitespace *and non-word characters* from the beginning and end of a string.\n\n#### Parameters\n\n* `string` {String}: The string to chop.\n* `returns` {String}\n\n#### Example\n\n```js\n{{chop \"_ABC_\"}}\n//=> 'ABC'\n\n{{chop \"-ABC-\"}}\n//=> 'ABC'\n\n{{chop \" ABC \"}}\n//=> 'ABC'\n```",
                                      "header": {
                                        "anchor": "handlebars_chop"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{dashcase}}\n\ndash-cases the characters in `string`. Replaces non-word characters and periods with hyphens.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{dashcase \"a-b-c d_e\"}}\n//=> 'a-b-c-d-e'\n```",
                                      "header": {
                                        "anchor": "handlebars_dashcase"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{dotcase}}\n\ndot.cases the characters in `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{dotcase \"a-b-c d_e\"}}\n//=> 'a.b.c.d.e'\n```",
                                      "header": {
                                        "anchor": "handlebars_dotcase"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{hyphenate}}\n\nReplaces spaces in a string with hyphens.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{hyphenate \"foo bar baz qux\"}}\n//=> \"foo-bar-baz-qux\"\n```",
                                      "header": {
                                        "anchor": "handlebars_hyphenate"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{isString}}\n\nReturns true if `value` is a string.\n\n#### Parameters\n\n* `value` {String}\n* `returns` {Boolean}\n\n#### Example\n\n```handlebars\n{{isString \"foo\"}}\n//=> 'true'\n```",
                                      "header": {
                                        "anchor": "handlebars_isstring"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{lowercase}}\n\nLowercases all characters in the given string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{lowercase \"Foo BAR baZ\"}}\n//=> 'foo bar baz'\n```",
                                      "header": {
                                        "anchor": "handlebars_lowercase"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{occurrences}}\n\nReturns the number of occurrences of `substring` within the given `string`.\n\n#### Parameters\n\n* `str` {String}\n* `substring` {String}\n* `returns` {Number}: Number of occurrences.\n\n#### Example\n\n```handlebars\n{{occurrences \"foo bar foo bar baz\" \"foo\"}}\n//=> 2\n```",
                                      "header": {
                                        "anchor": "handlebars_occurrences"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{pascalcase}}\n\nPascalCases the characters in `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{pascalcase \"foo bar baz\"}}\n//=> 'FooBarBaz'\n```",
                                      "header": {
                                        "anchor": "handlebars_pascalcase"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{pathcase}}\n\npath/cases the characters in `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{pathcase \"a-b-c d_e\"}}\n//=> 'a/b/c/d/e'\n```",
                                      "header": {
                                        "anchor": "handlebars_pathcase"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{plusify}}\n\nReplaces spaces in the given string with pluses.\n\n#### Parameters\n\n* `str` {String}: The input string\n* `returns` {String}: Input string with spaces replaced by plus signs\n\n#### Example\n\n```handlebars\n{{plusify \"foo bar baz\"}}\n//=> 'foo+bar+baz'\n```",
                                      "header": {
                                        "anchor": "handlebars_plusify"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{reverse}}\n\nReverses a string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{reverse \"abcde\"}}\n//=> 'edcba'\n```",
                                      "header": {
                                        "anchor": "handlebars_reverse"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{sentence}}\n\nSentence-cases the given string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{sentence \"hello world. goodbye world.\"}}\n//=> 'Hello world. Goodbye world.'\n```",
                                      "header": {
                                        "anchor": "handlebars_sentence"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{snakecase}}\n\nsnake_cases the characters in the given `string`.\n\n#### Parameters\n\n* `string` {String}\n* `returns` {String}\n\n#### Example\n\n```js\n{{snakecase \"a-b-c d_e\"}}\n//=> 'a_b_c_d_e'\n```",
                                      "header": {
                                        "anchor": "handlebars_snakecase"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{split}}\n\nSplits `string` at the given `character`.\n\n#### Parameters\n\n* `string` {String}: The string to split.\n* `returns` {String} `character`: Default is `,`\n\n#### Example\n\n```js\n{{split \"a,b,c\" \",\"}}\n//=> ['a', 'b', 'c']\n```",
                                      "header": {
                                        "anchor": "handlebars_split"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{startsWith}}\n\nTests whether a string begins with the given prefix.\n\n#### Parameters\n\n* `prefix` {String}\n* `testString` {String}\n* `options` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{#startsWith \"Goodbye\" \"Hello, world!\"}}\n  Whoops\n{{else}}\n  Bro, do you even hello world?\n{{/startsWith}}\n```",
                                      "header": {
                                        "anchor": "handlebars_startswith"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{titleize}}\n\nTitle-cases the given string.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}\n\n#### Example\n\n```handlebars\n{{titleize \"this is title case\"}}\n//=> 'This Is Title Case'\n```",
                                      "header": {
                                        "anchor": "handlebars_titleize"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{trim}}\n\nRemoves extraneous whitespace from the beginning and end of a string.\n\n#### Parameters\n\n* `string` {String}: The string to trim.\n* `returns` {String}\n\n#### Example\n\n```js\n{{trim \" ABC \"}}\n//=> 'ABC'\n```",
                                      "header": {
                                        "anchor": "handlebars_trim"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{truncate}}\n\nReturns the first `{{x}}` number of characters in a string (unless it reaches the end of the string first, in which case it will return fewer). Returns a new string that is truncated to the given length.\n\n#### Parameters\n* `str` {String}: String to be truncated\n* `length` {Integer}: Length to be truncated\n\n#### Example\n```javascript\n{{lang (truncate 'blog.post.body.' 40) }}\n```",
                                      "header": {
                                        "anchor": "handlebars_truncate"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{uppercase}}\n\nUppercases all of the characters in the given string. If used as a block helper, it will uppercase the entire block. This helper\ndoes not support inverse blocks.\n\n#### Parameters\n\n* `str` {String}: The string to uppercase.\n* `options` {Object}: Handlebars options object.\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_uppercase"
                                      }
                                    }
                                  ]
                                }
                              }
                            ],
                            "blocks": []
                          }
                        },
                        {
                          "title": "URL Helpers",
                          "route": {
                            "path": "/url-helpers"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Standard URL Helpers",
                                "route": {
                                  "path": "/standard-url-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_encodeuri\">{{encodeURI}}</a></li>\n    <li><a href=\"#handlebars_decodeuri\">{{decodeURI}}</a></li>\n    <li><a href=\"#handlebars_urlresolve\">{{urlResolve}}</a></li>\n    <li><a href=\"#handlebars_urlparse\">{{urlParse}}</a></li>\n    <li><a href=\"#handlebars_stripquerystring\">{{stripQuerystring}}</a></li>\n    <li><a href=\"#handlebars_stripprotocol\">{{stripProtocol}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are available to transform URLs.\n\n## {{encodeURI}}\n\nEncodes a Uniform Resource Identifier (URI) component, by replacing each instance of certain characters by one, two, three, or four escape sequences that represent the UTF-8 encoding of the character.\n\n#### Parameters\n\n* `str` {String}: The un-encoded string.\n* `returns` {String}: The encoded string.",
                                      "header": {
                                        "anchor": "handlebars_encodeuri"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{decodeURI}}\n\nDecodes a Uniform Resource Identifier (URI) component.\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_decodeuri"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{urlResolve}}\n\nTakes a base URL, and an href URL, and resolves them as a browser would for an anchor tag.\n\n#### Parameters\n\n* `base` {String}\n* `href` {String}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_urlresolve"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{urlParse}}\n\nParses a `url` string into an object.\n\n#### Parameters\n\n* `str` {String}: URL string.\n* `returns` {String}: Returns stringified JSON.",
                                      "header": {
                                        "anchor": "handlebars_urlparse"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{stripQuerystring}}\n\nStrips the query string from a `url`.\n\n#### Parameters\n\n* `url` {String}\n* `returns` {String}: The URL without the queryString.",
                                      "header": {
                                        "anchor": "handlebars_stripquerystring"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{stripProtocol}}\n\nStrips the protocol from a `url`.\n\nUseful for displaying media that might have an `http` protocol on secure connections. Will change `http://foo.bar` to `//foo.bar`\n\n#### Parameters\n\n* `str` {String}\n* `returns` {String}: The URL with the `http` protocol stripped.",
                                      "header": {
                                        "anchor": "handlebars_stripprotocol"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Miscellaneous Helpers",
                          "route": {
                            "path": "/misc-helpers"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Standard Miscellaneous Helpers",
                                "route": {
                                  "path": "/standard-miscellaneous-helpers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Standard Miscellaneous Helpers</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#handlebars_default\">{{default}}</a></li>\n    <li><a href=\"#handlebars_option\">{{option}}</a></li>\n    <li><a href=\"#handlebars_noop\">{{noop}}</a></li>\n    <li><a href=\"#handlebars_withhash\">{{withHash}}</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "The following standard helpers are also supported on the Stencil framework.\n\n## {{default}}\n\nReturns the first value, if that value is defined; otherwise, returns the \"default\" value.\n\n#### Parameters\n\n* `value` {any}\n* `defaultValue` {any}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_default"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{option}}\n\nGiven the context `{options: {a: {b: {c: 'ddd'}}}}`, returns the given value of `prop` from `this.options`.\n\n#### Parameters\n\n* `prop` {String}\n* `returns` {any}\n\n#### Example\n\n```handlebars\n{{option \"a.b.c\"}}\n<!-- results => `ddd` -->\n```",
                                      "header": {
                                        "anchor": "handlebars_option"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{noop}}\n\nBlock helper that renders the block without taking any arguments.\n\n#### Parameters\n\n* `options` {Object}\n* `returns` {String}",
                                      "header": {
                                        "anchor": "handlebars_noop"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## {{withHash}}\n\nBlock helper that builds the context for the block from the options hash.\n\n#### Parameters\n\n* `options` {Object}: Handlebars-provided options object.",
                                      "header": {
                                        "anchor": "handlebars_withhash"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Stencil Object Model ",
              "route": {
                "path": "/stencil-object-model-reference"
              },
              "data": {
                "children": [
                  {
                    "title": "Stencil Objects",
                    "route": {
                      "path": "/stencil-objects"
                    },
                    "data": {
                      "children": [
                        {
                          "title": "Global Objects & Properties",
                          "route": {
                            "path": "/global-objects"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Global Objects & Properties ",
                                "route": {
                                  "path": "/global-objects-and-properties-overview"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Global Objects and Properties Overview</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#global_global-objects\">Global Objects and Properties Overview</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Global Objects Overview \n\nGlobal objects and properties are common components shared across the entire BigCommerce storefront. The objects/properties covered in this subsection are:\n\n* [Banner](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/banner)\n* [Breadcrumbs](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/breadcrumbs)\n* [Categories](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/)\n* [Currency Selector](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/breadcrumbs)\n* [Faceted Search](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/faceted-search)\n* [Featured Products](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/featured-products)\n* [Footer](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/footer)\n* [Carousel](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/carousel)\n* [HTML Head](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/html-head)\n* [Is_Ajax](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/is-ajax)\n* [Login](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/login)\n* [New Products](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/new-products)\n* [Page Content](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/page-content)\n* [Pages](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/pages)\n* [Page Type](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/page-type-property)\n* [Pagination](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/pagination)\n* [Search](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/search)\n* [Settings](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/settings)\n* [Sitemap](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/sitemap)\n* [Social Links](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/social-links)\n* [Template Property](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/template-property)\n* [Top Sellers](/stencil-docs/stencil-object-model-reference/stencil-objects/global-objects/top-sellers)",
                                      "header": {
                                        "anchor": "global_global-objects"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Banner",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/banner"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Banners</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Elements of marketing banners at page’s top and/or bottom\n\n<b>Handlebars Expressions:</b> `{{banner}}`, `{{{banner}}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n\t\t<td>banners</td>\n    <td>Blocks of static HTML content to define banners</td>\n  </tr>\n  <tr>\n\t\t<td><span class=\"indent1\">top</span></td>\n    <td>Array of HTML content/strings, for custom top-banner content; banners are populated from the BigCommerce control panel</td>\n  </tr>\n  <tr>\n\t\t<td><span class=\"indent1\">bottom</span></td>\n    <td>Array of HTML content/strings, for custom bottom-banner content; banners are populated from the BigCommerce control panel</td>\n  </tr>\n</table>"
                                    },
                                    {
                                      "type": "callout",
                                      "data": {
                                        "title": " Handlebars Formatting Exception",
                                        "type": "warning",
                                        "body": "Where a banner contains HTML, the banner helper must be placed in triple braces, as in this\nexample: `{{{banner}}}`. (Double braces would escape the HTML.)\n\n"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Breadcrumbs",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/breadcrumbs"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Breadcrumbs</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Defines a page's breadcrumbs – available on virtually all pages that have a breadcrumb trail\n\n<b>Handlebars Expression:</b> `{{breadcrumbs}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Displayed name of this breadcrumb element</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL of this breadcrumb element</td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Carousel",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/carousel"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Carousel</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> A list of images, text, and style assets for a storefront’s image slide show\n\n<b>Handlebars Expression: </b> `{{carousel}}`\n\n<b>Object Properties:</b>\n\n<table>  \n  <tr>    \n    <td>Property</td>    \n    <td>Description</td>  \n  </tr>    \n  <tr>    \n    <td>swap_frequency</td>    \n    <td>Indicates how often (in seconds) the slides will change; the value must be between 1 and 90,000 seconds</td>  \n  </tr>    \n  <tr>    \n    <td>slides</td>    \n    <td>Object containing properties for each slide in the slideshow</td>  \n  </tr>    \n  <tr>    \n    <td><span class=\"indent1\">image</span></td>    \n    <td>Path to the image file used on this slide</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\">alt_text</span></td>    \n    <td>Alt text for the image</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\">url</span></td>    \n    <td>URL to which the image will link</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\">heading</span></td>    \n    <td>Heading message defined by the merchant</td>  \n  </tr>  \n  <tr>    \n  <td><span class=\"indent1\">heading_color</span></td>    \n  <td>Color of the heading text</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\">text</span></td>    \n    <td>Subheading defined by the merchant</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\">text_color</span></td>    \n    <td>Color of the subheading text</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\">button_text</span></td>    \n    <td>Text displayed on a call-to-action button defined by the merchant</td>  \n</tr>  \n  <tr>    \n  <td><span class=\"indent1\">button_text_color</span></td>    \n  <td>Color of the button</td>  \n</tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Currency Selector",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/currency-selector"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Currency Selector</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> A list of all supported currencies, and the currency that is actively in use in the storefront\n\n<b>Handlebars Expression:</b> `{{currency_selector}}`\n\n<b>Object Properties:</b>\n\n<table>  \n<tr>    \n  <th>Property</th>   \n  <th>Description</th>  \n</tr>  \n<tr>    \n  <td>active_currency_id</td>    \n  <td>ID of the currency actively in use in the storefront</td>  \n</tr>  \n<tr>    \n  <td>active_currency_flag</td>    \n  <td>Country flag used to represent the active currency</td>  \n</tr> \n<tr>    \n  <td>active_currency_name</td>    \n  <td>Name of the active currency</td>  \n</tr>\n<tr>    \n  <td>active_currency_code</td>    \n  <td>Code for the active currency</td>  \n</tr>  \n<tr>    \n  <td>currencies</td>    \n  <td>List of all the currencies supported for this storefront</td>  \n</tr> \n<tr>    \n  <td><span class=\"indent1\">is_active</span></td>    \n  <td>Boolean that indicates whether this currency is active for use in the storefront</td>  \n</tr> \n<tr>    \n  <td><span class=\"indent1\">switch_url</span></td>    \n  <td>The URL to invoke a switch to this currency</td> \n</tr> \n<tr>    \n <td><span class=\"indent1\"> id</span></td>    \n <td>ID of the currency</td>  \n</tr> \n<tr>    \n <td><span class=\"indent1\"> name</span></td>    \n <td>Name of the currency</td>  \n</tr> \n <tr>    \n  <td><span class=\"indent1\"> flag</span></td>    \n  <td>Country flag used to visually represent the currency</td>  \n </tr>\n </table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Categories",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/categories"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Categories</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> A list of all product categories shown in the current page context; default sorting is by category id, from lowest to highest\n\n<b>Handlebars Expression:</b> `{{categories}}`\n\n<b>Object Properties:</b>\n\n<b>Object Properties:</b>\n<table>  \n  <tr>   \n    <td>Property</td>    \n    <td>Description</td>  \n  </tr>  \n  <tr>    \n    <td>id</td>    \n    <td>ID of the top-level category listed</td>  \n  </tr>  \n  <tr>    \n    <td>name</td>    \n    <td>Name of the top-level category</td>  \n  </tr>  \n  <tr>    \n    <td>description</td>    \n    <td>Description of the top-level category (optional &ndash; when requested in front matter)</td>  \n  </tr>  \n  <tr>    \n    <td>url</td>    \n    <td>URL to the category page</td>  \n  </tr>  \n  <tr>    \n    <td>count</td>    \n    <td>Number of products in this category</td>  \n  </tr>  \n  <tr>    \n    <td>children</td>    \n    <td>List of child categories for this top-level category</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\"> id</span></td>    \n    <td>ID of the child category</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\"> name</span></td>    \n    <td>Name of the child category</td>  \n  </tr>    \n  <tr>    \n    <td><span class=\"indent1\"> description</span></td>    \n    <td>Description of the child category (optional &ndash; when requested in front matter)</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\"> url</span></td>    \n    <td>URL of the child category</td>  \n  </tr>  \n  <tr>    \n    <td><span class=\"indent1\"> count</span></td>    \n    <td>Number of products in this child category</td> \n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Faceted Search",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/faceted-search"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Faceted Search</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Faceted-search object for searching globally, by category, or by brand\n\n<b>Handlebars Expression:</b> `{{faceted_search}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>facets</td>\n    <td>List of all search facets available</td>\n  </tr>\n  <tr>\n\t\t<td><b>selected</b></td>\n\t\t<td>Container for the selected search facets (selected facets contain properties below</i>)</td>\n  </tr>\n  <tr>\n\t<td><span class=\"indent1\">remove_all_url</span></td>\n    <td>URL to remove all selected search restrictions</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">items</span></td>\n    <td>Currently enabled search facets</td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Featured Products",
                                "config": {
                                  "sidebar": {
                                    "token": "Global Object"
                                  }
                                },
                                "route": {
                                  "path": "/featured-products"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Featured Products</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Renders a list of all the featured products for the BigCommerce storefront.\n\n<b>Handlebars Expression:</b> `{{products.featured}}`\n\n<b>Object Properties:</b> References the [product card model](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model).\n\n<b> Usage Example: </b>\n\nThe code example below displays the global `{{products.featured}}` object on the `cornerstone/templates/pages/home.html` page template from [Stencil's base Cornerstone theme](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html#L5) (Github).\n\nFirst, you must declare the object using Front Matter. To declare the object, the following front matter must be placed at the top of the template HTML page. This following declaration also limits the number of featured products to be displayed:"
                                    },
                                    {
                                      "type": "code",
                                      "data": "\nproducts:\n    [...]\n    featured:\n        limit: {{theme_settings.homepage_featured_products_count}} //limits the number of featured products to be displayed\n",
                                      "header": {
                                        "title": "{{products.featured}} Front Matter Declaration",
                                        "subtitle": "cornerstone/templates/pages/home.html"
                                      },
                                      "config": {
                                        "mode": "js"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "The `homepage_featured_products_count` limit is one of two relevant variables defined in [Cornerstone's `config.json` file](https://github.com/bigcommerce/cornerstone/blob/master/config.json#L45) (Github).\n\n"
                                    },
                                    {
                                      "type": "code",
                                      "data": "\"settings\": {\n    [...]\n    \"homepage_featured_products_count\": 8,\n    [...]\n    \"homepage_featured_products_column_count\": 4,\n    [...]    ",
                                      "header": {
                                        "subtitle": "cornerstone/config.json",
                                        "title": "\"settings\" object"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "In the body of [Cornerstone's `home.html` template](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html#L27) (Github), the below Handlebars conditional statement is responsible for displaying the `{{products.featured}}` object. This is the object that we declared above using front matter."
                                    },
                                    {
                                      "type": "code",
                                      "data": "{{#if products.featured}}\n\t\t{{> components/products/featured products=products.featured \n    columns=theme_settings.homepage_featured_products_column_count}}\n{{/if}}\n",
                                      "header": {
                                        "subtitle": "cornerstone/templates/pages/home.html",
                                        "title": "conditional {{products.featured}} view"
                                      },
                                      "config": {
                                        "mode": "js"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "This above statement formats the _Featured Products_ display according to the `homepage_featured_products_column_count` variable, which is the second relevant variable defined in [Cornerstone's `config.json` file](https://github.com/bigcommerce/cornerstone/blob/master/config.json#L53) (Github)."
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Footer",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/footer"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Footer</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b>The footer content for each storefront page\n\n<b>Handlebars Expression:</b> `{{footer}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>sitemap_url</td>\n    <td>The URL to the sitemap, based on store’s SEO setting</td>\n  </tr>\n  <tr>\n    <td>scripts</td>\n    <td>Scripts to be loaded after the HTML has loaded; includes performance metrics</td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "HTML Head",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/html-head"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Data to be included in the HTML `<head>` element<br>\n\n<b>Handlebars Expression:</b>`{{head}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>character_set</td>\n    <td>The character set to specify</td>\n  </tr>\n  <tr>\n    <td>meta_tags</td>\n    <td>Meta tags to improve store SEO</td>\n  </tr>\n  <tr>\n    <td>title</td>\n    <td>Current page’s title</td>\n  </tr>\n  <tr>\n    <td>stylesheets</td>\n    <td>CSS files to be included</td>\n  </tr>\n  <tr>\n    <td>scripts</td>\n    <td>Scripts to be loaded in the &lt;head&gt; tag</td>\n  </tr>\n  <tr>\n    <td>favicon</td>\n    <td>The store’s favicon (Favorite icon)</td>\n  </tr>\n  <tr>\n    <td>rsslinks</td>\n    <td>RSS feeds to improve SEO</td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Is_ajax",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/is-ajax"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Is_Ajax</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Boolean; returns `true` if the current executing request is an Ajax request\n\n<b>Handlebars Expression:</b> `{{is_ajax}}`\n\nNo properties available for this object."
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Login",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/login"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Login</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description: </b>Object to handle customer login details<br>\n\n<b>Handlebars Expression:</b> `{{forms.login}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>came_from_checkout</td>\n    <td>Boolean indicating whether the customer submitted login information at checkout</td>\n  </tr>\n  <tr>\n    <td>error</td>\n    <td>BC-defined message to display when customer’s login fails</td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "New Products ",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/new-products"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>New Products</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "**Description:** A list of new products for the BigCommerce storefront\n\n**Handlebars Expression:**`{{products.new}}`\n\n**Object Properties:** References the [product card model](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model).\n\n**Usage Example:**\n\nTo access the global `{{products.new}}` object on your page, you must first use front matter to declare the object at the top of your page template. \n\nThe code example below declares the global `{{products.new}}` object on the `cornerstone/templates/pages/home.html` page template from [Stencil's base Cornerstone Theme](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html#L3) (Github)."
                                    },
                                    {
                                      "type": "code",
                                      "data": "\nproducts:\n    new:\n        limit: {{theme_settings.homepage_new_products_count}}\n",
                                      "header": {
                                        "title": "{{products.new}} Front Matter Declaration",
                                        "subtitle": "cornerstone/templates/pages/home.html"
                                      },
                                      "config": {
                                        "mode": "html"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "The `homepage_featured_products_count` limit is one of two relevant variables defined in Cornerstone's `config.json` file (Github)."
                                    },
                                    {
                                      "type": "code",
                                      "data": " \"settings\": {\n    \"homepage_new_products_count\": 5,\n    [...]\n    \"homepage_new_products_column_count\": 4,\n    [...]",
                                      "header": {
                                        "title": "\"settings\" object",
                                        "subtitle": "cornerstone/config.json"
                                      },
                                      "config": {
                                        "mode": "json"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "In the body of [Cornerstone's `home.html` template](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/home.html#L36) (Github), the below Handlebars conditional statement is responsible for displaying the `{{products.featured}}` object. This is the object that we declared above using front matter."
                                    },
                                    {
                                      "type": "code",
                                      "data": "{{#if products.new}}\n  {{> components/products/new products=products.new \t\n \tcolumns=theme_settings.homepage_new_products_column_count}}\n{{/if}}",
                                      "header": {
                                        "title": "conditional {{products.new}} view",
                                        "subtitle": "cornerstone/templates/pages/home.html"
                                      },
                                      "config": {
                                        "mode": "js"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "This above statement formats the _New Products_ display according to the `homepage_new_products_column_count` variable, which is the second relevant variable defined in [Cornerstone's `config.json` file](https://github.com/bigcommerce/cornerstone/blob/master/config.json#L46) (Github)."
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Page Content ",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/page-content"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Page Content</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Defines elements of merchant’s store page\n\n<b>Handlebars Expression:</b> `{{page}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>title</td>\n    <td>Page title, to be used as the HTML <code>title</code> tag</td>\n  </tr>\n  <tr>\n    <td>description</td>\n    <td>Description for the page, to be used as the HTML <code>meta &gt; description</code> tag</td>\n  </tr>\n  <tr>\n    <td>content</td>\n    <td>HTML content of the page</td>\n  </tr>\n  <tr>\n    <td>sub_pages</td>\n    <td>Array of child pages</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">title</span></td>\n    <td>Title of this child page</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">url</span></td>\n    <td>URL of this child page</td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Pages",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/pages"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Pages</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> A list of all web content pages for the BigCommerce storefront\n\n<b>Handlebars Expression:</b> `{{pages}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th> \n\t</tr> \n    <tr>\n      <td>name</td>\n      <td>Name of the page</td>\n    </tr> \n    <tr>\n      <td>url</td>\n      <td>URL of the page</td>\n    </tr>\n    <tr>\n      <td>children</td>\n      <td>List of child pages for this page</td>\n    </tr>\n    <tr>\n      <td><span class=\"indent1\"> name</span></td>\n      <td>Name of the child page</td>\n    </tr>\n    <tr>\n      <td><span class=\"indent1\"> url</span></td>\n      <td>URL of the child page</td>\n    </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Page Type Property",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/page-type-property"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Page Type Property</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> A string representing the type of page currently displayed. <br>\n\n<b>Handlebars Expression:</b> `{{page_type}}`\n\n<b>Values:</b> The four most-commonly-used values for `{{page_type}}` are:\n\n* default (for a home page)\n* product (for a product page)\n* category (for a category page)\n* page (for a Web [static] page)\n\nAll possible values for `{{page_type}}` are:\n\n| account | shippingaddressform | account_new_return | \n||||\n| account_addressbook | account_downloaditem | account_inbox | \n| editaccount | account_orderstatus | account_orders | \n| invoice_print | account_order | account_recentitems | \n| account_saved_return | account_returns | wishlists | \n| add-wishlist | wishlist | createaccount_thanks | \n| createaccount | forgotpassword | login | \n| getnewpassword | blog | blog_post | \n| brand | brands | cart | \n| category | compare | 403 | \n| 404 | error | giftcertificates_balance | \n| giftcertificates | giftcertificates_redeem | default | \n| page | page_contact_form | product | \n| rss | search | sitemap | \n| newsletter_subscribe | unsubscribe | hibernation | \n| maintenance |\n\n"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Pagination",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/pagination"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Pagination</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Defines pagination of storefront pages\n\n<b>Handlebars Expression:</b> `{{pagination}}`\n\n<b>Object Properties:</b>\n\n<table>\n    <tr>   \n      <th>Property</th>   \n      <th>Description</th> \n    </tr> \n    <tr>   \n      <td>next</td>   \n      <td>Link to next page, if any</td> \n    </tr> \n    <tr>   \n      <td>previous</td>   \n      <td>Link to previous page, if any</td> \n    </tr> \n    <tr>   \n      <td>sort</td>   \n      <td>Field to sort by</td> \n    </tr> \n    <tr>   \n      <td>current</td>   \n      <td>Number representing which page (in the current collection) the customer is viewing</td> \n    </tr> \n      <tr>   \n        <td>total</td>   \n        <td>Total number of results, across all pages</td> \n      </tr> \n        <tr>   \n          <td>links</td>   \n          <td>Array of pages that surround the current page; displayed as a set of links, dynamically sized based on the current page number</td> \n        </tr> \n        <tr>   \n          <td><span class=\"indent1\">url</span></td>   \n          <td>URL to this page of results</td> \n        </tr> \n        <tr>   \n          <td><span class=\"indent1\">number</span></td>   \n          <td>The page number of this link, based on an index starting at 1</td> \n      </tr>\n    </table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Search ",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/search"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Search</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Defines search parameters for the merchant’s site\n\n<b>Handlebars Expression:</b> `{{forms.search}}`\n\n<b>Object Properties:</b>\n\n<table>\n\t\t<th>Property</th>\n\t\t<th>Description</th>\n  <tr>\n    <td>query</td>\n    <td>Active search query, if available</td>\n  </tr>\n  <tr>\n    <td>section</td>\n    <td>Active search-results section: either content or product</td>\n  </tr>\n  <tr>\n    <td>content_url</td>\n    <td>URL to the content section</td>\n  </tr>\n  <tr>\n    <td>product_url</td>\n    <td>URL to the product section</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Brand name</td>\n  </tr>\n  <tr>\n    <td>suggested_query</td>\n    <td>An alternative query – related to the current query – that can be offered to substitute for misspelled entries</td>\n  </tr>\n  <tr>\n    <td>has_suggestions</td>\n    <td>Boolean – true if there is at least one of brand results, category results, or a (non-null) suggested_query</td>\n  </tr>\n  <tr>\n    <td>brand_results</td>\n    <td>Array of brands that match the search query; default sorting is by brand id, from lowest to highest</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL of the brand</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Displayed name for the brand</td>\n  </tr>\n  <tr>\n    <td>category_results</td>\n    <td>An array of category paths matching the search query; used to populate category suggestions</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL of the category</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Displayed name for the category</td>\n  </tr>\n  <tr>\n    <td>values</td>\n    <td>Values of the submitted search form</td>\n  </tr>\n  <tr>\n    <td>brand</td>\n    <td>Any brand ID that customer has selected from drop-down list</td>\n  </tr>\n  <tr>\n    <td>price_from</td>\n    <td>Any minimum price the customer has specified</td>\n  </tr>\n  <tr>\n    <td>price_to</td>\n    <td>Any maximum price the customer has specified</td>\n  </tr>\n  <tr>\n    <td>featured_products</td>\n    <td>Whether customer has chosen to view featured products: null = no preference; 1 = only featured products; 2 = only non-featured products</td>\n  </tr>\n  <tr>\n    <td>free_shipping</td>\n    <td>Value indicating customer’s preference for free shipping within search results: null = no preference; 1 = free shipping only; 2 = paid shipping only</td>\n  </tr>\n  <tr>\n    <td>result_count</td>\n    <td>Combined number of returned results for product and content search</td>\n  </tr>\n  <tr>\n    <td>category_options</td>\n    <td>Array of options to present to customer as search-by-category fields</td>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Category ID</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Displayed name of the category</td>\n  </tr>\n  <tr>\n    <td>state</td>\n    <td>If category contains children, and customer selects a child category: Whether that category’s display will default to closed (collapsed) or opened (expanded)</td>\n  </tr>\n  <tr>\n    <td>children</td>\n    <td>Array of objects representing a child category; recursively replicates the structure of its parent</td>\n  </tr>\n  <tr>\n    <td>content_results</td>\n    <td>Search results across blog posts and storefront pages (not products or categories)</td>\n  </tr>\n  <tr>\n    <td>title</td>\n    <td>Title of the result (title embedded in blog post or page)</td>\n  </tr>\n  <tr>\n    <td>content</td>\n    <td>Summary of text from the blog post or page (first 200 characters)</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL to the result</td>\n  </tr>\n  <tr>\n    <td>type</td>\n    <td>Either post (for blog posts) or page (for storefront pages)</td>\n  </tr>\n  <tr>\n\t\t<td>product_results</td>\n    <td>Results of customer’s last search by product (each result contains the below properties)</td>\n  </tr>\n  <tr>\n\t\t<td><span class=\"indent1\">products</span></td>\n    <td>List of search results for a product; points to <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">product card model</a></td>\n  </tr>\n  <tr>\n         <td><span class=\"indent1\">show_compare</span></td> \n         <td>Boolean corresponding to merchant’s control-panel selection whether or not to enable product comparisons </td> \n      </tr> \n       <tr> \n         <td><span class=\"indent1\">faceted_search_enabled</span>\n         </td> <td>Boolean that defines whether product-filtering search is enabled for the store</td> \n       </tr> \n       <tr> \n         <td><span class=\"indent1\">facets</span></td> \n         <td>All available search filters</td> \n       </tr> \n       <tr> \n         <td><span class=\"indent1\">pagination</span></td> \n         <td>References pagination model</td> \n       </tr> \n       <tr> \n\t\t\t\t <td><span class=\"indent1\">selected</span</td> \n         <td>Currently selected filters</td> \n       </tr>\n</table>\n"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Settings",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/settings"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Settings</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "**Description:** Common settings shared across every BigCommerce storefront\n\n**Handlebars Expression:** `{{settings}}`\n\n**Object Properties:**\n\n| Property | Description |\n|  |  |\n| account_creation_enabled | Site-wide boolean value that indicates whether to allow customers to create accounts |\n| show_product_rating | Site-wide boolean value that indicates whether to display product ratings (in numeric or star format) to visitors |\n| show_product_reviews | Site-wide boolean value that indicates whether to display full-text product reviews to visitors |\n| show_newsletter_box | Site-wide boolean value that indicates whether to display a mailing-list invite to visitors |\n|  gift_certificates_enabled | Site-wide boolean value that indicates whether to enable the gift certificate system for this store |\n|  blog_enabled | Site-wide boolean value that indicates whether the blog is visible for this store |\n|  data_tag_enabled | Site-wide boolean that indicates whether GAEE is enabled in a theme. For {{settings.data_tag_enabled}} to be true, the enhanced_ecommerce key must be present in config.json and a GAEE experiment must be enabled along with GA property value set in Advanced Settings > Analytics > GA in the BigCommerce Control Panel |\n| show_wishlist | Site-wide boolean value that indicates whether to allow customers to create wishlists |\n| base_url | The normal shop URL |\n| client_ip_address | IP address of the customer browsing the store |\n|country_code|The country code corresponding to the IP|\n|request|object that contaisn details about the HTTP request|\n| &#x21B3; referer|refer of the request|\n| &#x21B3; host|hostname of the request|\n| &#x21B3; user_agent|user agent string of the request|\n| &#x21B3; is_crawler|renders \"true\" if user angent is known crawler; \"false\" otherwise\n| &#x21B3; absolute_path|The absolute URL requested. **Never** use request.path in the actual body of the page<sup>1</sup>\n| secure_base_url | The SSL-enabled, secure, shop URL |\n| address | Store’s complete physical address, as entered by merchant in the [Store Profile](https://support.bigcommerce.com/s/article/Store-Profile-Settings)|\n| store_name | Name of the BigCommerce store |\n| store_logo | The store’s logo |\n| &#x21B3; title | Title for the logo – the text configured in the control panel under Storefront Design Design Options Logo |\n| &#x21B3; image | Optional image file, as a Stencil image object. To access the store_logo use: `{{settings.store_logo.image.data}}` and `{{settings.store_logo.image.alt}}` to access the alt tag. These are pulled from the Stencil image object. |\n| privacy_cookie | If enabled, a string containing merchant-customizable text for (European Union–required) cookie-setting notification; if disabled, a boolean with a value of false |\n| urls | Global URLs that the template can access – for example, the template could link to the cart page using {{urls.cart}} |\n| &#x21B3; home | Store’s home page |\n| &#x21B3; account | Collection of (customer and storefront) account-related URLs:|\n| &nbsp; &nbsp; &#x21B3; index | Account index page `/account.php` |\n| &nbsp; &nbsp; &#x21B3; orders | Collection of orders-related URLs: |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; all | List of all orders. `/account.php?action=order_status` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; completed | URL to view completed orders `/account.php?action=view_orders` |\n|  &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; save_new_return | URL to submit a New Return form<. `/account.php?action=save_new_return` |\n| &nbsp; &nbsp; &#x21B3; update_action | URL to submit an Edit Account form. `/account.php?action=update_account` |\n| &nbsp; &nbsp; &#x21B3; returns | List of returns. `/account.php?action=view_returns` |\n|  &nbsp; &nbsp; &#x21B3; addresses | List of addresses; default sorting is by address id, from lowest to highest. `/account.php?action=address_book` |\n| &nbsp; &nbsp; &#x21B3; inbox | List of messages in customer’s inbox. `/account.php?action=inbox` |\n| &nbsp; &nbsp; &#x21B3; send_message | URL to submit a message to the merchant. `/account.php?action=send_message` |\n| &nbsp; &nbsp; &#x21B3; add_address | Link to add shipping address form. `/account.php?action=add_shipping_address` |\n| &nbsp; &nbsp; &#x21B3; wishlists | Collection of wishlist-related URLs: |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; add | URL to the Add Wishlist form `/wishlist.php?action=addwishlist` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; edit | URL to the Edit Wishlist form `/wishlist.php?action=editwishlist` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; delete | URL to delete a wishlist `/wishlist.php?action=deletewishlist` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; all | URL to view all wishlists `/wishlist.php` |\n| &nbsp; &nbsp; &#x21B3; details | URL to the Edit Account form `/account.php?action=account_details` |\n| &nbsp; &nbsp; &#x21B3; recent_items | URL to a list of recently viewed items `/account.php?action=recent_items` |\n| &#x21B3; brands | URL to view all brands; default sorting is by brand id, from lowest to highest |\n| &#x21B3; gift_certificate | Collection of gift-certificate–related URLs: |\n| &nbsp; &nbsp; &#x21B3; purchase | URL to a form for purchasing a gift certificate `/giftcertificates.php` |\n| &nbsp; &nbsp; &#x21B3; redeem | URL to view redemption information `/giftcertificates.php?action=redeem` |\n| &nbsp; &nbsp; &#x21B3; balance | URL to check the balance of a gift certificate `/giftcertificates.php?action=balance` |\n| &#x21B3; auth | Collection of authorization-related URLs: |\n| &nbsp; &nbsp; &#x21B3; login | URL to the login form `/login.php` |\n| &nbsp; &nbsp; &#x21B3; check_login | URL to which to submit the login form `/login.php?action=check_login` |\n| &nbsp; &nbsp; &#x21B3; create_account | URL to the Create Account form page `/login.php?action=create_account` |\n| &nbsp; &nbsp; &#x21B3; save_new_account | URL to which to submit the Create Account form< `/login.php?action=save_new_account` |\n| &nbsp; &nbsp; &#x21B3; forgot_password | URL to the Forgot Password form `/login.php?action=reset_password` |\n| &nbsp; &nbsp; &#x21B3; send_password_email | Submission URL for the Forgot Password form `/login.php?action=send_password_email` |\n| &nbsp; &nbsp; &#x21B3; save_new_password | Submission URL for saving a new password `/login.php?action=save_new_password` |\n| &nbsp; &nbsp; &#x21B3; logout | URL for customer to log out of their account `/login.php?action=logout` |\n| &#x21B3; product | Collection of product-related URLs |\n| &nbsp; &nbsp; &#x21B3; post_review | URL to submit a Write Review form `/postreview.php`  |\n| &#x21B3; cart | URL to the cart page `/cart.php` |\n| &#x21B3; checkout  | Collection of checkout related URLs |\n| &nbsp; &nbsp; &#x21B3; single_address  | URL for the customer to check out with a single shipping address `/checkout.php` |\n| &nbsp; &nbsp; &#x21B3; multiple_address  | URL for the customer to check out with multiple shipping addresses `/checkout.php?action=multiple` |\n| &#x21B3; rss | Collection of RSS-related URLs: |\n| &nbsp; &nbsp; &#x21B3; products | Collection of product-feed–related URLs: |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; new| RSS feed of new products `/rss.php?type=rss` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; new_atom | RSS feed of new products, in Atom format `/rss.php?type=atom` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; popular | RSS feed of popular products `/rss.php?action=popularproducts&type=rss` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; popular_atom | RSS feed of popular products, in Atom format `/rss.php?action=popularproducts&type=atom` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; featured | RSS feed of featured products `/rss.php?action=featuredproducts&type=rss';` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; featured_atom | RSS feed of featured products, in Atom format `/rss.php?action=featuredproducts&type=atom` |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; search | RSS feed of products matching the active search query |\n| &nbsp; &nbsp; &nbsp; &nbsp; &#x21B3; search_atom | RSS feed of products matching the active search query, in Atom format |\n| &nbsp; &nbsp; &#x21B3; blog | RSS feed of recent blog posts `/rss.php?action=newblogs&type=rss` |\n| &nbsp; &nbsp; &#x21B3; blog_atom | RSS feed of recent blog posts, in Atom format `/rss.php?action=newblogs&type=atom` |\n| &#x21B3; contact_us_submit | URL to submit the Contact Us form `/pages.php?action=sendContactForm`|\n| &#x21B3; search | URL to submit a search request `/search.php` |\n| &#x21B3; compare | A string String containing the URL to the products comparison page `/compare` |\n| &#x21B3; sitemap | URL to the sitemap `/sitemap.php` |\n| &#x21B3; subscribe | Collection of subscription-related URLs |\n| &nbsp; &nbsp; &#x21B3; action | URL to which the the newsletter subscription will be submitted `/subscribe.php` |\n| money | List of child items that define the store’s default currency formatting |\n| &#x21B3; currency_token | Symbol for the currency |\n| &#x21B3; currency_location | Whether currency symbol appears at left or right of the quantity |\n| &#x21B3; decimal_token | Symbol for decimal separator |\n| &#x21B3; decimal_places | Number of decimal places to display |\n| &#x21B3; thousands_token | Symbol for thousands separator |\n| returns_enabled | Boolean that indicates whether the control-panel setting for the returns system is enabled |\n| tax_label | Defines the Tax Label (VAT, Sales Tax, etc.) that a merchant can set in the control panel’s Settings > Tax page for display to customers |\n| add_this | Object that defines links for the AddThis social sharing component |\n| &#x21B3; buttons | Array of buttons to display for AddThis social sharing `{{#each settings.add_this.buttons}}{{service}}{{/each}}` `{{#each settings.add_this.buttons}}{{annotations}}{{/each}}` |\n| service | String containing the name of this button's social-media service (facebook, email, print, twitter, linkedin, google, etc.) |\n| annotation | String containing HTML attributes associated with this button |\n| maintenance | Object that manages information about the store when in maintenance (offline) mode |\n| header | If store is in maintenance mode, string containing header text for the \"Down for Maintenance\" window displayed to visitors; otherwise, null |\n| message | If store is in maintenance mode, string containing merchant-customizable body text (and optionally, HTML) for the \"Down for Maintenance\" window displayed to visitors; otherwise, null |\n| notice | If store is in maintenance mode, one of three strings identifying the store's status, and generating a corresponding text notice to merchants about how to proceed: AdminPrelaunchNotice for preview stores, AdminMaintenanceNotice for active stores taken down for maintenance, or AdminHibernationModeNotice for deactivated stores; otherwise, null |\n| phone_number | The contact phone number for the store located in the [stores profile](https://support.bigcommerce.com/s/article/Store-Profile-Settings).  |\n| rss_item_limit | An integer that sets a limit on the number of RSS items to display |\n| password_requirements | Collection of properties representing BigCommerce requirements for customer-account passwords: |\n| alpha | Regular expression representing required/acceptable alphabetic characters |\n| numeric | Regular expression representing required/acceptable numeric characters |\n| minlength | Integer representing minimum acceptable password length |\n| error | String that passes a standard error message for noncompliant passwords |\n| measurements | Collection of units-of-measure definitions, to be used when displaying product details: |\n| &#x21B3; length | Units of measure for product length |\n| &#x21B3; weight | Units of measure for product weight |\n| Time and date settings | The four settings below are configured in the control panel under **Store Setup > Store Settings > Language and Date > Date Settings** . Date formats follow php conventions. |\n| store_time_zone | Store's time zone, as selected in the control panel's Your Timezone drop-down list |\n| store_dst_correction | Whether or not this time zone observes Daylight Saving Time (boolean), as set by the control panel's Enable DST Correction check box |\n| display_date_format | Brief display format/pattern for dates, as configured in the control panel's Display Date Format field |\n| extended_display_date_format | Extended display format/pattern for dates, as configured in the control panel's Extended Display Date Format field |\n| show_payment_methods | A boolean value. If true available payment methods on a store will be shown. If false they are hidden.  |\n| as payments_url| Exposes the BigCommerce payments URL. `https://payments.bigcommerce.com`|\n| secure_host | Returns the SSL url for a store. Example: `https://www.bigcommerce.com` |\n| store_hash | Returns the store hash as a string.  |\n|  is_eu_ip_address| A boolean value. Return true if the shoppers ip address is in the EU. |\n| show_newsletter_box | Returns `1` if customers to allowed to subscribe to the [store newsletter](https://support.bigcommerce.com/s/article/Collecting-Newsletter-Subscriptions#newsletter). Returns `0` if customers are not able to subscribe. |\n| show_newsletter_summary | Returns a `1` if the [newsletter summary](https://support.bigcommerce.com/s/article/Collecting-Newsletter-Subscriptions#newsletter) is shown. Returns `0` if it is now shown. If `show_newsletter_box` is `0` then `show_newsletter_summary` will also be `0`. |\n| newsletter_summary | Returns the [newsletter summary](https://support.bigcommerce.com/s/article/Collecting-Newsletter-Subscriptions#newsletter) |\n| amp_analytics_id | Returns Google AMP analytics ID |\n| bulk_discount_enabled | Boolean that return `true` if bulk discount is enabled on products. |\n"
                                    },
                                    {
                                      "type": "callout",
                                      "data": {
                                        "body": "1. Never use `{{settings.request.path}}` in the actual HTML of the page. Only use it for handlebars conditional log. Displaying this value in the HTML exposes the the page to injection attacks. "
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Sitemap",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/sitemap"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Sitemap</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b>A list of all sitemap properties for this BigCommerce storefront: pages, categories, and brands.<br>\n\n<b>Handlebars Expression:</b> `{{sitemap}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>subsection_url</td>\n    <td>URL to subsection content (pages, categories, brands) of the sitemap</td>\n  </tr>\n  <tr>\n    <td>label</td>\n    <td>Subsection title (pages, categories, brands)</td>\n  </tr>\n  <tr>\n    <td>body</td>\n    <td>List of all sitemap subsections</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> url</span></td><td>URL to the page, category, or brand</td>\n  </tr>\n  <tr>\n      <td><span class=\"indent1\"> label</span></td>\n      <td>Label of the page, category, or brand</td>\n    </tr>\n    <tr>\n      <td><span class=\"indent1\"> children </span></td>\n      <td>Nested list of children within pages or categories; will be null for brands</td>\n    </tr>\n    <tr>\n      <td><span class=\"indent2\">url</span></td>\n      <td>URL to the child page or category</td>\n    </tr>\n    <tr>\n      <td><span class=\"indent2\">label</span></td>\n      <td>Label for the child page or category</td>\n    </tr>\n  </table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Social Links",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/social-links"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Social Links</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Array of all social-media site links for the storefront<br>\n\n<b>Handlebars Expression:</b> `{{social_media}}`\n\n<b>Object Properties:</b><br><br>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Internal name of this social-media platform (e.g., \"googleplus\")</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL to point to, set by merchant in control panel (https://www.facebook.com/BigCommerce, etc.)</td>\n  </tr>\n  <tr>\n    <td>position</td>\n    <td>Display sort order for this platform within the social-media list</td>\n  </tr>\n  <tr>\n    <td>display_name</td>\n    <td>Displayed/formatted name of this social-media platform (e.g., “Google+”) </td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Template Property",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/template-property"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Template Property</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> A string containing the name of the root template currently being rendered in the page context. <br>\n\n<b>Handlebars Expression:</b> `{{template}}`\n\n<b>Values:</b> Values will reflect each theme's specific directory structure. Possible values include:\n\n* `pages/home`\n* `pages/brand` (for brand pages)\n* `pages/brands`\n* `pages/cart`\n* `pages/category` (for category pages)\n* `pages/contact-us`\n* `pages/page` (for Web [static] pages)\n* `pages/product` (for product pages)\n* `pages/errors/404`\n* `pages/auth/login`\n* `pages/custom/product/<some_page_name>` (for a custom product page)\n(etc.)"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Top Sellers",
                                "config": {
                                  "sidebar": {
                                    "token": "global object"
                                  }
                                },
                                "route": {
                                  "path": "/top-sellers"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Top Sellers</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Object to display a sidebar of top-selling products<br>\n\n<b>Handlebars Expression:</b> `{{products.top_sellers}}`\n\n<b>Object Properties:</b> References the <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\"> product card model </a>\n\n<b>Usage Example:</b>\n\nTo access the global`{{products.top_sellers}}` object on your page, you must first use [front matter](/stencil-docs/front-matter/front-matter-attributes-reference) to declare the object at the top of your page template. For example, you would place this front-matter declaration at the top of your template file:\n\n```\n\nproducts:\n    top_sellers:\n\n```"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Common Objects",
                          "route": {
                            "path": "/common-objects"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Common Objects",
                                "route": {
                                  "path": "/common-onjects-overview"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Common Objects Overview</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#common_common-objects\">Common Objects Overview</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "Certain Stencil objects can be accessed through multiple other Stencil objects. For example, the image object is exposed through the Category, Product, Product Options, and other objects. Its structure is consistent for all objects/properties that access it. \n\nThis consistent behavior is true for each of the common objects documented in the following subsection: \n\n * [Catalog Price](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price)\n * [Price](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price)\n * [Price Range](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price-range)\n * [Stencil Image](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image)\n * [Common Product Card Model](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model)\n"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Catalog Price ",
                                "route": {
                                  "path": "/catalog-price"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Catalog Price</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "**Description:** Exposes catalog price- and currency-related properties in both raw numeric, and formatted string, formats."
                                    },
                                    {
                                      "type": "html",
                                      "data": "<b>Object Properties:</b>\n\n<br></br>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>with_tax</td>\n    <td>Price including tax</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>    \n    <td>Raw numeric value of the above price</td>  \n  </tr>\n  <tr>\n    <td>without_tax</td>\n    <td>Price excluding tax</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Raw numeric value of the above price</td>\n  </tr>\n  <tr>\n    <td>non_sale_price_with_tax</td>\n    <td>Non-sale price, including tax (can be displayed alongside standard with_tax during sale events)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Raw numeric value of the above price</td>\n  </tr>\n  <tr>\n    <td>non_sale_price_without_tax</td>\n    <td>Non-sale price, excluding tax (can be displayed alongside standardwithout_tax during sale events)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Raw numeric value of the above price</td>\n  </tr>\n  <tr>\n    <td>rrp_with_tax</td>\n    <td>List (i.e., manufacturer’s suggested retail) price, including tax</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Raw numeric value of the above price</td>\n  </tr>\n  <tr>\n    <td>rrp_without_tax</td>\n    <td>List (i.e., suggested retail) price, excluding tax</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Raw numeric value of the above price</td>\n  </tr>\n  <tr>\n    <td>saved</td>\n    <td>Amount customer saved, compared to list price</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Raw numeric value of the above price</td>\n  </tr>\n  <tr>\n    <td>tax_label</td>\n    <td>Tax label (VAT, sales tax, etc.) displayed to customers</td>\n  </tr>\n  <tr>\n    <td>price_range</td>\n    <td>See Price Range Object </td>\n  </tr>\n  <tr>\n    <td>map_price</td>\n    <td>Minimum advertised price</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> formatted</span></td>\n    <td>String representation of the above price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Raw numeric value of the above price</td>\n  </tr>\n</table>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "**Available through:** \n\nObject/Property: `{{product.price}}`"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Price ",
                                "route": {
                                  "path": "/price"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Price</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Exposes price- and currency-related properties in both raw numeric, and formatted string, formats. \n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>formatted</td>\n    <td>String representation of the price, including currency formatting</td>\n  </tr>\n  <tr>\n    <td>value</td>\n    <td>Raw numeric value of the price</td>\n  </tr>\n</table>\n\n<b>Available through:</b>\n\n<b>Common Object:</b> <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">Common Product Card Model</a>\n\n<b>Object:</b> `{{category.shop_by_price}}`"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Price Range ",
                                "route": {
                                  "path": "/price-range"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Price Range</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> For products with several variants with different prices, a price range is available which exposes the minimum and maximum variant price.\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td> <A NAME=\"with_tax\"></a> min</td>\n    <td>The minimum variant price for the product, in the form of a <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">Catalog Price Common Object</a></td>\n  </tr>\n  <tr>\n    <td> <A NAME=\"without_tax\"></a> max</td>\n    <td>The maximum variant price for the product, in the form of a <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">Catalog Price Common Object</a>\n</td>\n  </tr>\n</table>\n\n<b>Available through:</b>\n\n<b>Object/Property:</b><code>{{product.price}</code></a> "
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Stencil Image",
                                "route": {
                                  "path": "/stencil-image"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Stencil Image</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> Exposes a URL and an \"alt\" string for images used in the Stencil framework\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>data</td>\n    <td>Internal URL to product or category image</td>\n  </tr>\n  <tr>\n    <td>alt</td>\n    <td>Corresponding text to display for missing images, accessible screen readers, etc.</td>\n  </tr>\n</table>\n\n<b>Available through:</b> \n\n<b>Stencil Handlebars Helper:</b> `{{getImage}}`\n\n<b>Common Object:</b> <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">Common Product Card Model</a> \n\n<b>Object/Property:</b> `{{category.image}}`\n\n<b>Arrays/Elements:</b> `{{product.options.image}}`, `{{product.images}}`, `{{downloads.items.images}}`, `{{downloads.items.thumbnail}}`, `{{category.subcategories.image}}`, `{{order.items.image}}`, `{{customer.orders.image}}`, `{{brands.image}}`, `{{order.items.shipping_rows.image}}` \n\n<b> Usage Example: </b> \n\n`{{getImage image \"thumbnail\"}}`"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Common Product Card Model",
                                "route": {
                                  "path": "/common-product-card-model"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Common Product Card Model</h1>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "<b>Description:</b> A model for a product’s basic, primary properties. Typically used for list components that show multiple products, each in its own \"card\" or panel.\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>ID of the product </td>\n  </tr>\n  <tr>\n    <td>sku</td>\n    <td>The product's SKU (stock keeping unit)/product code, as a string; if the SKU field is not populated, then null\n </td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Name of the product</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL to product detail page for the product</td>\n  </tr>\n  <tr>\n    <td>availability</td>\n    <td>Typical shipping time for the product; used to populate \"Usually ships within…\" fields</td>\n  </tr>\n  <tr>\n    <td>rating</td>\n    <td>Product’s rating</td>\n  </tr>\n  <tr>\n    <td>ratings</td>\n    <td>Number of reviews on which the rating is based</td>\n  </tr>\n  <tr>\n\t\t<td><b>brand</b></td>\n    <td>Brand properties for the product (includes the name property</td>\n  </tr>\n  <tr>\n    <td><i>name</i></td>\n    <td>Product’s brand name</td>\n  </tr>\n  <tr>\n    <td>add_to_cart_url</td>\n    <td>URL that adds this product to customer’s cart</td>\n  </tr>\n  <tr>\n    <td>price</td>\n    <td class=\"\">References the <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price\">catalog price object</a>, to access price properties in both raw-numeric and formatted/string formats</td>\n  </tr>\n  <tr>\n    <td>summary</td>\n    <td>Summary description of the product</td>\n  </tr>\n  <tr>\n    <td>image</td>\n    <td>Default image for the product, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a> <!-- <a href=\"/docs/handlebars-image-helpers\">Stencil image format</a> --> </td>\n  </tr>\n  <tr>\n    <td>images</td>\n    <td>Array of a product's images, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a>; currently limited to 5 images </td>\n  </tr>\n  <tr>\n    <td>date_added</td>\n    <td>Date the product was added to this BigCommerce storefront</td>\n  </tr>\n  <tr>\n    <td>pre_order</td>\n    <td>Product’s availability for pre-order</td>\n  </tr>\n  <tr>\n    <td>release_date</td>\n    <td>Release date, if the product is set to pre-order status</td>\n  </tr>\n  <tr>\n    <td>show_cart_action</td>\n    <td>Boolean that indicates whether the product is available for purchase</td>\n  </tr>\n  <tr>\n    <td>has_options</td>\n    <td>Boolean that indicates whether customer is required to specify options when ordering the product</td>\n  </tr>\n  \n  <tr>\n    <td>stock_level</td>\n    <td>If inventory tracking is turned on: The number of items available for sale (0 or more). If inventory tracking is turned off: A \"null\" string. </td>\n  </tr>\n     \n  <tr>\n    <td>low_ stock_level</td>\n    <td>If inventory tracking is turned on: Sets a threshold low-stock level. You can use conditional logic to display a \"limited availability\" badge if the <code>stock_level</code> property's value falls below this threshold. If inventory tracking is turned off: A \"null\" string. </td>\n  </tr>\n   \n  <tr>\n    <td>qty_in_cart</td>\n    <td>Quantity of this item in the customer’s cart</td>\n  </tr>\n  <tr>\n    <td>out_of_stock_message</td>\n    <td>Text to display when the product is out of stock</td>\n  </tr>\n  \n  <tr>\n\t\t<td><b>custom_fields</b></td>\n    <td>Array of <a href=\"https://support.bigcommerce.com/articles/Public/Custom-Fields\">custom fields</a> for this product; custom fields can be used for purposes like: alternate brand name, merchandising title for the product, product type, \"gift idea\" indicator, etc.\n</td>\n  </tr>\n\n  <tr>\n\t\t<td><i>id</i></td>\n    <td>Unique (integer) identifier for this custom field</td>\n  </tr>\n\n  <tr>\n    <td><i>name</i></td>\n    <td>Name of this custom field</td>\n  </tr>\n\n  <tr>\n    <td><i>value</i></td>\n    <td>Value for this custom field</td>\n  </tr>\n</table>\n\n<b>Available through:</b>\n\n<b>Object:</b> <code>{{comparisons}} </code> \n\n<b>Arrays/Elements:</b> <code>{{product.related_products}}, {{product.similar_by_views}}, {{category.products}}, {{cart.suggested_products}}, {{customer.recently_viewed_products}} </code>\n\n<!-- :\"Common Product Card Model\" moved from \"Product Objects\" page -->"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "title": "Other Objects & Properties",
                          "route": {
                            "path": "/other-objects-and-properties"
                          },
                          "data": {
                            "children": [
                              {
                                "title": "Other Objects & Properties ",
                                "route": {
                                  "path": "/other-objects-and-properties-overview"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Other Objects and Properties Overview</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#other-objects_other-objects-and-props\">Other Objects and Properties Overview</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Other Objects & Properties Overview\n\nThis section covers the following objects. Note that in this section, each of the following reference pages contains multiple objects. For example, the Product Objects reference page contains all objects related to products not already covered. The objects in this section include:\n\n* Product Objects\n* Category Objects\n* Brand Objects\n* Cart Objects\n* Customer Objects\n* Blog Objects\n* Forms Objects\n"
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Product",
                                "route": {
                                  "path": "/product-objects"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Product Objects</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#product-objects_product\">Product</a></li>\n    <li><a href=\"#product-objects_product-reviews\">Product Reviews</a></li>\n    <li><a href=\"#product-objects_related-products\">Related Products</a></li>\n    <li><a href=\"#product-objects_similar-products\">Similar Products by Customer Views</a></li>\n    <li><a href=\"#product-objects_product-videos\">Product Videos</a></li>\n    <li><a href=\"#product-objects_compare\">Compare</a></li>\n    <li><a href=\"#product-objects_download\">Download Item</a></li>\n    <li><a href=\"#product-objects_product-other\">Product Other Details</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "callout",
                                      "data": {
                                        "body": "Also see Common Objects > Common Product Card Model, which documents the product object returned in collections.",
                                        "title": "Other Product Objects"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Product\n\n<b>Description:</b> Default property that provides detailed product data. Called on the default `<theme-name>/templates/pages/product.html`and `<theme-name>/templates/pages/amp/product.html` templates, and on several partials in the `<theme-name>/templates/components/` subdirectory: \n\n* `account/returns-list.html`, \n* `cart/item-options.html`, \n* `products/add-to-cart.html`, \n* `products/event-date.html`, \n* `products/modals/writeReview.html`, \n* `products/price.html`, \n* `products/product-view.html`,\n* `amp/products/product-options.html`, \n* `amp/products/product-view.html`, and \n* `amp/products/product-view-details.html`.\n\n<b>Handlebars Expression:</b> `{{product}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Unique ID for the product</td>\n  </tr>\n  <tr>\n    <td>sku</td>\n    <td>Default product variant when no options are selected</td>\n  </tr>\n   <tr>\n    <td>mpn</td>\n    <td>Manufacturer Part Number</td>\n  </tr>\n   <tr>\n    <td>gtin</td>\n    <td>Global Trade Item Number</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL to the product detail page</td>\n  </tr>\n  <tr>\n    <td>upc</td>\n    <td>Optional UPC code for the product</td>\n  </tr>\n  <tr>\n    <td>title</td>\n    <td>Displayed name of the product</td>\n  </tr>\n  <tr>\n    <td>description</td>\n    <td>(HTML) description of the product</td>\n  </tr>\n  <tr>\n    <td>detail_messages</td>\n    <td>Status messages for display at the top of the product page</td>\n  </tr>\n  <tr>\n    <td>min_purchase_quantity</td>\n    <td>Minimum quantity that can be purchased at once</td>\n  </tr>\n  <tr>\n    <td>max_purchase_quantity</td>\n    <td>Maximum quantity that can be purchased at once</td>\n  </tr>\n  <tr>\n    <td>can_purchase</td>\n    <td>Boolean that indicates whether the product is available for purchase</td>\n  </tr>\n  <tr>\n    <td>out_of_stock</td>\n    <td>Boolean that indicates whether the product is out of stock</td>\n  </tr>\n  <tr>\n    <td>out_of_stock_message</td>\n    <td>Merchant-defined label to display when a product is out of stock</td>\n  </tr>\n  <tr>\n    <td>cart_url</td>\n    <td>URL to the customer’s shopping cart</td>\n  </tr>\n  <tr>\n    <td>add_to_wishlist_url</td>\n    <td>URL to add the product to the customer’s wishlist</td>\n  </tr>\n  <tr>\n    <td>customizations</td>\n    <td>Product customizations (for example, a T-shirt size); these correspond to <a href=\"https://support.bigcommerce.com/articles/Public/What-are-configurable-fields-and-how-do-I-create-them\">configurable fields</a> and <a href=\"https://support.bigcommerce.com/s/article/Options-SKUs-Rules#text\">numeric-text</a> <a href=\"https://support.bigcommerce.com/articles/Public/Adding-Product-Options\">product options</a> in the BigCommerce control panel</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">id</span></td>\n    <td>Customization ID</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">display_name</span></td>\n    <td>Label for this customization, as displayed to customers</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">type</span></td>\n    <td>Customization type [<code>text</code>|<code>textarea</code>|<code>NumbersOnlyText</code>|<code>checkbox</code>|<code>select</code>|<code>file</code>]</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">required</span></td>\n    <td>Boolean value that indicates whether customer must specify this customization in order to buy the product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">condition</span></td>\n    <td>Boolean value indicating whether to display this product's condition (new, used, or refurbished)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">prefill</span></td>\n    <td>Optional string value to prefill this field</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">&lt;values&gt;</span></td>\n    <td>For <code>select</code> type, array of strings listing the available options</td>\n  </tr>\n  <tr>\n    <td>\n      <span class=\"indent1\">&lt;file_types&gt;</span></td>\n    <td>For <code>file</code> type, string representing the types of allowed files</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">&lt;file_size&gt;</span></td>\n    <td>For <code>file</code> type, string representing the maximum file size allowed</td>\n  </tr>\n\n<!-- Inserted new properties here for NumbersOnlyText type, MERC-159: -->\n  <tr>\n    <td><span class=\"indent1\">integer_only</span></td>\n    <td>For <code>NumbersOnlyText</code> type, boolean value indicating whether to restrict customer's entries to whole numbers only</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">default</span></td>\n    <td>For <code>NumbersOnlyText</code> type, optional string representing a default number that customers can see and overwrite</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">limit_input</span></td>\n    <td>For <span class=\"inline-code\">NumbersOnlyText</span> type, boolean indicating whether to impose any limits on the numeric values that customers can enter as strings</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">limit_input_option</span></td>\n    <td>For <code>NumbersOnlyText</code> type and <code>limit_input</code> = <code>true</code>, the type of limit: <code>lowest</code> or <code>highest</code></td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">lowest</span></td>\n    <td>For <code>NumbersOnlyText</code> type and <code>limit_input</code> = <code>true</code>,  minimum allowable value; a value of <code>0</code> imposes no limit</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">highest</span></td>\n    <td>For <code>NumbersOnlyText</code> type and <code>limit_input</code> = <code>true</code>,  maximum allowable value; a value of <code>0</code> imposes no limit</td>\n  </tr>\n  <tr>\n    <td>options</td>\n    <td>Options for color and pattern swatches displayed for this product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">id</span></td>\n    <td>Product ID</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">type</span></td>\n    <td>String indicating size, color, swatch, etc.</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">display_name</span></td>\n    <td>Option Name displayed in control panel for this option</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">required</span></td>\n    <td>Boolean value that indicates whether customer must specify this option in order to buy the product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">condition</span></td>\n    <td>Boolean value indicating whether to display this product's condition (new, used, or refurbished)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">values</span></td>\n    <td>Array of data (color) or image (pattern) values</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">label</span></td>\n    <td>Internal label for this value (not normally displayed to shoppers)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">id</span></td>\n    <td>ID for this value, unique within this values array</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">selected</span></td>\n    <td>Boolean indicating whether this value is preselected as the option's default value, upon page load</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">data</span></td>\n    <td>Each <code>values</code> member can contain either a <code>data</code> or an <code>image</code> member; <code>data</code> denotes a color</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent3\">&lt;color value&gt;</span></td>\n    <td>Hex code for this color</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">image</span></td>\n    <td>\n      Each <code>values</code> member can contain either a <code>data</code> or an <code>image</code> member; <code>image</code> denotes a pattern, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image object format</a>. (Note: This <code>image</code> value replaces the <code>{{pattern}}</code> property, which was limited to 18 x 18 pixels, and will be deprecated.)</td>\n  </tr>\n  <tr>\n    <td>price</td>\n    <td>References the <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price\">catalog price object</a>, to access the product’s price</td>\n  </tr>\n  <tr>\n    <td>weight</td>\n    <td>Weight of the default variant</td>\n  </tr>\n  <tr>\n    <td>height</td>\n    <td>Height of the default variant</td>\n  </tr>\n  <tr>\n    <td>width</td>\n    <td>Width of the default variant</td>\n  </tr>\n  <tr>\n    <td>depth</td>\n    <td>Depth of the default variant</td>\n  </tr>\n  <tr>\n    <td>rating</td>\n    <td>Rating for the product</td>\n  </tr>\n  <tr>\n    <td>num_reviews</td>\n    <td>Number of reviews the product has</td>\n  </tr>\n  <tr>\n    <td>bulk_discount_rates </td>\n    <td>List of discount rates for the current product</td>\n  </tr>\n  <tr>\n    <td>condition</td>\n    <td>Condition of the product</td>\n  </tr>\n  <tr>\n    <td>stock_level</td>\n    <td>Current stock level of the product; will be null if storefront stock display is disabled by the merchant, or if the product lacks inventory tracking</td>\n  </tr>\n  <tr>\n    <td>shipping</td>\n    <td>Shipping properties for the product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> fixed</span></td>\n    <td>Boolean that indicates whether the product’s shipping price is fixed</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> price</span></td>\n    <td><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the shipping cost for this product (if shipping cost is fixed)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> calculated</span></td>\n    <td>Boolean that indicates whether the product’s shipping price is calculated at checkout</td>\n  </tr>\n  <tr>\n    <td>stock_label</td>\n    <td>Shows whether the product stock level is for on-hand merchandise or pre-orders.</td>\n  </tr>\n  <tr>\n    <td>availability</td>\n    <td>Optional availability message set by the merchant</td>\n  </tr>\n  <tr>\n    <td>pre_order</td>\n    <td>Availability of the product for pre-order</td>\n  </tr>\n  <tr>\n    <td>release_date</td>\n    <td>Release date, if the product is set to pre-order status</td>\n  </tr>\n  <tr>\n    <td>error_message</td>\n    <td>Potential error on the page (e.g.: out of stock, form validations)</td>\n  </tr>\n  <tr>\n    <td>gift_wrapping</td>\n    <td>Whether or not gift wrapping is enabled</td>\n  </tr>\n  <tr>\n    <td>brand</td>\n    <td>Brand of the product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Displayed name of the brand</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> url</span></td>\n    <td>URL to the brand page</td>\n  </tr>\n  <tr>\n    <td>main_image</td>\n    <td>Primary image to display when the product details page loads</td>\n  </tr>\n  <tr>\n    <td>images</td>\n    <td>List of all images for this product, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a> (as configured in config.json; used with the <code>getImage</code> Handlebars helper)</td>\n  </tr>\n  <tr>\n    <td>pinterest_js</td>\n    <td>Property to display Pinterest button</td>\n  </tr>\n  <tr>\n    <td>facebook_like</td>\n    <td>Property to display Facebook Like button</td>\n  </tr>\n  <tr>\n    <td>warranty</td>\n    <td>Optional warranty text set by the merchant</td>\n  </tr>\n  <tr>\n    <td>meta_keywords</td>\n    <td>Optional search keywords that merchants may enter in the control panel’s \"Add a Product\" or “Edit a Product” page, to characterize the product in meta tags and storefront searches </td>\n  </tr>\n\n  <tr>\n    <td>tags</td>\n    <td>Keywords by which this product can also be identified</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Name of the tag</td>\n  </tr>\n\n  <tr>\n    <td>custom_fields </td>\n    <td>Extra details to display about the product </td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Custom field name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Custom field value</td>\n  </tr>\n  <tr>\n    <td>event_date</td>\n    <td>Property to handle a date-based product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Name of the event</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> date_start</span></td>\n    <td>Event’s start date range</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> date_end</span></td>\n    <td>Event’s end date range</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> earliest_year</span></td>\n    <td>Event’s starting year</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> latest_year</span></td>\n    <td>Event’s ending year</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">type</span></td>\n    <td>Type of event</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "product-objects_product"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Product Reviews\n\n<b>Description:</b> A list of reviews related to this product. When filtering/limiting, reviews' default sorting is by review id, from lowest to highest. (Called on the default <code>&lt;theme-name&gt;/templates/pages/product.html</code><code>&lt;theme-name&gt;/templates/components/</code> subdirectory: \n* <code>products/product-view.html</code>,\n* <code>products/modals/writeReview.html</code>, and \n* <code>amp/products/product-view.html</code>.)\n\n<b>Handlebars Expression:</b> <code>{{product.reviews}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>start</td>\n    <td>The review that starts the current page of reviews</td>\n  </tr>\n  <tr>\n    <td>total</td>\n    <td>Total number of reviews</td>\n  </tr>\n  <tr>\n    <td>end</td>\n    <td>Last review on this page</td>\n  </tr>\n  <tr>\n    <td>show_review_email</td>\n    <td>Boolean that indicates whether the Write Review form should have an input field for the reviewer’s e-mail address</td>\n  </tr>\n  <tr>\n    <td>captcha</td>\n    <td>reCAPTCHA public key (for validating human versus bot visitors)</td>\n  </tr>\n  <tr>\n    <td>pagination</td>\n    <td>References the pagination model</td>\n  </tr>\n  <tr>\n    <td>list </td>\n    <td>List of reviews</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> rating</span></td>\n    <td>Product’s rating (1–5 stars)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> title</span></td>\n    <td>Title of the review</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> date</span></td>\n    <td>Date the product was reviewed</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> text</span></td>\n    <td>Text content of the product review</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Name of the person providing the review</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "product-objects_product-reviews"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Related Products\n\n<b>Description:</b> A list of products related to this product. (Called on the default `<theme-name>/templates/components/products/tabs.html` partial.)\n\n<b>Handlebars Expression:</b> `{{product.related_products}}`\n\n<b>Object Properties: </b>References the <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">product card model</a>.\n",
                                      "header": {
                                        "anchor": "product-objects_related-products"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Similar Products by Customer Views\n\n**Description:** A list of products similar to a given product, based on customer’s product browsing history. (Called on the default <code>&lt;theme-name&gt;/templates/components/products/tabs.html</code> partial.)\n\n<b>Handlebars Expression:</b> <code>{{product.similar_by_views}}</code>\n\n<b>Object Properties:</b> References the <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">product card model</a>.\n",
                                      "header": {
                                        "anchor": "product-objects_similar-products"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Product Videos\n\n<b>Description:</b> A list of videos for a given product. (Called on the default <code>&lt;theme-name&gt;/templates/pages/product.html</code> template, and on the <code>&lt;theme-name&gt;/templates/components/amp/products/product-view.html</code> partial.)\n\n<b>Handlebars Expression:</b> <code>{{product.videos}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>ID of the product video</td>\n  </tr>\n  <tr>\n    <td>title_short</td>\n    <td>Short title of the product video</td>\n  </tr>\n  <tr>\n    <td>title_long</td>\n    <td>Long title of the product video</td>\n  </tr>\n  <tr>\n    <td>description_long</td>\n    <td>Long description of the product video</td>\n  </tr>\n  <tr>\n    <td>description_short</td>\n    <td>Short description of the product video</td>\n  </tr>\n  <tr>\n    <td>length</td>\n    <td>Duration of the product video</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "product-objects_product-videos"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Compare\n\n**Description:** Property to display an array of products on product comparison pages. (Called on the default <code>&lt;theme-name&gt;/templates/pages/compare.html</code> template.)\n\n<b>Handlebars Expression:</b> <code>{{comparisons}}</code>\n\n<b>Object Properties:</b> References the <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model\">product card model</a>, plus the additional fields listed here:<br>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>availability</td>\n    <td>How long this product usually takes to ship</td>\n  </tr>\n  <tr>\n    <td>brand</td>\n    <td>Object containing brand data for this product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> url</span></td>\n    <td>Brand URL for this product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Brand name for this product</td>\n  </tr>\n  <tr>\n    <td>remove_url</td>\n    <td>URL to remove this product/column from the comparison</td>\n  </tr>\n  <tr>\n    <td>custom_fields</td>\n    <td>Array of additional product details – size, color, book's ISBN, DVD's release date, etc. – as name/value pairs</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Displayed name for this custom field</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td>Value for this custom field’s entry</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "product-objects_compare"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Download Item\n\n<b>Description:</b> Property for digital (non-physical) products. (Called on the default <code>&lt;theme-name&gt;/templates/pages/account/download-item.html</code>template.)\n\n<b>Handlebars Expression:</b> <code>{{downloads}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>order_id</td>\n    <td>ID for this order</td>\n  </tr>\n  <tr>\n    <td>product_name</td>\n    <td>Name of the digital product</td>\n  </tr>\n  <tr>\n    <td>items</td>\n    <td>Array of product components</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">name</span></td>\n    <td>Name of this digital item</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">expired</span></td>\n    <td>Boolean indicating whether customer’s access/subscription to this item has expired</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">days_remaining</span></td>\n    <td>Number of days left in customer’s access/subscription to this item</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">downloads_remaining</span></td>\n    <td>Number of times customer may download this item</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">size</span></td>\n    <td>File size of this digital item (string, responsively formatted as: 240 KB, 1.1 MB, etc.)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">description</span></td>\n    <td>Description (if entered by merchant) for this item</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">id</span></td>\n    <td>ID for this item</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">images</span></td>\n    <td>List of all images for the product associated with this list of downloadable items (in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a>)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">thumbnail</span></td>\n    <td>\"Primary\" image for the product associated with this list of downloadable items (in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a>)</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "product-objects_download"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Product Other Details\n\n<b>Description:</b> Property to display custom product details (such as a book's ISBN code, a DVD's release date, etc.). (Called on the default <code>&lt;theme-name&gt;/templates/components/products/product-view.html</code> and <code>&lt;theme-name&gt;/templates/components/amp/products/product-view-details.html</code> partials.)\n\n**Handlebars Expression:**`{{product.custom_fields}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Displayed name for this category of information</td>\n  </tr>\n  <tr>\n    <td>value</td>\n    <td>Displayed value for this product’s entry</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "product-objects_product-other"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Category",
                                "route": {
                                  "path": "/category-objects"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Category Objects</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#category_category\">Category</a></li>\n    <li><a href=\"#category_category-products\">Category Products</a></li>\n    <li><a href=\"#category_category-shop\">Category Shop by Price</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Category\n\n**Description:**  The category object for the page calling the object. When retrieving a collection of categories, default sorting is by category `id`, from lowest to highest. (Called on the default `<theme-name>/templates/pages/category.html` template, and on several partials in the `<theme-name&gt;/templates/components/</code> subdirectory: <code>category/shop-by-price.html`,`category/sidebar.html`, and `amp/category/subcategories.html`)\n\n<b>Handlebars Expression:</b> `{{category}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Unique ID for the category </td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Merchant-defined category name</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL for the category-specific page</td>\n  </tr>\n  <tr>\n    <td>description</td>\n    <td>Merchant-defined description of the category</td>\n  </tr>\n  <tr>\n    <td>image</td>\n    <td>Image representing this category, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a></td>\n  </tr>\n  <tr>\n    <td>subcategories <!-- Possible change to `children`--></td>\n    <td>List of any child categories</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">id</span></td>\n    <td>Unique ID for the subcategory </td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">name</span></td>\n    <td>Name of the subcategory</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">url</span></td>\n    <td>URL to the subcategory</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">description</span></td>\n    <td>Merchant-defined description of the subcategory </td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">image</span></td>\n    <td>Image representing this subcategory, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a></td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">product_count</span></td>\n    <td>Number of products in the subcategory. (Counts at the current level only &ndash; not recursive to deeper levels.)</td>\n  </tr>\n  <tr>\n  \t<td>detail_messages</td>\n    <td>Message displayed when a product is out of stock, and inventory settings are configured to redirect to a category: \"Sorry, the product you tried to view is currently out of stock, here are some similar products we have available.\" (This phrasing is set by the BigCommerce App.)</td>\n  </tr>\n  <tr>\n    <td>show_compare</td>\n    <td>Boolean that defines whether to show controls for product comparison</td>\n  </tr>\n  <tr>\n    <td>show_add_to_cart</td>\n    <td>Boolean that defines whether to show an Add to Cart button for this category</td>\n  </tr>\n  <tr>\n    <td>total_products</td>\n    <td>Count of the number of products in the category</td>\n  </tr>\n  <tr>\n    <td>faceted_search_enabled</td>\n    <td>Boolean that defines whether product-filtering search is enabled for the store</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">facets</span></td>\n    <td>Available search facets</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">pagination</span></td>\n    <td>References the pagination model</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">selected</span></td>\n    <td>Selected search facets</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "#category_category"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Category Products\n\n**Description:** A list of products associated with this category. (Called on the default `<theme-name>/templates/pages/category.html` template, and on the `<theme-name>/templates/components/category/product-listing.html` partial.)\n\n**Handlebars Expression:** `{{category.products}}`\n\n**Object Properties:** References the  [product card model](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model).",
                                      "header": {
                                        "anchor": "category_category-products"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Category Shop by Price \n\n<b>Description:</b> A list of price ranges, to enable customers to set price limits within a product category. Called on the default<code>&lt;theme-name&gt;/templates/components/category/shop-by-price.html</code> and <code>&lt;theme-name&gt;/templates/components/category/sidebar.html</code> partials.)\n\n<b>Handlebars Expression:</b> `{{category.shop_by_price}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL of price-filtered product results for this category</td>\n  </tr>\n  <tr>\n    <td>low</td>\n    <td><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the minimum price boundary </td>\n  </tr>\n  <tr>\n    <td>high</td>\n    <td><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the maximum price boundary</td>\n  </tr>\n  <tr>\n    <td>selected</td>\n    <td><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the currently selected price range</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "category_category-shop"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Brand",
                                "route": {
                                  "path": "/brand-objects"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Brand Objects</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#brand_brand\">Brand</a></li>\n\t\t<li><a href=\"#brand_brand-list\">Brand List</a></li>\n    <li><a href=\"#brand_shop-by-brand\">Category Shop by Price</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Brand\n\n**Description:** The brand object for the page calling the object. (Called on the default `<theme-name>/templates/pages/brand.html` template.)\n\n**Handlebars Expression:** `{{brand}}`\n\n<b>Object Properties:</b>\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>show_compare</td>\n    <td>Boolean corresponding to merchant’s control panel selection whether or not to enable product comparisons</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL of the brand page</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Name of the brand </td>\n  </tr>\n  <tr>\n    <td>pagination</td>\n    <td>References the pagination model</td>\n  </tr>\n  <tr>\n    <td>image</td>\n    <td>Image used to visually represent the brand (i.e., logo)</td>\n  </tr>\n  <tr>\n    <td>faceted_search_enabled</td>\n    <td>Boolean that defines whether product-filtering search is enabled for the store</td>\n  </tr>\n  <tr>\n    <td>facets</td>\n    <td>A list of all possible search filters for this brand</td>\n  </tr>\n  <tr>\n    <td>products</td>\n    <td>An array of product card models</a></td>\n  </tr>\n  <tr>\n    <td>selected</td>\n    <td>An array of selected facets</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "brand_brand"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Brand List\n\n<b>Description:</b> A list of brands with their basic data. Default sorting is by brand id, from lowest to highest. (Called on the default `<theme-name>/templates/pages/brands.html` template.)\n\n<b>Handlebars Expression:</b> `{{brands}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL to this brand’s products listing</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Name of the brand</td>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Internal identifier for the brand </td>\n  </tr>\n  <tr>\n    <td>image</td>\n    <td>Stencil image object (if any) for the brand</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "brand_brand-list"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Shop by Brand\n\n**Description:** Objects to enable customers to shop by brand. Returns top 10 brands, by product count. (Called on the default `<theme-name>/templates/components/brand/sidebar.html` and `<theme-name>/templates/components/common/footer.html` partials.)\n\n<b>Handlebars Expression:</b> `{{shop_by_brand}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td class=\"\">links</td>\n    <td class=\"\">Array of links to individual brands</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">id</span></td>\n    <td class=\"\">ID for this brand</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">url</span></td>\n    <td class=\"\">URL for this brand</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">name</span></td>\n    <td class=\"\">Name of this brand</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">count</span></td>\n    <td class=\"\">Number of products matching this brand</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "brand_shop-by-brand"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Cart",
                                "route": {
                                  "path": "/cart-objects"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Cart Objects</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#cart_cart\">Cart</a></li>\n    <li><a href=\"#cart_cart-items\">Cart Items</a></li>\n    <li><a href=\"#cart_strikeout\">Strikeout Pricing Example</a></li>\n    <li><a href=\"#cart_cart-status\">Cart Status Message</a></li>\n    <li><a href=\"#cart_suggested\">Suggested Products</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Cart\n\n<b>Description:</b> The cart-specific properties for the current session\n\n**Handlebars Expression:** `{{cart}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>quantity</td>\n    <td>Total number of items in the cart</td>\n  </tr>\n  <tr>\n    <td class=\"\">additional_checkout_buttons</td>\n    <td class=\"\">Generates checkout buttons for third-party payments (PayPal, Google Checkout, etc.)</td>\n  </tr>\n  <tr>\n    <td>show_primary_checkout_button</td>\n    <td>Boolean that determines whether to show a checkout button</td>\n  </tr>\n  <tr>\n    <td>show_multiple_address_shipping</td>\n    <td>Boolean: If >1 physical items are in the cart, and checkout button is displayed: whether to also display the \"Ship to multiple addresses\"/\"Multiple Shipping Addresses” user option</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">discount</td>\n    <td class=\"\">Discount being applied to the cart in the current session</td>\n  </tr>\n  <tr>\n    <td>gift_wrapping_cost</td>\n    <td>Price object that defines the cost associated with adding gift wrapping to the items in the cart</td>\n  </tr>\n  <tr>\n    <td>sub_total</td>\n\t\t<td>Price object</a> that defines the total cost of all the items in the cart. Might or might not include tax, based on the tax display settings the merchant has configured. Excludes shipping, discounts, and gift wrapping.</td>\n  </tr>\n  <tr>\n    <td>grand_total</td>\n    <td>Price object that defines the total cost of all the items in the cart. Incorporates estimated shipping, discounts, taxes, and gift wrapping.</td>\n  </tr>\n  <tr>\n    <td class=\"\">shipping_handling</td>\n    <td class=\"\">Current configuration of the shipping estimator for this session’s current cart; will be null/undefined if the cart contains no physical products</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">handling_cost</span></td>\n    <td class=\"\">Price object that defines the handling cost for the carted items (if any)</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">show_estimator</span></td>\n    <td class=\"\">Boolean indicating whether the merchant wants to show the shipping estimator to customers</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent2\"> countries</span></td>\n    <td class=\"\">Countries available to ship to</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent2\"> states</span></td>\n    <td class=\"\">List of states/provinces/regions for the country</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent2\"> selected_state</span></td>\n    <td class=\"\">The state/province/region that the customer selected for the shipping estimate</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"><span class=\"indent2\"> selected_zip</span></td>\n    <td class=\"\">The ZIP/postal code that the customer selected for the shipping estimate</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"><span class=\"indent2\"> selected_city</span></td>\n    <td class=\"\">The city/town that the customer selected for the shipping estimate</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\"><span class=\"indent2\"> shipping_cost</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines shipping cost</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent2\"> provider</span></td>\n    <td class=\"\">Shipping provider associated with this shipping estimate</td>\n  </tr>\n  <tr>\n    <td class=\"\">coupons</td>\n    <td class=\"\">List of coupons applied to the cart; default sorting is by coupon <span class=\"inline-code\">id</span>, from lowest to highest</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> id</span></td>\n    <td class=\"\">Unique ID of the coupon</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> code</span></td>\n    <td class=\"\">Code associated with the coupon</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> discount</span></td>\n    <td class=\"\">Discount associated with the coupon</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> type</span></td>\n    <td class=\"\">Coupon type</td>\n  </tr>\n  <tr>\n    <td class=\"\">gift_certificates</td>\n    <td class=\"\">List of gift certificates applied to the cart</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> id</span></td>\n    <td class=\"\">Unique system ID for the gift certificate</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> code</span></td>\n    <td class=\"\">Customer code used to identify the gift certificate</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> remaining</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the amount remaining on the gift certificate</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> used</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the amount already used on the gift certificate</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> remove_url</span></td>\n    <td class=\"\">URL to remove gift certificate from the cart</td>\n  </tr>\n  <tr>\n    <td class=\"\">taxes</td>\n    <td class=\"\">List of all applicable taxes for the cart</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the applied tax</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> cost</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the cost of the applied tax</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> included</span></td>\n    <td class=\"\">Boolean that indicates whether taxes are included in the total price for the cart’s contents</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "cart_cart"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Cart Items\n\n<b>Description:</b> A list of items added to the cart in the current session\n\n<b>Handlebars Expression:</b> `{{cart.items}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td class=\"\">id</td>\n    <td class=\"\">Unique system ID for the item in the cart</td>\n  </tr>\n  <tr>\n    <td class=\"\">quantity</td>\n    <td class=\"\">Quantity of the item being ordered</td>\n  </tr>\n  <tr>\n    <td class=\"\">type</td>\n    <td class=\"\">String indicating the type of purchase: either \"Item\" or \"GiftCertificate\"</td>\n  </tr>\n  <tr>\n    <td class=\"\">can_modify</td>\n    <td class=\"\">Boolean indicating whether the customer may modify the quantity of, or remove, this cart item</td>\n  </tr>\n  <tr>\n    <td class=\"\">remove_url</td>\n    <td class=\"\">URL to remove this item from the cart</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">sku</td>\n    <td class=\"\">SKU for this cart item</td>\n  </tr>\n  \n  <tr>\n    <td class=\"\">If type == Item</td>\n    <td class=\"\">If the item in the cart is a purchasable product, these properties are available:</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">product_id</span></td>\n    <td class=\"\">Product ID for the cart item</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">name</span></td>\n    <td class=\"\">Product name of the cart item</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">url</span></td>\n    <td class=\"\">Link to the product page for the cart item</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">availability</span></td>\n    <td class=\"\">An optional availability message set by the merchant</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">image</span></td>\n    <td class=\"\">Product image for the cart item</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">event_date</span></td>\n    <td class=\"\">Chosen event date for event-based products</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">show_wrapping_options</span></td>\n    <td class=\"\">Boolean indicating whether the wrapping options are shown</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">rrp</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the cart item's list price (MSRP); can be used to display struck-out list prices, as explained <a href=\"#strikeout\">here</a></td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">price</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the unit price of the cart item, after discounts; to see how this and the next three price properties relate to each other, please see <a href=\"/docs/cart-price-properties\">Cart Price Properties</a></td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">price_discounted</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the unit price, after all cart discounts and promotions</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">total</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the total price (price * quantity) of the cart item</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">total_discounted</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the total price (price * quantity), after all cart discounts and promotions</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">brand</span></td>\n    <td class=\"\">Brand properties</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent2\"> name</span></td>\n    <td class=\"\">The product’s brand name</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">release_date</span></td>\n    <td class=\"\">If a pre-order product was added to the cart,  displays a message about when the item is expected to ship to the customer</td>\n  </tr>\n  <tr>\n    <td class=\"\">gift_wrapping</td>\n    <td class=\"\">Gift-wrapping options</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the gift-wrapping option</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> price</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the price of the gift-wrapping option</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> message</span></td>\n    <td class=\"\">Customer-defined message for the gift wrapping </td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> remove_url</span></td>\n    <td class=\"\">URL to remove the gift-wrapping option</td>\n  </tr>\n  <tr>\n    <td class=\"\">options</td>\n    <td class=\"\">Options chosen when product was added to cart</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the option</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> value</span></td>\n    <td class=\"\">Value of the option</td>\n  </tr>\n  \n  <tr>\n\t\t<td>bulk_pricing</td>\n    <td>Properties for applying bulk-pricing discounts to cart items</td>\n  </tr>\n\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> base_price </span></td>\n    <td class=\"\">The lowest calculated price on an item. For example, 2 items are $99, 3 items are $98 and 4 items are $97. There are 3 items in the cart, the base price will be $98. </td>\n  </tr>\n\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> discount_amount </span></td>\n    <td class=\"\">Bulk-discount amount per item, if applicable; otherwise, null</td>\n  </tr>  \n\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> discount_percentage </span></td>\n    <td class=\"\">Bulk-discount percentage per item, if applicable; otherwise, null</td>\n  </tr>  \n   \n  <tr>\n    <td class=\"\">configurable_fields</td>\n    <td class=\"\">Custom product fields set when product was added to cart</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Name of the custom option</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> value</span></td>\n    <td class=\"\">Value of the custom option</td>\n  </tr>\n  <tr>\n    <td class=\"\">If type == GiftCertificate</td>\n    <td class=\"\">If the item in the cart is a gift certificate, these properties are available:</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> name</span></td>\n    <td class=\"\">Sender’s name </td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> edit_url</span></td>\n    <td class=\"\">URL to edit the gift certificate</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> recipient</span></td>\n    <td class=\"\">Recipient’s name</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> price</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the gift certificate’s basic price</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> total</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the gift certificate’s total cost, with applicable taxes included</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "cart_cart-items"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Strikeout Pricing Example\n\nAs a theme developer, you can use the `{{cart.items.rrp}}` property to display strike-out pricing in the Cart context. Here is the general approach:\n\nIn your `<theme-name>/templates/components/cart/content.html` file, as you iterate over the list of items in the cart, you would check each item's `type`. (No `rrp` property is available where the `type` is `GiftCertificate`.)\n\nIf the type is `Item`, then you would check the {{cart.items.rrp}} value. If the value is _not_ `null`, then you would know that you can display a strike-out price for the item. Below is a sample code skeleton:\n\n```\n{{#each cart.items}}\n   ...\n  {{#if type '==' 'GiftCertificate'}}\n      {{#if rrp}}\n          ... /* your code to display strike-thru pricing */\n      {{else}}\n          ... /* your code to display normal pricing */\n      {{/if}}\n  {{/if}}\n ```\n\nFor further details about catalog price properties, please see [Catalog Price Object: How Properties Interact](/stencil-docs/conditional-logic-examples/catalog-price-object). For usage examples of the `{{cart.items}}` `price` and `total` properties, please see [Cart Price Properties](/stencil-docs/conditional-logic-examples/cart-price-relationships).",
                                      "header": {
                                        "anchor": "cart_strikeout"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Cart Status Message\n\n<b>Description:</b> A list of relevant messages for the cart in the current session\n\n<b>Handlebars Expression:</b> `{{cart.status_messages}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>message</td>\n    <td>System-generated messages for the cart</td>\n  </tr>\n  <tr>\n    <td>type</td>\n    <td>Type of message: error, info, or success</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "cart_cart-status"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Suggested Products\n\n<b>Description:</b> A list of suggested products, based on cart contents; displays only if enabled by the `cart.suggestions` front-matter attribute, and only immediately after a product is added to the cart\n\n<b>Handlebars Expression:</b> `{{cart.suggested_products}}`\n\n<b>Object Properties:</b> References standard product card model.",
                                      "header": {
                                        "anchor": "cart_suggested"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Customer",
                                "route": {
                                  "path": "/customer-objects"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Customer Objects</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#customer_customer\">Customer</a></li>\n    <li><a href=\"#customer_order-details\">Order Details</a></li>\n    <li><a href=\"#customer_recent-items\">Recent Items</a></li>\n    <li><a href=\"#customer_customer-wishlists\">Customer Wishlists</a></li>\n    <li><a href=\"#customer_wishlist-details\">Wishlist Details</a></li>\n    <li><a href=\"#customer_account-order-shipments\">Account Order Shipments</a></li>\n    <li><a href=\"#customer_account-orders\">Account Orders</a></li>\n    <li><a href=\"#customer_account-returns\">Account Returns</a></li>\n    <li><a href=\"#customer_account-new-returns\">Account New Return</a></li>\n    <li><a href=\"#customer_create-account\">Create Account</a></li>\n    <li><a href=\"#customer_shipping-addresses\">Shipping Addresses</a></li>\n    <li><a href=\"#customer_payment-methods\">Payment Methods</a></li>\n    <li><a href=\"#customer_edit-payment-methods\">Edit Payment Methods</a></li>\n    <li><a href=\"#customer_add-payment-methods\">Add Payment Methods</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Customer\n\n**Description:** Customer-specific properties for a storefront customer object. When filtering/limiting, customers' default sorting is by customer id, from lowest to highest. (Called on several partials in the `<theme-name>/templates/components/` subdirectory: \n`page/contact-us-form.html`,\n`common/subscription-form.html`,\n`account/address-list.html`,\n`account/messages-form.html`, and\n`account/wishlist-list.html`.)\n\n**Handlebars Expression:** `{{customer}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Customer’s ID</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Customer’s name</td>\n  </tr>\n  <tr>\n    <td>email</td>\n    <td>Customer’s email address</td>\n  </tr>\n  <tr>\n    <td>phone</td>\n    <td>Customer’s phone number</td>\n  </tr>\n\n  <tr>\n    <td>store_credit</td>\n    <td>Customer’s store credit</td>\n  </tr>\n\n  <tr>\n    <td>customer_group_id</td>\n    <td>ID of this customer's group</td>\n  </tr>\n\n  <tr>\n    <td>customer_group_name</td>\n    <td>Name of this customer's group</td>\n  </tr>\n\n  <tr>\n    <td>num_new_messages</td>\n    <td>Number of unread messages for this customer</td>\n  </tr>\n  <tr>\n    <td>num_wishlists</td>\n    <td>Number of wishlists for this customer</td>\n  </tr>\n  <tr>\n    <td>shipping_address</td>\n    <td>Shipping address used for the order</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> id</span></td>\n    <td>Unique, system-generated ID</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> first_name</span></td>\n    <td>Customer’s shipping (first) name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> last_name</span></td>\n    <td>Customer’s shipping (last) name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> company</span></td>\n    <td>Customer's shipping company name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> address1</span></td>\n    <td>Customer's shipping address, first line</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> address2</span></td>\n    <td>Customer's shipping address, second line</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> city</span></td>\n    <td>Customer's shipping city</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> state</span></td>\n    <td>Customer's shipping state</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> zip</span></td>\n    <td>Customer's shipping zip</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> country</span></td>\n    <td>Customer's shipping country</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> phone</span></td>\n    <td>Customer's shipping phone number</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> state_id</span></td>\n    <td>ID for customer's shipping state/province/region\n</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> country_id</span></td>\n    <td>ID for customer's shipping country</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> destination</span></td>\n    <td>Type of delivery destination: residential or business/commercial</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> last_used</span></td>\n    <td>Timestamp when this address was last used as a shipping address</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> form_session_id</span></td>\n    <td>Used for custom shipping forms</td>\n  </tr>\n\t  <tr>\n    <td><span class=\"indent1\">payment_methods</span></td>\n    <td>Used on the <a href=\"https://github.com/bigcommerce/cornerstone/blob/master/templates/components/account/payment-methods-list.html\">payment methods page</a> to render list of customer's saved payment methods</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_customer"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Order Details\n\n**Description:** The order properties for a specific order, usable on the order details page. (Called on the default `<theme-name>/templates/pages/account/orders/details.html` and `<theme-name&gt;/templates/pages/account/orders/invoice.html` templates, and on the `<theme-name&gt;/templates/components/account/order-contents.html` partial.)\n\n**Handlebars Expression:** `{{order}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>date</td>\n    <td>Date of the order</td>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Unique, system-generated ID</td>\n  </tr>\n  <tr>\n    <td>total</td>\n    <td>Price object that defines the order’s total value</td>\n  </tr>\n  <tr>\n    <td>status</td>\n    <td>Order status code</td>\n  </tr>\n  <tr>\n    <td>status_text</td>\n    <td>Status text associated with the status code for the order</td>\n  </tr>\n  <tr>\n    <td>returns_enabled</td>\n    <td>Boolean that indicates whether merchant allows products from the order to be returned</td>\n  </tr>\n  <tr>\n    <td>reorder_url</td>\n    <td>URL to place reorders for items in this order</td>\n  </tr>\n  <tr>\n    <td>invoice_url</td>\n    <td>URL to display an invoice for this order</td>\n  </tr>\n  <tr>\n    <td>is_complete</td>\n    <td>Boolean indicating that the order has been completed</td>\n  </tr>\n  <tr>\n    <td>comments</td>\n    <td>Customer’s message about the order</td>\n  </tr>\n  <tr>\n    <td>is_digital</td>\n    <td>Boolean indicating whether the order will be delivered digitally</td>\n  </tr>\n  <tr>\n    <td>items</td>\n    <td>List of items for the order</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> order_product_id</span></td>\n    <td>Product ID</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Product Name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> quantity</span></td>\n    <td>Quantity Ordered</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> refunded</span></td>\n    <td>Price object that defines the value of this product that has been refunded</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> event_date </span></td>\n    <td>A chosen event date for the product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> price</span></td>\n    <td>Price object that defines the product’s price</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">shipping_rows</span></td>\n    <td>Array of shipping addresses, for each item in the order</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">address</span></td>\n    <td>Street address to ship to</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">city</span></td>\n    <td>City to ship to</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">state </span></td>\n    <td>State to ship to</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">zip</span></td>\n    <td>Postal/ZIP code to ship to</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">country</span></td>\n    <td>Country to ship to</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\"> gift_wrapping_name</span></td>\n    <td>Name of the gift-wrapping option used</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\"> type</span></td>\n    <td>Type of purchase; value is one of: physical, digital, giftcertificate</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\"> download_url</span></td>\n    <td>URL at which customer can download digital item</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\"> image</span></td>\n    <td>The image of the order’s first product, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a></td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">show_reorder</span>\n</td>\n    <td>Boolean indicating whether the customer should see a button for reordering items on the Account Order Details page</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\"> reorder_message</span></td>\n    <td>An error message to be displayed when the customer attempts to reorder items that can’t be reordered</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\"> options</span></td>\n    <td>A list of options selected when this product was purchased</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent3\"> name</span></td>\n    <td>Display name for the option (\"Small\", “Medium”, etc.)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent3\"> value</span></td>\n    <td>Value that customer selected for the option</td>\n  </tr>\n  <tr>\n    <td>billing_address</td>\n    <td>Billing address used for the order</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> full_name</span></td>\n    <td>Customer's billing name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> company</span></td>\n    <td>Customer's billing company name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> address_lines</span></td>\n    <td>Customer's billing address</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> city</span></td>\n    <td>Customer's billing city</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> state</span></td>\n    <td>Customer's billing state</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> country</span></td>\n    <td>Customer billing country</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> zip</span></td>\n    <td>Customer billing ZIP</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> phone</span></td>\n    <td>Customer billing phone number</td>\n  </tr>\n  <tr>\n    <td>shipping_address_count</td>\n    <td>Number of shipping addresses the customer has specified for this order</td>\n  </tr>\n  <tr>\n    <td>shipping_address</td>\n    <td>Shipping address used for the order</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> full_name</span></td>\n    <td>Customer's shipping name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> company</span></td>\n    <td>Customer's shipping company name</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> address_lines</span></td>\n    <td>Customer's shipping address</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> city</span></td>\n    <td>Customer's shipping city</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> state</span></td>\n    <td>Customer's shipping state</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> country</span></td>\n    <td>Customer's shipping country</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> zip</span></td>\n    <td>Customer's shipping zip</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> phone</span></td>\n    <td>Customer's shipping phone number</td>\n  </tr>\n  <tr>\n    <td>payment_method</td>\n    <td>Customer’s payment method for this order (payment gateway)</td>\n  </tr>\n  <tr>\n    <td>card_number_last_four</td>\n    <td>Last four digits of customer’s credit card</td>\n  </tr>\n  <tr>\n    <td>total_rows</td>\n    <td>A list of “total” rows containing total pricing information</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> label</span></td>\n    <td>The label of the total row (Subtotal, Tax, Grand Total, etc.)</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_order-details"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Recent Items\n\n**Description:** Items the customer has recently viewed. (Called on the default `<theme-name>/templates/pages/account/recent-items.html` template.)\n\n**Handlebars Expression:** `{{customer.recently_viewed_products}}`\n\n**Object Properties:** References the standard [product card model](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/common-product-card-model).",
                                      "header": {
                                        "anchor": "customer_recent-items"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Customer Wishlists\n\n**Description:** Array of product wishlists, specific to this store, for the customer. (Called on the default `<theme-name>/templates/components/account/wishlist-list.html` partial.)\n\n**Handlebars Expression:** `{{customer.wishlists}}` \n\n**Object Properties:**\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Unique system ID of the wishlist</td>\n  </tr>\n  <tr>\n    <td>num_items</td>\n    <td>Number of items in the wishlist</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Customer-defined name of the wishlist</td>\n  </tr>\n  <tr>\n    <td>is_public</td>\n    <td>Boolean value indicating whether the wishlist is publicly available </td>\n  </tr>\n  <tr>\n    <td>is_editable</td>\n    <td>Boolean indicating whether the \"Remove Item\" button, and account navigation controls, are displayed (i.e., whether the customer viewing the wishlist is this wishlist’s owner)</td>\n  </tr>\n  <tr>\n    <td>token</td>\n    <td>Unique public token for the wishlist</td>\n  </tr>\n  <tr>\n    <td>view_url</td>\n    <td>URL to view the wishlist</td>\n  </tr>\n  <tr>\n    <td>edit_url</td>\n    <td>URL to edit the wishlist</td>\n  </tr>\n  <tr>\n    <td>delete_url</td>\n    <td>URL to delete the wishlist</td>\n  </tr>\n  <tr>\n    <td>share_url</td>\n    <td>URL to share the wishlist</td>\n  </tr>\n</table>\n",
                                      "header": {
                                        "anchor": "customer_customer-wishlists"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Wishlist Details\n\n**Description:** Wishlist information for a specific wishlist. (Called on the default `<theme-name>/templates/pages/account/wishlist-details.html` template and `<theme-name>/templates/components/account/wishlist-item-list.html`partial.)\n\n**Handlebars Expression:** `{{wishlist}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>Unique system ID for the wishlist</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Customer-defined name of the wishlist</td>\n  </tr>\n  <tr>\n    <td>is_public</td>\n    <td>Boolean value indicating whether the wishlist is publicly available </td>\n  </tr>\n  <tr>\n    <td>token</td>\n    <td>Unique public token for the wishlist</td>\n  </tr>\n  <tr>\n    <td>share_url</td>\n    <td>URL used to share the wishlist</td>\n  </tr>\n  <tr>\n    <td>items</td>\n\t\t<td>List of items in the wishlist; extends <a href=\"\">the product card model</a>, adding the extra properties below:</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> id</span></td>\n    <td class=\"\">Unique system ID for this wishlist item</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> product_id</span></td>\n    <td class=\"\">Product ID for the item</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\"> remove_url</span></td>\n    <td class=\"\">URL to remove the product from the wishlist</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_wishlist-details"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Account Order Shipments\n\n<b>Description:</b> Objects to manage shipments associated with a specific order details for the current customer. (Called on the default `<theme-name&gt;/templates/pages/account/orders/details.html` template.) \n\n**Handlebars Expression:** `{{shipments}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>date_shipped</td>\n    <td>Shipping date for this shipment</td>\n  </tr>\n  <tr>\n    <td>shipping_provider</td>\n    <td>Carrier for this shipment</td>\n  </tr>\n  <tr>\n    <td>shipping_method</td>\n    <td>Shipping method for this shipment</td>\n  </tr>\n  <tr>\n    <td>show_shipping_method</td>\n    <td>Boolean indicating whether to display the shipping method to the customer</td>\n  </tr>\n  <tr>\n    <td>shipping_track</td>\n    <td>Tracking information for this shipment</td>\n  </tr>\n  <tr>\n\t\t<td><span class=\"indent1\">url</span></td>\n    <td>Tracking URL for this shipment</td>\n  </tr>\n  <tr>\n\t\t<td><span class=\"indent1\">number</span></td>\n    <td>Tracking number for this shipment</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_account-order-shipments"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Account Orders\n\n**Description:** Objects to manage completed orders for the current customer. By default, orders sort by order id, from lowest to highest. (Called on the default `<theme-name>/templates/pages/account/orders/all.html`and `<theme-name&gt;/templates/pages/account/orders/completed.html`  templates, and on the `<theme-name>/templates/components/account/orders-list.html` partial.)\n\n**Handlebars Expression:** `{{customer.orders}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>pagination</td>\n    <td>References pagination model</td>\n  </tr>\n  <tr>\n    <td>date</td>\n    <td>Date this order was placed</td>\n  </tr>\n  <tr>\n    <td>last_update_date</td>\n    <td>Date this order was last updated</td>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>ID for this order</td>\n  </tr>\n  <tr>\n    <td>total</td>\n    <td>Total value of this order</td>\n  </tr>\n  <tr>\n    <td>status</td>\n    <td>Status of this order (\"Completed\" or other)</td>\n  </tr>\n  <tr>\n    <td>return_url</td>\n    <td>URL for returning items in this order</td>\n  </tr>\n  <tr>\n    <td>reorder_url</td>\n    <td>URL for reordering items in this order</td>\n  </tr>\n  <tr>\n    <td>details_url</td>\n    <td>URL for details about this order</td>\n  </tr>\n  <tr>\n    <td>payment_instructions</td>\n    <td>Text field defined by merchant as to payment instructions for manual gateways such as “Bank Deposit”</td>\n  </tr>\n  <tr>\n    <td>image</td>\n    <td>Image of the order’s first product, in Stencil image format</td>\n  </tr>\n  <tr>\n    <td>items</td>\n    <td>Array of products in this order</td>\n  </tr>\n    <tr>\n    <td><span class=\"indent1\">name</span></td>\n    <td>Name of this product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">quantity</span></td>\n    <td>Quantity of this product ordered</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">refunded</span></td>\n    <td>Price object that defines the amount of this product that has been refunded</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">expected_release_date</span></td>\n    <td>Expected ship date if the product is set to pre-order status</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">type</span></td>\n    <td>Type of purchase; value is one of: physical, digital, giftcertificate</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">download_url</span></td>\n    <td>URL for customer to download a digital product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">image</span></td>\n    <td>The image for this ordered product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">options</span></td>\n    <td>Array of additional product details (size, color, etc.), as name/value pairs</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">name</span></td>\n    <td>Displayed name for this category of information</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">value</span></td>\n    <td>Displayed value for this product’s entry</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_account-orders"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Account Returns\n\n**Description:** Objects to manage returns for the current customer. (Called on the default `<theme-name>/templates/pages/account/returns.html` template.) \n\n**Handlebars Expression:** `{{customer.returns}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>date_requested</td>\n    <td>Date on which the customer requested this return</td>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>The ID for this return</td>\n  </tr>\n  <tr>\n    <td>quantity</td>\n    <td>Quantity of items returned</td>\n  </tr>\n  <tr>\n    <td>reason</td>\n    <td>Reason for return; merchants can define actions beyond the default strings created with each store, which are: Received Wrong Product, Wrong Product Ordered, Not Satisfied With The Product, and There Was A Problem With The Product</td>\n  </tr>\n  <tr>\n    <td>action</td>\n    <td>Return action; merchants can define actions beyond the default set created with each store (Repair, Replacement, or Store Credit)</td>\n  </tr>\n  <tr>\n    <td>comments</td>\n    <td>Comments that the customer entered with the return request</td>\n  </tr>\n  <tr>\n    <td>status</td>\n    <td>Status of the return: Pending, Received, Authorized, Repaired, \nRefunded, Rejected, or Cancelled</td>\n  </tr>\n  <tr>\n    <td>product</td>\n    <td>Array of products included in the return</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL for this product</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Name of this product</td>\n  </tr>\n  <tr>\n    <td>options</td>\n    <td>Array of additional product details (size, color, etc.), as name/value pairs</td>\n  </tr>\n  <tr>\n\t\t<td><span class=\"indent1\">name</span></td>\n    <td>Displayed name for this category of information</td>\n  </tr>\n  <tr>\n\t\t<td><span class=\"indent1\">value</span></td>\n    <td>Displayed value for this product’s entry</td>\n  </tr>\n  <tr>\n    <td>image</td>\n    <td>Image for this product</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_account-returns"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Account New Return\n\n**Description:** Objects to handle a new return for the current customer. (Called on the default `<theme-name>/templates/pages/account/add-return.html` template.)\n\n**Handlebars Expression:** `{{forms.return}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>order_id</td>\n    <td>ID for the original order</td>\n  </tr>\n  <tr>\n    <td>reasons</td>\n    <td>Reasons for return</td>\n  </tr>\n  <tr>\n    <td>actions</td>\n    <td>Return actions: an array of strings arbitrarily defined by the merchant: refund, exchange, credit, etc.</td>\n  </tr>\n  <tr>\n    <td>order_products</td>\n    <td>Array of products from the order that are available to return</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">id</span></td>\n    <td>ID for the product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">name</span></td>\n    <td>Name of this product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">product_id</span></td>\n    <td>ID for this product</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">price</span></td>\n    <td>Price object that defines this product’s price</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">quantity</span></td>\n    <td>Quantity of the product returned</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">options</span></td>\n    <td>Array of additional product details (size, color, etc.), as name/value pairs</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent3\">name</span></td>\n    <td>Displayed name for this category of information</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent3\">value</span></td>\n    <td>Displayed value for this product’s entry</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_account-new-return"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Create Account\n\n**Description:** Object to enable the current customer to create a store account. (Called on the default `<theme-name&gt;/templates/pages/auth/create-account.html` template.)\n\n**Handlebars Expression:** `{{forms.create_account}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <td>Property</td>\n    <td>Description</td>\n  </tr>\n  <tr>\n    <td>recaptcha</td>\n    <td>Objects for integrating the Google reCAPTCHA service to distinguish human visitors from ’bots (automated agents)</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">enabled</span></td>\n    <td>Boolean indicating whether reCAPTCHA is enabled for this store</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">public_key</span></td>\n    <td>Public key (site key) that reCAPTCHA returns upon merchant’s enabling CAPTCHA security in Store Settings > Display Settings</td>\n  </tr>\n  <tr>\n    <td>address_fields</td>\n    <td>Array of form fields that define each shipping address for this customer; for details, see this repo: <NOBR><a href=\"https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms\">https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms</a></nobr></td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">class_name</span></td>\n    <td>Specifies a CSS class (defined in the theme's <code>/assets/scss/</code> subdirectory) to apply to a field within the array; for corresponding control-panel steps, see this support article:\n <NOBR><a href=\"https://support.bigcommerce.com/articles/Public/Editing-Form-Fields#advanced-settings\">https://support.bigcommerce.com/articles/Public/Editing-Form-Fields#advanced-settings</a> </td>\n  </tr>\n  <tr>\n    <td>account_fields</td>\n    <td>Object of form fields; for details, see this repo:\n <NOBR><a href=\"https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms\">https://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms</a></nobr></td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">class_name</span></td>\n    <td>Specifies a CSS class to apply to a field within the array; for corresponding control-panel steps, see:\n<a href=\"https://support.bigcommerce.com/articles/Public/Editing-Form-Fields#advanced-settings\">https://support.bigcommerce.com/articles/Public/Editing-Form-Fields#advanced-settings</a></td>\n  </tr>\n  <tr>\n    <td>error</td>\n    <td>BCApp generated message to display when customer’s account creation fails</td>\n  </tr>\n  <tr>\n    <td>checking_out</td>\n    <td>Boolean indicating whether customer created the account during a purchase checkout</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_create-account"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Shipping Addresses\n\n**Description:** Object to enable the customer to enter shipping and contact information. (Called on the default `<theme-name>/templates/components/account/address-list.html` partial.)\n\n**Handlebars Expression:**`{{customer.addresses}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>id</td>\n    <td>ID for this shipping address</td>\n  </tr>\n  <tr>\n    <td>customer_id</td>\n    <td>ID for this customer</td>\n  </tr>\n  <tr>\n    <td>first_name</td>\n    <td>First name to ship to</td>\n  </tr>\n  <tr>\n    <td>last_name</td>\n    <td>Last name to ship to</td>\n  </tr>\n  <tr>\n    <td>company</td>\n    <td>Company name to ship to</td>\n  </tr>\n  <tr>\n    <td>address1</td>\n    <td>Street (etc.) address, first line</td>\n  </tr>\n  <tr>\n    <td>address2</td>\n    <td>Street (etc.) address, second line</td>\n  </tr>\n  <tr>\n    <td>city</td>\n    <td>City to ship to</td>\n  </tr>\n  <tr>\n    <td>state</td>\n    <td>State/province/region to ship to</td>\n  </tr>\n  <tr>\n    <td>zip</td>\n    <td>Postal/ZIP code to ship to</td>\n  </tr>\n  <tr>\n    <td>country</td>\n    <td>Country to ship to</td>\n  </tr>\n  <tr>\n    <td>phone</td>\n    <td>Addressee’s phone number</td>\n  </tr>\n  <tr>\n    <td>state_id</td>\n    <td>ID for destination state/province/region</td>\n  </tr>\n  <tr>\n    <td>country_id</td>\n    <td>ID for destination country</td>\n  </tr>\n  <tr>\n    <td>destination</td>\n    <td>residential or commercial</td>\n  </tr>\n  <tr>\n    <td>last_used</td>\n    <td>Boolean, indicating whether this was the last-used shipping address for this customer</td>\n  </tr>\n  <tr>\n    <td>full_name</td>\n    <td>Full name of addressee</td>\n  </tr>\n  <tr>\n    <td>edit_url</td>\n    <td>URL for customer to edit this shipping address</td>\n  </tr>\n  <tr>\n    <td>delete_url</td>\n    <td>URL for customer to delete this shipping address </td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "customer_shipping-addresses"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Payment Methods\n\n**Description:** Object to view stored customer payment methods. \n\n**Called on:** [`[<theme-name>/templates/pages/account/payment-methods.html`](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/account/payment-methods.html)\n\n**Handlebars Expression:**`{{customer.payment_methods}}`\n\n**Object Properties:**\n| Property | Description  |\n|--|--|\n| add_url | URL to add a payment method to this provider |\n| display_name | display name set on the payment settings page for the gateway |\n| methods | array |\n| ↳ bigpay_token | unique ID identifying the payment method |\n| ↳ billing_address | object |\n|&nbsp; &nbsp; ↳ address_line_1 | Address Line One |\n|&nbsp; &nbsp; ↳ address_line_2 | Address Line Two |\n|&nbsp; &nbsp; ↳ city | City |\n|&nbsp; &nbsp; ↳ company | Company |\n|&nbsp; &nbsp; ↳ country_code |Country code |\n|&nbsp; &nbsp; ↳ country_name | Country name |\n|&nbsp; &nbsp; ↳ first_name | First name |\n|&nbsp; &nbsp; ↳ last_name | Last name |\n|&nbsp; &nbsp; ↳ phone | Phone |\n|&nbsp; &nbsp; ↳ postal_code | Postal Code |\n|&nbsp; &nbsp; ↳ state | State |\n|  ↳ brand | Brand of card. visa. mastercard etc. |\n| ↳ default_instrument | Boolean, whether the card is the default payment method for the shopper |\n| ↳ delete_url | URL to delete this specific payment method |\n| ↳ edit_url | URL to edit this specific payment method |\n| ↳ expiry_month | Expiration month |\n| ↳ expiry_year | Expiration Year |\n| ↳ last_4 | Last four of card |\n| ↳ provider | ID of the provider to add a vaulted card |\n| ↳ expiry_year | Expiration Year | ",
                                      "header": {
                                        "anchor": "customer_payment-methods"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Edit Payment Methods\n\n**Description:** Object to view stored customer payment methods.\n\n**Called on:** [`<theme-name>/templates/pages/account/payment-methods.html`](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/account/payment-methods.html)\n\n**Handlebars Expression:**`{{customer.payment_methods}}`\n\n**Object Properties:**\n| Property | Description  |\n|--|--|\n| bigpay_token | unique ID identifying the payment method |\n| billing_address | object |\n| ↳ address_line_1 | Address Line One |\n| ↳ address_line_2 | Address Line Two |\n| ↳ city | City |\n| ↳ company | Company |\n| ↳ country_code |Country code |\n| ↳ country_name | Country name |\n| ↳ first_name | First name |\n| ↳ last_name | Last name |\n| ↳ phone | Phone |\n| ↳ postal_code | Postal Code |\n| ↳ state | State |\n|brand | Brand of card. visa. mastercard etc. |\n|default_instrument | Boolean, whether the card is the default payment method for the shopper |\n| forms | Contains all the availble form fields on the update payments page. Object |\n| &nbsp; ↳ action | The url to update payment methods. `/account.php?action=update_payment_method` |\n| &nbsp; ↳  billing_fields | Array. The drop down for the billing country selection. |\n| &nbsp; &nbsp; ↳  chooseprefix | Appears at the top of the country drop-down. Ex. `Choose a Country` |\n| &nbsp; &nbsp; ↳  class_name | Field identifier Ex. `Field200` |\n| &nbsp; &nbsp; ↳  id | Id of the Field Ex. `FormField_11`  |\n| &nbsp; &nbsp; ↳  label | Field Label . Appears above the field. Ex. `Country`|\n| &nbsp; &nbsp; ↳  name | Field identifier `FormField[2][11]` |\n| &nbsp; &nbsp; ↳  options | Only returns if the field has a dropdown value |\n| &nbsp; &nbsp;  &nbsp; &nbsp; ↳  label | Country label Ex. `United States` |\n| &nbsp; &nbsp;  &nbsp; &nbsp; ↳  selected | This only appears in the results if the field is selected. Boolean Ex. `true` |\n| &nbsp; &nbsp;  &nbsp; &nbsp; ↳  value | Country value Ex. `United States` | \n| &nbsp; &nbsp; ↳  partial | The type of field. `select`, `text`, `multiline` |\n| &nbsp; &nbsp; ↳  private_id | The ID of the field. (Used by the backend to identify what type of value has been provided.) e.g. \"City\"  |\n| &nbsp; &nbsp; ↳  required |  Boolean value to indicate whether the field is required or not.|\n| &nbsp; &nbsp; ↳  type |  The type of field e.g. \"singleline\" for a First Name text entry or \"singleselect\" for a Country drop down |\n| &nbsp; &nbsp; ↳  validation | A JSON string used by the front-end to provide validation and error cues. |\n| &nbsp; &nbsp; ↳  size |  This indicates the size of the field's box. Not used. Always empty. (Theme styles will override this anyway.)|\n| &nbsp; &nbsp; ↳  value | Returns if there is a current value for the field e.g. 90210 |\n| last_four | last four of the credit card |\n| provider | Credit card provider |",
                                      "header": {
                                        "anchor": "customer_edit-payment-methods"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": ""
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Add Payment Methods\n\n**Description:** Object to add stored customer payment methods.\n\n**Called on:** [`<theme-name>/templates/pages/account/payment-methods.html`](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/account/add-payment-method.html)\n\n**Handlebars Expression:** \n* `{{vault}}`\n* `{{countries}}`\n* `{{forms}}`\n\n**Object Properties:**\n| Property | Description  |\n|--|--|\n| vault | Object |\n|&nbsp;↳ access_token | token needed to submit with the ADD payment method form otherwise form submission will fail with 401 Unauthorized |\n|&nbsp;↳ expires_at | Expiration Date in Unix Timestamp|\n| countries |  countries with state information, used in the country and state drop downs when submitting the ADD payment form |\n| &nbsp; ↳ code | country code |\n| &nbsp; ↳ label | country name that appears in the dropdown |\n| &nbsp; ↳ value | country name |\n| &nbsp; ↳ name | state name |\n| forms | Object |\n| &nbsp; ↳ provider | ID of the provider to add a vaulted card. Ex. stripe |",
                                      "header": {
                                        "anchor": "customer_add-payment-methods"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Blog ",
                                "route": {
                                  "path": "/blog-objects"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Blog Objects</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#blog_blog\">Blog</a></li>\n    <li><a href=\"#blog_blog-post\">Blog Post</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "_These objects are called on the default `<theme-name>/templates/components/blog/post.html` partial._\n\n## Blog\n\n**Description:** Blog-specific properties for the blog feature within BigCommerce storefronts \n\n**Handlebars Expression:** `{{blog}}`\n\n**Object Properties:**\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Blog name</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>Blog custom url</td>\n  </tr>\n  <tr>\n    <td>pagination</td>\n    <td>References pagination model</td>\n  </tr>\n  <tr>\n    <td>posts </td>\n    <td>A list of posts for the blog index; default sorting is by date_published,<br> from most-recent to earliest</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">author</span></td>\n    <td>Author of the blog post</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">title</span></td>\n    <td>Title of the blog post</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">url</span></td>\n    <td>URL of the blog entry</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">body</span></td>\n    <td>Body of the blog entry</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">thumbnail</span></td>\n    <td>Image thumbnail for the blog entry, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a></td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">date_published</span></td>\n    <td>Date the blog entry was published</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">social</span></td>\n    <td>Social media tags for the blog entry</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\">tags </span></td>\n    <td>Tags for the blog</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">name</span></td>\n    <td>Name for the tag</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent2\">url</span></td>\n    <td>URL for the tag</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "blog_blog"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Blog Post\n\n<b>Description:</b> Individual blog post object\n\n<b>Handlebars Expression:</b> `{{blog.post}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>author</td>\n    <td>Author of the blog post</td>\n  </tr>\n  <tr>\n    <td>title</td>\n    <td>Title of the blog post</td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>URL of the blog entry</td>\n  </tr>\n  <tr>\n    <td>body</td>\n    <td>Body of the blog entry</td>\n  </tr>\n  <tr>\n    <td>thumbnail</td>\n    <td>Image thumbnail for the blog entry, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/stencil-image\">Stencil image format</a></td>\n  </tr>\n  <tr>\n    <td>date_published</td>\n    <td>Date the blog entry was published</td>\n  </tr>\n  <tr>\n    <td>social</td>\n    <td>Social media tags for the blog entry</td>\n  </tr>\n  <tr>\n    <td>tags </td>\n    <td>Tags for the blog</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> name</span></td>\n    <td>Name for the tag</td>\n  </tr>\n  <tr>\n    <td><span class=\"indent1\"> url</span></td>\n    <td>URL for the tag</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "blog_blog-post"
                                      }
                                    }
                                  ]
                                }
                              },
                              {
                                "title": "Forms",
                                "route": {
                                  "path": "/forms-objects"
                                },
                                "data": {
                                  "blocks": [
                                    {
                                      "type": "html",
                                      "data": "<h1>Forms Objects</h1>"
                                    },
                                    {
                                      "type": "html",
                                      "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#forms_account\">Account Form</a></li>\n    <li><a href=\"#forms_account-address\">Account Address Form</a></li>\n    <li><a href=\"#forms_wishlist\">Wishlist Form</a></li>\n    <li><a href=\"#forms_gift-certificate\">Gift Certificate Form</a></li>\n    <li><a href=\"#forms_contact-us\">Contact Us Form</a></li>\n\t</ul>\n</div>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Account Form\n\n<b>Description:</b> The form object used to edit a customer object. <br>\n\n<b>Handlebars Expression:</b> <code>{{forms.account}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td class=\"\">first_name</td>\n    <td class=\"\">First name of the customer being edited</td>\n  </tr>\n  <tr>\n    <td class=\"\">last_name</td>\n    <td class=\"\">Last name of the customer being edited</td>\n  </tr>\n  <tr>\n    <td class=\"\">company_name</td>\n    <td class=\"\">Company of the customer being edited</td>\n  </tr>\n  <tr>\n    <td class=\"\">phone</td>\n    <td class=\"\">Phone number of the customer being edited</td>\n  </tr>\n  <tr>\n    <td class=\"\">error</td>\n    <td class=\"\">Message to display (generated by the BigCommerce App) when customer’s account edit fails</td>\n  </tr>\n  <tr>\n    <td class=\"\">success</td>\n    <td class=\"\">Message to display (generated by the BigCommerce App) when customer’s account edit succeeds</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "forms_account"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Account Address Form \n\n<b>Description:</b> Form object presented to customers in the Add/Edit Address page. Called on the default <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/components/account/address-list.html</span></nobr> partial and <NOBR><span class=\"inline-code\">&lt;theme-name&gt;/templates/pages/account/add-address.html</span></nobr> template. <br>\n\n<b>Handlebars Expression:</b> <code>{{forms.address}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td class=\"\">address_id</td>\n    <td class=\"\">ID for this shipping address</td>\n  </tr>\n  <tr>\n    <td class=\"\">shipping_fields</td>\n    <td class=\"\">Array of form fields that define each shipping address for this customer; for details, see this repo:\nhttps://github.com/bigcommerce/cornerstone/tree/master/templates/components/common/forms</td>\n  </tr>\n  <tr>\n    <td class=\"\">action</td>\n    <td class=\"\">URL to the proper handler (Update Address versus Save New Address)</td>\n  </tr>\n  <tr>\n    <td class=\"\">error</td>\n    <td class=\"\">Message to display when form entry fails (defined by the BigCommerce App)</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "forms_account-address"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Wishlist Form\n\n<b>Description:</b> Form object presented to customers on the Add/Edit Wishlist page. Called on the default <code>&lt;theme-name&gt;/templates/components/account/add-wishlist.html</code> partial and <code>&lt;theme-name&gt;/templates/pages/account/add-wishlist.html</code> template.\n\n<b>Handlebars Expression:</b> `{{forms.wishlist}}`\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Displayed name for this wishlist</td>\n  </tr>\n  <tr>\n    <td class=\"\">id</td>\n    <td class=\"\">ID for this wishlist</td>\n  </tr>\n  <tr>\n    <td class=\"\">is_public</td>\n    <td class=\"\">Boolean indicating whether this wishlist is displayed to other store visitors</td>\n  </tr>\n  <tr>\n    <td class=\"\">errors</td>\n    <td class=\"\">Message to display when form entry fails (generated by the BigCommerce App)</td>\n  </tr>\n  <tr>\n    <td class=\"\">action</td>\n    <td class=\"\">URL to the proper handler (Update Wish List versus Save New Wish List)</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "forms_wishlist"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Gift Certificate Form\n\n<b>Description:</b><b><em> </em></b>Form object used to create and edit a gift certificate object for the merchant's store. Called on the default <NOBR><span class=\"inline-code\">&lt;theme-name&gt;templates/pages/gift-certificate/purchase.html</span></nobr> template. <br>\n\n<b>Handlebars Expression:</b> <code>{{forms.gift_certificate}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>editing</td>\n    <td>Whether the current context is editing a gift certificate in the cart, or adding a new gift certificate</td>\n  </tr>\n  <tr>\n    <td>can_use_custom_amount</td>\n    <td>Whether the customer can enter free-text input (otherwise, must select from a drop-down list)</td>\n  </tr>\n  <tr>\n    <td>amount_options</td>\n    <td>If can_use_custom_amount is disabled, this variable fills the dropdown with the available options, in <a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">price object</a> form</td>\n  </tr>\n  <tr>\n    <td>minimum</td>\n    <td><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the minimum amount a customer can enter (when can_use_custom_amount is enabled)</td>\n  </tr>\n  <tr>\n    <td>maximum</td>\n    <td><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the minimum amount a customer can enter  (when can_use_custom_amount is enabled)</td>\n  </tr>\n  <tr>\n    <td>expires_in_days</td>\n    <td>If the gift certificates expire, this will be non-0 numerical days</td>\n  </tr>\n  <tr>\n    <td>errors</td>\n    <td>Server-side validation errors from the form’s submission</td>\n  </tr>\n  <tr>\n    <td>themes</td>\n    <td>A list of active gift-certificate themes (Birthday, Celebration, General, etc.), each stored as an object containing corresponding display and value children</td>\n  </tr>\n\n  <tr>\n    <td>display</td>\n    <td>Birthday, Celebration, General, etc.</td>\n  </tr>\n  <tr>\n    <td>value</td>\n    <td class=\"\">Birthday.html, Celebration.html, General.html, etc.</td>\n  </tr>\n  \n  <tr>\n    <td>action</td>\n    <td>The action for the form</td>\n  </tr>\n  <tr>\n    <td>cart_item_id</td>\n    <td>If editing, this is the cart item id being edited.</td>\n  </tr>\n  <tr>\n    <td>values</td>\n    <td>An array of the form values for prefilling</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">to_name</span></td>\n    <td class=\"\">The recipient's name</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">to_email</span></td>\n    <td class=\"\">To email address</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">from_name</span></td>\n    <td class=\"\">The sender’s name</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">from_email</span></td>\n    <td class=\"\">From email address</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">message</span></td>\n    <td class=\"\">An optional custom message</td>\n  </tr>\n  <tr>\n    <td class=\"\"><span class=\"indent1\">amount</span></td>\n    <td class=\"\"><a href=\"/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/price\">Price object</a> that defines the amount of the gift certificate</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "forms_gift-certificate"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Contact Us Form \n\n<b>Description:</b>Form object used to manage merchants’ \"Contact Us\" pages. Called on the default <code>&lt;theme-name&gt;/templates/pages/contact-us.html</code>template. \n\n<b>Handlebars Expression:</b> <code>{{forms.contact}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>success</td>\n    <td>Boolean indicating whether form was just submitted</td>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td>Boolean indicating whether name input is enabled for the form</td>\n  </tr>\n  <tr>\n    <td>company</td>\n    <td>Boolean indicating whether company-name input is enabled for the form</td>\n  </tr>\n  <tr>\n    <td>phone</td>\n    <td>Boolean indicating whether phone-number input is enabled for the form</td>\n  </tr>\n  <tr>\n    <td>order</td>\n    <td>Boolean indicating whether order-number input is enabled for the form</td>\n  </tr>\n  <tr>\n    <td>rma</td>\n    <td>Boolean indicating whether RMA (Return Merchandise Authorization) input is enabled for the form</td>\n  </tr>\n  <tr>\n    <td>page_id</td>\n    <td>Page ID for this contact page (there can be multiple contact pages)</td>\n  </tr>\n  <tr>\n    <td>captcha_url</td>\n    <td>URL to provide an image file for a CAPTCHA field</td>\n  </tr>\n  <tr>\n    <td>text</td>\n    <td>Text content to display above the form</td>\n  </tr>\n  <tr>\n    <td>error</td>\n    <td>Potential error that occurred during previous form submission</td>\n  </tr>\n\t<tr>\n    <td>recaptcha.markup</td>\n    <td>Adds reCaptcha V2</td>\n  </tr>\n</table>",
                                      "header": {
                                        "anchor": "forms_contact-us"
                                      }
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Create Account Form \n\n<b>Description:</b> Form object used to manage merchants’ \"Create Account\" page. Called on the default <code>&lt;theme-name&gt;/templates/pages/create-account.html</code>template. \n\n<b>Handlebars Expression:</b> <code>{{forms.create_account}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n\t<tr>\n    <td>recaptcha.markup</td>\n    <td>Adds reCaptcha V2</td>\n  </tr>\n</table>"
                                    },
                                    {
                                      "type": "text",
                                      "data": "## Login Account Form \n\n<b>Description:</b> Form object used to manage merchants’ \"Login\" page. Called on the default <code>&lt;theme-name&gt;/templates/pages/create-login.html</code>template. \n\n<b>Handlebars Expression:</b> <code>{{forms.login}}</code>\n\n<b>Object Properties:</b>\n\n<table>\n  <tr>\n    <th>Property</th>\n    <th>Description</th>\n  </tr>\n\t<tr>\n    <td>recaptcha.markup</td>\n    <td>Adds reCaptcha V2</td>\n  </tr>\n</table>"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ],
                "blocks": []
              },
              "config": {
                "sidebar": {
                  "token": "REFerence"
                }
              }
            },
            {
              "title": "CSS And Design Assets",
              "route": {
                "path": "/css-and-design-assets"
              },
              "data": {
                "children": [
                  {
                    "title": "Assets Directory",
                    "route": {
                      "path": "/assets-directory"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Assets Directory</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#assets_the-assets-directory\">Assets Directory</a></li>\n    <li><a href=\"#assets_video-demo\">Video Demo</a></li>\n    <li><a href=\"#assets_restrictions-permissions\">Restrictions/Permissions</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Assets Directory\n\nEach Stencil theme’s <span class=\"fp\">{theme-name}/assets/</span> directory contains CSS, JavaScript, and image assets that help create the design of storefront pages. A minimal <span class=\"fp\">{theme-name}/assets/</span> directory contains the files and subdirectories that you can view on the [Cornerstone Github Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets).\n\nWe will go further into detail about the subdirectories within <span class=\"fp\">/assets/</span> below: \n\n### CDN Subdirectory\n\nThe <span class=\"fp\">/cdn/</span> subdirectory is designed to contain large static assets that you will upload to a content delivery network, separately from the rest of your theme. For this reason – and by design – the contents of this directory (only) are excluded from theme bundling. For details, see [Staging a Theme for CDN Delivery](https://developer.bigcommerce.com/stencil-docs/prepare-and-upload-a-theme/staging-a-theme).\n\n### Fonts Subdirectory\n\nThe <span class=\"fp\">/fonts/</span> subdirectory contains local versions of theme-specific fonts.\n\n### Icons Subdirectory\n\nThe <span class=\"fp\">/icons/</span> subdirectory contains .svg files for icons used within a theme.\n\n### Img Subdirectory\n\nThe <span class=\"fp\">/img/</span> subdirectory contains images used in the theme’s display – background images, sprites, and other images not related to store content.\n\nYou would typically reference these image assets using Stencil's CDN Handlebars helper. For example, generically:\n\n`<img src=\"{{cdn 'assets/img/image.jpg'}}\">`\n\nOr, with a realistic file name:\n\n`<img src=\"{{cdn 'assets/img/size-chart.png'}}\">`",
                          "header": {
                            "anchor": "assets_the-assets-directory"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Akamai Image Manager\nFor Stencil themes only, images that use the default zoom library pass through Akamai Image Manager. This chooses the best image to serve based on the device. To bypass the image optimization, include `imbypass=on` as a query parameter in the image URL. This will serve un-optimized images.\n\n**Examples of image bypass:**\n* `<img src=\"{{cdn 'webdav:img/image.jpg?imbypass=on'}}\">`\n* `<img src=\"{{getImage settings.store_logo.image 'logo_size'}}?imbypass=on\">`\n* `<img src=\"{{cdn 'assets/img/image.jpg?imbypass=on'}}\">`\n\n### JS Subdirectory\n\nThe <span class=\"fp\">/js/</span> subdirectory contains general JavaScript files used in the theme.\n\n### SCSS Subdirectory\n\nThe <span class=\"fp\">/scss/</span> subdirectory contains theme-specific CSS resources."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "success",
                            "title": " Production-Safe Image References",
                            "body": "To avoid unexpected 404 errors on your production store, we recommend that you use short relative paths in your SCSS to reference images in your <span class=\"fp\">/img/</span> subdirectory. So, for example, use references of the form:\n`background: url('../img/header-bg.png');` rather than references of the form:\n`background: url('/assets/img/header-bg.png');`"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Video Demo\n\nWatch a video tour of the <span class=\"fp\">/assets/</span> directory, its `/scss/` subdirectory, interactions between CSS and <span class=\"fn\">config.json</span> values, Stencil custom Sass functions, and the <span class=\"fp\">/img/</span> subdirectory.\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/zUDNgprOEts\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n",
                          "header": {
                            "anchor": "assets_video-demo"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "##  Directory and File Restrictions/Permissions\n\nThis section's remaining pages list certain restrictions on changing some subdirectories' structure, contents, and file names.\n\nIn parts of your theme's directory tree where you are free to add new subdirectories and files, be sure to:\n\n* Set newly added directories to permission `755 (drwxr-xr-x)`.\n* Set newly added files to permission `644 (rw-r--r--)`.\n* Without these permissions, running your theme locally will fail, with multiple error messages. Bundling your theme will also fail, blocking its upload to a store.",
                          "header": {
                            "anchor": "assets_restrictions-permissions"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Components Directory & Design Patterns",
                    "route": {
                      "path": "/stencil-design-patterns"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Components Directory and Design Patterns</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#components_components-directory\">Components Directory</a></li>\n    <li><a href=\"#components_citadel-sub\">Citadel Subdirectory</a></li>\n    <li><a href=\"#components_foundation-sub\">Foundation Subdirectory</a></li>\n    <li><a href=\"#components_stencil-sub\">Stencil Subdirectory</a></li>\n    <li><a href=\"#components_vendor-sub\">Vendor Subdirectory</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Stencil themes include an internal pattern library called Citadel, which consumes the ZURB Foundation framework. Foundation provides the basis for creating responsive themes. Citadel extends the Foundation framework’s mixins and components to provide Stencil’s own mixins, extensible components, and utilities.",
                          "header": {
                            "anchor": "components_design-patterns"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "Citadel Version",
                            "body": "Citadel is based specifically on Foundation 5.5.3, which installs with the Stencil framework. We do not support Foundation 6.x, due to breaking changes introduced between versions 5.x and 6.x."
                          }
                        },
                        {
                          "type": "text",
                          "data": "Citadel extends Foundation’s mix-ins and components to provide Stencil’s own mix-ins, extensible components, and utilities. These include drop-down lists, forms, and similar resources. Citadel resources are named according to BEM and SUIT CSS conventions. Classes are named functionally, rather than based on visual presentation or content. Our [sass style](https://github.com/bigcommerce/sass-style-guide) guide explains more about how we name our classes.\nCitadel assets bundled with Cornerstone are located in these Cornerstone subdirectories: \n\n* <span class=\"fp\">cornerstone/assets/scss/settings/citadel/</span>\n* <span class=\"fp\">cornerstone/assets/scss/components/citadel/</span>\n\nA theme developer might use drop-down lists, forms, and similar resources from Citadel’s design patterns. The design/style language underlying these Citadel resources is the Sass/SCSS preprocessor."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Components Directory \n\nCitadel design patterns reside in the <span class=\"fp\">{theme-name}/assets/scss/components/</span> subdirectory. The components subdirectory contains the 4 following subdirectories:\n* <span class=\"fp\">/citadel/</span> \n* <span class=\"fp\">/foundation/</span>\n* <span class=\"fp\">/stencil/</span>\n* <span class=\"fp\">/vendor/</span>\n\n\nYou can see the components directory and its children present in the [Cornerstone Theme Github Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/components).",
                          "header": {
                            "anchor": "components_components-directory"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Citadel Subdirectory\n\nThe <span class=\"fp\">components/citadel</span> subdirectory contains Citadel-specific resources. The resources are named according to our [style guide](https://github.com/bigcommerce/sass-style-guide), which follows [BEM](http://getbem.com/naming/) and [SUIT CSS](https://github.com/suitcss/suit/blob/master/doc/naming-conventions.md) naming conventions: Class names are structured, and hyphens are meaningful (that is, hyphens are not used merely to separate words). \n\nAs a general rule, classes here are named functionally, not based on their visual presentation or their content. Here are some prototypes and examples:\n\n* `componentName` (for example: `.dropdown or .buttonGroup`)\n\n* `componentName--modifierName` (for example: `.dropdown--dropUp` or `.button--primary`)\n\n* `componentName-descendantName` (for example: `.dropdown-item`)\n\n* `componentName.is-stateOfComponent` (for example: `.dropdown.is-active`)\n\n* `u-utilityName` (for example: `.u-textTruncate`)\n\n* Abstractly: `[<namespace>-]<componentName>[--modifierName|-descendentName]`\n\n### Components versus Utilities\n\nOur naming scheme makes an architectural distinction between components and utilities. Components are defined as custom elements that enclose specific semantics, styling, and behavior. Our syntax for naming them is:\n\n`<componentName>[--modifierName|-descendantName]`\n\nComponent names are in camel case. We have tried to choose names that are as short as possible, but as long as necessary. For example:\n\n* `.nav`, not `.navigation`; but:\n* `.button`, not `.btn`\n\nUtility classes are defined as low-level, structural and positional traits. Utilities can be applied directly to any element. Multiple utilities can be used together, and utilities can be used alongside component classes.\n\nTo make HTML patterns as reusable as possible, we have used utility classes sparingly, reserving them for component-level styling.\n\nOur syntax for naming utilities is camel case, prefixed with a `u-` namespace:\n\n`u-<utilityName>`\n\n### Variables and Mixins\n\nCitadel variables and mixins follow similar naming conventions.\n\nVariables are things that can change over time. Their names are in camel case, and show context:\n\n` [<componentName>[--modifierName][-descendentName]-<propertyName>\n-<variablename>[--<modifierName>]`\n\nMixins follow regular camel-case naming conventions. Namespacing is not universally required for mixins. However, where a mixin has been created for a utility, its name matches the utility’s name, including `u-` namespacing:\n\n```\n@mixin buttonVariant;\n@mixin u-textTruncate;\n```",
                          "header": {
                            "anchor": "components_citadel-sub"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Foundation Subdirectory\n\nThe <span class=\"fp\">/components/foundation/</span> subdirectory contains files installed by the [ZURB Foundation framework](https://foundation.zurb.com/showcase/about.html). (Stencil's Foundation support is limited to version 5.5.3.)\n",
                          "header": {
                            "anchor": "components_foundation-sub"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Stencil Subdirectory\n\nThe <span class=\"fp\">/components/stencil/</span> subdirectory contains CSS files unique to Stencil themes, which are used to create specific page elements within the themes. You can view this subdirectory and all its children in the [Cornerstone Theme Github Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/components/stencil).\n\nThis subdirectory’s children contain CSS for the following page elements.\n\n| Subdirectory  |  UI Element/Purpose |\n| -- | -- |\n| account | Customer account details |\n| addressBox | Customer shipping addresses |\n| addReturn | Add a product-return request |\n| banners | Banners displayed across storefront’s top and bottom |\n| blocker | Position .blocker element above another element, to prevent a user action |\n| compare | Layout for product-comparison table |\n| facetedSearch | Faceted-search toggle (on/off), navigation list, and filters |\n| facetLabel | Labels for faceted-search display |\n| heroCarousel | Carousel of prominent (\"hero\") images |\n| navPages | Styles for page navigation, with responsive layout |\n| navUser | Styles for cart counter, quick search |\n| productCarousel | Carousel of product images |\n| productReviews | Styles for product reviews |\n| productView | Product display (with thumbnails suppressed for mobile/tablet), product details, product options (size, color, etc.), product sharing |\n| quickView | Quick-view modal window for a selected product |\n| ribbon | Top-right text badges, for messages like \"On sale\" |\n| socialLinks | Styles for social-media links |\n| tags | Styles for blog-post tags |\n| toggleLink | Styles for collapsible/expandable components |\n| writeReview | Styles for product-review submission form |\n",
                          "header": {
                            "anchor": "components_stencil-sub"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Vendor Subdirectory\n\nThe <span class=\"fp\">/components/vendor/</span> subdirectory contains the consumed version of framework components from your chosen provider. There is some renaming of these components to match Stencil naming conventions.",
                          "header": {
                            "anchor": "components_vendor-sub"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Sample Apps\n* [Cornerstone Theme Github Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/components) (BigCommerce GitHub)\n\n## Related Articles\n* [BigCommerce Sass Styling Guide](https://github.com/bigcommerce/sass-style-guide) (BigCommerce GitHub)\n\n## Additonal Resources\n* [Citadel 5.3](https://github.com/zurb/foundation-sites/releases/tag/v5.5.3) (GitHub)\n* [Getting Started With Foundation 5](https://foundation.zurb.com/sites/docs/v/5.5.3/) (Zurb)\n* [BEM](http://getbem.com/naming/) (Get BEM)\n* [SUIT CSS](https://github.com/suitcss/suit/blob/master/doc/naming-conventions.md) (GitHub)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Layouts, Utilities, & Settings Directories",
                    "route": {
                      "path": "/layouts-and-utilities-directory"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Layouts, Utilities, and Settings Directories</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#layouts-utilities-settings_the-layouts-directory\">Layouts Directory</a></li>\n    <li><a href=\"#layouts-utilities-settings_the-utilities-directory\">Utilities Directory</a></li>\n    <li><a href=\"#layouts-utilities-settings_the-settings-directory\">Settings Directory</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Layouts Directory\n\nThe <span class=\"fp\">{theme-name}/assets/scss/layouts/</span> subdirectory contains .scss files that provide default styling for major layout components of theme pages. You can see the <span class=\"fp\">/layouts/</span> subdirectory's internal structure on the [Cornerstone Github Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/layouts)",
                          "header": {
                            "anchor": "layouts-utilities-settings_the-layouts-directory"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Utilities Directory\n\nThe <span class=\"fp\">{theme-name}/assets/scss/utilities</span> subdirectory contains mixins and tools, beyond the Citadel library, that help create UI’s. You can apply these CSS snippets to your HTML for quick prototyping when you need a unique, yet repeatable, style.\n\nEvery utility in this subdirectory will have both a class and a mixin. For example, consider the utility `truncatedText:` You can use it by applying the class `.u-truncatedText`, or by applying the mixin @include u-truncatedText;.",
                          "header": {
                            "anchor": "layouts-utilities-settings_the-utilities-directory"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Settings Directory\n\nThe <span class=\"fp\">{theme-name}/assets/scss/settings/</span> subdirectory contains SCSS variables for your framework. Files here map directly to components. If present, these variables override defaults in consumed libraries. The <span class=\"fp\">/settings/</span> subdirectory's internal structure can be viewed at the [Cornerstone Github Repository](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/settings) \n\t\nThe nested subdirectory for your chosen framework contains a file that includes that framework’s variables. For example, in the default Stencil theme, this file is: <span class=\"fp\">/settings/foundation/_foundation.scss</span>.\n\nWithin each subdirectory nested at the ultimate level is one primary file, <span class=\"fn\">_settings.scss</span>, that imports all other variables that have been broken into logical files, such as <span class=\"fn\">_colors.scss</span>, <span class=\"fn\">_typography.scss</span>, and <span class=\"fn\">_z-index.scss</span>.\n\t\n### Sass Stylesheet Support for Theme Fonts\n\t\nTo support Theme Editor, your theme's Sass stylesheet must call Stencil's custom Sass functions to transform fonts specified in the theme's <span class=\"fn\">config.json</span> file. You must call these functions on each <span class=\"fn\">config.json</span> font key whose value you want to make available to Sass variables.\n\nThe default Stencil theme includes these function calls in this stylesheet:\n<span class=\"fp\">{theme-name}/assets/scss/settings/foundation/type/_settings.scss</span>. However, if your theme relies on a Sass framework other than Foundation, the relevant stylesheet will be a different .scss file name within <span class=\"fp\">{theme-name}/assets/scss/</span>.\n\n\t\n### How to Enable Fonts for Theme Editor\n\nAssume that your theme's <span class=\"fn\">config.json</span> contains the following key name and value (the details of both are arbitrary, but the key name must end in `-font`, and the value must follow a defined format):\n\t\n`\"headings-font\": \"Google_Open+Sans_700\"`\n\t\nIn your Sass stylesheet, you would call the stencilFontFamily and stencilFontWeight custom Sass functions on the corresponding <span class=\"fn\">config.json</span> key name:\n\t\n```\n$body-font-family: stencilFontFamily(\"body-font\");\n$body-font-weight: stencilFontWeight(\"body-font\");\n```\n\nThese functions would extract the corresponding <span class=\"fn\">config.json</span> values as:\n\n```\n$body-font-family: 'Open Sans';\n$body-font-weight: 700;\n```\n\t\nThis transformation allows you to use the `$body-font-family` and `$body-font-weight` variables wherever needed in your theme. If a merchant uses Theme Editor to select a different font family and/or weight, the variables will propagate the change throughout your theme.\n",
                          "header": {
                            "anchor": "layouts-utilities-settings_the-settings-directory"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Sample Apps\n* [Cornerstone Github Repository Layouts](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/layouts) (BigCommerce GitHub)\n* [Cornerstone Github Repository Settings](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/settings) (BigCommerce GitHub)\n* [Cornerstone Github Repository Utilities](https://github.com/bigcommerce/cornerstone/tree/master/assets/scss/utilities) (BigCommerce GitHub)\n"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Custom Sass Functions",
                    "route": {
                      "path": "/custom-sass-functions"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Custom Sass Functions</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#custom-sass-functions_stencilcolor\">stencilColor</a></li>\n    <li><a href=\"#custom-sass-functions_stencilfontfamily\">stencilFontFamily</a></li>\n    <li><a href=\"#custom-sass-functions_stencilfontweight\">stencilFontWeight</a></li>\n    <li><a href=\"#custom-sass-functions_stencilnumber\">stencilNumber</a></li>\n    <li><a href=\"#custom-sass-functions_stencilstring\">stencilString</a></li>\n    <li><a href=\"#custom-sass-functions_stencilimage\">stencilImage</a></li>\n    <li><a href=\"#custom-sass-functions_compiling-custom-sass-files\">Compiling Custom Sass Files</a></li>\n\t</ul>\n</div>\n"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "The Stencil framework is designed to support your incorporation of custom Sass files/frameworks. However, BigCommerce does not offer technical assistance on substitutions for, or customized versions of, Stencil's default dependencies.",
                            "title": "Before You Customize"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## stencilColor\n\n`stencilColor` accepts (as a string) the key name of a color that you have defined in <span class=\"fn\">config.json</span> as editable. It returns the color’s hexadecimal value.\n\nIn Stencil's Cornerstone (1.4.0) base theme, the <span class=\"fn\">optimized-checkout.scss</span> file sets the background color for the page's header with the following code:",
                          "header": {
                            "anchor": "custom-sass-functions_stencilcolor"
                          }
                        },
                        {
                          "type": "code",
                          "data": ".optimizedCheckout-header {\n    background-color: stencilColor(\"optimizedCheckout-header-backgroundColor\");\n    // scss-lint:disable StringQuotes\n    background-image: url(stencilImage('optimizedCheckout-backgroundImage', 'optimizedCheckout-backgroundImage-size'));\n    // scss-lint:enable StringQuotes\n    background-size: cover;\n    ...\n}",
                          "header": {
                            "title": "optimized-checkout.scss"
                          },
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "The above CSS fetches the background-color property's value by using the `stencilColor()` function to retrieve the `optimizedCheckout-header-backgroundColor` key's current value.\n\nThat `optimizedCheckout-header-backgroundColor` key is defined, and assigned a default value, in <span class=\"fn\">config.json</span>. However, merchants can use [Store Design](https://support.bigcommerce.com/s/article/Store-Design) to change the value at any time. So using this `stencilColor()` call, the key's current value (which might have been altered from the static default value in <span class=\"fn\">config.json</span>) will be fetched from a BigCommerce settings server."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## stencilFontFamily\n\n`stencilFontFamily` accepts (as a string) the name of a font key that you have defined in config.json. It returns the corresponding font-family value, also as a string. For a key named \"headings-font\" and defined as Google Open Sans, `stencilFontFamily` would return a value like this to Sass variables:\n\n`$headings-‐font-‐family: 'Open Sans';`\n\n(The above example's name and definition in config.json are both arbitrary.)\n\nYour Sass stylesheet must call stencilFontFamily for each <span class=\"fn\">config.json</span> font key whose font-family value you want to provide to Sass variables. You would call the function in the following format (again assuming a key arbitrarily named \"headings-font\"):\n\n`$headings-font-family: stencilFontFamily(\"headings-font\");`",
                          "header": {
                            "anchor": "custom-sass-functions_stencilfontfamily"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## stencilFontWeight\n\n`stencilFontWeight` accepts (as a string) the key name of a font that you have defined in config.json. It returns (as an integer) the corresponding font-weight value. For a key arbitrarily named \"headings-font\" and defined as 700, it would return a value like this to Sass variables:\n\n`$headings-‐font-‐weight: 700;`\n\nYour Sass stylesheet may optionally call stencilFontWeight for each <span class=\"fn\">config.json</span> font key whose weight value you want to provide to Sass variables. You would call the function in the following format:\n\n`$headings-font-weight: stencilFontWeight(\"headings-font\");`",
                          "header": {
                            "anchor": "custom-sass-functions_stencilfontweight"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## stencilNumber\n\n`stencilNumber` accepts (as a string) a key name that you have defined in <span class=\"fn\">config.json</span> as editable. It also accepts (also as a string) an _optional_ second parameter to define the unit. (This second parameter’s value defaults to `\"px\"`.) It returns the corresponding numeric value, postfixed with the defined unit.\n\nYou can use this function with arithmetical operators. For example, assume that your <span class=\"fn\">config.json</span> contains a `\"font-size\"` value of `\"3\"`. The following statement would evaluate to `9rem`.\n\n`stencilNumber(\"font-size\", \"rem\") * 3`",
                          "header": {
                            "anchor": "custom-sass-functions_stencilnumber"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## stencilString\n\n`stencilString` accepts (as a string) a key name that you have defined in <span class=\"fn\">config.json</span> as editable. It returns (also as a string) the key’s value. This function is used for purposes like defining font family names, or defining paths to images.",
                          "header": {
                            "anchor": "custom-sass-functions_stencilstring"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## stencilImage\n\n`stencilImage` accepts (as a string) a key name for an image url that you have defined in <span class=\"fn\">config.json</span>. It also accepts (as a string) the key name for the image size that you have defined in <span class=\"fn\">config.json</span>. It returns the string value of the image URL and the size.",
                          "header": {
                            "anchor": "custom-sass-functions_stencilimage"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Compiling Custom Sass Files\n\nIf you want to add your own custom Sass files, initiate auto-compilation of those files by including the associated tag in your HTML markup. Cornerstone's Sass file is named:\n\n<span class=\"fp\">/cornerstone/assets/scss/theme.scss</span>\n\nTo add a custom Sass file, place it at this path location, using an arbitrary filename prefix as shown:\n\n<span class=\"fp\">{theme-name}/assets/scss/{your-theme-or-file-name}.scss</span>\n\nFor example, to use the Foundation Sass framework, you might need:\n\t\n<span class=\"fp\">{theme-name}/assets/scss/main.scss</span>\n<span class=\"fp\">{theme-name}/assets/scss/widgets.scss</span>\n\nNext, be sure the following tag is included within your <span class=\"fp\">{theme-name}/templates/layout/base.html</span> file’s `<head>` tag, to compile your Sass to the specified object file:\n\n`{{stylesheet '/assets/css/theme.css'}}`\n\nWhile `stencil start` is running, it will recompile your custom Sass files to the specified <span class=\"fp\">{theme-name}/assets/css/theme.css</span> file. (Note that this object file’s name is always the same, and is independent of your custom Sass files’ names.) For an additional example, please see [Replacing Content Blocks](https://developer.bigcommerce.com/stencil-docs/css-and-design-assets/page-composition-and-styling).",
                          "header": {
                            "anchor": "custom-sass-functions_compiling-custom-sass-files"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Related Articles\n* [Page Composition & Styling](https://developer.bigcommerce.com/stencil-docs/css-and-design-assets/page-composition-and-styling)\n"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Page Composition and Styling",
                    "route": {
                      "path": "/page-composition-and-styling"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Page Composition and Styling</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#page-composition_referencing-css-stylesheet\">Referencing a CSS Stylesheet</a></li>\n    <li><a href=\"#page-composition_template-composition\">Template Composition</a></li>\n\t</ul>\n</div>\n\n\n\n\n"
                        },
                        {
                          "type": "text",
                          "data": "## Referencing a CSS Stylesheet\n\nTo apply CSS styling to a page in your theme, make sure that page's code includes a reference to the stylesheet you want to use. This example does so using the `{{partial}}` and `{{cdn}}` custom Handlebars helpers:\n\n```\n{{#partial \"head\"}}\n    <link href=\"{{cdn '/assets/css/invoice.css'}}\" rel=\"stylesheet\">\n{{/partial}}\n```",
                          "header": {
                            "anchor": "page-composition_referencing-css-stylesheet"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Template Composition\n\nTemplate composition is a valuable Stencil feature. By defining blocks of overrideable content, your themes can insert templates on a per-page basis, while sharing code that is common to the whole theme.\n\n### Defining Content Blocks\n\nA base template defines content blocks by name. The following snippet uses `{{block}}` custom Handlebars helpers to define three content blocks, respectively named `head`, `hero`, and `page`:\n\n```\n// templates/layout/base.html\n<!DOCTYPE html>\n<html>\n    <head>\n        <title>{{ head.title }}</title>\n        {{#block \"head\"}} {{/block}}\n    </head>\n    <body>\n        <div class=\"body\">\n\t\t    {{#block \"hero\"}} {{/block}}\n\t\t    <div class=\"container\">\n\t\t        {{#block \"page\"}} {{/block}}\n\t\t    </div>\n\t\t    {{> components/common/modal}}\n        </div>\n    </body>\n</html>\n```\n\n### Replacing Content Blocks\n\nPages can use a base template, replacing the defined blocks with their own content. This example replaces content for the head and page blocks:\n\n```\n//templates/pages/account/orders/invoice.html\n{{#partial \"head\"}}\n    <link href=\"{{cdn '/assets/css/invoice.css'}}\" rel=\"stylesheet\">\n{{/partial}}\n\n{{#partial \"page\"}}\n    <p>An invoice for a particular order would go here</p>\n{{/partial}}\n{{> layout/empty}}\n```\n\n### Matching Partials with Blocks\n\nWe recommend that, for any given name defined within the template rendering path, you maintain a 1:1 mapping of partials to blocks.",
                          "header": {
                            "anchor": "page-composition_template-composition"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Using Custom Fonts",
                    "route": {
                      "path": "/using-custom-fonts"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Using Custom Fonts</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#using-custom-fonts_stage-the-fonts\">Stage the Fonts</a></li>\n    <li><a href=\"#using-custom-fonts_reference-fonts\">Reference Fonts in Templates' <code>head</code></a></li>\n    <li><a href=\"#using-custom-fonts_video-demo\">Video Demo</a></li>\n    <li><a href=\"#using-custom-fonts_update-the-css\">Update the CSS</a></li>\n\t</ul>\n</div>\n"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "title": "Custom Fonts Unavailable on Theme Editor",
                            "body": "On the current Stencil framework, custom fonts that you incorporate using this process will not be available for selection in Theme Editor."
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Stage the Fonts\n\nFirst, acquire your custom fonts. In this logo scenario, we'll assume the single (nonexistent) font `MyFontFile.ttf`.\nNext, [use WebDav to upload each custom font](). (Upload to WebDAV's default `/content/` folder.)\n",
                          "header": {
                            "anchor": "using-custom-fonts_stage-the-fonts"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Reference Fonts in Templates' `<head>`\n\nNext, edit the appropriate template files' `<head>` sections to reference your custom fonts. In this logo example, you would edit the `/cornerstone/templates/layout/base.html` file's `<head>` section to insert the following code, which references the custom font you just uploaded:\n\t\n```\n<style type=\"text/css\" media=\"screen, print\">\n           @font-face {\n               font-family: \"MyFont\";\n               src: url(\"{{cdn 'webdav:MyFontFile.ttf'}}\");\n           }\n</style>\n```",
                          "header": {
                            "anchor": "using-custom-fonts_reference-fonts"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Video Demo\n\nWatch a video demonstration of referencing custom fonts in your template files' `<head>` sections: \n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/-w7Hbn_p_pw\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>",
                          "header": {
                            "anchor": "using-custom-fonts_video-demo"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update the CSS\n\nFinally, update the appropriate CSS to reference the same font. Here, you would edit the `/cornerstone/assets/scss/layouts/header/_header.scss` file to include the two lines below `.header-logo-text`:\n\n```\n.header-logo-text {\ndisplay: block;\n   font-family: 'MyFont';\n   [...]\n}\n```",
                          "header": {
                            "anchor": "using-custom-fonts_update-the-css"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "Notes",
                            "body": "* The cdn custom Handlebars helper assumes WebDAV's default /content/ folder, so there is no need to specify that folder.\n* Fonts staged via WebDAV, as in the above example, will not show up in the local version of your theme."
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Using and Updating Icons",
                    "route": {
                      "path": "/using-and-updating-icons"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Using and Updating Icons</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#using-and-updating-icons_installing-grunt\">Installing Grunt</a></li>\n    <li><a href=\"#using-and-updating-icons_calling-theme-icons\">Calling Theme Icons</a></li>\n    <li><a href=\"#using-and-updating-icons_adding-new-icons\">Adding New Icons</a></li>\n    <li><a href=\"#using-and-updating-icons_video-demo\">Video Demo</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Installing Grunt\n\nSome of a Stencil theme's static assets are handled with the Grunt JavaScript automator, where required. This means that you have some dependencies on both Grunt and npm. To get started:\n\nFirst, make sure you have Grunt installed globally on your machine:\n\n`npm install -g grunt-cli`\n\nThen, from your theme's root directory, run:\n\n`npm install`\n",
                          "header": {
                            "anchor": "using-and-updating-icons_installing-grunt"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Calling Theme Icons \n\nA Stencil theme's icons are delivered via a single SVG sprite, which is embedded on the page in\n`<theme-name>templates/layout/base.html`. This sprite is generated via the Grunt task `grunt svgstore`.\n\nThe task takes individual SVG files for each icon (in the theme's `assets/icons/` subdirectory) and bundles\nthem together, to be inlined on the top of the theme, inside a Handlebars partial.\n\nYou can then call each icon in a similar way to an inline image, via:\n\n`<svg><use xlink:href=\"#icon-svgFileName\" /></svg>`\n\nThe ID of each SVG icon you call is based on the filename of the icon you want, with `icon-` prepended.\nFor example:\n\n`xlink:href=\"#icon-facebook\"`",
                          "header": {
                            "anchor": "using-and-updating-icons_calling-theme-icons"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Adding New Icons\n\nSimply add your new icon SVG file to the `assets/icons/ `folder. Then, from your theme's root directory, run `grunt svgstore` or just `grunt`.",
                          "header": {
                            "anchor": "using-and-updating-icons_adding-new-icons"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Video Demo\n\nWatch a video demonstration of installing Grunt and using it to update your theme's SVG sprite with custom icons: \n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/-w7Hbn_p_pw\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>\n",
                          "header": {
                            "anchor": "using-and-updating-icons_video-demo"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Event Hooks",
              "route": {
                "path": "/adding-event-hooks-to-your-theme"
              },
              "data": {
                "children": [
                  {
                    "title": "Event Hook Overview and Examples",
                    "route": {
                      "path": "/event-hook-overview-and-examples"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Event Hook Overview and Examples</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#event_event-hook\">Event Hook Overview</a></li>\n    <li><a href=\"#event_cookie-notification\">Cookie Notification Example</a></li>\n    <li><a href=\"#event_cart-dialog\">Cart Dialog Example</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Event Hook Overview \n\nStencil themes provide access to remote resources through data tags and event hooks. Developers can use these hooks to trigger defined events: A theme can hook to an event to perform its own actions or calculations, based on shopper behavior.\n\nYour Stencil themes incorporate these resources by importing the stencil-utils module, using this statement:\n\n`import utils from '@bigcommerce/stencil-utils';`",
                          "header": {
                            "anchor": "event_event-hook"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Cookie Notification Example\n\nIn the JavaScript-only example below, the `cookie-privacy-notification` hook enables customization of the alert window that displays European Union–required cookie notifications:\n\nFirst, ensure you have loaded the `stencil-utils` package with the following command:\n\n`import utils from '@bigcommerce/stencil-utils';`\n\nEuropean websites must notify users of cookies to comply with European Union law.\nThe following code implements hook that will alert shoppers that the website uses cookies.\n\n```\nexport default function() {\n\n  // Here you can override the default browser alert box by\n  // hooking to the 'cookie-privacy-notification' hook.\n  utils.hooks.on('cookie-privacy-notification', (event, privacyMessage) => {\n\n    // You can make your own custom modal or alert box\n    // appear in your theme using the privacyMessage provided\n    myCustomAlert(privacyMessage);\n\n    // Call event.preventDefault() to prevent the default\n    // browser alert from occurring in stencil-utils\n    event.preventDefault();\n  });\n}\n```\n\nA theme could listen for the `cookie-privacy-notification` event to override the browser’s default notification UI.\n",
                          "header": {
                            "anchor": "event_cookie-notification"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Cart Dialog Example\n\nIn the following code snippet from Cornerstone in [templates/components/products/product-view.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/components/products/product-view.html), note the data tag named `data‑cart‑item‑add`:\n\n```\n<form class=\"form\" method=\"post\" action=\"{{product.cart_url}}\"\n    enctype=\"multipart/form-data\" data-cart-item-add>\n```\n\nThis data tag enables the emission of the `cart‑item‑add` event in this next snippet:\n\n```\n/*  \n * Import all product-specific js \n */\n[...]\nimport utils from '@bigcommerce/stencil-utils';\n[...]\naddProductToCart() {\n    utils.hooks.on('cart-item-add', (event) => {\n        event.preventDefault();\n    });\n}\n```\n",
                          "header": {
                            "anchor": "event_cart-dialog"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Remote API Example",
                    "route": {
                      "path": "/remote-api-example"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Remote API Example</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#remote_remote-api-example\">Remote API Example</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Remote API Example\n\nClient-side JavaScript can access event hooks directly, without using Handlebars statements. By setting up listeners for these events, you can exercise granular control over your storefront’s user interface. For example, you can pop up custom windows when certain events occur.\n\nBelow is an example implemented within a Stencil theme. This code adds an item to the shopping cart, and displays the result in a custom modal dialog rather than a cart page.\n\n_This particular example uses certain conventions of ES6 JavaScript (also known as ECMAScript 6 or\nECMAScript 2015)._\n\nHere is the signature of the cart.itemAdd function used below, with parameters for product ID, quantity, and options:\n\n`itemAdd(FormData, callback)`\n\nHere is the signature of the cart.getContent function used further down:\n\n`getContent(options, callback)`\n\nThis first complete code snippet calls `cart.itemAdd`, catches any errors, and displays the cart contents in a modal dialog: \n\n```\n // Add item to cart\n        utils.api.cart.itemAdd(new FormData(form), (err, response) => {\n            const errorMessage = err || response.data.error;\n\n            $addToCartBtn\n                .val(originalBtnVal)\n                .prop('disabled', false);\n\n            this.$overlay.hide();\n\n            // Guard statement\n            if (errorMessage) {\n                // Strip the HTML from the error message\n                const tmp = document.createElement('DIV');\n                tmp.innerHTML = errorMessage;\n\n                return alert(tmp.textContent || tmp.innerText);\n            }\n\n            // Open preview modal and update content\n            if (this.previewModal) {\n                this.previewModal.open();\n\n                this.updateCartContent(this.previewModal, response.data.cart_item.hash);\n            } else {\n                this.$overlay.show();\n                // if no modal, redirect to the cart page\n                this.redirectTo(response.data.cart_item.cart_url || this.context.urls.cart);\n            }\n        });\n```\n\nThis final code snippet calls `cart.getContent` to fetch the cart contents, then display it in a preview format, which is specified by a `template` option with a value of `cart/preview`:\n\n```\n  /**\n     * Get cart contents\n     *\n     * @param {String} cartItemHash\n     * @param {Function} onComplete\n     */\n    getCartContent(cartItemHash, onComplete) {\n        const options = {\n            template: 'cart/preview',\n            params: {\n                suggest: cartItemHash,\n            },\n            config: {\n                cart: {\n                    suggestions: {\n                        limit: 4,\n                    },\n                },\n            },\n        };\n\n        utils.api.cart.getContent(options, onComplete);\n    }\n```",
                          "header": {
                            "anchor": "remote_remote-api-example"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Data Tags & Event Hooks",
                    "route": {
                      "path": "/data-tags-event-hooks-reference"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Data Tags/Event Hook Reference</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#data_stencil-data-tags\">Stencil Data Tags and Event Hooks</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Stencil Data Tags and Event Hooks\nStencil themes provide the following chains of data tags, delegated DOM (Document Object Model) events, emitted Stencil event hooks, and Stencil event parameter(s).\n\n### Cart Item Added\n\nHook for items added to the customer’s shopping cart.\n\n**Function Signature:**\n\n```\nitemAdd() {\n    this.$body.on('submit', '[data-cart-item-add]', (event) => {\n        this.emit('cart-item-add', event, event.target);\n    });\n}\n```\n\n<table>\n\t<tr>\n\t\t<th>Data Tag</th>\n\t\t<th>Delegated DOM Event</th>\n\t\t<th>Stencil Event/Hook</th>\n\t\t<th>Stencil Event Parameter(s)</th>\n\t</tr>\n\t<tr>\n\t\t<td>data-cart-item-add</td>\n\t\t<td>submit</td>\n\t\t<td>cart-item-add</td>\n\t\t<td>event, event.target</td>\n\t</tr>\n</table>\n\n### Faceted-Search Events\n\nHooks for faceted-search selections that the customer initiates or submits.\n\n**Function Signature**\n\n```\nsearchEvents() {\n  this.$body.on('click', '[data-faceted-search-facet]', (event) => {\n        this.emit('facetedSearch-facet-clicked', event);\n  });\n \n  this.$body.on('submit', '[data-faceted-search-range]', (event) => {\n        this.emit('facetedSearch-range-submitted', event);\n  });\n}\n\n```\n\n<table>\n\t<tr>\n\t\t<th>Data Tag</th>\n\t\t<th>Delegated DOM Event</th>\n\t\t<th>Stencil Event/Hook</th>\n\t\t<th>Stencil Event Parameter(s)</th>\n\t</tr>\n\t<tr>\n\t\t<td>data-faceted-search-facet</td>\n\t\t<td>click</td>\n\t\t<td>facetedSearch-facet-clicked</td>\n\t\t<td>event</td>\n\t</tr>\n\t<tr>\n\t\t<td>data-faceted-search-range</td>\n\t\t<td>submit</td>\n\t\t<td>facetedSearch-range-submitted</td>\n\t\t<td>event</td>\n\t</tr>\n</table>",
                          "header": {
                            "anchor": "data_stencil-data-tags"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "stencil-utils API",
                    "route": {
                      "path": "/stencil-utils-api-reference"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>stencil-utils API Reference</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#stencil-utils_api\">API [api.js]</a></li>\n    <li><a href=\"#stencil-utils_cart\">Cart API</a></li>\n    <li><a href=\"#stencil-utils_cookie\">Cookie Resource</a></li>\n    <li><a href=\"#stencil-utils_countries\">Countries Resource</a></li>\n    <li><a href=\"#stencil-utils_product-attributes\">Product Attributes Resource</a></li>\n    <li><a href=\"#stencil-utils_product\">Product Resource</a></li>\n    <li><a href=\"#stencil-utils_search\">Search Resource</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "These functions help you set up asynchronous requests to modify the customer’s cart or storefront view. By using this abstraction library, you can gain more-granular control over themes’ presentation."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "Example Code",
                            "body": "Examples on this page are from [Stencil's Cornerstone base theme](https://github.com/bigcommerce/cornerstone/tree/master/assets/js/theme). The base path for all listed examples is: `/cornerstone/assets/js/theme/`."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## API [api.js]\n\nThe `api.getPage()` function allows you to add Ajax functionality to your themes.\n\n**getPage Signature**\n\nThe following statement passes `url` and `options` arguments to the `api.getPage()` function:\n\n`utils.api.getPage(url, options, callback)`\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td>String</td>\n    <td>URL to which you want to send a request (for example: localhost:4000/cart.php)</td>\n  </tr>\n  <tr>\n    <td>options</td>\n    <td>Object</td>\n\t\t<td>Can contain <code>template</code>, <code><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\">FormData</a></code> (for POST methods), <code>params</code>&nbsp;(for GET methods), and/or <code>config</code>.   \n\t\tThe <code>template</code> option allows you to select a particular template, or an array of templates, for rendering one page. Each value must correspond to a file present in the theme's <code>templates/components/</code> subdirectory. \n      The `config` option can be used to pass extra resources, corresponding to attributes that are valid in a page's front matter, as an object.\n    </td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\nThe <code>config</code> argument works like front matter: it encapsulates JSON. For a usage example of <code>config</code>, see the [Remote API Example](/stencil-docs/adding-event-hooks-to-your-theme/remote-api-example#remote_remote-api-example).\n\n### getPage Example\n\nIn the following example (from `common/faceted-search.js`), `api.getPage()` is called to help execute an `updateView()` function:",
                          "header": {
                            "anchor": "stencil-utils_api"
                          }
                        },
                        {
                          "type": "code",
                          "data": "updateView() {\n        $(this.options.blockerSelector).show();\n\n        api.getPage(urlUtils.getUrl(), this.requestOptions, (err, content) => {\n            $(this.options.blockerSelector).hide();\n\n            if (err) {\n                throw new Error(err);\n            }\n\n            // Refresh view with new content\n            this.refreshView(content);\n        });\n    }",
                          "header": {
                            "title": "getPage Example"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Cart API \n\nThe following functions allow your theme to work with cart contents in customized ways.\n\n<b>getCartQuantity Signature</b>\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>quantity</td>\n    <td>int</td>\n    <td>A sum of physical, digital, and custom product quantities and gift certificate quantities</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\n<b>getCartQuantity Example</b>\n\n```\nutils.api.cart.getCart({}, (err, response) => {\n\t\tconsole.log(response);\n\t\tconsole.log(err);\n});\n\nutils.api.cart.getCart({includeOptions: true}, (err, response) => {\n\t\tconsole.log(response);\n\t\tconsole.log(err);\n});\n\nutils.api.cart.getCartQuantity(quantity => {\n\t\tconsole.log(`Quantity: ${quantity}`);\n});\n```\n\n<b>itemAdd Signature</b>\n\nThe `itemAdd`function allows your code to add an item to the cart, with options:\n\n<code>utils.api.cart.itemAdd(<a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\">FormData</a>, callback)</code>\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>formData</td>\n    <td><a href=\"https://developer.mozilla.org/en-US/docs/Web/API/FormData\">FormData</a> object </td>\n    <td>Contains all details about the added item and its product options</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\n\n<b>itemAdd Example</b> \n\n<code>itemAdd</code> is called at the head of the following example (from <code>common/product-details.js</code>) to populate the cart:\n\n```\n// Add item to cart\n        utils.api.cart.itemAdd(new FormData(form), (err, response) => {\n            const errorMessage = err || response.data.error;\n\n            $addToCartBtn\n                .val(originalBtnVal)\n                .prop('disabled', false);\n\n            this.$overlay.hide();\n\n            // Guard statement\n            if (errorMessage) {\n                // Strip the HTML from the error message\n                const tmp = document.createElement('DIV');\n                tmp.innerHTML = errorMessage;\n\n                return alert(tmp.textContent || tmp.innerText);\n            }\n\n            // Open preview modal and update content\n            if (this.previewModal) {\n                this.previewModal.open();\n\n                this.updateCartContent(this.previewModal, response.data.cart_item.hash);\n            } else {\n                this.$overlay.show();\n                // if no modal, redirect to the cart page\n                this.redirectTo(response.data.cart_item.cart_url || this.context.urls.cart);\n            }\n        }); \n```\n\n\n<b>itemUpdate Signature</b>\n\nThe <code>itemUpdate</code> function allows your code to update a specified cart item’s quantity:\n\n`utils.api.cart.itemUpdate(itemId, qty, callback)`\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>itemId</td>\n    <td>String</td>\n    <td>The item’s ID</td>\n  </tr>\n  <tr>\n    <td>qty</td>\n    <td>Integer</td>\n    <td>The item’s quantity in the cart</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody></table>\n\n<b>itemUpdate Example</b>\n\nIn the following example (from <code>cart.js</code>), <code>itemUpdate</code> is called just before the final if/else test for an empty cart:\n\n```\n\t\t\t\tcartUpdate($target) {\n        const itemId = $target.data('cartItemid');\n        const $el = $(`#qty-${itemId}`);\n        const oldQty = parseInt($el.val(), 10);\n        const maxQty = parseInt($el.data('quantityMax'), 10);\n        const minQty = parseInt($el.data('quantityMin'), 10);\n        const minError = $el.data('quantityMinError');\n        const maxError = $el.data('quantityMaxError');\n        const newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;\n\n        // Does not quality for min/max quantity\n        if (newQty < minQty) {\n            return swal({\n                text: minError,\n                type: 'error',\n            });\n        } else if (maxQty > 0 && newQty > maxQty) {\n            return swal({\n                text: maxError,\n                type: 'error',\n            });\n        }\n\n        this.$overlay.show();\n\n        utils.api.cart.itemUpdate(itemId, newQty, (err, response) => {\n            this.$overlay.hide();\n\n            if (response.data.status === 'succeed') {\n                // if the quantity is changed \"1\" from \"0\", we have to remove the row.\n                const remove = (newQty === 0);\n\n                this.refreshContent(remove);\n            } else {\n                $el.val(oldQty);\n                swal({\n                    text: response.data.errors.join('\\n'),\n                    type: 'error',\n                });\n            }\n        });\n    } \n```\n\n\n<b>itemRemove Signature</b>\n\nThe <code>itemRemove</code> function allows your code to remove items from the cart:\n\n`utils.api.cart.itemRemove(itemId, callback)`\n\n<table>\n  <tbody>\n\t<tr>\n    <th>Argument</td>\n    <th>Type</td>\n    <th>Description/Usage</td>\n  </tr>\n  <tr>\n    <td>itemId</td>\n    <td>String</td>\n    <td>The item’s ID</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n\t</tbody>\n</table>\n\n\n<b>itemRemove Example</b>\n\nIn the following example (from <code>cart.js</code>), <code>itemRemove</code> is called before the if/else test:\n\n```\n\t\t\t\tcartRemoveItem(itemId) {\n        this.$overlay.show();\n        utils.api.cart.itemRemove(itemId, (err, response) => {\n            if (response.data.status === 'succeed') {\n                this.refreshContent(true);\n            } else {\n                alert(response.data.errors.join('\\n'));\n            }\n        });\n    } \n```\n\n\n<b>update Signature</b>\n\nThe <code>update</code> function allows your code to update the set of items in the cart:\n\n`utils.api.cart.update(itemId, qty, callback)`\n\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>items</td>\n    <td>Array</td>\n    <td>The items in the cart</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\n\n`update Example`\n\nThe following example shows a call to `update` within the `itemUpdate` function:\n\n```\n/**\n    itemUpdate(itemId, qty, callback) {\n        let callbackArg = callback;\n        let items;\n\n        if (Array.isArray(itemId) && typeof qty === 'function') {\n            callbackArg = qty;\n            items = itemId;\n        } else {\n            items = [\n                {\n                    id: itemId,\n                    quantity: qty,\n                },\n            ];\n        }\n\n        this.update(items, (err, response) => {\n            const emitData = {\n                items,\n                err,\n                response,\n            };\n\n            Hooks.emit('cart-item-update-remote', emitData);\n            callbackArg(err, response);\n        });\n    } \n```\n\n\n**getItemGiftWrappingOptions Signature**\n\nThe `getItemGiftWrappingOptions` function allows your code to retrieve gift-wrapping options for the current cart item, in customized ways:\n\n\n`utils.api.cart.getItemGiftWrappingOptions(itemId, callback)`\n\n<table>\n  <tbody>\n\t\t<tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>itemId</td>\n    <td>String</td>\n    <td>The cart item</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n\t</tbody>\n</table>\n\n\n**getItemGiftWrappingOptions Example**\n\nThe following example (from `cart.js`) calls `getItemGiftWrappingOptions` to display gift-wrapping options in a modal:\n\n```\n\tbindGiftWrappingEvents() {\n        const modal = defaultModal();\n\n        $('[data-item-giftwrap]').on('click', (event) => {\n            const itemId = $(event.currentTarget).data('item-giftwrap');\n            const options = {\n                template: 'cart/modals/gift-wrapping-form',\n            };\n\n            event.preventDefault();\n\n            modal.open();\n\n            utils.api.cart.getItemGiftWrappingOptions(itemId, options, (err, response) => {\n                modal.updateContent(response.content);\n\n                this.bindGiftWrappingForm();\n            });\n        });\n    }\n```\n\n\n<b>submitItemGiftWrappingOption Signature</b>\n\nThe `submitItemGiftWrappingOption` function allows your code to handle the customer’s gift-wrapping selection for the current cart item:\n\n`utils.api.cart.submitItemGiftWrappingOption(itemId, qty, callback)`\n\n<table>\n  <tbody>\n\t\t<tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>itemId</td>\n    <td>String</td>\n    <td>The cart item</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\n\n<b>submitItemGiftWrappingOption Example</b> \n\nThis commented example shows a simple call to `submitItemGiftWrappingOption`:\n\n```\n/**\n     * Submit giftwrapping options\n     *\n     * @param {String} itemId\n     * @param {Function} callback\n     */\n    submitItemGiftWrappingOption(itemId, qty, callback) {\n        this.remoteRequest(`/gift-wrapping/${itemId}`, 'POST', { params }, callback);\n    } \n```\n\n\n**getContent Signature**\n\nThe `getContent` function allows your code to display the cart contents in customized ways:\n\n`utils.api.cart.getContent(options, callback)`\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>options</td>\n    <td>Object</td>\n    <td>Template containing content and totals children</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\n**getContent Examples**\n\nThe following example from `common/product-details.js` a call to `getContent`, set up by a prior call to `getCartContent`:\n\n<pre>    /**\n     * Get cart contents\n     *\n     * @param {String} cartItemHash\n     * @param {Function} onComplete\n     */\n    getCartContent(cartItemHash, onComplete) {\n        const options = {\n            template: 'cart/preview',\n            params: {\n                suggest: cartItemHash,\n            },\n            config: {\n                cart: {\n                    suggestions: {\n                        limit: 4,\n                    },\n                },\n            },\n        };\n\n        utils.api.cart.getContent(options, onComplete);\n    } </pre>\n\nThis example (from <code>cart.js</code>) shows a call to <code>getContent</code> within the <code>refreshContent</code> function:\n\n```\nrefreshContent(remove) {\n        const $cartItemsRows = $('[data-item-row]', this.$cartContent);\n        const $cartPageTitle = $('[data-cart-page-title]');\n        const options = {\n            template: {\n                content: 'cart/content',\n                totals: 'cart/totals',\n                pageTitle: 'cart/page-title',\n                statusMessages: 'cart/status-messages',\n            },\n        };\n\n        this.$overlay.show();\n\n        // Remove last item from cart? Reload\n        if (remove && $cartItemsRows.length === 1) {\n            return window.location.reload();\n        }\n\n        utils.api.cart.getContent(options, (err, response) => {\n            this.$cartContent.html(response.content);\n            this.$cartTotals.html(response.totals);\n            this.$cartMessages.html(response.statusMessages);\n\n            $cartPageTitle.replaceWith(response.pageTitle);\n            this.bindEvents();\n            this.$overlay.hide();\n\n            const quantity = $('[data-cart-quantity]', this.$cartContent).data('cart-quantity') || 0;\n\n            $('body').trigger('cart-quantity-update', quantity);\n        });\n    } \n```\n\nHere is a final example of a call to <code>getContent</code>, from <code>global/cart-preview.js</code>:\n\n``` \n$cart.on('click', (event) => {\n        const options = {\n            template: 'common/cart-preview',\n        };\n\n        // Redirect to full cart page\n        //\n        // https://developer.mozilla.org/en-US/docs/Browser_detection_using_the_user_agent\n        // In summary, we recommend looking for the string 'Mobi' anywhere in the User Agent to detect a mobile device.\n        if (/Mobi/i.test(navigator.userAgent)) {\n            return event.stopPropagation();\n        }\n\n        event.preventDefault();\n\n        $cartDropdown\n            .addClass(loadingClass)\n            .html($cartLoading);\n        $cartLoading\n            .show();\n\n        utils.api.cart.getContent(options, (err, response) => {\n            $cartDropdown\n                .removeClass(loadingClass)\n                .html(response);\n            $cartLoading\n                .hide();\n        });\n    });\n```\n\n\n**getShippingQuotes Signature**\n\nThe `getShippingQuotes` function allows your code to retrieve shipping-cost quotes for the cart’s contents. It returns `shippingQuote` objects that contain IDs. You must follow `getShippingQuotes` by calling `submitShippingQuote` on a `quoteId`:\n\n`utils.api.cart.getShippingQuotes(params, renderWith, callback)`\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>params</td>\n    <td>Object</td>\n    <td>Contains country_id, state_id, and zip_code</td>\n  </tr>\n  <tr>\n    <td>template</td>\n    <td>String/Array/Object</td>\n    <td>The template to use for rendering</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\n\n**getShippingQuotes and submitShippingQuote Example**\n\nThe following example from `cart/shipping-estimator.js` shows calls to both `getShippingQuotes` and `submitShippingQuote`:",
                          "header": {
                            "anchor": "stencil-utils_cart"
                          }
                        },
                        {
                          "type": "code",
                          "data": "bindEstimatorEvents() {\n        const $estimatorContainer = $('.shipping-estimator');\n        const $estimatorForm = $('.estimator-form');\n\n        $estimatorForm.on('submit', (event) => {\n            const params = {\n                country_id: $('[name=\"shipping-country\"]', $estimatorForm).val(),\n                state_id: $('[name=\"shipping-state\"]', $estimatorForm).val(),\n                city: $('[name=\"shipping-city\"]', $estimatorForm).val(),\n                zip_code: $('[name=\"shipping-zip\"]', $estimatorForm).val(),\n            };\n\n            event.preventDefault();\n\n            utils.api.cart.getShippingQuotes(params, 'cart/shipping-quotes', (err, response) => {\n                $('.shipping-quotes').html(response.content);\n\n                // bind the select button\n                $('.select-shipping-quote').on('click', (clickEvent) => {\n                    const quoteId = $('.shipping-quote:checked').val();\n\n                    clickEvent.preventDefault();\n\n                    utils.api.cart.submitShippingQuote(quoteId, () => {\n                        location.reload();\n                    });\n                });\n            });\n        }); \n\t",
                          "header": {
                            "subtitle": "cart/shipping-estimator.js",
                            "title": "getShippingQuotes and SubmitShippingQuote Example"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**submitShippingQuote Signature**\n\nThe `submitShippingQuote` function must be called after `getShippingQuote`, which returns `shippingQuote` objects that contain IDs. The cart page renders the shipping quotes. When the user selects one of the quotes, this function sends that `quoteId` to the backend:\n\n`utils.api.cart.submitShippingQuote(quoteId, callback)`\n\n<table>\n  <tbody>\n\t\t<tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>quoteId</td>\n    <td>Number</td>\n    <td>ID for a shipping quote returned by <code>getShippingQuotes</code></td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n\t</table>\n\n(For sample code, see `getShippingQuotes` and `submitShippingQuote` examples above.)"
                        },
                        {
                          "type": "text",
                          "data": "<b>applyCode Signature</b>\n\nThe `applyCode` function applies a coupon code or gift certificate to the cart:\n\n`utils.api.cart.applyCode(code, callback)`\n\n<table>\n  <tbody>\n\t\t<tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>code</td>\n    <td>String</td>\n    <td>Alphanumeric representation of the coupon or gift-certificate code</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>\n\nIn the following example from `cart.js`,  `applyCode` is called before the final if/else test to apply a coupon code:"
                        },
                        {
                          "type": "code",
                          "data": "bindPromoCodeEvents() {\n        const $couponContainer = $('.coupon-code');\n        const $couponForm = $('.coupon-form');\n        const $codeInput = $('[name=\"couponcode\"]', $couponForm);\n\n        $('.coupon-code-add').on('click', (event) => {\n            event.preventDefault();\n\n            $(event.currentTarget).hide();\n            $couponContainer.show();\n            $('.coupon-code-cancel').show();\n            $codeInput.focus();\n        });\n\n        $('.coupon-code-cancel').on('click', (event) => {\n            event.preventDefault();\n\n            $couponContainer.hide();\n            $('.coupon-code-cancel').hide();\n            $('.coupon-code-add').show();\n        });\n\n        $couponForm.on('submit', (event) => {\n            const code = $codeInput.val();\n\n            event.preventDefault();\n\n            // Empty code\n            if (!code) {\n                return alert($codeInput.data('error'));\n            }\n\n            utils.api.cart.applyCode(code, (err, response) => {\n                if (response.data.status === 'success') {\n                    this.refreshContent();\n                } else {\n                    alert(response.data.errors.join('\\n'));\n                }\n            });\n        });\n    }",
                          "header": {
                            "subtitle": "cart.js",
                            "title": "applyCode"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Countries Resources\n\nThese functions allow your theme or app to retrieve standardized country names, by numeric ID or by string.\n\n**getById Signature**\n\nThe `getById` function retrieves standardized country names by numeric ID:\n\n`utils.api.countries.getById(countryId, callback)`\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>countryId</td>\n    <td>Number</td>\n    <td>Country code</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n\t</tbody>\n</table>\n\n\nThe following example a call to `getById`, followed by a call to the `getByName` function (described below):",
                          "header": {
                            "anchor": "stencil-utils_countries"
                          }
                        },
                        {
                          "type": "code",
                          "data": "/*   \n\t*Get country data by id wrapper\n     * @param {Number} id\n     * @param {Function} callback\n*/\n\n    getById(id, callback) {\n        const url = this.endpoint + id;\n\n        this.remoteRequest(url, 'GET', {}, callback);\n    }\n\n/*\n     * Get country data by country name\n     * @param name\n     * @param callback\n*/\n    getByName(name, callback) {\n        const url = this.endpoint + name;\n\n        this.remoteRequest(url, 'GET', {}, callback);\n    }\n}",
                          "header": {
                            "title": "getById Example"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "**getByName Signature**\n\nThe `getByName` function retrieves states by country name, and returns an array of states that can be used in the callback:\n\n`utils.api.countries.getByName(countryName, callback)`\n\n<table>\n  <tbody>\n\t\t<tr>\n    <td>Argument</td>\n    <td>Type</td>\n    <td>Description/Usage</td>\n  </tr>\n  <tr>\n    <td>countryName</td>\n    <td>String</td>\n    <td>Country name</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n\t</tbody>\n</table>\n\n\nIn the following example from `common/state-country.js`, `getByName` is called after the initial if test:"
                        },
                        {
                          "type": "code",
                          "data": "$('select[data-field-type=\"Country\"]').on('change', (event) => {\n        const countryName = $(event.currentTarget).val();\n\n        if (countryName === '') {\n            return;\n        }\n\n        utils.api.country.getByName(countryName, (err, response) => {\n            if (err) {\n                alert(context.state_error);\n\n                return callback(err);\n            }\n\n            const $currentInput = $('[data-field-type=\"State\"]');\n\n            if (!_.isEmpty(response.data.states)) {\n                // The element may have been replaced with a select, reselect it\n                const $selectElement = makeStateRequired($currentInput, context);\n\n                addOptions(response.data, $selectElement, options);\n                callback(null, $selectElement);\n            } else {\n                const newElement = makeStateOptional($currentInput, context);\n\n                callback(null, newElement);\n            }\n        });\n    }); ",
                          "header": {
                            "title": "getByName Example",
                            "subtitle": "common/state-country.js"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Product Attributes Resource\n\nThe `optionChange` function is fired when the customer selects a product option for the current cart item (for example, changing a shirt’s color from a default \"yellow\" to \"green\"):\n\n<b>optionChange Signature</b>\n\n`utils.api.productAttributes.optionChange(productId, params, callback)`\n\n<table>\n  <tbody>\n\t\t<tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>params</td>\n    <td>Object</td>\n    <td>Contains a collection of IDs that map to product properties (color, size, etc.)</td>\n  </tr>\n  <tr>\n    <td>productId</td>\n    <td>Number</td>\n    <td>ID for this product</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n\t</tbody>\n</table>\n\n\n**optionChange Examples**\n\nIn this example (from `common/product-details.js`), `optionChange` is called to update options in a Quick View modal:",
                          "header": {
                            "anchor": "stencil-utils_product-attributes"
                          }
                        },
                        {
                          "type": "code",
                          "data": "// Update product attributes. If we're in quick view and the product has options, then also update the initial view in case items are oos\n        if (_.isEmpty(productAttributesData) && hasOptions) {\n            const $productId = $('[name=\"product_id\"]', $form).val();\n\n            utils.api.productAttributes.optionChange($productId, $form.serialize(), (err, response) => {\n                const attributesData = response.data || {};\n\n                this.updateProductAttributes(attributesData);\n                this.updateView(attributesData);\n            });\n        } else {\n            this.updateProductAttributes(productAttributesData);\n        } ",
                          "header": {
                            "title": "optionChange Example #1",
                            "subtitle": "common/product-details.js"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "In this example from `cart.js`, `optionChange` is called before the final `if` test:"
                        },
                        {
                          "type": "code",
                          "data": "cartEditOptions(itemId) {\n        const modal = defaultModal();\n        const options = {\n            template: 'cart/modals/configure-product',\n        };\n\n        modal.open();\n\n        utils.api.productAttributes.configureInCart(itemId, options, (err, response) => {\n            modal.updateContent(response.content);\n\n            this.bindGiftWrappingForm();\n        });\n\n        utils.hooks.on('product-option-change', (event, option) => {\n            const $changedOption = $(option);\n            const $form = $changedOption.parents('form');\n            const $submit = $('input.button', $form);\n            const $messageBox = $('.alertMessageBox');\n            const item = $('[name=\"item_id\"]', $form).attr('value');\n\n            utils.api.productAttributes.optionChange(item, $form.serialize(), (err, result) => {\n                const data = result.data || {};\n\n                if (err) {\n                    alert(err);\n                    return false;\n                }\n",
                          "header": {
                            "subtitle": "cart.js",
                            "title": "optionChange Example #2"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Product Resource\n\nThe `product.getById` function allows your code to retrieve, and to present, detailed product information by product ID.\n\n<b>getById Signature</b>\n\n`utils.api.product.getById(productId, params, callback)`\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>productId</td>\n    <td>Number</td>\n    <td>ID for this product</td>\n  </tr>\n  <tr>\n    <td>params</td>\n    <td>Object</td>\n    <td>Contains request options and/or presentation template</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n\t</tbody>\n</table>\n\n\nThe following example (from `global/quick-view.js`) calls `product.getById` to populate the Quick View modal:",
                          "header": {
                            "anchor": "stencil-utils_product"
                          }
                        },
                        {
                          "type": "code",
                          "data": "\t$('body').on('click', '.quickview', (event) => {\n        event.preventDefault();\n\n        const productId = $(event.currentTarget).data('product-id');\n\n        modal.open({ size: 'large' });\n\n        utils.api.product.getById(productId, { template: 'products/quick-view' }, (err, response) => {\n            modal.updateContent(response);\n\n            modal.$content.find('.productView').addClass('productView--quickView');\n\n            return new ProductDetails(modal.$content.find('.quickView'), context);\n        });\n    }); ",
                          "header": {
                            "subtitle": "global/quick-view.js",
                            "title": "getById Example"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Search Resource\n\nThe `search` function allows you to present a customized user interface for search results.\n\n<b>search Signature</b>\n\n`utils.api.search.search(query, params, callback)`\n\n<table>\n  <tbody><tr>\n    <th>Argument</th>\n    <th>Type</th>\n    <th>Description/Usage</th>\n  </tr>\n  <tr>\n    <td>query</td>\n    <td>String</td>\n    <td>Contains the customer’s search query</td>\n  </tr>\n  <tr>\n    <td>params</td>\n    <td>Object</td>\n    <td>Contains request options and/or presentation template</td>\n  </tr>\n  <tr>\n    <td>callback</td>\n    <td>Function</td>\n    <td>Asynchronous function call to handle the results</td>\n  </tr>\n</tbody>\n</table>",
                          "header": {
                            "anchor": "stencil-utils_search"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Custom JS Implementations ",
              "route": {
                "path": "/custom-javascript-implementations"
              },
              "data": {
                "children": [
                  {
                    "title": "Adding Javascript to a Stencil Theme",
                    "route": {
                      "path": "/adding-javascript"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Adding Javascript to Your Stencil Theme</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#adding_bundling-and-minification\">Bundling and Minification</a></li>\n    <li><a href=\"#adding_development-options\">Development Options</a></li>\n    <li><a href=\"#adding_using-npm\">Using npm (Node Package Manager)</a></li>\n    <li><a href=\"#adding_placing-modules\">Placing Modules in assets/js/</a></li>\n    <li><a href=\"#adding_theme-specific-js\">Theme-Specific JavaScript Modules</a></li>\n    <li><a href=\"#adding_mapping-page\">Mapping Page Types to JavaScript Modules</a></li>\n    <li><a href=\"#adding_mapping-custom\">Mapping Custom Templates to JavaScript Modules</a></li>\n    <li><a href=\"#adding_summary\">Summary</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Bundling and Minification\n\nA small Web application, such as an ecommerce theme, can include rich user interactions that depend on many small JavaScript and CSS modules. If we were to embed each of the JavaScript modules in a template file with a separate `<script>` tag, the shopper's browser would need to make separate HTTP requests to retrieve each module.\n\t\nIn some cases, it would take longer to set up the HTTP request than to download the small JavaScript module – leading to slower load times. On mobile devices, slow load times can be especially frustrating.\n\n### Bundling\nTo solve this problem, Stencil – like other modern front-end frameworks – bundles all the JavaScript modules into a single file (a bundle), allowing the shopper's browser to make only a single HTTP request. After the browser has downloaded the bundle of JavaScript modules, the browser caches them, speeding up the rest of the shopper's session.\n\n### Minification\nBeyond reducing the number of HTTP calls required to fetch all the required JavaScript modules, we can reduce the size of the individual JavaScript modules through minification. JavaScript minification removes white space and comments, shortens variable and function names, removes dead code, and more. The goal, in all cases, is to reduce the amount of bandwidth necessary to transmit the JavaScript module to the browser.",
                          "header": {
                            "anchor": "adding_bundling-and-minification"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Development Options\n\nWhen you add JavaScript to a theme, use one of the following techniques, so that Stencil will automatically bundle and minify your modules:\n\n* **Using npm:** Add third-party JavaScript modules to your theme with npm where possible.\n\n* **Place Modules in assets/js/:** For a JavaScript module that is not distributed via npm, add this module to your theme by creating a subdirectory within assets/js/ that contains your module.\n\n* **Theme-Specific JavaScript Modules:** Stencil themes include their own custom JavaScript modules for most page types. You can alter these page-type–specific modules by editing the files in assets/js/theme/*.js.\n\nThese techniques are outlined in the following sections.",
                          "header": {
                            "anchor": "adding_development-options"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Using npm (Node Package Manager)\n\nMany third-party JavaScript components are distributed with npm (Node Package Manager). When you use the npm command-line utility to add a JavaScript component to your theme, Stencil will automatically bundle and minify the component. To enable this bundling/minification, run each module's `npm install` command from the root directory of your theme.\n\n### Taking Over from npm\n\nnpm facilitates managing third-party JavaScript components by placing each JavaScript component – and any of its dependencies – in the correct directories. However, as a developer, you will still need to edit your theme files to wire up the JavaScript component to expose it on your storefront. You will find several examples of this on the following pages.",
                          "header": {
                            "anchor": "adding_using-npm"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Placing Modules in assets/js/\n\nYou can freely create subdirectories within `assets/js/`, to contain new JavaScript modules. The constraint is that all JavaScript files in each module must use the `.js` file extension.",
                          "header": {
                            "anchor": "adding_placing-modules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Theme-Specific JavaScript Modules\n\nIn your theme's `assets/js/theme/` subdirectory, you will find a tree of JavaScript files. Each file is a JavaScript module. Some modules are for specific page types. Others are common modules that can be used in other modules. Still others are global modules that are available on every page.",
                          "header": {
                            "anchor": "adding_theme-specific-js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Mapping Page Types to JavaScript Modules\n\nTo find the mapping from page types to modules in `assets/js/theme/`, examine the `pageClasses` object in the file: `assets/js/app.js`. \n\nEach `=>import(...)` function within this class maps a page type to the entry module for that page type. \n\nFor example: When the `cart` page type is loaded in the browser, the JavaScript module named `cart` will be loaded.\n\n### Mapping Example in app.js\n\nBelow is an excerpt of mappings from the Cornerstone base theme's [assets/js/app.js](https://github.com/bigcommerce/cornerstone/blob/master/assets/js/app.js):",
                          "header": {
                            "anchor": "adding_mapping-page"
                          }
                        },
                        {
                          "type": "code",
                          "data": "import Global from './theme/global';\n\nconst getAccount = () => import('./theme/account');\nconst getLogin = () => import('./theme/auth');\nconst noop = null;\n\nconst pageClasses = {\n    account_orderstatus: getAccount,\n    account_order: getAccount,\n    account_addressbook: getAccount,\n    shippingaddressform: getAccount,\n    account_new_return: getAccount,\n    'add-wishlist': () => import('./theme/wishlist'),\n    account_recentitems: getAccount,\n    account_downloaditem: getAccount,\n    editaccount: getAccount,\n    account_inbox: getAccount,\n    account_saved_return: getAccount,\n    account_returns: getAccount,\n    account_paymentmethods: getAccount,\n    account_addpaymentmethod: getAccount,\n    account_editpaymentmethod: getAccount,\n    login: getLogin,\n    createaccount_thanks: getLogin,\n    createaccount: getLogin,\n    getnewpassword: getLogin,\n    forgotpassword: getLogin,\n    blog: noop,\n    blog_post: noop,\n    brand: () => import('./theme/brand'),\n    brands: noop,\n    cart: () => import('./theme/cart'),\n    category: () => import('./theme/category'),\n    compare: () => import('./theme/compare'),\n    page_contact_form: () => import('./theme/contact-us'),\n    error: noop,\n    404: noop,\n    giftcertificates: () => import('./theme/gift-certificate'),\n    giftcertificates_balance: () => import('./theme/gift-certificate'),\n    giftcertificates_redeem: () => import('./theme/gift-certificate'),\n    default: noop,\n    page: noop,\n    product: () => import('./theme/product'),\n    amp_product_options: () => import('./theme/product'),\n    search: () => import('./theme/search'),\n    rss: noop,\n    sitemap: noop,\n    newsletter_subscribe: noop,\n    wishlist: () => import('./theme/wishlist'),\n    wishlists: () => import('./theme/wishlist'),\n};",
                          "header": {
                            "title": "app.js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Mapping Example in cart.js\n\nInside the `cart` module ([assets/js/theme/cart.js](https://github.com/bigcommerce/cornerstone/blob/master/assets/js/theme/cart.js)), other modules are imported, and custom JavaScript methods for the cart module are created for the `Cart` class.\n\nHere is an excerpt from Cornerstone's `assets/js/theme/cart.js` file:"
                        },
                        {
                          "type": "code",
                          "data": "import PageManager from './page-manager';\nimport _ from 'lodash';\nimport giftCertCheck from './common/gift-certificate-validator';\nimport utils from '@bigcommerce/stencil-utils';\nimport ShippingEstimator from './cart/shipping-estimator';\nimport { defaultModal } from './global/modal';\nimport swal from './global/sweet-alert';\n\nexport default class Cart extends PageManager {\n    onReady() {\n        this.$cartContent = $('[data-cart-content]');\n        this.$cartMessages = $('[data-cart-status]');\n        this.$cartTotals = $('[data-cart-totals]');\n        this.$overlay = $('[data-cart] .loadingOverlay')\n            .hide(); // TODO: temporary until roper pulls in his cart components\n\n        this.bindEvents();\n    }\n  \n\t\tcartUpdate($target) {\n        const itemId = $target.data('cartItemid');\n        const $el = $(`#qty-${itemId}`);\n        const oldQty = parseInt($el.val(), 10);\n        const maxQty = parseInt($el.data('quantityMax'), 10);\n        const minQty = parseInt($el.data('quantityMin'), 10);\n        const minError = $el.data('quantityMinError');\n        const maxError = $el.data('quantityMaxError');\n        const newQty = $target.data('action') === 'inc' ? oldQty + 1 : oldQty - 1;\n        // Does not quality for min/max quantity\n        if (newQty < minQty) {\n            return swal({\n                text: minError,\n                type: 'error',\n            });\n        } else if (maxQty > 0 && newQty > maxQty) {\n            return swal({\n                text: maxError,\n                type: 'error',\n            });\n        }",
                          "header": {
                            "title": "cart.js"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Mapping Custom Templates to JavaScript Modules\n\nIf you add [custom page templates](/stencil-docs/template-files/custom-templates/about-custom-templates) to your theme, you can edit the same `assets/js/app.js` file to map each custom template to an appropriate JavaScript module.",
                          "header": {
                            "anchor": "adding_mapping-custom"
                          }
                        },
                        {
                          "type": "code",
                          "data": "const customClasses = {};\n\n/**\n * This function gets added to the global window and then called\n * on page load with the current template loaded and JS Context passed in\n * @param pageType String\n * @param contextJSON\n * @returns {*}\n */\nwindow.stencilBootstrap = function stencilBootstrap(pageType, contextJSON = null, loadGlobal = true) {\n    const context = JSON.parse(contextJSON || '{}');\n\n    return {\n        load() {\n            $(() => {\n                // Load globals\n                if (loadGlobal) {\n                    Global.load(context);\n                }\n\n                const importPromises = [];\n\n                // Find the appropriate page loader based on pageType\n                const pageClassImporter = pageClasses[pageType];\n                if (typeof pageClassImporter === 'function') {\n                    importPromises.push(pageClassImporter());\n                }\n\n                // See if there is a page class default for a custom template\n                const customTemplateImporter = customClasses[context.template];\n                if (typeof customTemplateImporter === 'function') {\n                    importPromises.push(customTemplateImporter());\n                }\n\n                // Wait for imports to resolve, then call load() on them\n                Promise.all(importPromises).then(imports => {\n                    imports.forEach(imported => {\n                        imported.default.load(context);\n                    });\n                });\n            });\n        },\n    };\n};",
                          "header": {
                            "title": "app.js",
                            "subtitle": "map custom templates to js modules"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Injecting Custom Templates\n\nIn the theme's [templates/layout/base.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/layout/base.html) template, we've added the line `{{inject 'template' template}}` just above `{{{snippet 'htmlhead'}}}` statement to inject the custom template:"
                        },
                        {
                          "type": "code",
                          "data": "<head>\n      <title>{{ head.title }}</title>\n      {{{ head.meta_tags }}}\n      {{{ head.config }}}\n      [...]\n\n      {{{head.scripts}}}\n      {{{head.rsslinks}}}\n\n      {{inject 'themeSettings' theme_settings}}\n      {{inject 'genericError' (lang 'common.generic_error')}}\n      {{inject 'maintenanceMode' settings.maintenance}}\n      {{inject 'urls' urls}}\n      {{inject 'template' template}} //injects the custom template\n      {{{snippet 'htmlhead'}}}\n</head> ",
                          "header": {
                            "title": "base.html",
                            "subtitle": "custom template injection"
                          },
                          "config": {
                            "mode": "html",
                            "highlightRange": [
                              {
                                "from": "14",
                                "to": "14"
                              }
                            ]
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Summary\n\nTo review the basics of using JavaScript in your Stencil theme:\n\n* Stencil automatically bundles and minifies JavaScript modules to optimize page performance.\n\n* To insert custom JavaScript on a particular page in your theme, edit the JavaScript module that corresponds to the page's type.\n\n* To add files from third-party JavaScript modules to a theme, use npm where possible.\n\n* To add JavaScript modules not distributed via npm, you can create new subdirectories within [assets/js/](https://github.com/bigcommerce/cornerstone/tree/master/assets/js).\n\n* Theme-Specific JavaScript modules are provided in the theme's [assets/js/theme/](https://github.com/bigcommerce/cornerstone/tree/master/assets/js/theme) subdirectory.\n\n* To find the mapping between modules in assets/js/theme/ and page types, examine the PageClasses object contained in [assets/js/app.js](https://github.com/bigcommerce/cornerstone/blob/master/assets/js/app.js).\n\n* You can map JavaScript modules to custom page templates by editing the [assets/js/app.js](https://github.com/bigcommerce/cornerstone/blob/master/assets/js/app.js) file.",
                          "header": {
                            "anchor": "adding_summary"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Basic NPM Tutorial",
                    "route": {
                      "path": "/basic-npm-tutorial"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Basic <code>NPM</code> Tutorial</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#basic_what-were-building\">What We're Building</a></li>\n    <li><a href=\"#basic_set-up\">Set Up Your Store</a></li>\n    <li><a href=\"#basic_install-dependencies\">Install Dependencies</a></li>\n    <li><a href=\"#basic_configure-webpack\">Configure Webpack Loaders</a></li>\n    <li><a href=\"#basic_import-dependencies\">Import Dependencies</a></li>\n    <li><a href=\"#basic_configured-loaded-method\">Configure the loaded() Method</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## What We're Building\n\nThis example will use the [Foundation-datepicker.js](http://foundation-datepicker.peterbeno.com/#basic-example) plugin to implement a datepicker for product pages' Delivery/Event Date fields."
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539276603841",
                          "header": {
                            "title": "Screenshot of final product"
                          },
                          "config": {
                            "bordered": true,
                            "maxWidth": "700",
                            "maxHeight": "700",
                            "centered": true,
                            "fluid": true
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Set Up Your Store\n\nTo test this example, you'll want your (sandbox or production) store to include at least a couple of products that have a `Delivery/Event Date` configured. (In production, you'd typically use this feature for things like seasonally themed products, temporary promotions, or event tickets.)\n\nFor product configuration steps in the BigCommerce control panel, please see this support article."
                        },
                        {
                          "type": "text",
                          "data": "## Install Dependencies\n\nUse the following command to install this example's required dependencies:\n\n`npm install --save-dev css-loader moment foundation-datepicker style-loader`\n\nThe above command's options are:\n\n* `--save-dev` saves the dependencies as `DevDependencies`; this flags them as required for development, but not at runtime. [This stack overflow thread](https://stackoverflow.com/questions/18875674/whats-the-difference-between-dependencies-devdependencies-and-peerdependencies) provides further context to this concept.\n\n* `css-loader` and `style-loader` are webpack loaders, used together:\n\t* [`css-loader`](https://github.com/webpack-contrib/css-loader) resolves `@import` and `url()` expressions in CSS files.\n\t* [`style-loader`](https://github.com/webpack-contrib/style-loader) generically loads stylesheets by injecting a `<style>` tag.\n\n* [`moment`](https://momentjs.com/) is a JavaScript component parses, validates, and displays dates and times.\n\n* `foundation-datepicker` specifies the datepicker package to install."
                        },
                        {
                          "type": "text",
                          "data": "## Configure Webpack Loaders\n\nThe `style` and `css` loaders are used to import CSS and to inject it into the DOM. To configure, add the following object to the `rules` array in the appropriate webpack.*.js file (if you're not sure, use `webpack.common.js` or `webpack.config.js`):"
                        },
                        {
                          "type": "code",
                          "data": "{\n    test: /\\.css$/,\n    loader: 'style-loader!css-loader',\n}",
                          "header": {
                            "subtitle": "webpack.common.js"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "code",
                          "data": "// ...\n\nmodule.exports = {\n    bail: true,\n    context: __dirname,\n    entry: {\n        main: './assets/js/app.js',\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.js$/,\n                include: /(assets\\/js|assets\\\\js|stencil-utils)/,\n                use: {\n                    loader: 'babel-loader',\n                    options: {\n                        plugins: [\n                            '@babel/plugin-syntax-dynamic-import', // add support for dynamic imports (used in app.js)\n                            'lodash', // Tree-shake lodash\n                        ],\n                        presets: [\n                            ['@babel/preset-env', {\n                                loose: true, // Enable \"loose\" transformations for any plugins in this preset that allow them\n                                modules: false, // Don't transform modules; needed for tree-shaking\n                                useBuiltIns: 'usage', // Tree-shake babel-polyfill\n                                targets: '> 1%, last 2 versions, Firefox ESR',\n                            }],\n                        ],\n                    },\n                },\n            }, {\n                test:/\\.css$/,\n                loader: 'style-loader!css-loader'\n            }\n        ],\n    },\n  \n  //...",
                          "header": {
                            "subtitle": "webpack.common.js",
                            "title": "Cornerstone 3.4.4 Example"
                          },
                          "config": {
                            "highlightRange": [
                              {
                                "from": "31",
                                "to": "34"
                              }
                            ],
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Import the Dependencies\n\nImport these new dependencies into `<theme-name>/assets/js/theme/product.js`.\n\nIn `<theme-name>/assets/js/app.js`, notice that there is a mapping between the product page and the `product.js` script:\n\n```\nconst PageClasses = {\n    mapping: {\n        ...\n        'pages/product': product,\n```\n\nThat is, when a user navigates to the product page, the `product.js` script is run. First its constructor will be run, followed by the methods `before`, `loaded`, and `after` – in that order."
                        },
                        {
                          "type": "text",
                          "data": "## Configure the loaded() Method\n\nWe'll use the `loaded` method to initialize our datepicker widget:\n\n```\nimport $ from 'jquery';\nimport PageManager from '../page-manager';\nimport Review from './product/reviews';\nimport collapsibleFactory from './common/collapsible';\nimport ProductDetails from './common/product-details';\nimport videoGallery from './product/video-gallery';\nimport { classifyForm } from './common/form-utils';\nimport 'foundation-datepicker/js/foundation-datepicker.min.js';\nimport 'foundation-datepicker/css/foundation-datepicker.min.css';\nimport moment from 'moment';\n\n...\n\nloaded(next) {\n    let validator;\n\n    // Init collapsible\n    collapsibleFactory();\n\n    this.productDetails = new ProductDetails($('.productView'), this.context);\n\n    videoGallery();\n\n    const $reviewForm = classifyForm('.writeReview-form');\n    const review = new Review($reviewForm);\n\n    $('body').on('click', '[data-reveal-id=\"modal-review-form\"]', () => {\n        validator = review.registerValidation();\n    });\n\n    $reviewForm.on('submit', () => {\n        if (validator) {\n            validator.performCheck();\n            return validator.areAll('valid');\n        }\n\n        return false;\n    });\n\n    let $deliveryDateMth = $('#deliveryDateMth');\n    let $deliveryDateDay = $('#deliveryDateDay');\n    let $deliveryDateYr = $('#deliveryDateYr');\n    let earliestDate = moment(this.context.product.event_date.date_start, \"MMM Do YYYY\");\n    let latestDate = moment(this.context.product.event_date.date_end, \"MMM Do YYYY\");\n\n    $('#deliveryDate').fdatepicker({\n        leftArrow:'<<',\n        rightArrow:'>>',\n        onRender: function (date) {\n            return moment(date).isBetween(earliestDate, latestDate, null, '[]') ? '' : 'disabled';\n        }\n    })\n    .on('changeDate', function(event) {\n        let date = event.date;\n        $deliveryDateMth.val(date.getMonth() + 1);\n        $deliveryDateDay.val(date.getDate());\n        $deliveryDateYr.val(date.getFullYear());\n    })\n    .data('datepicker');\n\n    next();\n}\n```\n\nHighlighted below is the new code added to the `loaded` method:"
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539275148248",
                          "header": {
                            "title": "Code addition to loaded method in product.js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Update the `<theme-name>/templates/components/products/product-view.html` template, replacing the existing `{{#if product.event_date}}` block with the following:\n\n```\n{{#if product.event_date}}\n    {{inject 'product' product}}\n    <div class=\"form-field\">\n        <label class=\"form-label form-label--alternate form-label--inlineSmall\">\n        {{product.event_date.name}}:\n        <small>{{lang 'common.required'}}</small>\n        </label>\n        <input type=\"text\" class=\"form-input\" id=\"deliveryDate\" name=\"EventDate[Date]\" required>\n        <input type=\"hidden\" id=\"deliveryDateMth\" name=\"EventDate[Mth]\">\n        <input type=\"hidden\" id=\"deliveryDateDay\" name=\"EventDate[Day]\">\n        <input type=\"hidden\" id=\"deliveryDateYr\" name=\"EventDate[Yr]\">\n    </div>\n{{/if}}\n```\n\nNote that we're \"injecting\" the product here, so we have access to its properties. This could be done closer to the root of the tree, but it's been placed here for proximity to the code that requires it.\n\nWe also needed to add form fields for the `EventDate[Mth]`, `EventDate[Day]`, and `EventDate[Yr]` data, which we update whenever the `changeDate` event occurs. This conforms to the data format that the server expects. These fields are hidden from the user.\n"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Advanced NPM Tutorial",
                    "route": {
                      "path": "/advanced-npm-tutorial"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Advanced <code>NPM</code> Tutorial</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#advanced_video-of-what\">Video of What We're Building</a></li>\n    <li><a href=\"#advanced_install-dependencies\">Install Dependencies</a></li>\n    <li><a href=\"#advanced_import-dependencies\">Import Dependencies</a></li>\n    <li><a href=\"#advanced_update-webpackconfjs\">Update webpack.conf.js</a></li>\n    <li><a href=\"#advanced_update-appjs\">Update app.js</a></li>\n    <li><a href=\"#advanced_add-the-xcoupondrawer\">Add the <<code>x-coupon-drawer</code>> Element to the Page</a></li>\n    <li><a href=\"#advanced_call-initreact\">Call initReact from base.html</a></li>\n    <li><a href=\"#advanced_create-an-assetsjscomp\">Create an assets/js/components Folder</a></li>\n    <li><a href=\"#advanced_create-a-coupondrawerjs-file\">Create a CouponDrawer.js File</a></li>\n    <li><a href=\"#advanced_create-a-verticallinear\">Create a VerticalLinearStepper.js File</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Video of What We're Building\n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/sudvuxJFxKc\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>",
                          "header": {
                            "anchor": "advanced_video-of-what"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Install Dependencies\n\nMaterial-UI requires the `react-tap-event-plugin` module. Also, `document-register-element` is needed to polyfill `document.registerElement`. The babel presets and plugins are needed to support `Object.assign`, `react`, and `Material-UI`, respectively:\n\n```\nnpm install -save-dev document-register-element material-ui react react-dom react-tap-event-plugin  \nnpm install -save-dev babel-plugin-transform-object-assign babel-preset-react babel-preset-stage-1\n```",
                          "header": {
                            "anchor": "advanced_install-dependencies"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Import Dependencies\n\nNext, import the new dependencies into `<theme-name>/assets/js/app.js`\n\nNote the `CouponDrawer` import at the bottom. This file doesn't yet exist, but we'll shortly create a React component with this name:",
                          "header": {
                            "anchor": "advanced_import-dependencies"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1540279579178",
                          "header": {
                            "title": "app.js imports"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Update webpack.conf.js\n\nUpdate webpack.conf.js with the new presets and plug-ins, as shown here:",
                          "header": {
                            "anchor": "advanced_update-webpackconfjs"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1540279603654",
                          "header": {
                            "title": "webpack.config.js: presets and plugins"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Update app.js\n\nAdd the following code to the bottom of `<theme-name>/assets/js/app.js`:\n\n```\nwindow.initReact = function(contextJSON = '{}') {\n    injectTapEventPlugin();\n    const context = JSON.parse(contextJSON);\n    const proto = Object.create(HTMLElement.prototype, {\n        attachedCallback: {\n            value: function() {\n                const mountPoint = document.createElement('span');\n                const attrs = [].reduce.call(this.attributes, (memo, attr) => {\n                    memo[attr.name] = attr.value;\n                    return memo;\n                }, {});\n                const data = Object.assign({}, context, attrs);\n\n                this.appendChild(mountPoint);\n                ReactDOM.render(\n                    <MuiThemeProvider>\n                        <CouponDrawer data={data} />\n                    </MuiThemeProvider>,\n                    mountPoint\n                );\n            }\n        }\n    });\n    document.registerElement('x-coupon-drawer', {prototype: proto});\n}\n```\n\nThis sets up a handler for attaching an `<x-coupon-drawer>` element to the page. We're using React here to render the `CouponDrawer` component. This block of code was taken and modified from https://facebook.github.io/react/docs/web-components.html#using-react-in-your-web-components.",
                          "header": {
                            "anchor": "advanced_update-appjs"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Add the `<x-coupon-drawer>` Element to the Page \n\nAdd this in `<theme-name>/templates/layout/base.html`. (See the image below.) We're using this layout template for this example, although you would follow the same steps in any other template.",
                          "header": {
                            "anchor": "advanced_add-the-xcoupondrawer"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Call initReact from base.html \n\nAdd a call to `window.initReact`. We're continuing to work with the `base.html` page for this example. Notice that we're also passing in the jsContext here. The `initReact` method will merge this context with an object created from the attributes placed upon the `<x-coupon-drawer>`, and will pass the combined data along to the React component.",
                          "header": {
                            "anchor": "advanced_call-initreact"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1540279254389",
                          "header": {
                            "title": "base.html setup"
                          },
                          "config": {
                            "centered": true,
                            "fluid": true,
                            "bordered": true
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Create an assets/js/components Folder \n\nWe'll store our React components here.",
                          "header": {
                            "anchor": "advanced_create-an-assetsjscomp"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Create a CouponDrawer.js File\n\nCreate a `<theme-name>/assets/js/components/CouponDrawer.js` file. Populate this file with the following code block (which is adapted from http://www.material-ui.com/#/components/drawer):\n\n```\nimport React from 'react';\nimport Drawer from 'material-ui/Drawer';\nimport AppBar from 'material-ui/AppBar';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport VerticalLinearStepper from './VerticalLinearStepper';\n\nexport default class CouponDrawer extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {open: false};\n  }\n\n  handleToggle = () => this.setState({open: !this.state.open});\n\n  render() {\n    return (\n      <div>\n        <RaisedButton\n          label=\"Click here to get a coupon!\"\n          onTouchTap={this.handleToggle}\n        />\n        <Drawer width={200} openSecondary={true} open={this.state.open} >\n          <AppBar title=\"Coupon magic\" titleStyle={{fontSize: 14}} />\n          <VerticalLinearStepper />\n        </Drawer>\n      </div>\n    );\n  }\n}\n```",
                          "header": {
                            "anchor": "advanced_create-a-coupondrawerjs-file"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Create a VerticalLinearStepper.js File\n\nCreate a `<theme-name>/assets/js/components/VerticalLinearStepper.js` file. Populate this file with the following code block:\n\n```\nimport React from 'react';\nimport {\n  Step,\n  Stepper,\n  StepButton,\n  StepContent,\n} from 'material-ui/Stepper';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport FlatButton from 'material-ui/FlatButton';\nimport TextField from 'material-ui/TextField';\n\n/**\n * A basic vertical non-linear implementation\n */\nclass VerticalLinearStepper extends React.Component {\n\n  constructor(props) {\n      super(props);\n  }\n\n  state = {\n    stepIndex: 0,\n  };\n\n  handleNext = () => {\n    const {stepIndex} = this.state;\n    if (stepIndex < 2) {\n      this.setState({stepIndex: stepIndex + 1});\n    }\n  };\n\n  handlePrev = () => {\n    const {stepIndex} = this.state;\n    if (stepIndex > 0) {\n      this.setState({stepIndex: stepIndex - 1});\n    }\n  };\n\n  renderStepActions(step) {\n    return (\n      <div style={{margin: '12px 0'}}>\n        <RaisedButton\n          label=\"Next\"\n          disableTouchRipple={true}\n          disableFocusRipple={true}\n          primary={true}\n          onTouchTap={this.handleNext}\n          style={{marginRight: 12}}\n        />\n        {step > 0 && (\n          <FlatButton\n            label=\"Back\"\n            disableTouchRipple={true}\n            disableFocusRipple={true}\n            onTouchTap={this.handlePrev}\n          />\n        )}\n      </div>\n    );\n  }\n\n  render() {\n    const {stepIndex} = this.state;\n\n    return (\n      <div style={{maxWidth: 380, maxHeight: 400, margin: 'auto'}}>\n        <Stepper\n          activeStep={stepIndex}\n          linear={false}\n          orientation=\"vertical\"\n        >\n          <Step>\n            <StepButton onTouchTap={() => this.setState({stepIndex: 0})}>\n              Do this\n            </StepButton>\n            <StepContent>\n              <p>\n                Navigate to <a href=\"http://example.com\">here</a> and get your code.\n              </p>\n              {this.renderStepActions(0)}\n            </StepContent>\n          </Step>\n          <Step>\n            <StepButton onTouchTap={() => this.setState({stepIndex: 1})}>\n              Then this\n            </StepButton>\n            <StepContent>\n              <TextField hintText=\"Enter your code here\" style={{height: 100, width: 100}}/>\n              {this.renderStepActions(1)}\n            </StepContent>\n          </Step>\n          <Step>\n            <StepButton onTouchTap={() => this.setState({stepIndex: 2})}>\n              Collect your coupon!\n            </StepButton>\n            <StepContent>\n              <p>\n                <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/Wikipedia_mobile_en.svg/296px-Wikipedia_mobile_en.svg.png\"/>\n              </p>\n              {this.renderStepActions(2)}\n            </StepContent>\n          </Step>\n        </Stepper>\n      </div>\n    );\n  }\n}\n\nexport default VerticalLinearStepper;\n```\n\nThe above code block was adapted from http://www.material-ui.com/#/components/stepper.",
                          "header": {
                            "anchor": "advanced_create-a-verticallinear"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "We must register a custom element to set up the \"root\" of every React component we create. However, within a React component, we can import other React components without having to register them. For example, here we register x-coupon-drawer as a custom element that renders the React CouponDrawer component. However, within CouponDrawer, we can simply import the VerticalLinearStepper component needing to set it up in the same way.",
                            "title": " Note on the VerticalLinearStepper.js Example"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Page Types and Life Cycle",
                    "route": {
                      "path": "/new-subpage"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Page Types and Life Cycle</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#page-types_stencil-utils\">stencil-utils Library</a></li>\n    <li><a href=\"#page-types_javascript-api\">JavaScript API</a></li>\n    <li><a href=\"#page-types_callback\">Callback Methods</a></li>\n    <li><a href=\"#page-types_javascript\">JavaScript Template Context Injection</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## stencil-utils Library\n\n[stencil-utils](/stencil-docs/adding-event-hooks-to-your-theme/stencil-utils-api-reference) is our supporting library for events and remote interactions.\n\n",
                          "header": {
                            "anchor": "page-types_stencil-utils"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Page Types\n\nStencil themes include an API for running JavaScript on a per-page basis.\n\nTo properly write JavaScript for your theme, you will have the following page types available to you:\n\n* `pages/account/addresses`\n* `pages/account/add-address`\n* `pages/account/add-return`\n* `pages/account/add-wishlist`\n* `pages/account/recent-items`\n* `pages/account/download-item`\n* `pages/account/edit`\n* `pages/account/return-saved`\n* `pages/account/returns`\n* `pages/auth/login`\n* `pages/auth/account-created`\n* `pages/auth/create-account`\n* `pages/auth/new-password`\n* `pages/blog`\n* `pages/blog-post`\n* `pages/brand`\n* `pages/brands`\n* `pages/cart`\n* `pages/category`\n* `pages/compare`\n* `pages/errors`\n* `pages/gift-certificate/purchase`\n* `pages/gift-certificate/balance`\n* `pages/gift-certificate/redeem`\n* `global`\n* `pages/home`\n* `pages/order-complete`\n* `pages/page`\n* `pages/product`\n* `pages/search`\n* `pages/sitemap`\n* `pages/subscribed`\n* `pages/account/wishlist-details`\n* `pages/account/wishlists`\n* `pages/order-confirmation`\n* `pages/checkout`\n\nThese page types correspond to the pages within your theme. Each of these page types maps to an ES6 module that extends the base `PageManager` abstract class:",
                          "header": {
                            "anchor": "page-types_javascript-api"
                          }
                        },
                        {
                          "type": "code",
                          "data": "export default class Blog extends PageManager {\n        constructor() {\n            //Setup code goes here – attach to internals, and use internals as you would 'this'\n        }\n    }",
                          "header": {
                            "title": "pages/blog extending the page PageManager class"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "",
                            "body": "1. Notice the page types correspond to the html pages in [cornerstone/templates/pages/](https://github.com/bigcommerce/cornerstone/tree/master/templates/pages)"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## JavaScript Template Context Injection\n\nOccasionally, you might need to use dynamic data from the template context within your theme's client-side application code. Two helpers are provided to help achieve this.\n\nThe `inject` helper allows you to compose a json object with a subset of the template context to be sent to the browser:\n\n`{{inject \"stringBasedKey\" contextValue}}`\n\nTo retrieve the parsable JSON object, just call `{{jsContext}}` after all of the `{{inject}}` calls.\n\nFor example, to set up the product name in your client-side app, you can do this if you're in the context of a product:",
                          "header": {
                            "anchor": "page-types_javascript"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{{inject \"myProductName\" product.title}}\n\n<script>\n// Note the lack of quotes around the jsContext handlebars helper, it becomes a string automatically.\nvar jsContext = JSON.parse({{jsContext}}); //jsContext would output \"{\\\"myProductName\\\": \\\"Sample Product\\\"}\" which can feed directly into your JavaScript\n\nconsole.log(jsContext.myProductName); // Will output: Sample Product\n</script>",
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "You can compose your JSON object across multiple pages, to create a different set of client-side data depending on the currently loaded template context.\n\nStencil's Cornerstone base theme makes the `jsContext` available as `this.context`, both on the active page scoped and on global `PageManager` objects."
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Conditional-Logic Examples",
              "route": {
                "path": "/conditional-logic-examples"
              },
              "data": {
                "children": [
                  {
                    "title": "Catalog Price Object: How Properties Interact",
                    "route": {
                      "path": "/catalog-price-object"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Catalog Price Object: How Properties Interact</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#catalog-price_excluding-tax\">Examples Excluding Tax</a></li>\n    <li><a href=\"#catalog-price_including-and-excluding\">Examples Including and Excluding Tax</a></li>\n    <li><a href=\"#catalog-price_quick-reference\">Control Panel Mapping</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "As a theme developer, you can use the *Catalog Price Object* to highlight the savings that a merchant is offering over the MSRP (Retail Price) directly on the storefront by simply referencing the product's [Catalog Price Object](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price) and the correct property for the product. \n\nMerchants can use Control Panel options to set the following prices for a catalog product:",
                          "header": {}
                        },
                        {
                          "type": "html",
                          "data": "<table>\n  <tr>\n    <th>Control Panel Field</th>\n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>Default Price</td>\n    <td>This is the product’s standard store price. The <bb>Excluding/Including Tax</b> indicator to the right of the <b>Default Price</b> field is applicable to all price fields (Cost, MSRP, Sale Price).</td>\n  </tr>\n  <tr>\n    <td>Cost Price</td>\n    <td>The product's <b>Cost Price</b> property is never returned to the storefront by design. Generally, merchants would not want to reveal the true cost of goods to shoppers. The cost price field is meant for reports and third-party accounting integrations. </td>\n  </tr>\n  <tr>\n    <td>MSRP (Retail Price)</td>\n    <td>This field contains the Manufacturer's Standard Retail Price, also known as the list price. MSRP is the manufacturer's suggested retail price, a price recommended for the sale of an item in all retail outlets.</td>\n  </tr>\n  <tr>\n    <td>Sale Price</td>\n    <td>This field is the product's reduced store price.</td>\n  </tr>\n</table>"
                        },
                        {
                          "type": "text",
                          "data": "These options and assigned values are each represented in the [Catalog Price Object](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price), allowing theme developers to pull the information and render it onto the storefront to highlight the savings offered by a merchant."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Catalog Price Object Examples Excluding Tax\n\n### No Sale Price Defined in Control Panel\n\nAssume that a merchant has defined the following for a product in the Control Panel:\n\n* **Default Price**\n* **Cost Price**\n* **Retail Price (MSRP)**\n\nNo **Sale Price** is defined for the product.",
                          "header": {
                            "anchor": "#catalog-price_excluding-tax"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1557355653770",
                          "header": {
                            "title": "Product in Control Panel (no Sale Price defined)"
                          }
                        },
                        {
                          "type": "text",
                          "data": "A corresponding [Catalog Price Object](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price) for the product will be structured as follows:"
                        },
                        {
                          "type": "code",
                          "data": "\"product\": {\n    ...\n  },\n  \"price\": {\n    \"without_tax\": {\n      \"formatted\": \"$20.00\",\n      \"value\": 20\n    },\n    \"tax_label\": \"Sales Tax\",\n    \"rrp_without_tax\": {\n      \"formatted\": \"$25.00\",\n      \"value\": 25\n    },\n    \"saved\": {\n      \"formatted\": \"$5.00\",\n      \"value\": 5\n    },\n    \"retail_price_range\": {\n      \"min\": {\n        \"without_tax\": {\n          \"formatted\": \"$25.00\",\n          \"value\": 25\n        }\n      },\n      \"max\": {\n        \"without_tax\": {\n          \"formatted\": \"$25.00\",\n          \"value\": 25\n        }\n      }\n    }\n  }",
                          "header": {
                            "title": "Catalog Price Object (no Sale Price defined)"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Items to note about the Catalog Price Object above: \n\n* `without_tax`: this property maps to the control panel’s **Default Price** field.\n* `rrp_without_tax`: `rrp` is an abbreviation for \"regular retail price.\" This property maps to the control panel's **MSRP (Retail Price)** field. \n* `saved`:  this property is the difference between the existing values for `without_tax` (**Default Price**) and `rrp_without_tax` (**MSRP**).\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### Sale Price Defined in Control Panel\n\nAssume that a merchant has defined the following for a product in the Control Panel:\n\n* **Default Price**\n* **Cost Price**\n* **Retail Price (MSRP)**\n* **Sale Price**",
                          "header": {}
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1556748687478",
                          "header": {
                            "title": "Product in Control Panel (Sale Price defined)"
                          }
                        },
                        {
                          "type": "text",
                          "data": "A corresponding *Catalog Price Object* for the product will be structured as shown below:"
                        },
                        {
                          "type": "code",
                          "data": "\"product\": {\n  ...\n  \"price\": {\n    \"without_tax\": {\n      \"formatted\": \"$15.00\",\n      \"value\": 15\n    },\n    \"tax_label\": \"Sales Tax\",\n    \"sale_price_without_tax\": {\n      \"formatted\": \"$15.00\",\n      \"value\": 15\n    },\n    \"non_sale_price_without_tax\": {\n      \"formatted\": \"$20.00\",\n      \"value\": 20\n    },\n    \"rrp_without_tax\": {\n      \"formatted\": \"$25.00\",\n      \"value\": 25\n    },\n    \"saved\": {\n      \"formatted\": \"$10.00\",\n      \"value\": 10\n    },\n    \"retail_price_range\": {\n      \"min\": {\n        \"without_tax\": {\n          \"formatted\": \"$25.00\",\n          \"value\": 25\n        }\n      },\n      \"max\": {\n        \"without_tax\": {\n          \"formatted\": \"$25.00\",\n          \"value\": 25\n        }\n      }\n    }\n  }",
                          "header": {
                            "title": "Catalog Price Object (Sale Price defined)"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Items to note about the *Catalog Price* Object above: \n\n* The `sale_price_without_tax` property maps to the product’s effective price is the Control Panel's **Sale Price** field. The `sale_price_without_tax` property will directly expose the  **Sale Price** set on a base product, variant, or price record. \n* The regular store price is now displayed in an added property called `non_sale_price_without_tax`. \n\nProperties noted will only be displayed if a **Sale Price** is set on the product."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### Prices and Conditional Logic Example\n\nStencil structures product prices for backward compatibility with the BigCommerce platform's traditional treatment of prices. This behavior enables you to add logic that determines whether to display a strikeout price on the storefront.\n\nThe example below tests for the presence of the `sale_price_without_tax` property (you could also look for the `sale_price_with_tax` property). The presence of the `sale_price_without_tax` property means that the product has been given a **Sale Price**. \n\nWith the logic below, the page will display the standard store price with a strikeout across it, placed next to the **Sale Price**, indicating the current selling price of the product.\n\n",
                          "header": {
                            "anchor": "catalog-price_prices-and-conditional"
                          }
                        },
                        {
                          "type": "code",
                          "data": "  {{#or price.sale_price_without_tax price.sale_price_with_tax}}\n     ... [code to display on-sale strikeout pricing or content for an on sale product]  ...\n  {{/or}}",
                          "header": {
                            "title": "Conditional Logic "
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Catalog Price Object Examples Including and Excluding Tax \n\nDepending on how the store has been set up in the Control Panel’s **Store Setup** › **Tax** › **Configure Tax Display Settings**, the *Catalog Price Object* properties may represent prices in the following ways:\n\n* **Including tax**\n* **Excluding tax**\n* **Including and excluding tax** \n\nThis display setting affects how values are returned in the *Catalog Price Object* and how the values appear on storefront pages.",
                          "header": {
                            "anchor": "#catalog-price_including-and-excluding"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539842045139",
                          "header": {
                            "title": "Configure Tax Display Settings"
                          },
                          "config": {
                            "centered": true,
                            "fluid": true,
                            "bordered": true,
                            "maxWidth": "600",
                            "maxHeight": "400"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### No Sale Price Defined in Control Panel\n\nAssume that a merchant has defined the following for a tax configurations for a product in the Control Panel:\n\n* Show prices on Product Pages **Including and excluding tax**\n* Flat 10% tax rate configured\n\nThere is no defined a **Sale Price** for the product.\n\nA corresponding *Catalog Price Object* for the product will be structured as shown below:"
                        },
                        {
                          "type": "code",
                          "data": "\"product\": {\n  \"price\": {\n    \"with_tax\": {\n      \"formatted\": \"$165.00\",\n      \"value\": 165\n    },\n    \"without_tax\": {\n      \"formatted\": \"$150.00\",\n      \"value\": 150\n    },\n    \"rrp_with_tax\": {\n      \"formatted\": \"$275.00\",\n      \"value\": 275\n    },\n    \"rrp_without_tax\": {\n      \"formatted\": \"$250.00\",\n      \"value\": 250\n    },\n    \"saved\": {\n      \"formatted\": \"$110.00\",\n      \"value\": 110\n      },\n    \"tax_label\": \"Tax\"\n  }\n}",
                          "header": {
                            "title": "Product Including and Excluding Tax (no Sale Price defined)"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Items to note about the *Catalog Price Object* example above:\n\n* `with_tax`: This property represents the `without_tax` value plus a 10% tax markup.\n* `rrp_with_tax`: This property represents the `rrp_without_tax` value plus a 10% tax markup."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "You would see these same properties and values if the Control Panel setting had been **Including tax** (as opposed to **Including and excluding tax**). These properties and values would not be available for a Control Panel setting of **Excluding tax**.",
                            "title": "Tax Display Configurations",
                            "type": "warning"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "### Sale Price Defined in Control Panel \n\nAssume that a merchant has defined the following for a tax configurations for a product in the Control Panel, alongside a defined **Sale Price**:\n\n* Show prices on Product Pages **Including and excluding tax**\n* Flat 10% tax rate configured",
                          "header": {}
                        },
                        {
                          "type": "code",
                          "data": "\"product\": {\n  \"price\": {\n    \"with_tax\": {\n      \"formatted\": \"$135.30\",\n      \"value\": 135.3\n    },\n    \"without_tax\": {\n      \"formatted\": \"$123.00\",\n      \"value\": 123\n    },\n    \"sale_price_without_tax\": {\n      \"formatted\": \"123.00\",\n      \"value\": 123\n    },\n    \"sale_price_with_tax\": {\n      formatted: \"135.30\",\n      value: 135.3\n    },\n    \"rrp_with_tax\": {\n      \"formatted\": \"$275.00\",\n      \"value\": 275\n    },\n    \"rrp_without_tax\": {\n      \"formatted\": \"$250.00\",\n      \"value\": 250\n    },\n    \"saved\": {\n      \"formatted\": \"$139.70\",\n      \"value\": 139.7\n    },\n    \"non_sale_price_without_tax\": {\n      \"formatted\": \"$150.00\",\n      \"value\": 150\n    },\n    \"non_sale_price_with_tax\": {\n      \"formatted\": \"$165.00\",\n      \"value\": 165\n    },\n    \"tax_label\": \"Tax\"\n  }\n}",
                          "header": {
                            "title": "Product Including and Excluding Tax (Sale Price defined)"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Items to note about the *Catalog Price Object* above:\n\n* The `non_sale_price_without_tax` and `non_sale_price_with_tax` properties represent the standard store price with and without tax.\n* The `sale_price_without_tax` and `sale_price_without_tax` represent the product's defined **Sale Price**.\n* The `saved` value is based on the difference between the `with_tax` and `non_sale_price_with_tax` values."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Control Panel Mapping\n\n<table> \n  <tr>\n    <th>Control-Panel Field</th>\n    <th>Catalog Price Object Property</th>   \n    <th>Description</th>\n  </tr>\n  <tr>\n    <td>Default Price (excluding tax)</td>\n    <td>\n      <ul>\n        <li>if <b>Sale Price</b> defined:</li> <code>{{ product.price.non_sale_price_without_tax }}</code>\n        <li>if no <b>Sale Price</b> defined</li> <code>{{ product.price.without_tax }}</code>\n    </td>    \n    <td>The standard store price for the product.</td>\n  </tr>\n  <tr>   \n    <td>Default Price (including tax)</td>\n    <td><li>if <b>Sale Price</b> defined:</li><code>{{ product.price.non_sale_price_with_tax }}</code>\n      <li>if no <b>Sale Price</b> defined</li> <code>{{ product.price.with_tax }}</code>\n    </td>   \n    <td>The standard store price for the product, with tax.</td>\n  </tr>\n  <tr>\n    <td>Cost Price</td>\n    <td>Cost Price is not returned in the Catalog Price Object.</td>\n    <td>This field represents true cost of goods, and is typically meant for reports and third-party accounting integrations.</td>\n  </tr>  \n  <tr>   \n    <td>MSRP (Retail Price) (excluding tax)</td>\n    <td><code>{{ product.price.rrp_without_tax }}</code></td>  \n    <td>Represents the product’s list price, or Manufacturer's Standard Retail Price (Retail Price).</td>\n  </tr>  \n  <tr>   \n    <td>MSRP (Retail Price) (including tax)</td>\n    <td><code>{{ product.price.rrp_with_tax }}</code></td>\n    <td>Used to represent the product’s list price or Manufacturer's Standard Retail Price (MSRP), including tax.</td>\n  </tr>  \n  <tr>\n    <td>Sale Price (excluding tax)</td>\n    <td><code>{{product.price.sale_price_without_tax}}</code></td>\n    <td>This product’s discounted/sale price.</td>\n  </tr> \n  <tr>\n    <td>Sale Price (including tax)</td>\n    <td><code>{{ product.sale_price_with_tax }}</code></td>\n    <td>This product’s discounted/sale price, with tax.</td>\n  </tr>\n  <tr>   \n    <td>Difference between Default Price and MSRP (Retail Price) (<i>Default Price - MSRP (Retail Price)</i>)</td>\n    <td><code>{{ product.price.saved }}</code></td>\n    <td>The customer’s savings on the effective price versus list price.</td>\n  </tr>  \n</table>",
                          "header": {
                            "anchor": "catalog-price_quick-reference"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Related Articles\n\n* [Catalog Price Object](/stencil-docs/stencil-object-model-reference/stencil-objects/common-objects/catalog-price)\n* [Adding a New Product](https://support.bigcommerce.com/s/article/Adding-Products#new-product) (BigCommerce Knowledge Base)\n\n"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Cart Price Properties",
                    "route": {
                      "path": "/cart-price-relationships"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Cart Price Properties</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#cart-price-relationships_rrp\">RRP</a></li>\n    <li><a href=\"#cart-price-relationships_bulk-pricing\">Bulk Pricing</a></li>\n    <li><a href=\"#cart-price-relationships_price\">Price</a></li>\n    <li><a href=\"#cart-price-relationships_cart-item-full-response\">Cart Item Full Response</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "This page shows the price properties available on the `{{cart.items}}` object. \n\nFor the examples below we will use a cart_item with the following pricing:\n* Base Price: $100\n* MSRP: $99\n* Sale Price: $55\n* Bulk Pricing: Set as a percentage.\n    * Buy two items get 1%\n    * Buy three items get 2%\n    * Buy four items get 3%",
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": "## RRP\n`rrp` is the MSRP or Manufactures Suggested Retail Price. This number will always be the same unless it is changed at the product level.",
                          "header": {
                            "anchor": "cart-price-relationships_rrp"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"rrp\": {\n      \"formatted\": \"$99.00\",\n      \"value\": 99\n    },",
                          "header": {
                            "title": "rrp"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Bulk Pricing \n\n`bulk_pricing` shows the lowest calculated price. \n\nItem on sale with 2 items added to the cart:",
                          "header": {
                            "anchor": "cart-price-relationships_bulk-pricing"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"bulk_pricing\": {\n      \"base_price\": {\n        \"formatted\": \"$99.00\",\n        \"value\": 99\n      },",
                          "header": {
                            "title": "Item not on sale with 2 items added to the cart"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"bulk_pricing\": {\n      \"base_price\": {\n        \"formatted\": \"$54.45\",\n        \"value\": 54.45\n      },",
                          "header": {
                            "title": "Item on sale with 2 items added to the cart"
                          },
                          "config": {
                            "mode": "json"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Price\n\n`price` shows the lowest calculated price of a single cart item. ",
                          "header": {
                            "anchor": "cart-price-relationships_price"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"price\": {\n      \"formatted\": \"$100.00\",\n      \"value\": 100\n    },\n",
                          "header": {
                            "title": "Two items in cart not on sale"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"price\": {\n      \"formatted\": \"$55.00\",\n      \"value\": 55\n    },",
                          "header": {
                            "title": "Two items in cart on sale"
                          }
                        },
                        {
                          "type": "code",
                          "data": "    \"price\": {\n      \"formatted\": \"$54.45\",\n      \"value\": 54.45\n    },",
                          "header": {
                            "title": "Two items in cart on sale with bulk pricing"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Cart Item Object Example",
                          "header": {
                            "anchor": "cart-price-relationships_cart-item-full-response"
                          }
                        },
                        {
                          "type": "code",
                          "data": "[\n  {\n    \"availability\": \"\",\n    \"brand\": {\n      \"name\": \"\"\n    },\n    \"bulk_pricing\": {\n      \"base_price\": {\n        \"formatted\": \"$54.45\",\n        \"value\": 54.45\n      },\n      \"discount_amount\": null,\n      \"discount_percentage\": null\n    },\n    \"can_modify\": true,\n    \"configurable_fields\": [],\n    \"custom_fields\": [],\n    \"id\": \"0c78e8f6-bc12-4a97-ba43-d1ebbdff1d71\",\n    \"image\": null,\n    \"max_purchase_quantity\": null,\n    \"min_purchase_quantity\": \"0\",\n    \"name\": \"BigCommerce Water Bottle\",\n    \"options\": [],\n    \"price\": {\n      \"formatted\": \"$54.45\",\n      \"value\": 54.45\n    },\n    \"product_id\": 202,\n    \"quantity\": 2,\n    \"release_date\": \"\",\n    \"remove_url\": \"/cart.php?action=remove&item=0c78e8f6-bc12-4a97-ba43-d1ebbdff1d71\",\n    \"rrp\": {\n      \"formatted\": \"$99.00\",\n      \"value\": 99\n    },\n    \"show_gift_wrapping\": true,\n    \"sku\": \"\",\n    \"total\": {\n      \"formatted\": \"$108.90\",\n      \"value\": 108.9\n    },\n    \"type\": \"Item\",\n    \"url\": \"https://{store_hash}/bigcommerce-water-bottle/\"\n  }\n]",
                          "header": {
                            "title": "Cart Item Response"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Calling Theme-Wide Variables via Handlebars",
                    "route": {
                      "path": "/calling-theme-wide-variables"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Calling Theme-Wide Variables via Handlebars</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#calling-theme-wide_calling-theme-wide\">Calling Theme-Wide Variables via Handlebars</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Calling Theme-Wide Variables via Handlebars\n\nAs shown in an earlier Quick Start example, you can reference variables from `config.json` in a theme template's front matter. But you can also call any `config.json` variable within a template's HTML/Handlebars body, by using a Handlebars expression that precedes the variable with `theme_settings`.\n\nBelow, from Cornerstone's `templates/pages/home.html`, is a code snippet that provides three examples:\n\n```\n<div class=\"main full\">\n    {{#if products.featured}}\n        {{> components/products/featured products=products.featured\n            columns=theme_settings.homepage_featured_products_column_count}}\n    {{/if}}\n\n    {{#if products.top_sellers}}\n        {{> components/products/top products=products.top_sellers\n            columns=theme_settings.homepage_top_products_column_count}}\n    {{/if}}\n\n    {{#if products.new}}\n        {{> components/products/new products=products.new \n            columns=theme_settings.homepage_new_products_column_count}}\n    {{/if}}\n</div> \n```\n\nAbove, each `if` conditional statement tests whether one of the three products attributes (Featured Products, Top Sellers/Popular Brands, or New Products) is declared within this template's front matter. If so, for the corresponding section on this page, it sets the local column count to match the theme-wide `theme_settings...._column_count value` defined in `config.json`.",
                          "header": {
                            "anchor": "calling-theme-wide_calling-theme-wide"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Dynamic Content Rendering on Stencil Storefronts",
                    "route": {
                      "path": "/dynamic-content-rendering"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Dynamic Content Rendering on Stencil Storefronts</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#dynamic-content_why-dynamic-content\">Why Dynamic Content?: Dropzones, Dynamic Tabs, and Snippets</a></li>\n    <li><a href=\"#dynamic-content_dropzones\">Dropzones</a></li>\n    <li><a href=\"#dynamic-content_dynamic-tabs\">Dynamic Tabs</a></li>\n    <li><a href=\"#dynamic-content_snippets\">Snippets</a></li>\n    <li><a href=\"#dynamic-content_recap\">Recap</a></li>\n  </ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "_We're gratefully sharing techniques devised by Ken Utting, Web Developer for BigCommerce client goruck.com_.\n\n## Why Dynamic Content?: Dropzones, Dynamic Tabs, and Snippets\n\nAt GORUCK, we've customized our Stencil theme (currently using the [Merchant](https://www.bigcommerce.com/theme/merchant-light/?_ga=2.52710120.1984523106.1539568940-967431010.1523308107) theme) to provide several ways to update our site content without requiring changes to the theme itself. This allows our content folks to make changes to our theme without having to wait on our software developers.\n\nAlso, by pushing content out of the theme, these techniques reduce the differences between our customized theme and the out-of-the-box (base) theme – which makes it easier to integrate ongoing updates into our theme. Finally, these techniques allow us share identical content across pages without copying and pasting.\n\nThree techniques in particular have proven useful to us. We call them Dropzones, Dynamic Tabs, and Snippets. There is nothing particularly special to GORUCK about these techniques, so there is no reason you can't adopt them for your own store/theme.\n\n### Building on the Control Panel\n\nThe BigCommerce control panel provides an HTML editor where you can enter custom content for Products, Categories, and custom static pages (Storefront > Web Pages). However, we encountered the following limitations:\n\nThe HTML editor will remove a number of tags, particularly style and script tags.\n\nWithout changes like the ones we made at GORUCK (described below), all the content will be placed in a single location on the page.\n\nAt GORUCK, we needed the ability to inject arbitrary HTML into our page, and to place that content at various specific page locations. To achieve this, we developed the three techniques described below.",
                          "header": {
                            "anchor": "dynamic-content_why-dynamic-content"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Dropzones\n\nLet's say that at the top of your category pages, you want to display a full-width, category-specific, image. And at the bottom of these pages, you want to display a category-specific message or image gallery.\n\nOne possibility is to define a custom page for every category. But aside from the work involved to set this up, every time you added or removed a category, you would need to add or remove a custom page from your theme. And of course, it's possible that you would also want control like this on product pages, and on other pages on your storefront.\n\nA more general solution we implemented was to create a small set of custom pages: one for categories, one for products, and so on. Each of the custom pages contains a few `div` elements that define dropzones for that page.\n\nWith these dropzones defined, we can then populate them with dynamic content specific to any instance of the page. Here is an example of a dropzone that places an image gallery at the bottom of a category page:",
                          "header": {
                            "anchor": "dynamic-content_dropzones"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539874696853",
                          "header": {
                            "title": "Dropzone that places an image gallery at the bottom of a category page"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Dropzones HTML\n\nThe HTML for a dropzone is simply something like:\n\n`<div id=\"gr-dropzone-top\"></div>`\n\nwhere the div's `id` defines the dropzone's name.\n\nThen, using the BigCommerce **control panel's custom HTML editor** (in this example, the Categories editor), we place our content inside div tags that specify the dropzone where the content should be inserted. Here is a simple example:\n\n```\n<div class=\"gr-dropzone\" data-gr-zone=\"gr-dropzone-top\">\n    <p>This content will be placed in a dropzone at the top of the page, because that dropzone has the id matching our data-gr-zone attribute.</p>\n</div>\n```\n\n### Dropzones HTML Example\n\nHere is an example of some HTML that we actually use:\n\n```\n<div class=\"gr-dropzone\" data-gr-zone=\"gr-dropzone-bottom\">\n    <h3>GORUCK GEAR IN THE FIELD</h3>\n    <div id=\"bv-grid-gallery\" data-gr-groups=\"goruck-rm-group\" data-gr-tags=\"gear\"></div>\n</div>\n```\n\n### Dropzones JavaScript\n\nThe content is moved from the default location to the dropzone by JavaScript we added to the PageManager class. In BigCommerce's Cornerstone base theme, Pixel Union's Merchant theme, and other Stencil themes, PageManager is the parent class of all page classes. So, its methods get invoked on every page. This makes it a great place to put code like this, which needs to run every time a page is loaded.\n\nWe modified our theme's PageManager.before method to invoke a new method named `gr_moveHtmlToDropzones`:\n\n```\n gr_moveHtmlToDropzones () {\n        $(\".gr-dropzone\").each(function () {\n            const $this = $(this);\n            const zoneId = $this.data(\"gr-zone\");\n            if (zoneId) {\n                $(\"#\" + zoneId).html($this.html());   // copy the html to where it should be\n                $this.remove();             // remove the html from its temporary location\n            } else {\n                console.warn(\"PageManager.gr_moveHtmlToDropzones: dropzone has no target.\");\n            }\n        });\n    }\n```\n\nFinally, in our .scss file, we set the `.gr-dropzone` class to display: none. This prevents the content from appearing on the page in the wrong location before PageManager has a chance to move it into the dropzone.",
                          "header": {
                            "anchor": "dynamic-content_dropzones"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Dynamic Tabs\n\nOur Stencil base theme presents information on our product pages in several tabs. We wanted to introduce several new tabs, and to vary the tabs by product category and brand. Additionally, we wanted the ability to store a tab's content in an external file, on our WebDAV or CDN (content delivery network).\n\nBy storing content in an external file, we can share identical content across pages, without copying and pasting. Also, changes to the content can be made just once, and be reflected on all our pages.\n\nSo we implemented a feature we call Dynamic Tabs. Dynamic Tabs are similar to dropzones, in that they allow you to use the control panel's HTML editor to provide content, while moving it to a specific location on the page. In this case, our content will appear in a tab.\n\nIn the example below, we use this technique to place the `RIGHT BY YOU` tab in the fourth position:",
                          "header": {
                            "anchor": "dynamic-content_dynamic-tabs"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539874970240"
                        },
                        {
                          "type": "text",
                          "data": "### Dynamic Tabs HTML\n\nThere are two versions of the HTML. The first is designed for a tab you want to drop in using a page's own HTML:\n\n```\n<div class=\"gr-tab\" data-gr-position=\"POSITION\" data-gr-title=\"TITLE\"> \n     CONTENT \n</div>\n```\n\nThe second version is designed for a tab that gets its content from an external file:\n\n```\n<div class=\"gr-tab\" data-gr-content=\"CONTENT URL\">\n</div>\n```\n\nIn this second case, the HTML in that external file must start with the POSITION and TITLE information:\n\n```\n<input id=\"gr-tab-data\" type=\"hidden\" data-gr-position=\"POSITION\" data-gr-title=\"TITLE\" /> \n CONTENT\n```\n\n### Dynamic Tabs Parameters\n\nPOSITION is a number, which determines where the dynamic tab will be put. For example, a POSITION of 3 means that the tab will be placed after the third tab.\n\nWe use a POSITION of 0 to place a tab ahead of the first tab. If the POSITION attribute is omitted, the tab will be placed after all the other tabs. (Note that if you add multiple dynamic tabs, any POSITION that you specify must account for the previously inserted dynamic tabs.)\n\nTITLE is the text you want to display as the tab's title. For example: Our Guarantee.\n\nCONTENT is any arbitrary HTML, and is displayed when the user clicks on the tab's title.\n\n### Dynamic Tabs HTML Example\n\nTo create the RIGHT BY YOU tab in the screenshot above, we added this code to our base theme's templates/pages/product.html template:\n\n```\n<!-- GORUCK Customization: pull in a dynamic tab -->\n  <div class=\"gr-tab\" data-gr-content=\"/content/tabs/dynamicTab1.html?v=14\">\n  </div>\n```\n\nThis tells our code to pull in a file named `dynamicTab1.html`, located in our WebDAV's `/content/tabs/` folder. The querystring is used just to defeat caching.\n\nHere are the contents of our `dynamicTab1.html` file:\n\n```\n<input id=\"gr-tab-data\" type=\"hidden\" data-gr-position=\"3\" data-gr-title=\"Right By You\"/>\n<div class=\"container container-small gr-rightbyyou\">\n  <div style=\"display: flex; flex-direction: column\">\n    <div style=\"display: flex\">\n      <div>\n        <img style=\"display: block; width: 100px; max-width: 100px; margin-right: 24px\" \n        src=\"https://content.goruck.com/2017site/products/free-returns-icon.png\" height=\"auto\"/>\n      </div>\n    <div>\n      <h3 style=\"margin-top: 0\">Free &amp; Easy Returns</h3>\n      <p>Don't like it? Send it back for free. Returnable in like-new condition within 30 days and \n      every order comes with a free return shipping label. Too easy.</p>\n    </div>\n  </div>\n\n  <div style=\"display: flex; margin-top: 12px\">\n    <div>\n      <img style=\"display: block; width: 100px; max-width: 100px; margin-right: 24px\" \n      src=\"https://content.goruck.com/2017site/products/challenge-excellence.png\" height=\"auto\"/>\n    </div>\n\n    <div>\n      <h3 style=\"margin-top: 0\">Challenge Excellence</h3>\n      <p>We have two grades, A and F and A- rounds down. Excellence is the standard and please hold us to it, \n      we want you to love your gear as much as we do.</p>\n    </div>\n  </div>\n\n  <div style=\"display: flex; margin-top: 12px\">\n    <div>\n      <img style=\"display: block; width: 100px; max-width: 100px; margin-right: 24px\" \n      src=\"https://content.goruck.com/2017site/products/customer-service-icon.png\" height=\"auto\"/>\n    </div>\n      <div>\n        <h3 style=\"margin-top: 0\">Do Right By People</h3>\n        <p>Our goal is to run a company our grandfathers would be proud of. And the central tenet \n        &mdash; an oldie but a goodie &mdash; is that we do whatever it takes to do right by people.\n        Contact us at <a href=\"https://goruck.zendesk.com/hc/en-us/requests/new\" target=\"_blank\">\n        team@goruck.com</a> with any questions and we'll get back to you ASAP.</p>\n      </div>\n    </div>\n  </div>\n</div>\n```\n\n### Dynamic Tabs Javascript \n\nAgain, the JavaScript code to implement Dynamic Tabs is invoked in the PageManager class' before method. The Dynamic Tabs code is more complex, and it relies on other classes we wrote to get content from the external server and cache it in the browser.\n\nNevertheless, none of it is rocket science. The three classes involved are 250 lines of code. Interested readers are invited to contact me via the BigCommerce Developers forum for more information about the implementation.\n\n"
                        },
                        {
                          "type": "text",
                          "data": "## Snippets\n\nSnippets are similar to Dynamic Tabs, in that they allow you to use the BigCommerce control panel's HTML editor to provide content, but pull it from a separate file. This allows you to share common content across multiple pages.\n\nAlso, because the control panel's HTML editor strips out stylesheets, this is a good way to provide page-specific styles for a page.\n\nWe use snippets at GORUCK to display our sizing charts, as shown below. This makes sense since because we have a handful of charts that need to be shared across many products, so we don't want to copy and paste each chart for every product that needs it."
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539878331668",
                          "config": {
                            "centered": true,
                            "fluid": true,
                            "bordered": true,
                            "maxWidth": "650",
                            "maxHeight": "350"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Snippets HTML\n\nHere is the format of the HTML that needs to placed on each page that uses the snippet:\n\n```\n<div class=\"gr-snippet\" data-gr-content=\"CONTENT URL\">\n     <em>Loading...</em>\n</div>\n```\n\nThe external file can contain any arbitrary HTML and CSS, and the styled HTML is displayed in the page location where the `gr-snippet` div is located.\n\n### Snippets JavaScript\n\nLike Dropzones and Dynamic Tabs, the Snippets code is invoked in `PageManager`'s `before` method. Snippets adds just another 50 lines of JavaScript code to the theme, also relying on the same code that Dynamic Tabs uses to get the external file and cache it in the browser.\n\n",
                          "header": {
                            "anchor": "dynamic-content_snippets"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Recap \n\nAt GORUCK, we've developed a number of techniques that allow us to separate our content from our theme. These techniques have proved valuable to us, because they allow us to:\n\n* Keep our content development and software development workflows separate.\n* Reduce modifications to our theme, which simplifies merging updates from our theme provider.\n* Share content across multiple pages.\n* Tailor our content based on product category and brand.",
                          "header": {
                            "anchor": "dynamic-content_recap"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Localization",
              "route": {
                "path": "/internationalization-and-localization"
              },
              "data": {
                "children": [
                  {
                    "title": "Localizing Stores",
                    "route": {
                      "path": "/localizing-stores"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Localizing Stores</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#localizing_translating-theme-files\">Translating Theme via Stencil CLI</a></li>\n    <li><a href=\"#localizing_localizing-checkout\">Localizing Checkout</a></li>\n    <li><a href=\"#localizing_localizing-control-panel\">Localizing Control Panel Content</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "A BigCommerce storefront can be customized to display in any one language of your choice. To fully localize a store into a language/region other than U.S. English, you will need to customize three areas:\n\n1. [Storefront theme pages](#localizing_translating-theme-files)\n\n_Translate static strings. This requires adding translation files for your chosen non-English languages, via Stencil CLI._\n\n2. [Checkout](#localizing_localizing-checkout) \n \n_Localizing checkout requires modifications both to theme files (in Stencil CLI) and to settings in the BigCommerce control panel._\n\n3. [Control Panel](#localizing_localizing-control-panel)\n\n_Adjust other localization details via the BigCommerce Control Panel._",
                          "header": {
                            "anchor": "localizing_localization-touchpoints"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "info",
                            "title": "Storefront Language Support",
                            "body": "Each storefront can only support a single language. If you want to support displaying multiple languages, we recommend setting up a separate store for each language."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Translating Theme via Stencil CLI\n\nThe bulk of localizing a store is translating content on your theme's page templates. You will need to abstract these templates' literal text strings into `{{lang}}` variables, then provide per-language JSON files that define these variables in corresponding key/value pairs.",
                          "header": {
                            "anchor": "localizing_translating-theme-files"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Localizing Checkout\n\nLocalizing your theme's checkout and order confirmation pages requires customizations within:\n\n* the corresponding templates ([checkout.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/checkout.html) and [order-confirmation.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/order-confirmation.html)) \n* each [JSON translation file](https://github.com/bigcommerce/cornerstone/tree/master/lang) \n* the [BigCommerce control panel](http://login.bigcommerce.com/deep-links/manage/)",
                          "header": {
                            "anchor": "localizing_localizing-checkout"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "title": "Checkout Localization",
                            "body": "Checkout localization is only available for [Optimized One-Page Checkout](/stencil-docs/template-files/customize-stencil-checkout/optimized-one-page-checkout#optimized_enable)"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Localizing Control Panel Content\n\nThe remaining localization options reside outside your theme and are accessible through the BigCommerce control panel:\n\n* [Product Catalog](#product-catalog)\n* [Currency](#currency)\n* [Date Format](#date-format)\n* [Order Statuses](#order-statuses)\n* [Blog](#blog)\n* [Static Web Pages](#static-web-pages)\n* [Transactional Emails](#transactional-emails)\n* [Gift Certificates](#gift-certificates)",
                          "header": {
                            "anchor": "localizing_localizing-control-panel"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "The BigCommerce platform does not currently support translation of Transactional Emails or Gift Certificates into languages other than English, so instead we have provided a best practice for each.",
                            "title": "Transactional Emails or Gift Certificates Translation"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### <div id=\"product-catalog\">Localizing the Product Catalog</div>\n\nYou must localize the store's product catalog separately from its theme. Each entry within a catalog can be set up in only one language, so you will want to localize a separate version of your catalog for each single-language store.\n\nFor an overview of populating the store catalog – including options for bulk-importing content that you can localize outside the BigCommerce platform – see [Adding Products](https://support.bigcommerce.com/s/article/Adding-Products) (BigCommerce Support).\n\n### <div id=\"currency\">Localizing Currency</div>\nEach store's default currency is configured in the BigCommerce control panel. For details, see [Changing Your Default Currency](https://support.bigcommerce.com/s/article/Managing-Currencies#default) (BigCommerce Support).\n\n### <div id=\"date-format\">Localizing Date Format</div>\nYou can set the appropriate date format for your store's language/region in the BigCommerce control panel (under [**Store Setup**›\n **Store Settings** ›\n **Date & Timezone**](http://login.bigcommerce.com/deep-links/manage/settings/store). For details, see [Changing Your Default Currency](https://support.bigcommerce.com/s/article/Managing-Currencies#default) (BigCommerce Support).\n\n### <div id=\"order-statuses\">Localizing Order Statuses</div>\n\nThe `order-status` labels displayed on a BigCommerce storefront are configured outside your theme. You can translate each of these strings via the BigCommerce control panel under [**Orders** ›\n **Order Statuses**](http://login.bigcommerce.com/deep-links/manage/orders/order-statuses). For instructions, see [Renaming an Order Status Label](https://support.bigcommerce.com/s/article/Order-Statuses#rename) (BigCommerce Support).\n\n### <div id=\"blog\">Localizing the Blog</div>\nBlog entries are managed through the BigCommerce control panel under [**Storefront Content** ›\n **Blog**](https://nik.mybigcommerce.com/manage/content/blog). You can add blog content in any language you choose. For details, see [Creating a Blog Post](https://support.bigcommerce.com/s/article/Using-the-Built-In-Blog#creating-post) (BigCommerce Support).\n\n### <div id=\"static-web-pages\">Localizing Static Web Pages</div>\nIf you create static pages as Stencil custom templates, you can localize their content just like other theme pages' content. However, if you create custom pages via the BigCommerce control panel (under [Storefront Content › Web Pages](http://login.bigcommerce.com/deep-links/manage/content/pages)), you must also enter their localized content via the control panel. \n\n### <div id=\"transactional-emails\">Managing Transactional Emails</div>\n\nBigCommerce does not currently provide native support for localizing transactional emails such as Order Confirmation or status updates. To fully localize a store into a language other than English, the simplest solution is to disable the sending of BigCommerce native emails.\n\nTo disable native emails, go to [Storefront › Email Templates](http://login.bigcommerce.com/deep-links//manage/storefront-manager/email-templates). Uncheck each email type that you prefer to customize. If you would like to localize transactional emails, see our Partner Apps, such as [Conversio](https://www.bigcommerce.com/apps/conversio/), for more details.\n\n### <div id=\"gift-certificates\">Managing Gift Certificates</div>\n\nThe BigCommerce platform does not currently support translation of gift certificates into languages other than English. To fully localize your store, you can choose to disable gift certificates via the BigCommerce control panel."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Resources\n\n### Related Articles\n\n * [Basis for Internationalization](/stencil-docs/internationalization-and-localization/basis-for-internationalization)\n* [Optimized One-Page Checkout](/stencil-docs/template-files/customize-stencil-checkout/optimized-one-page-checkout#optimized_enable)\n* [Enabling Optimized One-Page Checkout](/stencil-docs/template-files/customize-stencil-checkout/optimized-one-page-checkout#optimized_enable)\n* [Currency-Conversion Options](/stencil-docs/template-files/customize-stencil-checkout/currency-conversion) \n* [Multi-Language Checkout](/stencil-docs/template-files/customize-stencil-checkout/multi-language-checkout)\n* [Adding Products](https://support.bigcommerce.com/s/article/Adding-Products) (BigCommerce Knowledge Base)\n* [Changing Your Default Currency](https://support.bigcommerce.com/s/article/Managing-Currencies#default)(BigCommerce Knowledge Base)\n\n### Additional Resources\n\n* [checkout.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/checkout.html) (BigCommerce Github)\n* [order-confirmation.html](https://github.com/bigcommerce/cornerstone/blob/master/templates/pages/order-confirmation.html) (BigCommerce Github)\n* [JSON translation file](https://github.com/bigcommerce/cornerstone/tree/master/lang) (BigCommerce Github)"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Defining Translation Keys",
                    "route": {
                      "path": "/defining-translation-keys"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Defining Translation Keys</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#basis_what-translates\">What Does and Doesn't Translate</a></li>\n    <li><a href=\"#basis_required\">Required Subdirectory</a></li>\n    <li><a href=\"#basis_schema\">The Schema</a></li>\n    <li><a href=\"#basis_localization-file\">Localization File Structure</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## What Does and Doesn't Translate\n\nThe Stencil framework allows you to define multiple translations for each theme based on a predefined schema. Theme developers are not required to localize a theme in order to make it work. BigCommerce does not provide translations for the theme’s content, however, you have the option of localizing your themes for desired target languages, based on the provided schema.\n\n* In order for theme translation to occur, you must create a JSON file for each language you choose to support and include key/value pairs for the text blocks/parameters that you choose to translate. The following pages provide details for these steps.\n\n* The translated values will be displayed to visitors who have selected the corresponding language in their browser's locale preferences. The Stencil framework automatically detects the Accept-Language request HTTP header from the visitor's browser.\n\n* Where a Stencil theme contains no JSON file matching any of the visitor's preferred languages, it will fall back to the values in the default English-language JSON file.\n\n* Stencil's multi-language capabilities are currently limited to these particular strings that you specify within the theme. The Stencil framework does not currently translate content rendered from a store's catalog database – for example, products' names.\n\n* If you want to fully support multiple languages, we recommend that you set up a separate storefront for each language. This will enable you to thoroughly customize all of your content (including your product catalog) for each target audience.",
                          "header": {
                            "anchor": "basis_what-translates"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Required Subdirectory\n\nWithin each theme, a top level `/lang/` subdirectory is reserved for internationalization. This `.../lang/` subdirectory, with its contained en.json file (which contains English-language defaults), must be present in order for a Stencil theme to function.\n\nYou can localize a theme by providing other appropriate .json translation files in the `.../lang/` subdirectory. One file is required for each language that you want to support. (These can include non-U.S. versions of English, each with their own spellings.)\n\nWithin these files, you would define key values corresponding to the text blocks in your theme's templates that you choose to abstract into translatable keys.\n",
                          "header": {
                            "anchor": "basis_required"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## The Schema\n\nName your translation files based on the <a href=\"https://tools.ietf.org/html/bcp47\">BCP47 specification</a> of language and region codes. For a summary of how these codes are designed, see the World Wide Web Consortium’s <a href=\"http://www.w3.org/International/articles/language-tags/\">overview</a>.<br>\n\n <br>\n\nYou can find a list of code subtags in the <a href=\"http://www.iana.org/assignments/language-subtag-registry\">IANA Language Subtag Registry</a>. These subtags are primitives that you can combine to create file names’ prefixes for individual regions. Here are some examples:\n\n<table>\n\t\t<tr>\n    <th>Localization file name</th>\n    <th>Corresponding regional language variant</th>\n    <th>Subtags used</th>\n  </tr>\n  <tr>\n    <td>en.json</td>\n    <td>English (default file)</td>\n    <td>en (English)</td>\n  </tr>\n  <tr>\n    <td>en-US.json</td>\n    <td>American English</td>\n    <td>en (English) + US (United States)</td>\n  </tr>\n  <tr>\n    <td>en-AU.json</td>\n    <td>Australian English</td>\n    <td>en (English) + AU (Australia)</td>\n  </tr>\n  <tr>\n    <td>fr.json</td>\n    <td>French</td>\n    <td>en (French)</td>\n  </tr>\n  <tr>\n    <td class=\"\">fr-CA.json</td>\n    <td class=\"\">Canadian French</td>\n    <td class=\"\">fr (French) + CA (Canada)</td>\n  </tr>\n</table>\n\n\nFor more examples of frequently-used codes, see the following linked table’s \"LCID string\" (middle) column: <a href=\"http://www.science.co.il/Language/Locale-codes.asp\">http://www.science.co.il/Language/Locale-codes.asp</a>.",
                          "header": {
                            "anchor": "basis_schema"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Localization File Structure\n\nThe `.json` translation files have a straightforward structure of key-value pairs. Here is an example, from Stencil’s default `en.json` file:\n\n`\"welcome_back\": \"Welcome back, {name}\"`\n\nAbove, `\"welcome_back\"` is an arbitrary key name for a welcome message. The string `\"Welcome back, {name}\"` is its assigned value for English-language stores.\n\nIf you design your theme’s storefront pages to refer to this message by its generic key name `\"welcome_back\"`, they can pass its localized value in other languages, as that value is defined in each language’s `.json` file.\nKey-value pairs are grouped into objects, as you can see in this longer example below:",
                          "header": {
                            "anchor": "basis_localization-file"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{\n   \"header\": {\n    \"welcome_back\": \"Welcome back, {name}\"\n   },\n   \"prelaunch\": {\n    \"coming_soon\": \"Coming Soon\",\n    \"intro\": \"This store will be launching shortly. Please visit again!\"\n   },\n   \"cart\": {\n    \"items\": \"{NUM, plural, =0{(0 items)} one {(# item)} other {(# items)}}\",\n    \"label\": \"Cart\",\n    \"is_empty\": \"Your cart is empty\",\n     \"coupon_code\": \"Coupon Code\",\n    \"gift_certificate\": \"Gift Certificate\",\n    \"freeshipping\": \"Free Shipping\",\n    \"shipping_peritem\": \"Per Item Shipping\",\n    \"shipping_estimator\": {\n        \"add_info\": \"Add Info\",\n        \"select_a_country\": \"Select a Country\",\n        \"select_a_state\": \"Select a State\",\n        \"estimate_shipping\": \"Estimate Shipping\"\n    }\n   },\n}",
                          "config": {
                            "mode": "js"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Invoking Translation Keys",
                    "route": {
                      "path": "/invoking-translation-keys"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Invoking Translation Keys</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#invoking_translation\">Translation Syntax</a></li>\n    <li><a href=\"#invoking_video\">Video Demo</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Translation Syntax\n\nOnce keys and values are defined in the [.json translation files](https://github.com/bigcommerce/cornerstone/tree/master/lang), you can invoke dynamic translation strings using the the [custom `{{lang}}` Handlebars helper](/stencil-docs/handlebars-syntax-and-helpers/handlebars-helpers-reference/string-helpers/custom-string-helpers#handlebars_lang). Your invocation would follow this generic format:",
                          "header": {
                            "anchor": "invoking_translation"
                          }
                        },
                        {
                          "type": "code",
                          "data": "{{lang \"translation.key\" optionalVariable=”someValue”}}",
                          "header": {
                            "title": "Translation invocation"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Here is how this works. In a non-internationalized theme, a storefront page might include a string like this:"
                        },
                        {
                          "type": "code",
                          "data": "<a href=\"{{ urls.account }}\">Welcome Back <span>{{ customer.name }}</span></a>",
                          "header": {
                            "title": "Non Internationalized string"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "The corresponding internationalized version would substitute the text with the fully dynamic `{{ lang }}` Handlebars helper shown below:"
                        },
                        {
                          "type": "code",
                          "data": "<a href=\"{{ urls.account }}\">{{ lang \"header.welcome_back\" name=customer.name }}</a>",
                          "header": {
                            "title": "Internationalized String using {{lang}} Handlebars Helper"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Video Demo\n\nWatch a video demonstration of how JSON translation files' key/value pairs interact with your templates' Handlebars statements to localize your storefront pages: \n\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/ygiRGfSrmnA\" frameborder=\"0\" allow=\"autoplay; encrypted-media\" allowfullscreen></iframe>",
                          "header": {
                            "anchor": "invoking_video"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Be sure to set permission 644 (rw-r–r–) on any new translation files that you add. Without these permissions, running your theme locally will fail, with multiple error messages. Bundling your theme will also fail, blocking its upload to a store.",
                            "type": "warning",
                            "title": "File Permissions Required"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Features Supported",
                    "route": {
                      "path": "/features-supported"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Features Supported</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#implementation_automatic-language-detection\">Automatic Language Detection</a></li>\n    <li><a href=\"#implementation_cascading-translations\">Cascading Translations</a></li>\n\t\t<li><a href=\"#implementation_nested-plurality\">Nested Plurality and Gender Support</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Automatic Language Detection\n\nThe Stencil framework can automatically detect a localized language, based on the active shopper’s `\"Accept‑Language\"` header.",
                          "header": {
                            "anchor": "implementation_automatic-language-detection"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Cascading Translations\n\nCascading works as follows: Assume that a Quebec/French-Canadian customer visits a storefront built with both `fr.json` and `fr‑CA.json` localization files. The framework places the `fr‑CA` locale \"on top of\" the base `fr locale`. Therefore, any strings missing from the `fr‑CA.json` file will “fall back” to definitions in the base `fr.json file`, providing at least approximate translations. This cascading works generally across languages and locales.",
                          "header": {
                            "anchor": "implementation_cascading-translations"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Nested Plurality and Gender Support\nThe framework allows you to code conditional plurality for strings within each translation file. For example, your code within an English-language file could overload a single message to display in each of the following forms – depending on the actual value of its two numeric variables:\n\n* \"There are 3 items in 2 categories\"\n* \"There is 1 item in 2 categories\"\n* \"There are 2 items in 1 category\"\n\nHere is the markup that would handle the first three words in each example above, assuming appropriate parameters were inserted in the translation files:",
                          "header": {
                            "anchor": "implementation_nested-plurality"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<h2 class=\"modal-header-title\">\n   {{lang 'cart.added_to_cart.what_next' num_products=cart.quantity}} [...]\n</h2>",
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Similarly, the framework supports per-language conditional coding of appropriate genders for pronouns and nouns."
                        }
                      ]
                    }
                  },
                  {
                    "title": "Implementation Example",
                    "route": {
                      "path": "/implementation-example"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Implementation Example</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#implementation_cornerstone-example\">Cornerstone Implementation Example</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Cornerstone Implementation Example\n\nHere is an example based on this file within Cornerstone:\n`cornerstone/templates/components/cart/shipping-estimator.html`\n\nIn the excerpt below, each highlighted `{{lang...}}` statement is a Handlebars helper. Each of the statements abstracts the message indicated by its (English-language) key name to enable internationalization of that message:",
                          "header": {
                            "anchor": "#implementation_cornerstone-example"
                          }
                        },
                        {
                          "type": "code",
                          "data": "<div class=\"shipping-estimator\" style=\"display: none;\">\n    <form class=\"estimator-form\">\n      <button class=\"shipping-estimate-hide\">{{lang 'cancel'}}</button>\n      <select name=\"shipping-country\">\n      <option>{{lang 'cart.shipping_estimator.select_a_country'}}</option>\n      {{#each countries}}\n          <option value=\"{{id}}\" {{#if selected}}selected=\"selected\"{{/if}}>\n                {{name}}\n          </option>\n      {{/each}}\n      </select>\n      <select name=\"shipping-state\">\n      <option>{{lang 'cart.shipping_estimator.select_a_state'}}</option>\n      {{#each states}}\n          <option value=\"{{id}}\" {{#if selected}}selected=\"selected\"{{/if}}>\n              {{name}}\n          </option>\n      {{/each}}\n      </select>\n      <input type=\"text\" name=\"shipping-zip\" value=\"{{selected_zip}}\">\n      <button class=\"shipping-estimate-submit\">{{lang 'cart.shipping_estimator.estimate_shipping'}}\n      </button>\n    </form>\n    <div class=\"shipping-quotes\"></div>\n</div>\n",
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "In the excerpts below, you can see that the default theme’s basic `.../lang/en.json` file includes matches, and value definitions, for each of the translation keys in the Handlebars helpers above:"
                        },
                        {
                          "type": "code",
                          "data": "{\n  \"header\": {\n        \"welcome_back\": \"Welcome back, {name}\"\n  },\n  ...\n      \"label\": \"Cart\",\n        \"is_empty\": \"Your cart is empty\",\n        \"coupon_code\": \"Coupon Code\",\n        \"gift_certificate\": \"Gift Certificate\",\n        \"freeshipping\": \"Free Shipping\",\n        \"shipping_peritem\": \"Per Item Shipping\",\n      \"shipping_estimator\": {\n            \"add_info\": \"Add Info\",\n          \"select_a_country\": \"Select a Country\",\n          \"select_a_state\": \"Select a State\",\n          \"estimate_shipping\": \"Estimate Shipping\"\n      }\n  },\n  \"common\": {\n        \"currency_converter\": \"Currency Converter\",\n        \"newsletter_signup\": \"Sign up for our newsletter\",\n        \"form_submit\": \"Submit\",\n        \"required\": \"Required\",\n        \"email_address\": \"Email Address\",\n      \"edit\": \"Edit\",\n      \"no\": \"No\",\n      \"yes\": \"Yes\",\n      \"cancel\": \"Cancel\",\n      \"share\": \"Share\",\n      \"delete\": \"Delete\",\n      \"public\": \"Public\",\n        \"private\": \"Private\",\n        \"view_all\": \"View All\",\n        \"paginator\": {\n            \"page_of\": \"Page {current} of {total}\"\n      },\n      ...",
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Translation files for other languages would use the same format, to define these keys’ values in their respective languages."
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Prepare & Upload a Theme",
              "route": {
                "path": "/prepare-and-upload-a-theme"
              },
              "data": {
                "children": [
                  {
                    "title": "Checking a Theme's Size",
                    "route": {
                      "path": "/checking-a-themes-size"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Checking a Theme's Size</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#checking_checking\">Checking a Theme's Size</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Checking a Theme's Size\n\nYour theme should ideally bundle into an archive of only a few megabytes. BigCommerce imposes a hard limit of 50 MB, but most themes do not approach this limit unless they include many large static assets.\n\nIf your theme is unlikely to exceed 50 MB, you can skip past jump directly to Bundling and Uploading a Theme.\n\nA few themes, however, might exceed the 50 MB limit. In these cases, you can either Shrink Your Theme with the help of WebDAV or Stage Your Theme for CDN Delivery to restructure your theme to a size that's manageable for upload to BigCommerce.",
                          "header": {
                            "anchor": "checking_checking"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Shrinking A Theme ",
                    "route": {
                      "path": "/shrinking-your-theme"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Shrinking a Theme by Excluding Static Assets Using WebDAV</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#shrinking_restructuring\">Restructuring a Theme</a></li>\n    <li><a href=\"#shrinking_webdav-folders\">WebDAV Folders and Stencil Themes</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Restructuring Your Theme\n\nIn this section, you will first isolate static assets from your theme's local directory, then use WebDAV to cloud-host those assets, and finally reference those assets using Stencil's cdn Handlebars helper.\nFor an existing theme, make a backup of your whole <theme‑name> directory before proceeding.\n\nExamine your theme's `/assets/` subdirectory and/or its intended contents. Check for large static assets like images (especially in `/assets/img/`) and videos that are likely culprits in causing a bundled `.zip` file to go toward or beyond BigCommerce's 50 MB limit.\n\nUse WebDAV to upload these items to WebDAV's remote `/content/` directory. For WebDAV specifics, please see BigCommerce's Knowledge Base articles on:\n* [Connecting to WebDav]()\n* [WebDAV Folder Structure]()\n\nThroughout your theme, reference each of these assets using Stencil's `cdn` custom Handlebars helper – prepending the `webdav:` option to the `assetPath` parameter.\n\nPrepending `webdav:` will build a URL in the remote WebDAV directory. This allows your theme's deployed topology to diverge from any your local directory structure. As noted above, the `cdn` helper will treat `/content/` as the default/root WebDAV directory. So, for example, this statement:\n\n`<img src=\"{{cdn \"webdav:img/image.jpg\"}}\">`\n\nwill build the URL transformed below:\n\n`<img src=\"https://cdn.bcapp/3dsf74g/content/img/image.jpg\">`\n\nOn your local machine, move the large static assets to a location where the `stencil bundle` command will ignore them.\nThis can be a location outside your `<theme-name>` directory, or it can be the `<theme-name>/assets/cdn/ subdirectory`, which stencil bundle excludes from bundling. Separating these assets is necessary to exclude them from the next step.\n\nRun or re-run the `stencil bundle` command, from inside your streamlined `<theme‑name>` directory.\nOnce your resulting `.zip` file is 50 MB or smaller, upload it to BigCommerce, as described [here]().\n",
                          "header": {
                            "anchor": "shrinking_restructuring"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "Both in production and locally, subdirectories of your theme's `assets/` directory – like `img/`,` js/`, and `fonts/` – are parallel to its `scss/` subdirectory. So within your CSS, path references to such assets should reflect this parallel relationship – for example: `../img/test.jpg`.",
                            "title": "URL References to Assets"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## WebDAV Folders and Stencil Themes\n\nIf you have used WebDAV in developing BigCommerce's earlier (Blueprint) generation of themes, you will see some differences when uploading Stencil themes.<br><br>\n\nThe directories accessible through WebDAV will dynamically change, depending on the type of theme that is active in the merchant's store, as follows:<p></p>\n\n<table>\n  <tr>\n    <td><b>Available while the merchant's active theme is Blueprint:</b></td>\n    <td class=\"\"><b>Available while the merchant's active\n      theme is Stencil:</b></td>\n  </tr>\n  <tr>\n    <td>/content/</td>\n    <td>/content/</td>\n  </tr>\n  <tr>\n    <td>/product_images/</td>\n    <td>/product_images/</td>\n  </tr>\n  <tr>\n    <td>/product_downloads/</td>\n    <td>/product_downloads/</td>\n  </tr>\n  <tr>\n    <td>/import_files/</td>\n    <td>/import_files/</td>\n  </tr>\n  <tr>\n    <td>/exports/</td>\n    <td>/exports/</td>\n  </tr>\n  <tr>\n    <td>/template/</td>\n    <td>-</td>\n  </tr>\n  <tr>\n    <td>/mobile_template/</td>\n    <td>-</td>\n  </tr>\n </table>\n\n<i>The overall difference is that the WebDAV `/template/` and `/mobile_template/` directories are <b>not</b> available for Stencil themes. These templates must reside and remain within your Stencil theme's local directory and file structure.</i>",
                          "header": {
                            "anchor": "shrinking_webdav-folders"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Staging A Theme for CDN Delivery",
                    "route": {
                      "path": "/staging-a-theme"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Staging A Theme for CDN Delivery</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#staging_sizing-your-theme\">Organizing Your Theme</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Organizing Your Theme\n\nFor themes that would otherwise exceed BigCommerce's 50 MB limit on uploads, delivering your theme's large static assets via a CDN (content delivery network) is an alternative to the simpler WebDAV approach.\n\nThe advantage of this alternative is that all assets stay within your theme's directory, so your theme's local structure matches its deployed structure. The disadvantage is that the procedure outlined below requires the expense of a CDN.\n\nTo stage your theme for CDN delivery, you would locally store your large static assets within your theme's\n`<theme-name>/assets/cdn/` subdirectory. By design, the `stencil bundle` command omits this subdirectory's contents. So those contents do not count against the 50 MB limit on the resulting `.zip` file.\n\nThen, as you develop your theme, reference each of these assets using Stencil's `cdn` custom Handlebars helper, like below:\n\n`<img src=\"{{cdn \"webdav:img/image.jpg\"}}\">`\n\n**Note:** _The presumed WebDAV root directory is /content/. (So, in this example, the `image.jpg` file had been uploaded to the WebDAV `/content/` directory.) The presumed local directory is `<theme-name>/assets/`, so you can omit that path when referencing its contained files or subdirectories._\n\nWhen you are ready to upload your theme to BigCommerce, follow the procedure in [Bundling and Submitting a Theme](/stencil-docs/prepare-and-upload-a-theme/bundling-and-uploading).",
                          "header": {
                            "anchor": "staging_sizing-your-theme"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Bundling and Uploading a Theme",
                    "route": {
                      "path": "/bundling-and-uploading"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Bundling and Uploading a Theme</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#bundling_confirm-dependencies\">Confirm Dependencies</a></li>\n    <li><a href=\"#bundling_add-recaptcha-v2\">Add reCAPTCHA v2</a></li>    \n    <li><a href=\"#bundling_verify-directory\">Verify Directory and File Permissions</a></li>\n    <li><a href=\"#bundling_bundling-your-theme\">Bundling Your Theme</a></li>\n    <li><a href=\"#bundling_uploading-your-theme\">Uploading Your Theme</a></li>\n    <li><a href=\"#bundling_other-bundling\">Other Bundling or Upload Errors</a></li>\n\t</ul>\n</div>\n\n\n\n\n\n\n\n\n"
                        },
                        {
                          "type": "text",
                          "data": "## Confirm Dependencies\n\nIf you have customized a theme originally downloaded from the BigCommerce Theme Marketplace: Before you package your theme, make sure your theme directory includes all the dependencies that BigCommerce requires for submission. \n\nFollow the link for your scenario:\n\nIf you downloaded a refreshed version of Stencil's default Cornerstone theme: Run `npm install` in the theme directory to install refreshed JavaScript dependencies, as outlined in [Installing Stencil](/stencil-docs/getting-started/installing-stencil#installing_installing-stencils-js-utilities).\n\nIf you downloaded a different Marketplace theme, and its [version was lower than 1.10.0]():\nYou must also run `jspm install` in the theme directory.",
                          "header": {
                            "anchor": "bundling_confirm-dependencies"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "The `stencil bundle` and `stencil push` commands do not check for the dependencies that these build systems install. So if those dependencies are missing, these commands will not immediately report errors. However, your resulting .zip file will not properly upload to BigCommerce, and will not run properly on a storefront.",
                            "title": "No Automatic Check for Dependencies",
                            "type": "warning"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Add reCAPTCHA V2\n\nreCAPTCHA v1 was deprecated as of March 31, 2018. To deter spam submission through storefront forms, BigCommerce now supports Google reCAPTCHA v2 challenges, to distinguish human customers/visitors from automated bots. We recommend that all storefront themes take advantage of this upgraded bot detection.\n\nIf you have based your theme on a theme/version that already incorporates reCAPTCHA v2, you do not need to take any further action. Compliant themes/versions currently are listed in [Updating Themes with reCAPTCHA V2](https://support.bigcommerce.com/s/article/Updating-Themes-with-reCAPTCHA-v2#updatingthemes) (Knowledge Base).\n\n### How to Upgrade\n\nTo add reCAPTCHA v2 support to a theme, you will need to update script references in three template files:\n\n* [{theme-name}/templates/pages/auth/create-account.html](https://github.com/bigcommerce/cornerstone/pull/951/files#diff-ecbae6e2b7d5bbf5c950d68878e79d99)\n* [{theme-name}templates/components/products/modals/writeReview.html](https://github.com/bigcommerce/cornerstone/pull/951/files#diff-945a5d7f1563068188ae39df568cfd43)\n* [{theme-name}/templates/components/pages/contact-us-form.html](https://github.com/bigcommerce/cornerstone/pull/951/files#diff-5351402159301e1c225752f03d9f1f8e)\n\nSee [PR #951](https://github.com/bigcommerce/cornerstone/pull/951/files) in the Cornerstone Github Repository to see differentials for each file that needs to be modified.\n\nIt is possible to add reCaptcha to the Login template. See the [Forms object](https://developer.bigcommerce.com/stencil-docs/stencil-object-model-reference/stencil-objects/other-objects-and-properties/forms-objects) for details.",
                          "header": {
                            "anchor": "#bundling_add-recaptcha-v2"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Verify Directory and File Permissions\n\nIf you have added any new subdirectories or files to your base theme, verify that you have:\n\n* Set newly added directories to permission `755` (`drwxr-xr-x`).\n* Set newly added files to permission `644` (`rw-r--r--`).",
                          "header": {
                            "anchor": "bundling_verify-directory"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Without these writable permissions, bundling your theme will fail, blocking its upload to BigCommerce.",
                            "title": "Writable Permissions Are Required",
                            "type": "warning"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Bundling Your Theme\n\nOnce you have verified the requirements above, you are ready to process and package your theme for upload to BigCommerce. Stencil CLI provides two options for creating a `.zip` file that contains all of your theme's essentials, while excluding redundant components. The options are either only bundling your theme, or bundling and pushing your theme. These options are available depending on how you've [authorized](/stencil-docs/getting-started/launching-stencil/authorizing-and-initializing) your theme:\n\n### Bundle Only \n\nThe `stencil bundle` command is available for all themes, whether they were initialized using OAuth or Basic-Auth tokens. To use it, just enter the following on your command line:\n\n`stencil bundle`\n\nThe `bundle` command will notify you of its progress and completion.\n\n\n####  Check/Adjust Zipfile's Size\n\nCheck the resulting `.zip` file's size before you proceed. The zipped bundle should be only a few megabytes. BigCommerce imposes a hard limit of 50 MB, and any file size approaching that is problematic. If your `.zip` file fits comfortably within the size limit above, jump directly to [Uploading Your Theme](bundling_uploading-your-theme). However, if your `.zip` file approaches or exceeds 50 MB, you must first use one of these procedures to restructure your theme to a size that's manageable for upload to BigCommerce:\n\n* [Shrinking Your Theme by Excluding Static Assets (WebDAV)]()\n* [Staging a Theme for CDN Delivery]()\n\n\n### Bundle and Push \n\nThe `stencil push` command is available only for themes that you have successfully initialized using an OAuth token (with `Themes:modify scope`). This command bundles your theme and uploads it to the associated store, in one continuous process.\n\nFor further requirements and usage details, please see the _Command-Line Upload_ in [Uploading Your Theme](bundling_uploading-your-theme) below.\n\nFor file-size error diagnostics and workarounds, please _Check/Adjust Zipfile's Size_ above.\n\n### Software Requirements / Resolving Lint Errors\n\n* Only use the `stencil bundle` or the `stencil push` command to process and package themes for submission. These commands generate `.zip` files that match BigCommerce's expected structure. They also generate metadata required for your theme to function properly.\n\n* Do not create `.zip` files using general-purpose archiving software. The resulting files will trigger errors upon upload to BigCommerce.\n\n* Do not open a bundled theme `.zip` file to add, delete, rename, or update files. Doing so will make your theme unusable on the production store.\n\n* If bundling your theme triggers multiple lint errors related to the `bundle.js` file, then your theme is missing the `.eslintignore` file. Please retrieve this file from the [Stencil Cornerstone repo](https://github.com/bigcommerce/cornerstone/blob/master/.eslintignore), then re-run `stencil bundle` or `stencil push`.\n",
                          "header": {
                            "anchor": "bundling_bundling-your-theme"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Uploading Your Theme\n\nBigCommerce provides two alternatives for uploading a theme to its associated BigCommerce store. You can perform either a Control Panel Upload, or a Command Line Upload. These options are available depending on how you've authorized your theme:\n\n### Control-Panel Upload (OAuth or Basic Auth)\n\nUploading your theme via the BigCommerce control panel's GUI is compatible with any store token (whether OAuth or Basic-Auth), and with any OAuth token scope, and with all versions of Stencil CLI. However, this option requires that you first use stencil bundle to package your theme into a .zip file. (Prepare your file according to Bundle Only above.)\n\nFor the upload steps in the control panel, see the [Uploading Custom Themes]() article in our Knowledge Base. \n\nFor error codes that you might encounter when uploading a theme – and corresponding workarounds, see [Troubleshooting Theme Uploads]().\n\n### Command-Line Upload (OAuth Required)\n\nThe stencil push command allows you to both bundle your theme and upload it to the store, with a single terminal command. To run stencil push, you must first:\n\nSuccessfully initialize your theme using an OAuth token that was created with the Themes:modify scope.\nInstall Stencil CLI version 1.12.0 or higher.\n\nTo check your current Stencil CLI version, enter `stencil --version` or `stencil -V` on the command line. If you need to update an earlier version, reinstall Stencil CLI.\n\n### Pushing a Theme Upload\n\nTo initiate bundling and upload, enter the following on the command line:\n\n`stencil push`\n\nStencil CLI is designed to display the same notifications, prompts, and selection options that you would receive when using the control panel's GUI. Below are some of the notifications and interactions you might see.\n\n### Successful Bundling\n\nStencil CLI will display `ok` confirmations, or `not ok` errors, or `warnings` for individual substeps in bundling and uploading your theme. If bundling is successful, you will next see a `Processing` progress bar to track the upload.",
                          "header": {
                            "anchor": "bundling_uploading-your-theme"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539055887301"
                        },
                        {
                          "type": "text",
                          "data": "### Successful Upload\n\nUpon a successful upload, you will be prompted: `Would you like to apply your theme to your store at <storehash>? (y/N)` Any response except `y` or `Y` will be processed as \"No.\" You can always apply the theme later through the control panel.\n\n### Apply Which Variation?\n\nIf you chose to apply the newly uploaded theme, you will be prompted: `Which variation would you like to apply? (Use arrow keys)`"
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539055910721"
                        },
                        {
                          "type": "text",
                          "data": "Use your arrow keys to move the selection caret/highlight to the variation you want, and then press `Enter`.\n\nStencil CLI will then confirm which variation is active on the storefront."
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539055915081"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Theme Quota Warning\n\nIf you run `stencil push` when your store's `My Themes` section has reached its [maximum of 20 themes](), you will be prompted to select at least one existing theme for deletion.\n\n",
                          "header": {
                            "anchor": "bunding_theme-quota"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1539055988142"
                        },
                        {
                          "type": "text",
                          "data": "Custom themes – which are available for selection – will have a circle to their left. Marketplace themes and the store's active theme – all of which are protected from deletion – will be flagged `(Disabled)`.\n\nUse your arrow keys to move the selection caret to each theme/version that you want to select. Then press the spacebar to select it. (Filled circles will indicate your selected themes/versions.)\n\nIf you are certain of your selections, you can next press `Enter` to delete the themes.\n\n"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Once you press `Enter`, the selected themes will be deleted immediately, with no further confirmation.\n\nIf you have any doubts – especially about deleting multiple themes/versions – it is safest to delete them through the control panel GUI. This GUI allows you to compare uploaded versions, and to inspect their metadata.",
                            "title": " Select Carefully – No Confirmation",
                            "type": "error"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Other Bundling or Upload Errors\n\nFor any other `not ok` bundling or upload errors that you receive, please refer to these debugging guidelines Theme setup and sizing diagnostics in preceding sections throughout this page, or the following article titled [Troubleshooting Theme Uploads](/stencil-docs/prepare-and-upload-a-theme/troubleshooting-theme-uploads).",
                          "header": {
                            "anchor": "bundling_other-bundling"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Troubleshooting Theme Uploads",
                    "route": {
                      "path": "/troubleshooting-theme-uploads"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Troubleshooting Theme Uploads</h1>"
                        },
                        {
                          "type": "html",
                          "data": "<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#troubleshooting-theme-uploads_restrictions\">Restrictions</a></li>\n    <li><a href=\"#troubleshooting-theme-uploads_error-codes\">Error Codes</a></li>\n    <li><a href=\"#troubleshooting-theme-uploads_warnings\">Warnings</a></li>\n    <li><a href=\"#troubleshooting-theme-uploads_workarounds\">Workarounds and Further Info</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Restrictions\n\nCustom theme uploads must meet these restrictions:\n\n* You may upload a maximum of 20 custom themes at a time to the control panel's `Store Design` > `My Themes` section.\n* If you reach this maximum, you can delete custom themes to make room for more uploads.\n* Before uploading, you must package custom themes into a Stencil-specific `.zip` file format, using Stencil CLI's `stencil bundle` command.\n* A theme's `.zip` file must be no larger than 50 MB. If your file exceeds that size, please use either a WebDAV or a CDN upload to exclude large static assets.\n* Generated parsed template files must be less than 1 MB.",
                          "header": {
                            "anchor": "troubleshooting-theme-uploads_restrictions"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Error Codes\n\n<table>\n  <tr>\n    <th>Error Code</th>\n    <th>Meaning</th>\n  </tr>\n  <tr>\n    <td>TR-100, -101, -700, -1200, -1300</td>\n    <td>A server error occurred.</td>\n  </tr>\n  <tr>\n    <td>TR-200</td>\n    <td>Problem uploading the theme.</td>\n  </tr>\n  <tr>\n    <td>TR-300</td>\n    <td>Invalid .zip file. (Among other possible root causes, this can indicate an included <code>bundle.js.map</code> source-map file that exceeds its size limit of 5 MB. As a workaround, move this file outside your theme directory before re-running <code>stencil bundle</code>).</td>\n  </tr>\n  <tr>\n    <td>TR-301</td>\n    <td>Failed to unzip file.</td>\n  </tr>\n  <tr>\n    <td>TR-400</td>\n    <td>The .zip contains restricted/invalid file(s) - e.g., a file with an invalid extension.</td>\n  </tr>\n  <tr>\n    <td>TR-500</td>\n    <td>The .zip file is larger than the 50MB limit.</td>\n  </tr>\n  <tr>\n    <td>TR-600</td>\n    <td>The .zip file is missing a required file (<code>theme-name/templates/pages/home.html</code>).</td>\n  </tr>\n  <tr>\n    <td>TR-601</td>\n    <td>The .zip file is missing some parsed template file(s); or, one or more non-<code>.html</code> files are present in the <code>theme-name/templates/</code></nobr> subdirectory.</td>\n  </tr>\n  <tr>\n    <td>TR-800</td>\n    <td>There was a problem processing the contained config.json file. <b>Please check the config.json documentation for required keys and for keys that require values.</b></td>\n  </tr>\n  <tr>\n    <td>TR-900</td>\n    <td>The contained config.json file is missing required developer information.</td>\n  </tr>\n  <tr>\n    <td>TR-901</td>\n    <td>A theme variation defined in the contained config.json file is missing its required external ID.</td>\n  </tr>\n  <tr>\n    <td>TR-902</td>\n    <td>Two or more theme variations defined in the contained config.json file share a external ID. All external IDs must be unique.</td>\n  </tr>\n  <tr>\n    <td>TR-1000</td>\n    <td>There was a problem processing the contained <a href=\"/stencil-docs/stencil-theme-editor/schema-json-metadata\">schema.json</a> file.</td>\n  </tr>\n  <tr>\n    <td>TR-1001</td>\n    <td>The theme is missing its required <a href=\"/stencil-docs/stencil-theme-editor/schema-json-metadata\">schema.json</a> file.</td>\n  </tr>\n  <tr>\n    <td class=\"\">TR-1400</td>\n    <td class=\"\">There was a problem processing template <a href=\"/stencil-docs/front-matter/front-matter-overview\">front matter</a>.</td>\n  </tr>\n  <tr>\n    <td>TR-1401</td>\n    <td>There was a database validation error when saving <a href=\"/stencil-docs/front-matter/front-matter-overview\">front matter</a> to the database.</td>\n  </tr>\n  <tr>\n    <td>TR-1500</td>\n    <td>There was a problem uploading your files, due to multi-threading (multiple simultaneous uploads). Please try again.</td>\n  </tr>\n  <tr>\n    <td>TR-1600</td>\n    <td>There was a temporary problem on our system. Please try again.</td>\n  </tr>\n  <tr>\n    <td>TR-1601</td>\n    <td>There was a problem processing screenshots.</td>\n  </tr>\n  <tr>\n    <td>TR-1700, -1800, -1801, -1802, -1803</td>\n    <td>System error, possibly temporary. Please try again.</td>\n  </tr>\n  <tr>\n    <td>TR-3402</td>\n    <td>You are not allowed to edit your active theme. [Please select <code>Make a Copy</code>, then edit the resulting copy of your theme.]</td>\n  </tr>\n  <tr>\n    <td>TR-4400</td>\n    <td>One or more values in the <code>config.json</code> file exceed the 64-character limit. (Can also indicate string lengths that exceed their limits in other JSON files.)</td>\n  </tr>\n </table>\n",
                          "header": {
                            "anchor": "troubleshooting-theme-uploads_error-codes"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Warnings\n\nWarnings will not block a theme's upload, but these onscreen and/or log messages notify you of problems within the zipped theme. Here are the warnings and their meanings:\n\n| Warning |\n||\n| (These messages do not have numeric codes) |\n| Issue in processing this theme's thumbnail screenshot (`composed_image`). |\n| Issue in processing this theme's full-size screenshot (`desktop_screenshot`). |\n| Issue in processing this theme's mobile [screenshot](/stencil-docs/stencil-theme-editor/config-json-metadata) (`mobile_screenshot`). |\n| Missing file: This theme does not support Theme Editor, as it is missing its required `[schema.json]` file. |\n| One or more of this theme's screenshots are not image files. |\n| Theme is missing a valid thumbnail image `composed_image`). |\n| Theme is missing a valid full-size image `desktop_screenshot`). |\n| Theme is missing a valid mobile image (`mobile_screenshot`). |\n| One or more of this theme's images is not of a supported file type. Valid filetypes are: `.jpg`, `.jpeg`, `.png`, `.gif`. |\n| Thumbnail (`composed_image`) image dimensions are not right. Expected 600 x 760 pixels. |\n| Full-size (`desktop_screenshot`) image dimensions are not right. Expected 2048 x 2600 pixels. |\n| Mobile (`mobile_screenshot`) image dimensions are not right. Expected 304 x 540 pixels. |\n| Too-large image file size for a theme screenshot `composed_image` (thumbnails), `desktop_screenshot`, or `mobile_screenshot`] . The maximum supported size is x, but the file's actual size is y. |",
                          "header": {
                            "anchor": "troubleshooting-theme-uploads_warnings"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Workarounds and Further Info\n\nIf a custom theme does not render properly after you upload and apply it to a storefront, make sure you have created the theme's `.zip` file using the `stencil bundle` command, on a Mac OS, Linux computer, or virtual machine. This will exclude Windows-specific errors that have occurred on some bundles.\n\nIf you repeatedly encounter the same error or warning and neither this page nor our KB resolves the problem, see support resources for theme developers in our [Developer Community](https://forum.bigcommerce.com/s/group/0F913000000HLjECAW/bigcommerce-developers).",
                          "header": {
                            "anchor": "troubleshooting-theme-uploads_workarounds"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ],
          "blocks": [
            {
              "type": "html",
              "data": "<div class=\"docs-landing bg-bclightblue\">        \n<div class=\"cBrLandingTiles\">\n          <div class=\"ui-widget\">\n            <div>\n              <div style=\"padding: 62px 0px 0px;\">\n                <div class=\"container\">\n                  <h1 class=\"h1 panel-title__text-dark\">Stencil Documentation</h1>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div><!-- landing tiles -->\n        <div class=\"cBrLandingTiles\" style=\"margin-bottom: 5%;\">\n          <div data-region-name=\"landingTiles\">\n            <div class=\"ui-widget\">\n              <div class=\"lift-content\">\n                <div>\n                  <div>\n                    <div class=\"row row--pad\">\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a class=\"cursor-pointer\" href=\"https://github.com/bigcommerce/cornerstone\" target=\"_blank\">\n                        <div class=\"panel-media doc-landing\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Github-Branch.svg\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\">Contribute to Cornerstone</h4>\n                            <p class=\"panel-media__text type--sm\">Get involved. Join a community of open source developers and contribute to the Cornerstone theme.</p>\n                          </div>\n                        </div>\n                        </a>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a class=\"cursor-pointer\" href=\"/stencil-docs/getting-started/installing-stencil\">\n                        <div class=\"panel-media doc-landing\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Install-Stencil.svg\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\">Installing Stencil</h4>\n                            <p class=\"panel-media__text type--sm\">Start here. Set up your local development environment and begin customizing a theme.</p>\n                          </div>\n                        </div>\n                        </a>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a class=\"cursor-pointer\" href=\"/stencil-docs/development-quickstart/customizing-a-theme\">\n                        <div class=\"panel-media doc-landing\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Getting-Started.svg\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\">Customization Quick Start</h4>\n                            <p class=\"panel-media__text type--sm\">Start customizing your storefront design fast with our hands-on Quick Start.</p>\n                          </div>\n                        </div>\n                        </a>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a class=\"cursor-pointer\" href=\"/stencil-docs/handlebars-syntax-and-helpers/handlebars-overview\">\n                        <div class=\"panel-media doc-landing\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Handlebars.svg\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\">Handlebars Helpers Reference</h4>\n                            <p class=\"panel-media__text type--sm\">Power up your code. Make your theme dynamic with Handlebars logic.</p>\n                          </div>\n                        </div>\n                        </a>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad m-bottom-25\"><a class=\"cursor-pointer\" href=\"/stencil-docs/stencil-object-model-reference/stencil-objects\">\n                        <div class=\"panel-media doc-landing\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Stencil-Object-Reference.svg\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\">Object Model Reference</h4>\n                            <p class=\"panel-media__text type--sm\">Access all the data Stencil has to offer. Browse our reference for store objects and properties available via Handlebars.</p>\n                          </div>\n                        </div>\n                        </a>\n                      </div>\n                      <div class=\"column-md-12 column-lg-6 column--pad\"><a class=\"cursor-pointer\" href=\"/stencil-docs/front-matter/front-matter-overview\">\n                        <div class=\"panel-media doc-landing\">\n                          <div class=\"panel-media__wrap-icon\">\n                            <div class=\"panel-media__icon\">\n                              <img alt=\"\" src=\"https://storage.googleapis.com/bigcommerce-production-dev-center/images/Front-Matter.svg\">\n                            </div>\n                          </div>\n                          <div class=\"panel-media__wrap-content\">\n                            <h4 class=\"h4 panel-media__title\">Front Matter Reference</h4>\n                            <p class=\"panel-media__text type--sm\">Declare page resources. Adjust layouts and reference front matter expressions for each page type.</p>\n                          </div>\n                        </div>\n                        </a>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n  </div>"
            }
          ]
        }
      },
      "/tools-resources": {
        "title": "Tools & Resources",
        "data": {
          "$ref": "./Tools and Resources.html"
        }
      },
      "/changelog": {
        "title": "Developer Changelog",
        "data": {
          "$ref": "./Changelog.html"
        }
      },
      "/legacy": {
        "title": "Legacy",
        "data": {
          "children": [
            {
              "title": "Products",
              "route": {
                "path": "/v2-products"
              },
              "data": {
                "children": [
                  {
                    "title": "V2 versus V3",
                    "route": {
                      "path": "/v2-v3"
                    },
                    "data": {
                      "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/legacy/v2-products/v2-v3.md"
                    }
                  }
                ]
              }
            },
            {
              "title": "V2 Catalog Products",
              "route": {
                "path": "/v2-catalog-products"
              },
              "data": {
                "children": [
                  {
                    "title": "SKU",
                    "route": {
                      "path": "/v2-product-sku"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product SKU</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-sku_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-sku_list-product-sku\">List Product SKU</a></li>\n\t\t<li><a href=\"#v2-sku_get-product-sku\">Get Product SKU</a></li>\n    <li><a href=\"#v2-sku_get-count-sku\">Get a Count of Product SKUs</a></li>\n    <li><a href=\"#v2-sku_create-product-sku\">Create Product SKU</a></li>\n    <li><a href=\"#v2-sku_update-product-sku\">Update Product SKU</a></li>\n    <li><a href=\"#v2-sku_delete-product-sku\">Delete a Product SKU</a></li>\n    <li><a href=\"#v2-sku_delete-multiple-product-sku\">Delete Multiple Product SKUs</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## SKUs \n\nStock Keeping Unit identifiers associated with products or product options.\n\n### SKU Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | |\n| product_id | int | |\n| sku | string | The unique SKU (stock keeping unit). |\n| price | decimal | This SKU's base price on the storefront. If this value is null, the product's default price (set in the Product resource's `price` field) will be used as the base price. |\n| adjusted_price | decimal | The SKU's price on the storefront – after the product's base price is inherited, and/or any option set or any product rules are applied. This property is READ-ONLY. |\n| cost_price | decimal | The product's cost price. |\n| upc | string | The UPC (Universal Product Code) for this product combination. |\n| inventory_level | int | The inventory level for the product. |\n| inventory_warning_level | int | The inventory warning level for the product .|\n| bin_picking_number | string | The BIN picking number. |\n| weight | decimal | This SKU's base weight on the storefront. If this value is null, the product's default weight (set in the Product resource's weight field) will be used as the base weight. |\n| adjusted_weight | decimal | This SKU's weight on the storefront – after the product's base weight is inherited, and/or any option set or any product rules are applied. This property is READ-ONLY. |\n| is_purchasing_disabled | boolean | if true, this prohibits purchasing of the SKU. | \n| purchasing_disabled_message | string | The message to display if purchasing is disabled on this SKU. | \n| image_file | string | The image that will be displayed when this SKU is selected on the storefront. When updating a SKU image, send the publicly accessible URL. Supported image formats are JPEG, PNG, and GIF. | \n| options | object_array | This is an object {\"product_option_id\": int, \"option_value_id\":int} |\n",
                          "header": {
                            "anchor": "v2-sku_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## List Product SKUs \n\nGets the collection of SKUs associated with a product.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/skus`\n\n### Notes \n\nBigCommerce has updated the SKU schema to include additional price, weight, image, and purchasable properties. We will eventually remove the ability to manage these properties via SKU rules. (Merchants are already constrained from creating SKU-only rules in the BigCommerce control panel.)\n\n### Filters \n\nFilter parameters can be added to the URL query string to select specific skus in the collection.\n\n| Parameter | Type | Example |\n|  |  |  |\n| min_id | int | /api/v2/products/{product_id}/skus?min_id={value} |\n| max_id | int | /api/v2/products/{product_id}/skus?max_id={value} |\n| sku | string | /api/v2/products/{product_id}/skus?sku={value} |\n| upc | string | /api/v2/products/{product_id}/skus?upc={value} |\n| inventory_level | string | /api/v2/products/{product_id}/skus?inventory_level={value} |\n| inventory_warning_level | string | /api/v2/products/{product_id}/skus?inventory_warning_level={value} |\n| bin_picking_number | string | /api/v2/products/{product_id}/skus?bin_picking_number={value} |\n| min_inventory_level | int | /api/v2/products/{product_id}/skus?min_inventory_level={value} |\n| max_inventory_level | int | /api/v2/products/{product_id}/skus?max_inventory_level={value} |\n| is_low_inventory | boolean | /api/v2/products/{product_id}/skus?is_low_inventory={value} |\n| product_hash | int | /api/v2/products/{product_id}/skus?product_hash={value} |\n\n#### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 skus are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/skus?page={number} |\n| limit | int | /api/v2/products/{product_id}/skus?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 1,\n    \"product_id\": 5,\n    \"sku\": \"MB-1\",\n    \"price\": null,\n    \"adjusted_price\": \"1.5000\",\n    \"cost_price\": \"0.0000\",\n    \"upc\": \"\",\n    \"inventory_level\": 0,\n    \"inventory_warning_level\": 0,\n    \"bin_picking_number\": \"\",\n    \"weight\": null,\n    \"adjusted_weight\": \"0.00\",\n    \"is_purchasing_disabled\": false,\n    \"purchasing_disabled_message\": \"\",\n    \"image_file\": \"\",\n    \"options\": [\n      {\n        \"product_option_id\": 15,\n        \"option_value_id\": 17\n      },\n      {\n        \"product_option_id\": 16,\n        \"option_value_id\": 28\n      }\n    ]\n  },\n  {\n    \"id\": 2,\n    \"product_id\": 5,\n    \"sku\": \"MB-2\",\n    \"price\": null,\n    \"adjusted_price\": \"2.0000\",\n    \"cost_price\": \"0.0000\",\n    \"upc\": \"\",\n    \"inventory_level\": 0,\n    \"inventory_warning_level\": 0,\n    \"bin_picking_number\": \"\",\n    \"weight\": null,\n    \"adjusted_weight\": \"0.00\",\n    \"is_purchasing_disabled\": true,\n    \"purchasing_disabled_message\": \"We're sorry, this is unavailable.\",\n    \"image_file\": \"\",\n    \"options\": [\n      {\n        \"product_option_id\": 15,\n        \"option_value_id\": 18\n      },\n      {\n        \"product_option_id\": 16,\n        \"option_value_id\": 26\n      }\n    ]\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-sku_list-product-sku"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product SKU \n\nGets a single product SKU.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/skus/{id}`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 5,\n  \"product_id\": 7,\n  \"sku\": \"MBA-1atest\",\n    \"price\": null,\n    \"adjusted_price\": \"1.5000\",\n  \"cost_price\": \"0.0000\",\n  \"upc\": \"\",\n  \"inventory_level\": 0,\n  \"inventory_warning_level\": 0,\n  \"bin_picking_number\": \"\",\n    \"weight\": null,\n    \"adjusted_weight\": \"0.00\",\n    \"is_purchasing_disabled\": false,\n    \"purchasing_disabled_message\": \"\",\n    \"image_file\": \"https://thinglust.com/eyecandy.png\",\n  \"options\": [\n    {\n      \"product_option_id\": 20,\n      \"option_value_id\": 51\n    }\n  ]\n}\n```",
                          "header": {
                            "anchor": "v2-sku_get-product-sku"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Get a Count of Product SKUs \n\nGets a count of the number of product SKUs in the store.\n\n*   OAuth\n>`GET /stores/{store_hash}/v2/products/skus/count`\n*   Basic Auth\n>`GET /api/v2/products/skus/count`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 1235\n}\n```",
                          "header": {
                            "anchor": "v2-sku_get-count-sku"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Create a Product SKU \n\nCreates a new product SKU.\n\n*   OAuth\n>`POST /stores/{store_hash}/v2/products/{product_id}/skus`\n\n\n### Read-only Properties \n\nThe following properties of the sku are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n*   adjusted_price\n*   adjusted_weight\n\n### Requirements \n\nThe following properties of the sku are required. The request won’t be fulfilled unless these properties are valid.\n\n*   sku\n*   options\n\n### Notes \n\nTo maximize system performance, BigCommerce caps the number of SKUs associated with a product at 500. If you attempt to add a SKU to a product that has 500 SKUs, BigCommerce will return a 403 error.\n\nBigCommerce has updated the SKU schema to include additional price, weight, image, and purchasable properties. We will eventually remove the ability to manage these properties via SKU rules. (Merchants are already constrained from creating SKU-only rules in the BigCommerce control panel.)\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 5,\n  \"product_id\": 7,\n  \"sku\": \"MBA-1atest\",\n    \"price\": null,\n    \"adjusted_price\": \"1.5000\",\n  \"cost_price\": \"0.0000\",\n  \"upc\": \"\",\n  \"inventory_level\": 0,\n  \"inventory_warning_level\": 0,\n  \"bin_picking_number\": \"\",\n    \"weight\": null,\n    \"adjusted_weight\": \"0.00\",\n    \"is_purchasing_disabled\": false,\n    \"purchasing_disabled_message\": \"\",\n    \"image_file\": \"\",\n  \"options\": [\n    {\n      \"product_option_id\": 20,\n      \"option_value_id\": 51\n    }\n  ]\n}\n```",
                          "header": {
                            "anchor": "v2-sku_create-product-sku"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Update a Product SKU \n\nUpdates an existing product SKU.\n\n\n>`PUT /stores/{store_hash}/v2/products/{product_id}/skus/{id}`\n\n\n### Read-only Properties \n\nThe following properties of the sku are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n*   adjusted_price\n*   adjusted_weight\n\n### Requirements \n\nThere are no required properties for updating a product SKU.\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 5,\n  \"product_id\": 7,\n  \"sku\": \"MBA-1atest\",\n    \"price\": \"4.9900\",\n    \"adjusted_price\": \"3.9900\",\n  \"cost_price\": \"2.9900\",\n  \"upc\": \"\",\n  \"inventory_level\": 0,\n  \"inventory_warning_level\": 0,\n  \"bin_picking_number\": \"\",\n    \"weight\": null,\n    \"adjusted_weight\": \"0.00\",\n    \"is_purchasing_disabled\": true,\n    \"purchasing_disabled_message\": \"We're sorry, this is unavailable.\",\n    \"image_file\": \"\",\n  \"options\": [\n    {\n      \"product_option_id\": 20,\n      \"option_value_id\": 51\n    }\n  ]\n}\n```",
                          "header": {
                            "anchor": "v2-sku_update-product-sku"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Product SKU \n\nDeletes a product SKU.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/skus/{id}`",
                          "header": {
                            "anchor": "v2-sku_delete-product-sku"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Delete Multiple Product SKUs \n\nDeletes multiple product SKUs.\n\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/skus`\n\n### Filters \n\nFilter parameters can be added to the URL query string to select specific SKUs in the collection.\n\n| Parameter | Type | Example |\n|  |  |  |\n| min_id | int | /api/v2/products/{product_id}/skus?min_id={value} |\n| max_id | int | /api/v2/products/{product_id}/skus?max_id={value} |\n| sku | string | /api/v2/products/{product_id}/skus?sku={value} |\n| upc | string | /api/v2/products/{product_id}/skus?upc={value} |\n| inventory_level | string | /api/v2/products/{product_id}/skus?inventory_level={value} |\n| inventory_warning_level | string | /api/v2/products/{product_id}/skus?inventory_warning_level={value} |\n| bin_picking_number | string | /api/v2/products/{product_id}/skus?bin_picking_number={value} |\n| min_inventory_level | int | /api/v2/products/{product_id}/skus?min_inventory_level={value} |\n| max_inventory_level | int | /api/v2/products/{product_id}/skus?max_inventory_level={value} |\n| is_low_inventory | boolean | /api/v2/products/{product_id}/skus?is_low_inventory={value} |\n| product_hash | int | /api/v2/products/{product_id}/skus?product_hash={value} |\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 skus are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/skus?page={number} |\n| limit | int | /api/v2/products/{product_id}/skus?limit={count} |",
                          "header": {
                            "anchor": "v2-sku_delete-multiple-product-sku"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Videos",
                    "route": {
                      "path": "/v2-product-videos"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product Videos</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-video_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-video_list-product-videos\">List Product SKU</a></li>\n\t\t<li><a href=\"#v2-sku_get-product-video\">Get Product Video</a></li>\n    <li><a href=\"#v2-video_get-count-video\">Get a Count of Product Videos</a></li>\n    <li><a href=\"#v2-video_create-product-video\">Create Product Video</a></li>\n    <li><a href=\"#v2-video_update-product-video-metadata\">Update Product Video Metadata</a></li>\n    <li><a href=\"#v2-video_delete-product-video\">Delete a Product Video</a></li>\n    <li><a href=\"#v2-video_delete-all-product-video\">Delete All Product Videos</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Videos \n\nEmbedded videos displayed on product listings.\n\n### Videos Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | string | ID of this video. |\n| product_id | int | ID of the associated product. |\n| sort_order | int | Sort order for this video. |\n| name | string | Name for this video. |",
                          "header": {
                            "anchor": "v2-video_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Product Videos \n\nGets the videos associated with a product.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/videos`\n\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 `product_videos` are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/videos?page={number} |\n| limit | int | /api/v2/products/{product_id}/videos?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": \"UmhvxsOwhqk\",\n    \"product_id\": 30,\n    \"sort_order\": 0,\n    \"name\": \"X-Men Evolution: Season 1, Episode 1\"\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-video_list-product-videos"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product Video \n\nGets a product video.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/videos/{id}`",
                          "header": {
                            "anchor": "v2-sku_get-product-video"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Product Videos \n\nGets a count of the number of product videos in the store.\n\n>`GET /stores/{store_hash}/v2/products/videos/count`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 0\n}\n```",
                          "header": {
                            "anchor": "v2-video_get-count-video"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Product Video \n\nAdds a link to a YouTube video to a product.\n\n>`POST /stores/{store_hash}/v2/products/{product_id}/videos`\n\n\n### Read-only Properties \n\nThe following properties of the product video are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n\n### Requirements \n\nThe following properties of the product video are required. The request won’t be fulfilled unless these properties are valid.\n\n*   url\n\n### Notes \n\nOnly YouTube videos are supported. To create a new video, pass the full `url` in the request body.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"url\": \"https://www.youtube.com/watch?v=4wZ3ZG_Wams\"\n}\n```",
                          "header": {
                            "anchor": "v2-video_create-product-video"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Update Product Video Metadata \n\nEdit the metadata of a product video.\n\n>`PUT /stores/{store_hash}/v2/products/{product_id}/videos/{id}`\n\n\n### Read-only Properties \n\nThe following properties of the product video are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n\n### Requirements \n\nThere are no required properties when updating a product video. \n\n### Notes \n\nThe `name`, `sort_order` and `url` properties of the product video are editable.\n\nPosting a new `url` will update the `id` of the video to reference the new video.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"name\": \"New video title\",\n  \"sort_order\": 2\n}\n```",
                          "header": {
                            "anchor": "v2-video_update-product-video-metadata"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Product Video \n\nDelete a product video.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/videos/{id}`",
                          "header": {
                            "anchor": "v2-video_delete-product-video"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete All Product Videos \n\nDeletes all videos belonging to a product.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/videos`",
                          "header": {
                            "anchor": "v2-video_delete-all-product-video"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Product Rules",
                    "route": {
                      "path": "/v2-product-rules"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product Rules</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-rule_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-rule_list-product-rules\">List Product Rules</a></li>\n\t\t<li><a href=\"#v2-rule-product-rule\">Get Product Rules</a></li>\n    <li><a href=\"#v2-rule_get-count-rule\">Get a Count of Product Rules</a></li>\n    <li><a href=\"#v2-rule_create-product-rule\">Create Product Rules</a></li>\n    <li><a href=\"#v2-rule_update-product-rule\">Update Product Rules </a></li>\n    <li><a href=\"#v2-rule_delete-product-rule\">Delete a Product Rule</a></li>\n    <li><a href=\"#v2-rule_delete-all-product-rule\">Delete All Product Rules</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Product Rules \n\nRules that modify the properties of a product, such as weight, price, and product image.\n\n### Product Rule Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | The ID of the rule. |\n| product_id | int | The ID of the product to which the rule belongs. |\n| sort_order | int | The order in which the rule will be displayed on the product page. Lower integers will give the rule a higher priority. If the rule is given a lower priority, then when updating, all rules with a `sort_order` the same or greater than the rule's new `sort_order` value will have their `sort_order` reordered. |\n| is_enabled | boolean | If set to `true`, the rule will be evaluated when a customer configures a product's options. |\n| is_stop | boolean | If set to `true` and the rule evaluates to `true`, no more rules with a higher `sort_order` will be processed. |\n| price_adjuster | object | If a product option rule specifies a change to the price based on an option, the `price_adjuster` object will consist of two name/value pairs. The first pair is named `adjuster` and contains one of the following values: `relative`, `percentage`, or `absolute`. The `percentage` value causes the price to vary based on either a positive or negative percentage. The `relative` value causes the price to vary by either a positive or negative monetary amount. The `absolute` value resets the price, so it should always be a positive number. The second pair is named `adjuster_value` and contains a decimal value representing one of the following: the amount to add or subtract from the price, the percentage by which the price should change, or the new price (as per the `adjuster` setting). If the product option rule does not specify a change to the price based on size or color, `price_adjuster` will be null. |\n| weight_adjuster | object | If a product option rule specifies a change to the weight based on an option, the `weight_adjuster` object will consist of two name/value pairs. The first pair is named `adjuster` and contains one of the following values: `relative` or `absolute`. The `relative` value causes the weight to vary by either a positive or negative amount. The `absolute` value resets the weight, so it should always be a positive number. The second pair is named `adjuster_value` and contains a decimal value representing one of the following: the amount to add or subtract from the weight or the new weight (as per the `adjuster` setting). If the product option rule does not specify a change to the price based on size or color, `weight_adjuster` will be null. |\n| is_purchasing_disabled | boolean | If true this rule prohibits purchasing the product with the configured option values. |\n| purchasing_disabled_message | string | The message to display if the rule disabled purchasing the product. |\n| is_purchasing_hidden | boolean | If true the rule hides the options on the product. Setting this to true has no effect if the rule is based on an SKU or has conditions from multiple product options. |\n| image_file | string | When specifying a product rule, the image_file should be specified as either: A path to an rule already uploaded via FTP in the import directory and the path should be relative from the import directory. It can be a URL to an rule accessible on the internet. |\n| conditions | array | The conditions array can contain one or more objects. Each object inside the array contains three name/value pairs, but at least one value will be missing at any given time. If a `product_option_id` value is present, then a `option_value_id` must also be present. If `product_option_id` and `option_value_id` values are present, then a `sku_id` value must not be present. This also holds true in the reverse, where if a `sku_id` value exists, values for the `product_option_id` and `option_value_id` cannot exist. NOTE: if you can use a SKU value, this is preferred for simplicity. Empty values are represented as `null`. If multiple objects are included in the array, the software runs through them using an AND/OR logic. Objects with identical `product_option_id` values will be linked with an OR. Objects with different `product_option_id` values will be linked with an AND. When one object contains a `sku_id` value and the other contains `product_option_id` and `option_value_id` values, they will be linked with an AND. Two objects which both contain `sku_id` values will be linked with an OR. |\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Product Rules \n\nGets the collection of rules associated with a product. (Default sorting is by rule id, from lowest to highest.)\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/rules`\n\n\n### Filters \n\nThere are no filter parameters specific to product rules.\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 product_rules are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/rules?page={number} |\n| limit | int | /api/v2/products/{product_id}/rules?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 1,\n    \"product_id\": 3,\n    \"sort_order\": 0,\n    \"is_enabled\": true,\n    \"is_stop\": false,\n    \"price_adjuster\": null,\n    \"weight_adjuster\": null,\n    \"is_purchasing_disabled\": false,\n    \"purchasing_disabled_message\": \"\",\n    \"is_purchasing_hidden\": false,\n    \"image_file\": \"attribute_rule_images/1_source.jpg\",\n    \"conditions\": [\n      {\n        \"product_option_id\": 4,\n        \"option_value_id\": 7,\n        \"sku_id\": null\n      }\n    ]\n  },\n  {\n    \"id\": 2,\n    \"product_id\": 3,\n    \"sort_order\": 1,\n    \"is_enabled\": true,\n    \"is_stop\": false,\n    \"price_adjuster\": null,\n    \"weight_adjuster\": null,\n    \"is_purchasing_disabled\": false,\n    \"purchasing_disabled_message\": \"\",\n    \"is_purchasing_hidden\": false,\n    \"image_file\": \"attribute_rule_images/2_source.jpg\",\n    \"conditions\": [\n      {\n        \"product_option_id\": 4,\n        \"option_value_id\": 8,\n        \"sku_id\": null\n      }\n    ]\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-rule_list-product-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product Rule \n\nGets a single product rule.\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/rules/{id}`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 2,\n  \"product_id\": 3,\n  \"sort_order\": 1,\n  \"is_enabled\": true,\n  \"is_stop\": false,\n  \"price_adjuster\": null,\n  \"weight_adjuster\": null,\n  \"is_purchasing_disabled\": false,\n  \"purchasing_disabled_message\": \"\",\n  \"is_purchasing_hidden\": false,\n  \"image_file\": \"attribute_rule_images/2_source.jpg\",\n  \"conditions\": [\n    {\n      \"product_option_id\": 4,\n      \"option_value_id\": 8,\n      \"sku_id\": null\n    }\n  ]\n}\n```",
                          "header": {
                            "anchor": "v2-rule-product-rule"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Product Rules \n\nGets a count of the number of product rules in the store.\n\n>`GET /stores/{store_hash}/v2/products/rules/count`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 3\n}\n```",
                          "header": {
                            "anchor": "v2-rule_get-count-rule"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Product Rule \n\nCreates a new product rule.\n\n\n>`POST /stores/{store_hash}/v2/products/{product_id}/rules`\n\n\n\n### Read-only Properties \n\nThe following properties of the product rule are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n\n### Requirements \n\nThe following properties of the product rule are required. The request won’t be fulfilled unless these properties are valid.\n\n*   conditions\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"product_id\": 3,\n  \"sort_order\": 1,\n  \"is_enabled\": true,\n  \"is_stop\": false,\n  \"price_adjuster\": null,\n  \"weight_adjuster\": null,\n  \"is_purchasing_disabled\": false,\n  \"purchasing_disabled_message\": \"\",\n  \"is_purchasing_hidden\": false,\n  \"image_file\": \"attribute_rule_images/2_source.jpg\",\n  \"conditions\": [\n    {\n      \"product_option_id\": 4,\n      \"option_value_id\": 8,\n      \"sku_id\": null\n    }\n  ]\n}\n```",
                          "header": {
                            "anchor": "v2-rule_create-product-rule"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Update a Product Rule \n\nUpdates an existing product rule. \n\n### Notes \n\nIf you include a conditions object array, its contents will be appended to any existing conditions. This operation does not overwrite existing conditions.\n\n>`PUT /stores/{store_hash}/v2/products/{product_id}/rules/{id}`\n\n\n### Read-only Properties \n\nThe following properties of the product rule are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n\n### Requirements \n\nThere are no property requirements for updating a product rule.\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 2,\n  \"product_id\": 3,\n  \"sort_order\": 2,\n  \"is_enabled\": true,\n  \"is_stop\": false,\n  \"price_adjuster\": null,\n  \"weight_adjuster\": null,\n  \"is_purchasing_disabled\": false,\n  \"purchasing_disabled_message\": \"\",\n  \"is_purchasing_hidden\": false,\n  \"image_file\": \"attribute_rule_images/2_source.jpg\",\n  \"conditions\": [\n    {\n      \"product_option_id\": 4,\n      \"option_value_id\": 8,\n      \"sku_id\": null\n    }\n  ]\n}\n```",
                          "header": {
                            "anchor": "v2-rule_update-product-rule"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Product Rule \n\nDeletes a product rule.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/rules/{id}`",
                          "header": {
                            "anchor": "v2-rule_delete-product-rule"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete Multiple Product Rules \n\nDeletes multiple product rules.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/rules`\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 `product_rules` are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/rules?page={number} |\n| limit | int | /api/v2/products/{product_id}/rules?limit={count} ",
                          "header": {
                            "anchor": "v2-rule_delete-all-product-rule"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Product Reviews",
                    "route": {
                      "path": "/v2-product-reviews"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product Reviews</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-review_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-review_list-product-reviews\">List Product Reviews</a></li>\n\t\t<li><a href=\"#v2-review-product-review\">Get Product Reviews</a></li>\n    <li><a href=\"#v2-reviews_create-product-reviews\">Create Product Reviews</a></li>\n    <li><a href=\"#v2-reviews_update-product-reviews\">Update Product Reviews </a></li>\n    <li><a href=\"#v2-reviews_delete-product-reviews\">Delete a Product Reviews</a></li>\n    <li><a href=\"#v2-reviews_delete-all-product-reviews\">Delete All Product Reviews</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Product Reviews \n\nReviews associated with a product.\n\n### Product Review Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | Unique database ID for this product review. Read-only. |\n| product_id | int | The ID of the product to which this review belongs. Read-only. |\n| author | string | The review's author, displayed on the storefront. |\n| date_created | date | RFC 2822 date that specifies the creation time of the review. (If not specified, will use the current time.) |\n| rating | int | A whole number from 1–5, specifying the product's rating in this review. |\n| title | string | The review's title, displayed on the storefront. |\n| review | text | The full text of the review, displayed on the storefront. |\n| status | int | A status indicator. 0=\"Pending\", 1= \"Approved\", 2=\"Disapproved\". |",
                          "header": {
                            "anchor": "v2-review_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Product Reviews \n\nGets the reviews associated with a product. (Default sorting is by review id, from lowest to highest.)\n\n>`GET /stores/{store_hash}/v2/products/{id}/reviews`\n\n### Filters \n\nThere are no filter parameters specific to product reviews. \n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 product_reviews are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/reviews?page={number} |\n| limit | int | /api/v2/products/{product_id}/reviews?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 190,\n    \"product_id\": 5310,\n    \"author\": \"John Doe\",\n    \"date_created\": \"Wed, 12 Dec 2012 06:00:00 +0000\",\n    \"title\": \"My experience with the widget\",\n    \"review\": \"This widget worked for me, but might not work for everyone.\",\n    \"rating\": 4,\n    \"status\": 1\n  },\n  {\n    \"id\": 191,\n    \"product_id\": 5310,\n    \"author\": \"Jane Doe\",\n    \"date_created\": \"Tue, 12 Nov 2013 06:00:00 +0000\",\n    \"title\": \"Great product, slow shipping\",\n    \"review\": \"Took two weeks to arrive\",\n    \"rating\": 3,\n    \"status\": 1\n  },\n  {\n    \"id\": 192,\n    \"product_id\": 5310,\n    \"author\": \"Jimmy Doe\",\n    \"date_created\": \"Fri, 14 Dec 2012 06:00:00 +0000\",\n    \"title\": \"Worked for me!\",\n    \"review\": \"I thought this product was pretty good\",\n    \"rating\": 5,\n    \"status\": 1\n  }\n]\n```"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Get a Product Review \n\nGets a product review.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/reviews/{id}`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 190,\n  \"product_id\": 5310,\n  \"author\": \"John Doe\",\n  \"date_created\": \"Wed, 12 Dec 2012 06:00:00 +0000\",\n  \"title\": \"My experience with the widget\",\n  \"review\": \"This widget worked for me, but might not work for everyone.\",\n  \"rating\": 4,\n  \"status\": 1\n}\n```",
                          "header": {
                            "anchor": "v2-reviews_get-count-reviews"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Product Review \n\nCreates a new product review. \n\n### Notes \n\nThe `review` property is the review's text. The `rating` property must be a whole number between 1–5. If the optional `date_created` property is not specified, it defaults to the current date/time. If the optional \"status\" property is not specified, it defaults to 0 [`Pending`]. Other allowable values are 1 [`Approved`] or 2 [`Disapproved`].)\n\n\n>`POST /stores/{store_hash}/v2/products/{product_id}/reviews`\n\n### Read-only Properties \n\nThe following properties of the product review are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n\n### Requirements \n\nThe following properties of the product review are required. The request won’t be fulfilled unless these properties are valid.\n\n*   author\n*   title\n*   review\n*   rating\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 8,\n  \"product_id\": 32,\n  \"author\": \"Jimmy Doe\",\n  \"date_created\": \"Tue, 05 Mar 2013 06:00:00 +0000\",\n  \"title\": \"Worked for me!\",\n  \"review\": \"I thought this product was pretty good\",\n  \"rating\": 5,\n  \"status\": 0\n}\n```",
                          "header": {
                            "anchor": "v2-reviews_create-product-reviews"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update a Product Review \n\nUpdates an existing product review. Your request may update any of the properties that are writeable for the Create (POST) operation.\n\n>`PUT /stores/{store_hash}/v2/products/{product_id}/reviews/{id}`\n\n### Read-only Properties \n\nThe following properties of the product review are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 8,\n  \"product_id\": 32,\n  \"author\": \"Jimmy Doe\",\n  \"date_created\": \"Tue, 05 Mar 2013 06:00:00 +0000\",\n  \"title\": \"Worked for me!\",\n  \"review\": \"I thought this product was pretty good\",\n  \"rating\": 5,\n  \"status\": 1\n}\n```",
                          "header": {
                            "anchor": "v2-reviews_update-product-reviews"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Product Review \n\nDeletes a specified product review. (If successful, this will typically return a `204 No Content`.)\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/reviews/{id}",
                          "header": {
                            "anchor": "v2-reviews_delete-product-reviews"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete All Product Reviews \n\nDeletes all reviews for the specified product. (If successful, this will typically return a `204 No Content`.)\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/reviews`",
                          "header": {
                            "anchor": "v2-reviews_delete-all-product-reviews"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Product Options",
                    "route": {
                      "path": "/v2-product-options"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product Options</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-options_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-review_list-product-reviews\">List Product Options</a></li>\n\t\t<li><a href=\"#v2-review-product-options\">Get Product Options</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Product Options \n\n### Product Options Object – Properties \n\n| Title | Name | Type | Description |\n|  |  |  |  |\n| `id` | `int` |\n| `option_id` | `int` |\n| `display_name` | `string` |\n| `sort_order` | `int` |\n| `is_required` | `boolean` |\n",
                          "header": {
                            "anchor": "v2-options_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Product Options\n\nGets the options associated with a product.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/options`\n\n### Pagination\n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250\\. If a limit isn’t provided, up to 50 product_options are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| `page` | int | `/api/v2/products/{product_id}/options?page={number}` |\n| `limit` | int | `/api/v2/products/{product_id}/options?limit={count}` |\n\n### Response\n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 13,\n    \"option_id\": 8,\n    \"display_name\": \"iPod Capacities\",\n    \"sort_order\": 0,\n    \"is_required\": true\n  },\n  {\n    \"id\": 14,\n    \"option_id\": 9,\n    \"display_name\": \"Accessories\",\n    \"sort_order\": 1,\n    \"is_required\": false\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-review_list-product-reviews"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product Option\n\nGets an option associated with a product.\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/options/{id}`\n\n### Response\n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 14,\n  \"option_id\": 9,\n  \"display_name\": \"Accessories\",\n  \"sort_order\": 1,\n  \"is_required\": false\n}\n```",
                          "header": {
                            "anchor": "v2-review-product-options"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Product Images",
                    "route": {
                      "path": "/v2-product-images"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product Images</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-images_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-review_list-product-images\">List Product Images</a></li>\n\t\t<li><a href=\"#v2-review-product-images\">Get Product Images</a></li>\n    <li><a href=\"#v2-images_get-count-images\">Get a Count of Product Images</a></li>\n    <li><a href=\"#v2-images_create-product-images\">Create Product Images</a></li>\n    <li><a href=\"#v2-images_update-product-images\">Update Product Images </a></li>\n    <li><a href=\"#v2-images_delete-product-images\">Delete a Product Images</a></li>\n    <li><a href=\"#v2-images_delete-all-product-images\">Delete All Product Images</a></li>\n\t\t</ul>\n</div>/h1"
                        },
                        {
                          "type": "text",
                          "data": "## Product Images \n\nImages associated with a product.\n\n### Product Image Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int |\n| product_id | int | The ID of the product to which the image belongs. |\n| image_file | string | When specifying a product image, the `image_file` should be specified as either: a path to an image already uploaded via WebDAV to the import directory (with the path relative to the import directory); or a URL to an image accessible on the internet. |\n| is_thumbnail | boolean | If true, the image is used as the product's thumbnail. |\n| sort_order | int | The order in which the image will be displayed on the product page. Lower integers will give the image a higher priority. If the image is given a lower priority, then when updating, all images with a `sort_order` the same or greater than the image's new `sort_order` value will have their `sort_order` reordered. |\n| description | text | The description for the image |\n| date_created | date |\n",
                          "header": {
                            "anchor": "v2-images_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### List Product Images \n\nGets the images associated with a product. (Default sorting is by image id, from lowest to highest.)\n\n>GET /stores/{store_hash}/v2/products/{product_id}/images\n\n\n### Filters \n\nThere are no filter parameters specific to product images.\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 product_images are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/images?page={number} |\n| limit | int | /api/v2/products/{product_id}/images?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 247,\n    \"product_id\": 32,\n    \"image_file\": \"sample_images/in_123__14581.jpg\",\n    \"zoom_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.1280.1280.jpg?c=1\",\n    \"thumbnail_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.386.513.jpg?c=1\",\n    \"standard_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.220.290.jpg?c=1\",\n    \"tiny_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.44.58.jpg?c=1\",\n    \"is_thumbnail\": true,\n    \"sort_order\": 0,\n    \"description\": null,\n    \"date_created\": \"Mon, 24 Sep 2012 01:14:30 +0000\"\n  },\n  {\n    \"id\": 248,\n    \"product_id\": 32,\n    \"image_file\": \"sample_images/in_122__93910.jpg\",\n    \"zoom_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.1280.1280.jpg?c=1\",\n    \"thumbnail_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.386.513.jpg?c=1\",\n    \"standard_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.220.290.jpg?c=1\",\n    \"tiny_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.44.58.jpg?c=1\",\n    \"is_thumbnail\": false,\n    \"sort_order\": 1,\n    \"description\": null,\n    \"date_created\": \"Mon, 24 Sep 2012 01:17:14 +0000\"\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-review_list-product-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product Image \n\nGets a product image.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/images/{id}`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 248,\n  \"product_id\": 32,\n  \"image_file\": \"sample_images/in_122__93910.jpg\",\n  \"zoom_url\": \"https://cdn.bcapp.dev/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.1280.1280.jpg?c=1\",\n  \"thumbnail_url\": \"https://cdn.bcapp.dev/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.386.513.jpg?c=1\",\n  \"standard_url\": \"https://cdn.bcapp.dev/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.220.290.jpg?c=1\",\n  \"tiny_url\": \"https://cdn.bcapp.dev/bcapp/et7xe3pz/products/32/images/248/in_122__93910.1393831046.44.58.jpg?c=1\",\n  \"is_thumbnail\": false,\n  \"sort_order\": 1,\n  \"description\": null,\n  \"date_created\": \"Mon, 24 Sep 2012 01:17:14 +0000\"\n}\n```",
                          "header": {
                            "anchor": "v2-review-product-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Product Images \n\nGets a count of the number of product images in the store.\n\n\n>`GET /stores/{store_hash}/v2/products/images/count`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 105\n}\n```",
                          "header": {
                            "anchor": "v2-images_get-count-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Product Image \n\nCreates a new product image.\n\n>`POST /stores/{store_hash}/v2/products/{product_id}/images`\n\n### Read-only Properties \n\nThe following properties of the product image are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   date_created\n*   product_id\n\n### Requirements \n\nThe following properties of the product image are required. The request won’t be fulfilled unless these properties are valid.\n\n*   image_file\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 116,\n  \"product_id\": 29,\n  \"image_file\": \"p/022/astonishing-x-men-1-100k__36562.jpg\",\n  \"is_thumbnail\": false,\n  \"sort_order\": 0,\n  \"description\": \"\",\n  \"date_created\": \"Fri, 21 Dec 2012 18:54:04 +0000\"\n}\n```",
                          "header": {
                            "anchor": "v2-images_create-product-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Update a Product Image \n\nUpdates an existing product image.\n\n>`PUT /stores/{store_hash}/v2/products/{product_id}/images/{id}`\n\n\n### Read-only Properties \n\nThe following properties of the product image are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   product_id\n*   date_created\n\n### Requirements \n\nThe following properties of the product image are required. The request won’t be fulfilled unless these properties are valid.\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 118,\n  \"product_id\": 30,\n  \"image_file\": \"k/392/ud2vk0n1l0zcfr7gtlqi__43888.png\",\n  \"is_thumbnail\": false,\n  \"sort_order\": 1,\n  \"description\": \"\",\n  \"date_created\": \"Fri, 21 Dec 2012 19:01:03 +0000\"\n}\n```",
                          "header": {
                            "anchor": "v2-images_update-product-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Product Image \n\nDeletes a product image.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/images/{id}`",
                          "header": {
                            "anchor": "v2-images_delete-product-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete Multiple Product Images \n\nDeletes multiple product images.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/images`\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 `product_images` are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/products/{product_id}/images?page={number} |\n| Limit | int | /api/v2/products/{product_id}/images?limit={count} |",
                          "header": {
                            "anchor": "v2-images_delete-all-product-images"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Option Values",
                    "route": {
                      "path": "/v2-option-values"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Option Values</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-option-values_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-option-values_list-option-values\">List Option Values</a></li>\n\t\t<li><a href=\"#v2-option-values-option-values\">Get Option Values</a></li>\n    <li><a href=\"#v2-option-values_create-option-values\">Create Option Values</a></li>\n    <li><a href=\"#v2-option-values_update-option-values\">Update Option Values </a></li>\n    <li><a href=\"#v2-option-values_delete-option-values\">Delete a Option Value</a></li>\n    <li><a href=\"#v2-option-values_delete-all-option-values\">Delete All Option Values</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Option Values \n\nValues that can be selected for an option.\n\n### Option Value Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | A unique, read-only value that identifies this option value. |\n| option_id | int | A read-only value identifying the option to which this option value is assigned. |\n| label | string | The name of the label. Cannot be the same as the label of another value already assigned to the option. |\n| sort_order | int |\n| value | text | Acceptable values generally depend on the option type, as defined in the option:<br><br> `RB`: string to be displayed to the customer.<br> `RT`: string to be displayed to the customer.<br> `S`: string to be displayed to the customer.<br> `P`: product ID;<br> `PI`: product ID.<br> `CS`: one of the following color values – a hexadecimal color code to create a color option (e.g., `#0f0000`);<br> a CSS 2.1 color name (e.g., `blue`);<br> up to three hexadecimal color codes and/or color names, separated by pipe symbols (e.g., <code>#FF0000&#124;lime&#124;#0000FF</code>);<br>  a URI to an image to create a texture (e.g., `http://store.com/images/myimg.png`);<br> or the name of an image file in the store's WebDAV `import` folder  (e.g., `myimg.png`). |\n| is_default | boolean | Whether or not this value is selected by default. For each option, only one option value can be selected by default. |\n"
                        },
                        {
                          "type": "text",
                          "data": "## List Option Values \n\nGets the values belonging to an option. (Default sorting is by option-value id, from lowest to highest.)\n\n>`GET /stores/{store_hash}/v2/options/{option_id}/values`\n\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 option_values are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/options/{option_id}/values?page={number} |\n| Limit | int | /api/v2/options/{option_id}/values?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 1,\n    \"option_id\": 3,\n    \"label\": \"Silver\",\n    \"sort_order\": 2,\n    \"value\": \"#cccccc\",\n    \"is_default\": true\n  },\n  {\n    \"id\": 2,\n    \"option_id\": 3,\n    \"label\": \"Black\",\n    \"sort_order\": 1,\n    \"value\": \"#000000\",\n    \"is_default\": false\n  }\n]\n```\n",
                          "header": {
                            "anchor": "v2-option-values_list-option-values"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Get an Option Value \n\nGets an option value.\n\n\n>`GET /stores/{store_hash}/v2/options/{option_id}/values/{id}`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 9,\n  \"option_id\": 3,\n  \"label\": \"Purple\",\n  \"sort_order\": 3,\n  \"value\": \"#700170\",\n  \"is_default\": false\n}\n```",
                          "header": {
                            "anchor": "v2-option-values-option-values"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create an Option Value \n\nCreates a new option value.\n\n>`POST /stores/{store_hash}/v2/options/{option_id}/values`\n\n### Read-only Properties \n\nThe following properties of the option value are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   option_id\n\n### Requirements \n\nThe following properties of the option value are required. The request won’t be fulfilled unless these properties are valid.\n\n*   label\n*   value\n\n### Notes \n\nTo maximize system performance, BigCommerce caps the total number of values per option at 250. IF the option has 250 values and you try to create another one, BigCommerce will return a 403 error.\n\nWhen you POST an `is_default`property of `true`, all other option values on the parent option will have their `is_default` property set to `false`.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"label\": \"white\",\n  \"sort_order\": 0,\n  \"value\": \"#FFFFFF\",\n  \"is_default\": true\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 68,\n  \"option_id\": 3,\n  \"label\": \"white\",\n  \"sort_order\": 0,\n  \"value\": \"#FFFFFF\",\n  \"is_default\": true\n}\n```",
                          "header": {
                            "anchor": "v2-option-values_create-option-values"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update an Option Value \n\nUpdates an existing option value.\n\n\n>`PUT /stores/{store_hash}/v2/options/{option_id}/values/{id}`\n\n\n###  Read-only Properties\n\nThe following properties of the option value are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   option_id\n\n### Requirements \n\nThe following properties of the option value are required. The request won’t be fulfilled unless these properties are valid.\n\n###  Notes\n\nWhen you PUT an `is_default` property of `true`, all other option values on the parent option will have their `is_default` property set to `false`.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"label\": \"whitish\",\n  \"sort_order\": 1,\n  \"value\": \"#FFFFEF\",\n  \"is_default\": true\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 68,\n  \"option_id\": 3,\n  \"label\": \"whitish\",\n  \"sort_order\": 1,\n  \"value\": \"#FFFFEF\",\n  \"is_default\": true\n}\n```",
                          "header": {
                            "anchor": "v2-option-values_update-option-values"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete an Option Value \n\nDeletes an option value.\n\n>`DELETE /stores/{store_hash}/v2/options/{option_id}/values/{id}`",
                          "header": {
                            "anchor": "v2-option-values_delete-option-values"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete Multiple Option Values \n\nDeletes multiple values belonging to an option.\n\n>`DELETE /stores/{store_hash}/v2/options/{option_id}/values`\n\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 option_values are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/options/{option_id}/values?page={number} |\n| Limit | int | /api/v2/options/{option_id}/values?limit={count} |",
                          "header": {
                            "anchor": "v2-option-values_delete-all-option-values"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Option Set Options",
                    "route": {
                      "path": "/v2-option-set-options"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Option Set Options</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-option-set-options_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-option-set-options_list-option-set-option\">List Option Set Options</a></li>\n\t\t<li><a href=\"#v2-option-set-options_get-option-set-option\">Get Option Set Options</a></li>\n    <li><a href=\"#v2-option-set-options_create-option-set-option\">Create Option Set Options</a></li>\n    <li><a href=\"#v2-option-set-options_update-option-set-option\">Update Option Set Options</a></li>\n    <li><a href=\"#v2-option-set-options_delete-option-set-option\">Delete an Option Set Options</a></li>\n    <li><a href=\"#v2-option-set-options_delete-multiple-option-set-option\">Delete Multiple Option Set Options</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "##  Option Set Options \n\nOptions belonging to an option set.\n\n### Option Set Option: Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | The ID of this option. |\n| option_id | int | The ID of the option to which this option set connects. |\n| option_set_id | int | The ID of this option set. |\n| display_name | string | The friendly name used for this option set. |\n| sort_order | int | The order in which the option is displayed on the product page. |\n| is_required | boolean | Specifies whether customer is required to enter a value for this option before they can add the product to their cart. |\n| option | resource | The connected option. |\n| values | object_array | Array of values for the connected option. |\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Option Set Options \n\nGets the options associated with an option set. (Default sorting is by option id, from lowest to highest.)\n\n>`GET /stores/{store_hash}/v2/option_sets/{option_set_id}/options`\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 option_set_options are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/option_sets/{option_set_id}/options?page={number} |\n| Limit | int | /api/v2/option_sets/{option_set_id}/options?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 43,\n    \"option_id\": 18,\n    \"option_set_id\": 14,\n    \"display_name\": \"Size\",\n    \"sort_order\": 0,\n    \"is_required\": true,\n    \"option\": {\n      \"url\": \"https://example.com/api/v2/options/18.json\",\n      \"resource\": \"/options/18\"\n    },\n    \"values\": [\n      {\n        \"label\": \"XS\",\n        \"sort_order\": 0,\n        \"value\": \"XS\",\n        \"option_value_id\": 68\n      },\n      {\n        \"label\": \"S\",\n        \"sort_order\": 1,\n        \"value\": \"S\",\n        \"option_value_id\": 69\n      },\n      {\n        \"label\": \"M\",\n        \"sort_order\": 2,\n        \"value\": \"M\",\n        \"option_value_id\": 70\n      },\n      {\n        \"label\": \"L\",\n        \"sort_order\": 3,\n        \"value\": \"L\",\n        \"option_value_id\": 71\n      },\n      {\n        \"label\": \"XL\",\n        \"sort_order\": 4,\n        \"value\": \"XL\",\n        \"option_value_id\": 72\n      }\n    ]\n  },\n  {\n    \"id\": 44,\n    \"option_id\": 3,\n    \"option_set_id\": 14,\n    \"display_name\": \"Color\",\n    \"sort_order\": 1,\n    \"is_required\": true,\n    \"option\": {\n      \"url\": \"https://example.com/api/v2/options/3.json\",\n      \"resource\": \"/options/3\"\n    },\n    \"values\": [\n      {\n        \"label\": \"Silver\",\n        \"sort_order\": 1,\n        \"value\": \"#cccccc\",\n        \"option_value_id\": 7\n      },\n      {\n        \"label\": \"Black\",\n        \"sort_order\": 2,\n        \"value\": \"#000000\",\n        \"option_value_id\": 8\n      },\n      {\n        \"label\": \"Purple\",\n        \"sort_order\": 3,\n        \"value\": \"#700170\",\n        \"option_value_id\": 9\n      }\n    ]\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-option-set-options_list-option-set-option"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get an Option Set Option \n\nGets an option set option.\n\n>`GET /stores/{store_hash}/v2/option_sets/{option_set_id}/options/{id}`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 4,\n  \"option_id\": 5,\n  \"option_set_id\": 2,\n  \"display_name\": \"Clock Speeds (CPU)\",\n  \"sort_order\": 0,\n  \"is_required\": true,\n  \"option\": {\n    \"url\": \"https://example.com/api/v2/options/5.json\",\n    \"resource\": \"/options/5\"\n  }\n}\n```",
                          "header": {
                            "anchor": "v2-option-set-options_get-option-set-option"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create an Option Set Option \n\nCreates a new option associated with an option set.\n\n\n>`POST /stores/{store_hash}/v2/option_sets/{option_set_id}/options`\n\n\n### Read-only Properties \n\nThe following properties of the option set option are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   option_set_id\n*   values\n*   option\n\n### Requirements \n\nThe following properties of the option set option are required. The request won’t be fulfilled unless these properties are valid.\n\n*   option_id\n\n### Request \n\nExample request object:\n\n```\n{\n  \"option_id\": 10,\n  \"display_name\": \"Choose a color\",\n  \"sort_order\": 1,\n  \"is_required\": true\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 2,\n  \"option_id\": 10,\n  \"option_set_id\": 1,\n  \"display_name\": \"Choose a color\",\n  \"sort_order\": 1,\n  \"is_required\": true,\n  \"option\": {\n    \"url\": \"https://example.com/api/v2/options/10.json\",\n    \"resource\": \"/options/10\"\n  }\n}\n```",
                          "header": {
                            "anchor": "v2-option-set-options_create-option-set-option"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Update an Option Set Option \n\nUpdates an existing option set option.\n\n>`PUT /stores/{store_hash}/v2/option_sets/{option_set_id}/options/{id}`\n\n### Read-only Properties \n\nThe following properties of the option set option are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   option_id\n*   option_set_id\n*   values\n*   option\n\n### Requirements \n\nThe following properties of the option set option are required. The request won’t be fulfilled unless these properties are valid.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"display_name\": \"Pick a color...\",\n  \"sort_order\": 2,\n  \"is_required\": false\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 2,\n  \"option_id\": 10,\n  \"option_set_id\": 2,\n  \"display_name\": \"Pick a color...\",\n  \"sort_order\": 2,\n  \"is_required\": false,\n  \"option\": {\n    \"url\": \"https://example.com/api/v2/options/10.json\",\n    \"resource\": \"/options/10\"\n  }\n}\n```",
                          "header": {
                            "anchor": "v2-option-set-options_update-option-set-option"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete an Option Set Option \n\nDeletes an option belonging to an option set.\n\n>`DELETE /stores/{store_hash}/v2/option_sets/{option_set_id}/options/{id}`",
                          "header": {
                            "anchor": "v2-option-set-options_delete-option-set-option"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete Multiple Option Set Options \n\nDeletes multiple options associated with an option set.\n\n>`DELETE /stores/{store_hash}/v2/option_sets/{option_set_id}/options`\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 option_set_options are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/option_sets/{option_set_id}/options?page={number} |\n| Limit | int | /api/v2/option_sets/{option_set_id}/options?limit={count} |",
                          "header": {
                            "anchor": "v2-option-set-options_delete-multiple-option-set-option"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Option Sets",
                    "route": {
                      "path": "/v2-option-sets"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Option Sets</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-option-set_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-option-set_list-option-set\">List Option Set</a></li>\n\t\t<li><a href=\"#v2-option-set_get-option-set\">Get Option Set</a></li>\n    <li><a href=\"#v2-option-set_get-count-option-set\">Get a Count of Option Set</a></li>\n    <li><a href=\"#v2-option-set_create-option-set\">Create Option Set</a></li>\n    <li><a href=\"#v2-option-set_update-option-set\">Update Option Set</a></li>\n    <li><a href=\"#v2-option-set_delete-option-set\">Delete an Option Set</a></li>\n    <li><a href=\"#v2-option-set_delete-all-option-sets\">Delete All Option Sets</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Option Sets \n\nA reusable set of option facets that can be applied to products.\n\n### Option Set Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | Optional field. Unique numeric ID for this option set. Increments sequentially. |\n| name | string | Required field. The option set's name, as used internally. Must be unique. |\n| options | object/resource | Optional field; read-only. Object containing option-set options: a `url` and a `resource`. |\n| product_id (optional) | integer | Optional field; read-only. If `null`, this option set can be reused with any product. If populated with a numeric ID, this option set can be used exclusively with the corresponding product. |",
                          "header": {
                            "anchor": "v2-option-set_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Option Sets \n\nGets the collection of option sets. (Default sorting is by option-set id, from lowest to highest.)\n\n>`GET /stores/{store_hash}/v2/option_sets`\n\n\n### Filters \n\nFilter parameters can be added to the URL query string to select specific option_sets in the collection.\n\n| Parameter | Type | Example |\n|  |  |  |\n| name | string | /api/v2/option_sets?name={value} |\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 option_sets are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/option_sets?page={number} |\n| Limit | int | /api/v2/option_sets?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 1,\n    \"product_id\": null,\n    \"name\": \"MacBook\",\n    \"options\": {\n      \"url\": \"https://store-bwvr466.mybigcommerce.com/api/v2/optionsets/1/options.json\",\n      \"resource\": \"/optionsets/1/options\",\n      \"product_id\": null\n    }\n  },\n  {\n    \"id\": 2,\n    \"product_id\": null,\n    \"name\": \"PixelSkin Case\",\n    \"options\": {\n      \"url\": \"https://store-bwvr466.mybigcommerce.com/api/v2/optionsets/2/options.json\",\n      \"resource\": \"/optionsets/2/options\",\n      \"product_id\": null\n    }\n  }\n]\n```\n",
                          "header": {
                            "anchor": "v2-option-set_list-option-set"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get an Option Set \n\nGets an option set.\n\n\n>`GET /stores/{store_hash}/v2/option_sets/{id}`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"product_id\": null,\n  \"name\": \"T-Shirt Facets\",\n  \"options\": {\n    \"url\": \"https://store-bwvr466.mybigcommerce.com/api/v2/optionsets/10/options.json\",\n    \"resource\": \"/optionsets/13/options\",\n    \"product_id\": null\n  }\n}\n```",
                          "header": {
                            "anchor": "v2-option-set_get-option-set"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Option Sets \n\nGets a count of the number of option sets in the store.\n\n>`GET /stores/{store_hash}/v2/option_sets/count`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 4\n}\n```",
                          "header": {
                            "anchor": "v2-option-set_get-count-option-set"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create an Option Set \n\nCreates a new Option set.\n\n>`POST /stores/{store_hash}/v2/option_sets`\n\n\n### Read-only Properties \n\nThe following properties of the option set are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   options\n\n### Requirements \n\nThe following properties of the option set are required. The request won’t be fulfilled unless these properties are valid.\n\n*   name\n\n### Request \n\nExample request object:\n\n```\n{\n  \"name\": \"T-Shirts\"\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"product_id\": null,\n  \"name\": \"T-Shirts\",\n  \"options\": {\n    \"url\": \"https://store-bwvr466.mybigcommerce.com/api/v2/optionsets/10/options.json\",\n    \"resource\": \"/optionsets/10/options\",\n    \"product_id\": null\n  }\n}\n```",
                          "header": {
                            "anchor": "v2-option-set_create-option-set"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update an Option Set \n\nUpdates an existing option set.\n\n\n>`PUT /stores/{store_hash}/v2/option_sets/{id}`\n\n### Read-only Properties \n\nThe following properties of the option set are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   options\n\n### Requirements \n\nThe following properties of the option set are required. The request won’t be fulfilled unless these properties are valid.\n\n*   name\n\n### Request \n\nExample request object:\n\n```\n{\n  \"name\": \"T-shirt Facets\"\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"product_id\": null,\n  \"name\": \"T-shirt Facets\",\n  \"options\": {\n    \"url\": \"https://store-bwvr466.mybigcommerce.com/api/v2/optionsets/10/options.json\",\n    \"resource\": \"/optionsets/13/options\",\n    \"product_id\": null\n  }\n}\n```",
                          "header": {
                            "anchor": "v2-option-set_update-option-set"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete an Option Set \n\nDeletes an option set.\n\n>`DELETE /stores/{store_hash}/v2/option_sets/{id}`",
                          "header": {
                            "anchor": "v2-option-set_delete-option-set"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Delete All Option Sets \n\nDeletes all option sets in the store.\n\n>`DELETE /stores/{store_hash}/v2/option_sets`",
                          "header": {
                            "anchor": "v2-option-set_delete-all-option-sets"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Options",
                    "route": {
                      "path": "/v2-options"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product Options</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-option_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-option-set_list-product-option\">List Option Set</a></li>\n\t\t<li><a href=\"#v2-option-set_get-product-option\">Get Option Set</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Options \n\nShared attributes that control value facets on a product.\n\n### Options Object – Properties \n\n| Name | Type | Description |\n||||\n| name | string | Required field. The option's name, as used internally. Must be unique. |\n| display_name | string | Optional field. The option's name, as displayed on the storefront. Defaults to same value as `name`. However, a custom value can be defined here, and can be reused among multiple options. |\n| type | string | Optional field. The type of option, which determines how it will display on the storefront. Acceptable values: <br> `C`: Checkbox; <br>`D`: Date field; <br>`F`: File upload field; <br>`MT`: Multi-line text field; <br>`RB`: Radio buttons; <br>`RT`: Rectangular boxes (for product sizes); <br>`S`: Select/drop-down list; <br>`C`: Numbers-only text field; <br>`P`: Product Pick list; <br>`CS`: Color/texture Swatch; <br>`T`: Text field.  |\n| values | object | Optional field. Object containing option values: a `url` and a `resource`. |\n| product_id | integer | Optional field; read-only. If `null`, this option can be reused with any product. If populated with a numeric ID, this option can be used exclusively with the corresponding product. |\n",
                          "header": {
                            "anchor": "v2-option_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Product Options \n\nGets the options associated with a product.\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/options`\n\n### Filters \n\nThere are no filter parameters specific to product options. \n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 product_options are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/options?page={number} |\n| limit | int | /api/v2/products/{product_id}/options?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 13,\n    \"option_id\": 8,\n    \"display_name\": \"iPod Capacities\",\n    \"sort_order\": 0,\n    \"is_required\": true\n  },\n  {\n    \"id\": 14,\n    \"option_id\": 9,\n    \"display_name\": \"Accessories\",\n    \"sort_order\": 1,\n    \"is_required\": false\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-option-set_list-product-option"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product Option \n\nGets an option associated with a product.\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/options/{id}`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 14,\n  \"option_id\": 9,\n  \"display_name\": \"Accessories\",\n  \"sort_order\": 1,\n  \"is_required\": false\n}\n```",
                          "header": {
                            "anchor": "v2-option-set_get-product-option"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Custom Fields",
                    "route": {
                      "path": "/v2-custom-fields"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Custom Fields</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-custom-fields_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-custom-fields_list-custom-fields\">List Custom Fields</a></li>\n\t\t<li><a href=\"#v2-custom-fields_get-custom-fields\">Get Custom Fields</a></li>\n    <li><a href=\"#v2-custom-fields_get-count-custom-fields\">Get a Count of Custom Fields</a></li>\n    <li><a href=\"#v2-custom-fields_create-custom-fields\">Create Custom Fields</a></li>\n    <li><a href=\"#v2-custom-fields_update-custom-fields\">Update Custom Fields</a></li>\n    <li><a href=\"#v2-custom-fields_delete-custom-fields\">Delete an Custom Fields</a></li>\n    <li><a href=\"#v2-custom-fields_delete-multiple-custom-fields\">Delete Multiple Custom Fields</a></li>\n\t\t</ul>\n</div>\n"
                        },
                        {
                          "type": "text",
                          "data": "## Custom Fields \n\nCustom fields associated with a product.\n\n### Custom Field Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | |\n| product_id | int | ID of the associated product |\n| name | string | key; limited to 250 characters |\n| text | string | value; limited to 250 characters |",
                          "header": {
                            "anchor": "v2-custom-fields_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": "|||\n|||\n| **Manages** |\n| **OAuth Scopes** | store_v2_products\n||store_v2_products_read_only\n\n## List Custom Fields \n\nGets custom fields associated with a product.\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/custom_fields`\n\n### Filters \n\nThere are no filter parameters specific to `custom_fields`.\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 custom_fields are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/custom_fields?page={number} |\n| limit | int | /api/v2/products/{product_id}/custom_fields?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 1,\n    \"product_id\": 30,\n    \"name\": \"Toy manufactured in\",\n    \"text\": \"USA\"\n  },\n  {\n    \"id\": 2,\n    \"product_id\": 45,\n    \"name\": \"Release Date\",\n    \"text\": \"2013-12-25\"\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-custom-fields_list-custom-fields"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Custom Field \n\nGets a custom field associated with a product.\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/custom_fields/{id}`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 2,\n  \"product_id\": 30,\n  \"name\": \"Toy manufactured in\",\n  \"text\": \"USA\"\n}\n```",
                          "header": {
                            "anchor": "v2-custom-fields_get-custom-fields"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Custom Fields \n\nGets a count of the number of custom fields in the store.\n\n>`GET /stores/{store_hash}/v2/products/custom_fields/count`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 0\n}\n```",
                          "header": {
                            "anchor": "v2-custom-fields_get-count-custom-fields"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Custom Field \n\nCreates a new custom field associated with a product\n\n>`POST /stores/{store_hash}/v2/products/{product_id}/custom_fields`\n\n### Read-only Properties \n\nThe following properties of the custom field are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   product_id\n\n### Requirements \n\nThe following properties of the custom field are required. The request won’t be fulfilled unless these properties are valid.\n\n*   name\n*   text\n\n### Request \n\nExample request object:\n\n```\n{\n  \"name\": \"Release Date\",\n  \"text\": \"2013-12-25\"\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 5,\n  \"product_id\": 45,\n  \"name\": \"Release Date\",\n  \"text\": \"2013-12-25\"\n}",
                          "header": {
                            "anchor": "v2-custom-fields_create-custom-fields"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update a Custom Field \n\nUpdates an existing custom field associated with a product.\n\n\n>`PUT /stores/{store_hash}/v2/products/{product_id}/custom_fields/{id}`\n\n### Read-only Properties \n\nThe following properties of the custom field are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   product_id\n\n### Requirements \n\nThe following properties of the custom field are required. The request won’t be fulfilled unless these properties are valid.\n\n*   name\n*   text\n\n### Request \n\nExample request object:\n\n```\n{\n  \"name\": \"Release Date\",\n  \"text\": \"2013-12-31\"\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 5,\n  \"product_id\": 45,\n  \"name\": \"Release Date\",\n  \"text\": \"2013-12-31\"\n}\n```",
                          "header": {
                            "anchor": "v2-custom-fields_update-custom-fields"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Delete a Custom Field \n\nDeletes a custom field associated with a product.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/custom_fields/{id}`",
                          "header": {
                            "anchor": "v2-custom-fields_delete-custom-fields"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete Multiple Custom Fields \n\nDeletes multiple custom fields associated with a product.\n\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/custom_fields`\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 custom_fields are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/custom_fields?page={number} |\n| limit | int | /api/v2/products/{product_id}/custom_fields?limit={count} |",
                          "header": {
                            "anchor": "v2-custom-fields_delete-multiple-custom-fields"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Categories",
                    "route": {
                      "path": "/v2-categories"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Categories</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-categories_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-categories_list-categories\">List Categories</a></li>\n\t\t<li><a href=\"#v2-categories_get-categories\">Get a Category</a></li>\n    <li><a href=\"#v2-categories_get-count-categories\">Get a Count of Categories</a></li>\n    <li><a href=\"#v2-categories_create-categories\">Create a Category</a></li>\n    <li><a href=\"#v2-categories_update-categories\">Update A Category</a></li>\n    <li><a href=\"#v2-categories_delete-categories\">Delete an Categories</a></li>\n    <li><a href=\"#v2-categories_delete-all-categories\">Delete All Categories</a></li>\n\t\t</ul>\n</div>\n"
                        },
                        {
                          "type": "text",
                          "data": "## Categories \n\nIndex of hierarchical categories used to organize and group products.\n\n### Category Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int | A read-only field containing the unique numeric identifier of this category. |\n| parent_id | int | The ID of the parent category to which this category belongs.<br> (NOTE: the total number of parent categories cannot exceed seven.) |\n| name | string | The name of the category. Must be unique. |\n| description | text | A description for the category. |\n| sort_order | int | The sort order of the category. |\n| page_title | string | The page title for the category page. |\n| meta_keywords | text | Comma-separated list of meta keywords to include in the HTML. |\n| meta_description | text | A meta description to include. |\n| layout_file | string | A valid layout file. (Please refer to [this article](https://support.bigcommerce.com/articles/Public/Creating-Custom-Template-Files/) on creating category files.) This field is writable only for stores with a Blueprint theme applied. |\n| parent_category_list | array | A read-only field containing the ID of this category and the ID of its parent category, if any. |\n| image_file | string | A valid image. |\n| is_visible | boolean | Is the category visible? |\n| search_keywords | string | A comma-separated list of keywords that can be used to locate this brand. |\n| url | string | The context path of this category. |",
                          "header": {
                            "anchor": "v2-categories_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Categories \n\nGets the list of categories. (Default sorting is by category id, from lowest to highest.)\n\n>`GET /stores/{store_hash}/v2/categories`\n\n\n### Filters \n\nFilter parameters can be added to the URL query string to select specific categories in the collection.\n\n| Parameter | Type | Example |\n|  |  |  |\n| parent_id | string | /api/v2/categories?parent_id={value} |\n| name | string | /api/v2/categories?name={value} |\n| is_visible | string | /api/v2/categories?is_visible={value} |\n| min_id | int | /api/v2/categories?min_id={value} |\n| max_id | int | /api/v2/categories?max_id={value} |\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 categories are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/categories?page={number} |\n| Limit | int | /api/v2/categories?limit={count} |\n\n### Response\n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 1,\n    \"parent_id\": 0,\n    \"name\": \"Shop Mac\",\n    \"description\": \"\",\n    \"sort_order\": 0,\n    \"page_title\": \"\",\n    \"meta_keywords\": \"\",\n    \"meta_description\": \"\",\n    \"layout_file\": \"category.html\",\n    \"parent_category_list\": [\n      1\n    ],\n    \"image_file\": \"\",\n    \"is_visible\": true,\n    \"search_keywords\": \"\",\n    \"url\": \"/shop-mac/\"\n  }\n]\n```\n",
                          "header": {
                            "anchor": "v2-categories_list-categories"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Get a Category \n\nGets a single category.\n\n>`GET /stores/{store_hash}/v2/categories/{id}`\n\n### Response\n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"parent_id\": 1,\n  \"name\": \"Xmen toys\",\n  \"description\": \"\",\n  \"sort_order\": 2,\n  \"page_title\": \"\",\n  \"meta_keywords\": null,\n  \"meta_description\": null,\n  \"layout_file\": \"category.html\",\n  \"parent_category_list\": [\n    1,\n    10\n  ],\n  \"image_file\": \"d/apiy2uz6q__69888.jpg\",\n  \"is_visible\": true,\n  \"search_keywords\": \"\",\n  \"url\": \"/xmen-toys/\"\n}\n```",
                          "header": {
                            "anchor": "v2-categories_get-categories"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Categories \n\nGets a count of the total number of categories in the store.\n\n\n>`GET /stores/{store_hash}/v2/categories/count`\n\n### Response\n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 10\n}\n```",
                          "header": {
                            "anchor": "v2-categories_get-count-categories"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Category \n\nCreates a new category.\n\n\n>`POST /stores/{store_hash}/v2/categories`\n\n\n### Read-only Properties \n\nThe following properties of the category are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   parent_category_list\n\n### Requirements \n\nThe following properties of the category are required. The request won’t be fulfilled unless these properties are valid.\n\n*   name\n\n### Notes \n\nTo maximize system performance, BigCommerce caps the number of categories that can be added to a store at 16,000. If your `POST` causes the store to exceed the maximum of 16,000 categories, BigCommerce will return a 403 error.\n\nIn addition, BigCommerce caps the total number of parent categories at seven. If your `POST` includes the ID of a parent category in the `parent_id` field, BigCommerce will check that parent category and its parent and so on to determine the total number of parent categories. If your `POST` would cause the total number of parent categories to exceed seven, BigCommerce will return a 403 error.\n\n### Request\n\nExample request object:\n\n```\n{\n  \"name\": \"Xmen toys\"\n}\n```\n\n### Response\n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"parent_id\": 1,\n  \"name\": \"Xmen toys\",\n  \"description\": \"\",\n  \"sort_order\": 2,\n  \"page_title\": \"\",\n  \"meta_keywords\": null,\n  \"meta_description\": null,\n  \"layout_file\": \"category.html\",\n  \"parent_category_list\": [\n    1,\n    10\n  ],\n  \"image_file\": \"d/apiy2uz6q__69888.jpg\",\n  \"is_visible\": true,\n  \"search_keywords\": \"\",\n  \"url\": \"/xmen-toys/\"\n}\n```",
                          "header": {
                            "anchor": "v2-categories_create-categories"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update a Category \n\nUpdates an existing category.\n\n>`PUT /stores/{store_hash}/v2/categories/{id}`\n\n\n### Read-only Properties \n\nThe following properties of the category are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   parent_category_list\n\n### Requirements \n\nThe following properties of the category are required. The request won’t be fulfilled unless these properties are valid.\n\n### Notes \n\nTo maximize system performance, BigCommerce caps the total number of parent categories at seven. If your `PUT` includes the ID of a parent category in the `parent_id` field, BigCommerce will check the parent and any children of the current category to determine the total number of parent categories. If your `PUT` would cause the total number of parent categories to exceed the maximum of seven, BigCommerce will return a 403 error.\n\n### Response\n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"parent_id\": 1,\n  \"name\": \"Xmen toys\",\n  \"description\": \"\",\n  \"sort_order\": 2,\n  \"page_title\": \"\",\n  \"meta_keywords\": null,\n  \"meta_description\": null,\n  \"layout_file\": \"category.html\",\n  \"parent_category_list\": [\n    1,\n    10\n  ],\n  \"image_file\": \"d/apiy2uz6q__69888.jpg\",\n  \"is_visible\": true,\n  \"search_keywords\": \"\",\n  \"url\": \"/xmen-toys/\"\n}\n```",
                          "header": {
                            "anchor": "v2-categories_update-categories"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Category \n\nDeletes a category.\n\n>`DELETE /stores/{store_hash}/v2/categories/{id}`",
                          "header": {
                            "anchor": "v2-categories_delete-categories"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "title": "Delete Products before Categories",
                            "body": "The Delete All Categories operation will not succeed unless the store has zero products. If any products in the store belong to any categories, the entire operation will fail. Therefore, if you really want to delete all the categories of the store, you must first delete all of the products in the store."
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Delete All Categories \n\nDeletes all the categories in the store.\n\n>`DELETE /stores/{store_hash}/v2/categories`",
                          "header": {
                            "anchor": "v2-categories_delete-all-categories"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Bulk Pricing Rules",
                    "route": {
                      "path": "/v2-bulk-pricing"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Bulk Pricing Rules</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-bulk-pricing-rules_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-bulk-pricing-rules_list-bulk-pricing-rules\">List Bulk Pricing Rules</a></li>\n\t\t<li><a href=\"#v2-bulk-pricing-rules_get-bulk-pricing-rules\">Get a Bulk Pricing Rule</a></li>\n    <li><a href=\"#v2-bulk-pricing-rules_get-count-bulk-pricing-rules\">Get a Count of Bulk Pricing Rules</a></li>\n    <li><a href=\"#v2-bulk-pricing-rules_create-bulk-pricing-rules\">Create a Bulk Pricing Rule</a></li>\n    <li><a href=\"#v2-bulk-pricing-rules_update-bulk-pricing-rules\">Update A Bulk Pricing Rule</a></li>\n    <li><a href=\"#v2-bulk-pricing-rules_delete-bulk-pricing-rules\">Delete a Bulk Pricing Rules</a></li>\n    <li><a href=\"#v2-bulk-pricing-rules_delete-multiple-bulk-pricing-rules\">Delete Multiple Bulk Pricing Rules</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "##  Bulk Pricing \n\nBulk pricing rules applied to a product.\n\n###  Bulk Pricing Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | string | The ID of the bulk discount rule. |\n| product_id | int | The ID of the product associated with this bulk discount rule. |\n| min | int | The minimum inclusive quantity of a product to satisfy this rule. Must be greater than or equal to zero. |\n| max | int | The maximum inclusive quantity of a product to satisfy this rule. Must be greater than the min value, unless this field has a value of 0 (zero), in which case there will be no maximum bound for this rule. |\n| type | enum |\n| type_value | decimal | The value of the discount |",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Bulk Pricing Rules \n\nGets the collection of product bulk pricing rules.\n\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/discount_rules`\n\n### Filters \n\nThere are no filter parameters specific to `discount_rules`.\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 bulk_pricing_rules are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/discount_rules?page={number} |\n| limit | int | /api/v2/products/{product_id}/discount_rules?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": \"1\",\n    \"product_id\": 30,\n    \"min\": 100,\n    \"max\": 500,\n    \"type\": \"price\",\n    \"type_value\": 2\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_list-bulk-pricing-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product Bulk Pricing Rule \n\nGets a product bulk pricing rule.\n\n>`GET /stores/{store_hash}/v2/products/{product_id}/discount_rules/{id}`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": \"1\",\n  \"product_id\": 30,\n  \"min\": 100,\n  \"max\": 500,\n  \"type\": \"price\",\n  \"type_value\": 2\n}\n```",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_get-bulk-pricing-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Bulk Pricing Rules \n\nGets a count of the number of bulk pricing rules in the store.\n\n>`GET /stores/{store_hash}/v2/products/discount_rules/count`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 9\n}\n```",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_get-count-bulk-pricing-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Create a Product Bulk Pricing Rule \n\nCreates a new product bulk pricing rule.\n\n\n>`POST /stores/{store_hash}/v2/products/{product_id}/discount_rules`\n\n### Read-only Properties \n\nThe following properties of the discount rule are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   product_id\n\n### Requirements \n\nThe following properties of the discount rule are required. The request won’t be fulfilled unless these properties are valid.\n\n*   type\n*   type_value\n\n### Notes \n\nTo specify that a `min` or `max` value is unbounded, these properties must be explicitly set with a value of `0`. If neither `min` nor `max` properties are included in the request, the existing value will remain unchanged.\n\nThe range of the `min` and `max` values must not overlap an existing rule associated with the same product.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"min\": 100,\n  \"max\": 500,\n  \"type\": \"price\",\n  \"type_value\": 2\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": \"1\",\n  \"product_id\": 30,\n  \"min\": 100,\n  \"max\": 500,\n  \"type\": \"price\",\n  \"type_value\": 2\n}\n```",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_create-bulk-pricing-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update a Product Bulk Pricing Rule \n\nUpdates an existing product bulk pricing rule.\n\n\n>`PUT /stores/{store_hash}/v2/products/{product_id}/discount_rules/{id}`\n\n\n### Read-only Properties \n\nThe following properties of the discount rule are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   product_id\n\n### Requirements \n\nThe following properties of the discount rule are required. The request won’t be fulfilled unless these properties are valid.\n\n*   type\n*   type_value\n\n### Notes \n\nTo specify that a `min` or `max` value is unbounded, these properties must be explicitly set with a value of `0`. If neither `min` nor `max` properties are included in the request, the existing value will remain unchanged.\n\nThe range of the `min` and `max` values must not overlap an existing rule associated with the same product.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"min\": 200,\n  \"max\": 300,\n  \"type\": \"fixed\",\n  \"type_value\": 10\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": \"1\",\n  \"product_id\": 30,\n  \"min\": 200,\n  \"max\": 300,\n  \"type\": \"fixed\",\n  \"type_value\": 10\n}\n```",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_update-bulk-pricing-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Product Bulk Pricing Rule \n\nDeletes a product bulk pricing rule.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/discount_rules/{id}`",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_delete-bulk-pricing-rules"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete Multiple Product Bulk Pricing Rules \n\nDeletes bulk pricing rules associated with a product.\n\n>`DELETE /stores/{store_hash}/v2/products/{product_id}/discount_rules`\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 `bulk_pricing_rules` are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| page | int | /api/v2/products/{product_id}/discount_rules?page={number} |\n| limit | int | /api/v2/products/{product_id}/discount_rules?limit={count} |",
                          "header": {
                            "anchor": "v2-bulk-pricing-rules_delete-multiple-bulk-pricing-rules"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Products",
                    "route": {
                      "path": "/v2-products"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Products</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-products_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-products_list-products\">List Products</a></li>\n\t\t<li><a href=\"#v2-products_get-products\">Get a Product</a></li>\n    <li><a href=\"#v2-products_get-count-products\">Get a Count of Products</a></li>\n    <li><a href=\"#v2-products_create-products\">Create a Product</a></li>\n    <li><a href=\"#v2-products_update-products\">Update A Product</a></li>\n    <li><a href=\"#v2-products_delete-products\">Delete a Product</a></li>\n    <li><a href=\"#v2-products_delete-all-products\">Delete All Products</a></li>\n\t\t</ul>\n</div>\n"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "body": "It is recommended to use the new [Catalog Products](/api-reference/catalog/catalog-api)"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Products \nA product object represents a saleable item in the catalog.\n\n### Product Object – Properties \n\n| Name | Type | Description |\n|  |  |  |  |\n| id | int | The unique numerical ID of the product. Increments sequentially. |\n| keyword_filter | string | (This property is deprecated.) |\n| name | string | The product name. |\n| type | enum | The product type. One of:<br> `physical` – a physical stock unit.<br> `digital` – a digital download. |\n| sku | string | User-defined product code/stock keeping unit (SKU). |\n| description | text | Product description, which can include HTML formatting. |\n| search_keywords | text | A comma-separated list of keywords that can be used to locate the product when searching the store. |\n| availability_description | string | Availability text, displayed on the checkout page under the product title, telling the customer how long it will normally take to ship this product. E.g.: \"Usually ships in 24 hours\". |\n| price | decimal | The product's price. Should include, or exclude, tax based on the store settings. |\n| cost_price | decimal | The product's cost price. Stored for reference only; not used or displayed anywhere on the store. |\n| retail_price | decimal | The product's retail cost. If entered, this retail price will be shown on the product page. |\n| sale_price | decimal | Sale price. If entered, this will be used instead of value in the price field when calculating the product's cost. |\n| calculated_price | decimal | Price as displayed to guests, adjusted for applicable sales and rules. (Cart price might incorporate further discounts for logged-in customers or customer groups.) Read-only. |\n| sort_order | int | Priority to give this product when included in product lists on category pages and in search results. Lower integers will place the product closer to the top of the results. |\n| is_visible | boolean | Flag to determine whether or not the product should be displayed to customers browsing. If `true`, the product will be displayed. If `false`, the product will be hidden from view. |\n| is_featured | boolean | Flag to determine whether the product should be included in the \"featured products\" panel for shoppers viewing the store. |\n| related_products | string | Defaults to `-1`, which causes the store to automatically generate a list of related products. To manually specify the list of related products, include their IDs, separated by commas. For example: `3, 6, 7, 21`. |\n| inventory_level | int | Current inventory level of the product. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take effect. |\n| inventory_warning_level | int | Inventory Warning level for the product. When the product's inventory level drops below this warning level, the store owner will be sent a notification. Simple inventory tracking must be enabled (see the `inventory_tracking` field) for this to take effect. |\n| warranty | text | Warranty information displayed on the product page. Can include HTML formatting. |\n| weight | decimal | Weight of the product, which can be used when calculating shipping costs. |\n| width | decimal | Width of the product, which can be used when calculating shipping costs. |\n| height | decimal | Height of the product, which can be used when calculating shipping costs. |\n| depth | decimal | Depth of the product, which can be used when calculating shipping costs. |\n| fixed_cost_shipping_price | decimal | A fixed shipping cost for the product. If defined, this value will be used instead of normal shipping-cost calculation during checkout. |\n| is_free_shipping | boolean | Flag used to indicate whether or not the product has free shipping. If `true`, the shipping cost for the product will be zero. |\n| inventory_tracking | enum | The type of inventory tracking for the product. One of:<br> `none` – inventory levels will not be tracked.<br> `simple` – inventory levels will be tracked using the `inventory_level` and `inventory_warning_level` fields.<br> `sku` – inventory levels will be tracked based on individual product options, which maintain their own warning levels and inventory levels. |\n| rating_total | int | The total rating for the product. |\n| rating_count | int | The total number of ratings the product has had. |\n| total_sold | int | Total quantity of this product sold through transactions. |\n| date_created | date | The date of which the product was created. |\n| brand_id | int | The product's brand |\n| view_count | int | The number of times the product has been viewed. |\n| page_title | string | Custom title for the product's page. If not defined, the product name will be used as the page title. |\n| meta_keywords | text | Custom meta keywords for the product page. If not defined, the store's default keywords will be used. |\n| meta_description | text | Custom meta description for the product page. If not defined, the store's default meta description will be used. |\n| layout_file | string | The layout template file used to render this product category. This field is writable only for stores with a Blueprint theme applied |\n| is_price_hidden | boolean | The default `false` value indicates that this product's price should be shown on the product page. If set to `true`, the price will be hidden hidden. (NOTE: To successfully set `is_price_hidden` to `true`, the `availability` value must be `disabled`.) |\n| price_hidden_label | string | By default, an empty string. If `is_price_hidden` is `true`, the value of `price_hidden_label` will be displayed instead of the price. (NOTE:&#160;To successfully set a non-empty string value for `price_hidden_label`, the `availability` value must be `disabled`.) |\n| categories | array | An array of IDs for the categories this product belongs to. When updating a product, if an array of categories is supplied, then all product categories will be overwritten. Does not accept more than 1,000 ID values. |\n| date_modified | date | The date that the product was last modified. |\n| event_date_field_name | string | Name of the field to be displayed on the product page when selecting the event/delivery date. |\n| event_date_type | enum | One of the following values:<br> `none` – Disables the event/delivery date requirement and field.<br> `after` – The selected date must fall either on, or after, the date specified in the `event_date_start` field.<br> `before` – The selected date must fall either before, or on, the date specified in the `event_date_end` field.<br> `range` – The selected date must fall between the `event_date_start` and `event_date_end` dates. |\n| event_date_start | date | When the product requires the customer to select an event/delivery date, this date is used as the \"after\" date. |\n| event_date_end | date | When the product requires the customer to select an event/delivery date, this date is used as the \"before\" date. |\n| myob_asset_account | string | MYOB Asset Account. |\n| myob_income_account | string | MYOB Income Account. |\n| myob_expense_account | string | MYOB Expense/COS Account. |\n| peachtree_gl_account | string | Peachtree General Ledger Account. |\n| condition | enum | The product's condition. Will be shown on the product page if the value of the `is_condition_shown` field is true. Possible values: `New`, `Used`, `Refurbished`. |\n| is_condition_shown | boolean | Flag used to determine whether the product's condition will be shown to the customer on the product page. |\n| preorder_release_date | date | Pre-order release date. See `availability` field for details on setting a product's availability to accept pre-orders. |\n| is_preorder_only | boolean | If set to `false`, the product will not change its `availability` from `preorder` to `available` on the release date. Otherwise, on the release date the product's availability/status will change to `available`. |\n| preorder_message | string | Custom expected-date message to display on the product page. If undefined, the message defaults to the storewide setting. Can contain the `%%DATE%%` placeholder, which will be replaced with the release date. |\n| order_quantity_minimum | int | The minimum quantity an order must contain in order to purchase this product. |\n| order_quantity_maximum | int | The maximum quantity an order can contain when purchasing the product. |\n| open_graph_type | enum | Type of product. Acceptable values are: `product`, `album`, `book`, `drink`, `food`, `game`, `movie`, `song`, `tv_show` |\n| open_graph_title | string | Title of the product. If not specified, the product's name will be used instead. |\n| open_graph_description | text | Description to use for the product. If not specified, the `meta_description` will be used instead. |\n| is_open_graph_thumbnail | boolean | If set to `true`, the product thumbnail image will be used as the open graph image. |\n| upc | string | The product UPC code, which is used in feeds for shopping comparison sites. |\n| date_last_imported | date | The date on which the product was last imported using the bulk importer. |\n| option_set_id | int | The ID of the [option set](/api/v2/#option-sets) applied to the product. (NOTE: To remove the option set from the product, set the value to `null` on update.) |\n| tax_class_id | int | The ID of the tax class applied to the product. (NOTE: Value ignored if automatic tax is enabled.) |\n| option_set_display | enum | The position on the product page where options from the option set will be displayed. |\n| bin_picking_number | string | The BIN picking number for the product. |\n| custom_url | string | Custom URL (if set) overriding the structure dictated in the store's settings. If no custom URL is set, this will contain the default URL. |\n| primary_image | object | An image object, corresponding to the image that is set as the product's thumbnail. This object includes that image's `id`, plus four URL values identifying where to pull the image at different sizes:<br>`standard_url` is the image used in the product page's image box.<br> `tiny_url` is the thumbnail image displayed below the product page's image box.<br> `thumbnail_url` is used for product list-box images on category pages and in side panels.<br> `zoom_url` is either the original image size provided to BigCommerce, or the merchant-selected `Product Zoom Image`/`Zoomed image` size – whichever is smaller. (You can always access the product's original image via the [Product Images resource](/api/v2/#product-images).) |\n| availability | enum | Availability of the product. Possible values:<br> `available` – the product can be purchased on the storefront.<br> `disabled` - the product is listed on the storefront, but cannot be purchased.<br> `preorder` – the product is listed for pre-orders. |\n| brand | resource | The product's brand |\n| downloads | resource | Total number of downloads for a downloadable product. |\n| images | resource | See the [Product Images resource](/api/v2/#product-images) for information. |\n| discount_rules | resource | See the [Bulk Pricing/Discount](/api/v2/#bulk-pricing) resource for information. |\n| configurable_fields | resource | See the [Configurable Fields](/api/v2/#configurable-fields) resource for information. |\n| custom_fields | resource | See the [Custom Fields](/api/v2/#custom-fields) resource for information. |\n| videos | resource | See the [Videos resource](/api/v2/#videos) for information. |\n| skus | resource | Stock Keeping Units for the product. See the [Product SKUs](/api/v2/#skus) resource for the definition of a sku object. |\n| rules | resource | Rules that apply only to this product, based on the product's [option set](/v2#product-option-sets). See [Product Rules](/api/v2/#product-rules) resource for information. |\n| option_set | resource | See the [Product Option Sets](/v2/#product-option-sets) resource for information. |\n| options | resource | Options from the [option set](/api/v2/#option-sets) applied to the product. See the [Product Options](/api/v2/#product-options) resource for information. |\n| tax_class | resource | Assigned tax class, when using a manual tax setup. This can be a number matching one of the tax classes set up in your store. |\n| avalara_product_tax_code | resource | Accepts AvaTax System Tax Codes, which identify products and services that fall into special sales-tax categories. By using these codes, merchants who subscribe to Avalara Premium can calculate sales taxes more accurately.<br><br> Stores without Avalara Premium will ignore the code when calculating sales tax. Do not pass more than one code. The codes are case-sensitive.<br><br> For details, please see Avalara's <a href=\"https://help.avalara.com/000_Avalara_AvaTax/Manage_Product_Taxability/010_Select_AvaTax_System_Tax_Codes\" target=\"_blank\">overview</a> and <a href=\"https://help.avalara.com/000_Avalara_AvaTax/Manage_Product_Taxability/Tax_Codes_-_Frequently_Asked_Questions\" target=\"_blank\">FAQ</a> on AvaTax System Tax Codes. You can also <a href=\"https://help.avalara.com/@api/deki/files/1675/AvaTax_System_Tax_Codes_Toolkit.zip?revision=37\" target=\"_blank\">download codes</a> as a zipfile of spreadsheets, or <a href=\"https://taxcode.avatax.avalara.com/\" target=\"_blank\">search or browse codes</a> in Avalara's Tax Code Search Tool. (These external links are subject to change.) |\n",
                          "header": {
                            "anchor": "v2-products_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Products \n\nGets the collection of products. (Default sorting is by product id, from lowest to highest.)\n> `GET /stores/{store_hash}/v2/products`\n\n### Filters \n\nFilter parameters can be added to the URL query string to select specific products in the collection.\n\n| Parameter | Type | Example |\n|  |  |  |\n| min_id | int | /api/v2/products?min_id={value} |\n| max_id | int | /api/v2/products?max_id={value} |\n| name | string | /api/v2/products?name={value} |\n| keyword_filter | string | /api/v2/products?keyword_filter={value} |\n| description | string | /api/v2/products?description={value} |\n| sku | string | /api/v2/products?sku={value} |\n| condition | string | /api/v2/products?condition={value} |\n| availability | string | /api/v2/products?availability={value} |\n| brand_id | string | /api/v2/products?brand_id={value} |\n| min_date_created | dateTime or date | /api/v2/products?min_date_created={value} |\n| max_date_created | dateTime or date | /api/v2/products?max_date_created={value} |\n| min_date_modified | dateTime or date | /api/v2/products?min_date_modified={value} |\n| max_date_modified | dateTime or date | /api/v2/products?max_date_modified={value} |\n| min_date_last_imported | date | /api/v2/products?min_date_last_imported={value} |\n| max_date_last_imported | date | /api/v2/products?max_date_last_imported={value} |\n| min_price | decimal | /api/v2/products?min_price={value} |\n| max_price | decimal | /api/v2/products?max_price={value} |\n| min_number_sold | int | /api/v2/products?min_number_sold={value} |\n| max_number_sold | int | /api/v2/products?max_number_sold={value} |\n| is_visible | string | /api/v2/products?is_visible={value} |\n| is_featured | string | /api/v2/products?is_featured={value} |\n| min_inventory_level | int | /api/v2/products?min_inventory_level={value} |\n| max_inventory_level | int | /api/v2/products?max_inventory_level={value} |\n| include_sku | boolean | /api/v2/products?include_sku={value} |\n| category | string | /api/v2/products?category={value} |\n| product_tax_code | string | /api/v2/products?product_tax_code={value} |\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, up to 50 products are returned by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/products?page={number} |\n| Limit | int | /api/v2/products?limit={count} |\n\n### Notes \n\nYou can filter the retrieved fields by appending one of the following options to your request:\n\n* ?include=\n* ?include=@summary\n* ?exclude=\n\nFor details, syntax, and examples, please see the [Get a Product](#get-a-product) operation.\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 32,\n    \"keyword_filter\": null,\n    \"name\": \"[Sample] Tomorrow is today, Red printed scarf\",\n    \"type\": \"physical\",\n    \"sku\": \"\",\n    \"description\": \"Densely pack your descriptions with useful information and watch products fly off the shelf.\",\n    \"search_keywords\": null,\n    \"availability_description\": \"\",\n    \"price\": \"89.0000\",\n    \"cost_price\": \"0.0000\",\n    \"retail_price\": \"0.0000\",\n    \"sale_price\": \"0.0000\",\n    \"calculated_price\": \"89.0000\",\n    \"sort_order\": 0,\n    \"is_visible\": true,\n    \"is_featured\": true,\n    \"related_products\": \"-1\",\n    \"inventory_level\": 0,\n    \"inventory_warning_level\": 0,\n    \"warranty\": null,\n    \"weight\": \"0.3000\",\n    \"width\": \"0.0000\",\n    \"height\": \"0.0000\",\n    \"depth\": \"0.0000\",\n    \"fixed_cost_shipping_price\": \"10.0000\",\n    \"is_free_shipping\": false,\n    \"inventory_tracking\": \"none\",\n    \"rating_total\": 0,\n    \"rating_count\": 0,\n    \"total_sold\": 0,\n    \"date_created\": \"Fri, 21 Sep 2012 02:31:01 +0000\",\n    \"brand_id\": 17,\n    \"view_count\": 4,\n    \"page_title\": \"\",\n    \"meta_keywords\": null,\n    \"meta_description\": null,\n    \"layout_file\": \"product.html\",\n    \"is_price_hidden\": false,\n    \"price_hidden_label\": \"\",\n    \"categories\": [\n      14\n    ],\n    \"date_modified\": \"Mon, 24 Sep 2012 01:34:57 +0000\",\n    \"event_date_field_name\": \"Delivery Date\",\n    \"event_date_type\": \"none\",\n    \"event_date_start\": \"\",\n    \"event_date_end\": \"\",\n    \"myob_asset_account\": \"\",\n    \"myob_income_account\": \"\",\n    \"myob_expense_account\": \"\",\n    \"peachtree_gl_account\": \"\",\n    \"condition\": \"New\",\n    \"is_condition_shown\": false,\n    \"preorder_release_date\": \"\",\n    \"is_preorder_only\": false,\n    \"preorder_message\": \"\",\n    \"order_quantity_minimum\": 0,\n    \"order_quantity_maximum\": 0,\n    \"open_graph_type\": \"product\",\n    \"open_graph_title\": \"\",\n    \"open_graph_description\": null,\n    \"is_open_graph_thumbnail\": true,\n    \"upc\": null,\n    \"avalara_product_tax_code\": \"\",\n    \"date_last_imported\": \"\",\n    \"option_set_id\": null,\n    \"tax_class_id\": 0,\n    \"option_set_display\": \"right\",\n    \"bin_picking_number\": \"\",\n    \"custom_url\": \"/tomorrow-is-today-red-printed-scarf/\",\n    \"primary_image\": {\n      \"id\": 247,\n      \"zoom_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.1280.1280.jpg?c=1\",\n      \"thumbnail_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.220.290.jpg?c=1\",\n      \"standard_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.386.513.jpg?c=1\",\n      \"tiny_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.44.58.jpg?c=1\"\n    },\n    \"availability\": \"available\",\n    \"brand\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/brands/17.json\",\n      \"resource\": \"/brands/17\"\n    },\n    \"images\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/images.json\",\n      \"resource\": \"/products/32/images\"\n    },\n    \"discount_rules\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/discountrules.json\",\n      \"resource\": \"/products/32/discountrules\"\n    },\n    \"configurable_fields\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/configurablefields.json\",\n      \"resource\": \"/products/32/configurablefields\"\n    },\n    \"custom_fields\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/customfields.json\",\n      \"resource\": \"/products/32/customfields\"\n    },\n    \"videos\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/videos.json\",\n      \"resource\": \"/products/32/videos\"\n    },\n    \"skus\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/skus.json\",\n      \"resource\": \"/products/32/skus\"\n    },\n    \"rules\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/rules.json\",\n      \"resource\": \"/products/32/rules\"\n    },\n    \"option_set\": null,\n    \"options\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/options.json\",\n      \"resource\": \"/products/32/options\"\n    },\n    \"tax_class\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/taxclasses/0.json\",\n      \"resource\": \"/taxclasses/0\"\n    }\n  },\n  {\n    \"id\": 33,\n    \"keyword_filter\": null,\n    \"name\": \"[Sample] Anna, multi-colored bangles\",\n    \"type\": \"physical\",\n    \"sku\": \"\",\n    \"description\": \"One of the best things you can do to make your store successful is invest some time in writing great product descriptions.</p>\",\n    \"search_keywords\": null,\n    \"availability_description\": \"\",\n    \"price\": \"59.0000\",\n    \"cost_price\": \"0.0000\",\n    \"retail_price\": \"0.0000\",\n    \"sale_price\": \"0.0000\",\n    \"calculated_price\": \"59.0000\",\n    \"sort_order\": 0,\n    \"is_visible\": true,\n    \"is_featured\": true,\n    \"related_products\": \"-1\",\n    \"inventory_level\": 0,\n    \"inventory_warning_level\": 0,\n    \"warranty\": null,\n    \"weight\": \"0.5000\",\n    \"width\": \"0.0000\",\n    \"height\": \"0.0000\",\n    \"depth\": \"0.0000\",\n    \"fixed_cost_shipping_price\": \"0.0000\",\n    \"is_free_shipping\": false,\n    \"inventory_tracking\": \"none\",\n    \"rating_total\": 0,\n    \"rating_count\": 0,\n    \"total_sold\": 0,\n    \"date_created\": \"Fri, 21 Sep 2012 02:46:41 +0000\",\n    \"brand_id\": 18,\n    \"view_count\": 12,\n    \"page_title\": \"\",\n    \"meta_keywords\": null,\n    \"meta_description\": null,\n    \"layout_file\": \"product.html\",\n    \"is_price_hidden\": false,\n    \"price_hidden_label\": \"\",\n    \"categories\": [\n      14\n    ],\n    \"date_modified\": \"Mon, 24 Sep 2012 05:28:02 +0000\",\n    \"event_date_field_name\": \"Delivery Date\",\n    \"event_date_type\": \"none\",\n    \"event_date_start\": \"\",\n    \"event_date_end\": \"\",\n    \"myob_asset_account\": \"\",\n    \"myob_income_account\": \"\",\n    \"myob_expense_account\": \"\",\n    \"peachtree_gl_account\": \"\",\n    \"condition\": \"New\",\n    \"is_condition_shown\": false,\n    \"preorder_release_date\": \"\",\n    \"is_preorder_only\": false,\n    \"preorder_message\": \"\",\n    \"order_quantity_minimum\": 0,\n    \"order_quantity_maximum\": 0,\n    \"open_graph_type\": \"product\",\n    \"open_graph_title\": \"\",\n    \"open_graph_description\": null,\n    \"is_open_graph_thumbnail\": true,\n    \"upc\": null,\n    \"avalara_product_tax_code\": \"\",\n    \"date_last_imported\": \"\",\n    \"option_set_id\": 13,\n    \"tax_class_id\": 0,\n    \"option_set_display\": \"right\",\n    \"bin_picking_number\": \"\",\n    \"custom_url\": \"/anna-multi-colored-bangles/\",\n    \"primary_image\": {\n      \"id\": 245,\n      \"zoom_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/33/images/245/HERO_cocolee_anna_92865__20303.1393831046.1280.1280.jpg?c=1\",\n      \"thumbnail_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/33/images/245/HERO_cocolee_anna_92865__20303.1393831046.220.290.jpg?c=1\",\n      \"standard_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/33/images/245/HERO_cocolee_anna_92865__20303.1393831046.386.513.jpg?c=1\",\n      \"tiny_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/33/images/245/HERO_cocolee_anna_92865__20303.1393831046.44.58.jpg?c=1\"\n    },\n    \"availability\": \"available\",\n    \"brand\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/brands/18.json\",\n      \"resource\": \"/brands/18\"\n    },\n    \"images\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/images.json\",\n      \"resource\": \"/products/33/images\"\n    },\n    \"discount_rules\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/discountrules.json\",\n      \"resource\": \"/products/33/discountrules\"\n    },\n    \"configurable_fields\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/configurablefields.json\",\n      \"resource\": \"/products/33/configurablefields\"\n    },\n    \"custom_fields\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/customfields.json\",\n      \"resource\": \"/products/33/customfields\"\n    },\n    \"videos\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/videos.json\",\n      \"resource\": \"/products/33/videos\"\n    },\n    \"skus\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/skus.json\",\n      \"resource\": \"/products/33/skus\"\n    },\n    \"rules\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/rules.json\",\n      \"resource\": \"/products/33/rules\"\n    },\n    \"option_set\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/optionsets/13.json\",\n      \"resource\": \"/optionsets/13\"\n    },\n    \"options\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/33/options.json\",\n      \"resource\": \"/products/33/options\"\n    },\n    \"tax_class\": {\n      \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/taxclasses/0.json\",\n      \"resource\": \"/taxclasses/0\"\n    }\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-products_list-products"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product \n\nGets a product.\n \n> `GET /stores/{store_hash}/v2/products/{id}`\n\n### Notes \n\nYou can filter the retrieved fields by appending one of the following options to your request: \n\n- `?include=`\n- `?include=@summary` \n- `?exclude=`\n\nIn particular, you can reduce payload size, and improve performance, by excluding the `description` field.\n\n### Mandatory Fields \n\nHowever, the following fields are always present on product API requests, and cannot be excluded:\n\n- `id`\n- `name`\n- `date_modified`\n- `primary_image`\n\n### include \n\nThe following sample request will retrieve *only* the specified `date_created`, `price`, and `cost_price` fields, plus the mandatory fields listed just above:\n\n```\nhttps://store-et7xe3pz.mybigcommerce.com/api/v2/products/32?include=date_created,price,cost_price\n```\n\nHere is a corresponding sample response:\n\n```\n{\n    \"id\": 32,\n    \"name\": \"[Sample] Tomorrow is today, Red printed scarf\",\n    \"price\": \"89.0000\",\n    \"cost_price\": \"0.0000\",\n    \"date_created\": \"Fri, 21 Sep 2012 02:31:01 +0000\",\n    \"date_modified\": \"Thu, 10 Dec 2015 21:10:17 +0000\",\n    \"primary_image\": {\n        \"id\": 247,\n        \"tiny_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.60.90.jpg?c=1\",\n        \"standard_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.500.750.jpg?c=1\",\n        \"thumbnail_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.190.285.jpg?c=1\",\n        \"zoom_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.1280.1280.jpg?c=1\"\n    },\n    \"metadata\": []\n}\n```\n\n### include=@summary \n\nThe `?include=@summary` option retrieves the following predefined subset of fields, in addition to the [mandatory fields](#get-a-product-mandatory) listed above: \n\n- `availability`\n- `calculated_price`\n- `inventory_tracking`\n- `sku`\n- `inventory_level`\n- `inventory_warning_level`\n- `is_visible`\n- `is_featured` \n\nHere is a sample request with the `?include=@summary` option appended:\n\n```\nhttps://store-et7xe3pz.mybigcommerce.com/api/v2/products/32?include=@summary\n```\n\nHere is a corresponding sample response:\n\n```\n{\n    \"id\": 32,\n    \"name\": \"[Sample] Tomorrow is today, Red printed scarf\",\n    \"sku\": \"TTRPS\",\n    \"calculated_price\": \"89.0000\",\n    \"is_visible\": true,\n    \"is_featured\": true,\n    \"inventory_level\": 0,\n    \"inventory_warning_level\": 0,\n    \"inventory_tracking\": \"none\",\n    \"date_modified\": \"Thu, 10 Dec 2015 21:10:17 +0000\",\n    \"availability\": \"available\",\n    \"primary_image\": {\n        \"id\": 247,\n        \"tiny_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.60.90.jpg?c=1\",\n        \"standard_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.500.750.jpg?c=1\",\n        \"thumbnail_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.190.285.jpg?c=1\",\n        \"zoom_url\": \"https://cdn.url.path/bcapp/k84uuwpy/products/32/images/247/in_123__14581.1348449270.1280.1280.jpg?c=1\"\n    },\n    \"metadata\": []\n}\n```\n\n### exclude \n\nThe `?exclude=` option excludes one or more specified fields. However, you cannot exclude the mandatory `id`, `name`, `date_modified`, or `primary_image` fields.\n\nHere is a sample request with the `?exclude=` option appended:\n\n```\nhttps://store-et7xe3pz.mybigcommerce.com/api/v2/products/32?exclude=description\n```\n\nWe have omitted the corresponding sample response. However, the following section shows a complete sample response for a request submitted with no `?include` or `?exclude` option. (The effect of the `?exclude=description` option shown above would be to omit the `\"description\": ` field shown as the sixth field below.)\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 32,\n  \"keyword_filter\": null,\n  \"name\": \"[Sample] Tomorrow is today, Red printed scarf\",\n  \"type\": \"physical\",\n  \"sku\": \"\",\n  \"description\": \"Densely pack your descriptions with useful information and watch products fly off the shelf.\",\n  \"search_keywords\": null,\n  \"availability_description\": \"\",\n  \"price\": \"89.0000\",\n  \"cost_price\": \"0.0000\",\n  \"retail_price\": \"0.0000\",\n  \"sale_price\": \"0.0000\",\n  \"calculated_price\": \"89.0000\",\n  \"sort_order\": 0,\n  \"is_visible\": true,\n  \"is_featured\": true,\n  \"related_products\": \"-1\",\n  \"inventory_level\": 0,\n  \"inventory_warning_level\": 0,\n  \"warranty\": null,\n  \"weight\": \"0.3000\",\n  \"width\": \"0.0000\",\n  \"height\": \"0.0000\",\n  \"depth\": \"0.0000\",\n  \"fixed_cost_shipping_price\": \"10.0000\",\n  \"is_free_shipping\": false,\n  \"inventory_tracking\": \"none\",\n  \"rating_total\": 0,\n  \"rating_count\": 0,\n  \"total_sold\": 0,\n  \"date_created\": \"Fri, 21 Sep 2012 02:31:01 +0000\",\n  \"brand_id\": 17,\n  \"view_count\": 4,\n  \"page_title\": \"\",\n  \"meta_keywords\": null,\n  \"meta_description\": null,\n  \"layout_file\": \"product.html\",\n  \"is_price_hidden\": false,\n  \"price_hidden_label\": \"\",\n  \"categories\": [\n    14\n  ],\n  \"date_modified\": \"Mon, 24 Sep 2012 01:34:57 +0000\",\n  \"event_date_field_name\": \"Delivery Date\",\n  \"event_date_type\": \"none\",\n  \"event_date_start\": \"\",\n  \"event_date_end\": \"\",\n  \"myob_asset_account\": \"\",\n  \"myob_income_account\": \"\",\n  \"myob_expense_account\": \"\",\n  \"peachtree_gl_account\": \"\",\n  \"condition\": \"New\",\n  \"is_condition_shown\": false,\n  \"preorder_release_date\": \"\",\n  \"is_preorder_only\": false,\n  \"preorder_message\": \"\",\n  \"order_quantity_minimum\": 0,\n  \"order_quantity_maximum\": 0,\n  \"open_graph_type\": \"product\",\n  \"open_graph_title\": \"\",\n  \"open_graph_description\": null,\n  \"is_open_graph_thumbnail\": true,\n  \"upc\": null,\n  \"avalara_product_tax_code\": \"\",\n  \"date_last_imported\": \"\",\n  \"option_set_id\": null,\n  \"tax_class_id\": 0,\n  \"option_set_display\": \"right\",\n  \"bin_picking_number\": \"\",\n  \"custom_url\": \"/tomorrow-is-today-red-printed-scarf/\",\n  \"primary_image\": {\n    \"id\": 247,\n    \"zoom_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.1280.1280.jpg?c=1\",\n    \"thumbnail_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.220.290.jpg?c=1\",\n    \"standard_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.386.513.jpg?c=1\",\n    \"tiny_url\": \"https://cdn.url.path/bcapp/et7xe3pz/products/32/images/247/in_123__14581.1393831046.44.58.jpg?c=1\"\n  },\n  \"availability\": \"available\",\n  \"brand\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/brands/17.json\",\n    \"resource\": \"/brands/17\"\n  },\n  \"images\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/images.json\",\n    \"resource\": \"/products/32/images\"\n  },\n  \"discount_rules\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/discountrules.json\",\n    \"resource\": \"/products/32/discountrules\"\n  },\n  \"configurable_fields\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/configurablefields.json\",\n    \"resource\": \"/products/32/configurablefields\"\n  },\n  \"custom_fields\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/customfields.json\",\n    \"resource\": \"/products/32/customfields\"\n  },\n  \"videos\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/videos.json\",\n    \"resource\": \"/products/32/videos\"\n  },\n  \"skus\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/skus.json\",\n    \"resource\": \"/products/32/skus\"\n  },\n  \"rules\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/rules.json\",\n    \"resource\": \"/products/32/rules\"\n  },\n  \"option_set\": null,\n  \"options\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/products/32/options.json\",\n    \"resource\": \"/products/32/options\"\n  },\n  \"tax_class\": {\n    \"url\": \"https://store-et7xe3pz.mybigcommerce.com/api/v2/taxclasses/0.json\",\n    \"resource\": \"/taxclasses/0\"\n  }\n}\n```",
                          "header": {
                            "anchor": "v2-products_get-products"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Product Count \n\nGets a count of products.\n\n> `GET /stores/{store_hash}/v2/products/count`\n\n### Filters \n\nFilter parameters can be added to the URL query string to select specific products in the collection.\n\n| Parameter | Type | Example |\n|  |  |  |\n| min_id | int | /api/v2/products?min_id={value} |\n| max_id | int | /api/v2/products?max_id={value} |\n| name | string | /api/v2/products?name={value} |\n| keyword_filter | string | /api/v2/products?keyword_filter={value} |\n| description | string | /api/v2/products?description={value} |\n| sku | string | /api/v2/products?sku={value} |\n| condition | string | /api/v2/products?condition={value} |\n| availability | string | /api/v2/products?availability={value} |\n| brand_id | string | /api/v2/products?brand_id={value} |\n| min_date_created | date | /api/v2/products?min_date_created={value} |\n| max_date_created | date | /api/v2/products?max_date_created={value} |\n| min_date_modified | date | /api/v2/products?min_date_modified={value} |\n| max_date_modified | date | /api/v2/products?max_date_modified={value} |\n| min_date_last_imported | date | /api/v2/products?min_date_last_imported={value} |\n| max_date_last_imported | date | /api/v2/products?max_date_last_imported={value} |\n| min_price | decimal | /api/v2/products?min_price={value} |\n| max_price | decimal | /api/v2/products?max_price={value} |\n| min_number_sold | int | /api/v2/products?min_number_sold={value} |\n| max_number_sold | int | /api/v2/products?max_number_sold={value} |\n| is_visible | string | /api/v2/products?is_visible={value} |\n| is_featured | string | /api/v2/products?is_featured={value} |\n| min_inventory_level | int | /api/v2/products?min_inventory_level={value} |\n| max_inventory_level | int | /api/v2/products?max_inventory_level={value} |\n| include_sku | boolean | /api/v2/products?include_sku={value} |\n| category | string | /api/v2/products?category={value} |\n| product_tax_code | string | /api/v2/products?product_tax_code={value} |\n\n### Notes \n\nIf no filters are applied, the total number of products is returned.\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 44\n}\n```",
                          "header": {
                            "anchor": "v2-products_get-count-products"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Product \n\nCreates a new product. The example request shows how to create a basic product by sending a product object with the minimum required properties.\n\n> `POST /stores/{store_hash}/v2/products`\n\n### Read-only Properties \n\nThe following properties of the product are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   calculated_price\n*   brand\n*   images\n*   discount_rules\n*   configurable_fields\n*   custom_fields\n*   primary_image\n*   videos\n*   skus\n*   rules\n*   option_set\n*   options\n*   tax_class\n\n### Requirements \n\nThe following properties of the product are required. The request won’t be fulfilled unless these properties are valid.\n\n*   name\n*   price\n*   categories\n*   type\n*   availability\n*   weight\n\n### Notes \n\nCreate a request by sending a [product object](#product-object-properties) with the minimum required properties:\n\n```\n{\n    \"name\": \"Plain T-Shirt\",\n    \"type\": \"physical\",\n    \"description\": \"This timeless fashion staple will never go out of style!\",\n    \"price\": \"29.99\",\n    \"categories\": [18],\n    \"availability\": \"available\",\n    \"weight\": \"0.5\"\n}\n```\n\nWhen the `is_visible` property is not provided, the product's visibility is `false` by default.\n\nTo make newly created products immediately visible on the storefront, you must set `is_visible` to `true` when you create each product.\n\nTo maximize system performance, BigCommerce caps the number of categories to which a product can belong. The maximum is 1,000. If your `POST` includes an array of more than 1,000 `categories` ID values, BigCommerce will return a 403 error:\n\n```\n403 Access Denied/Forbidden\n```\n\nIf automatic tax is enabled on the store, the value of `tax_class_id` will have no effect on the calculation of taxes.",
                          "header": {
                            "anchor": "v2-products_create-products"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update a Product \n\nUpdates an existing product.\n\n> `PUT /stores/{store_hash}/v2/products/{id}`\n\n### Read-only Properties \n\nThe following properties of the product are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n*   rating_total\n*   rating_count\n*   number_sold\n*   date_created\n*   date_modified\n*   date_last_imported\n*   calculated_price\n*   brand\n*   images\n*   discount_rules\n*   configurable_fields\n*   custom_fields\n*   primary_image\n*   videos\n*   skus\n*   rules\n*   option_set\n*   options\n*   tax_class\n\n### Requirements \n\nThere are no required properties when updating a product.\n\n### Notes \n\nTo update a product, set one or more product properties in the `PUT` request:\n\n```\n{\n    \"custom_url\": \"/plain-tshirt/\",\n    \"is_visible\": true\n}\n```\n\nFor example, you can use a `PUT` to link a product to an option set:\n\n```\n{\n    \"option_set_id\": 14\n}\n```\n\nInvalid property values will produce a `400 Bad Request` error response:\n\n### Request \n\n``` \n{\n    \"condition\": \"Worn\"\n}\n```\n\n### Response \n\n```\n400 Bad Request\n```\n\nTrying to set read-only properties will also produce a `400 Bad Request` error response:\n\n### Request \n\n```\n{\n    \"number_sold\": 99\n}\n```\n\n### Response \n\n```\n400 Bad Request\n```\n\nTo maximize system performance, BigCommerce caps the maximum number of categories to which a product can belong, at 1,000. If your `PUT` includes an array of more than 1,000 `categories` ID values, BigCommerce will return a `403` error:\n\n```\n403 Access Denied/Forbidden\n```\n\nIf automatic tax is enabled on the store, the value of `tax_class_id` will have no effect on the calculation of taxes.\n",
                          "header": {
                            "anchor": "v2-products_update-products"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Product \n\nDeletes a product.\n\n> `DELETE /stores/{store_hash}/v2/products/{id}`\n\n### Notes \n\nSuccessful deletion of a product returns a `204 No Content` response:\n\n```\n204 No Content\n```",
                          "header": {
                            "anchor": "v2-products_delete-products"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete All Products \n\nDeletes all products from the store.\n\n> `DELETE /stores/{store_hash}/v2/products`\n\n### Notes \n\nSuccessful deletion of all products returns a `204 No Content` response:\n\n```\n204 No Content\n```",
                          "header": {
                            "anchor": "v2-products_delete-all-products"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Brands",
                    "route": {
                      "path": "/v2-brands"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Brands</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#v2-brands_object-properties\">Object Properties</a></li>\n\t\t<li><a href=\"#v2-brands_list-brands\">List Brands</a></li>\n\t\t<li><a href=\"#v2-brands_get-brands\">Get a Brand</a></li>\n    <li><a href=\"#v2-brands_get-count-brands\">Get a Count of Brands</a></li>\n    <li><a href=\"#v2-brands_create-brands\">Create a Brand</a></li>\n    <li><a href=\"#v2-brands_update-brands\">Update A Brand</a></li>\n    <li><a href=\"#v2-brands_delete-brands\">Delete a Brand</a></li>\n    <li><a href=\"#v2-brands_delete-all-brands\">Delete All Brands</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Brands \n\nBrand facets for identifying and categorizing products according to their manufacturer or company metonym.\n\n### Brand Object – Properties \n\n| Name | Type | Description |\n|  |  |  |\n| id | int |\n| name | string | The name of the brand. Must be unique. |\n| page_title | string | The title shown in the browser while viewing the brand. |\n| meta_keywords | text | Comma-separated list of meta keywords to include in the HTML. |\n| meta_description | text | A meta description to include. |\n| image_file | string | A valid image. |\n| s",
                          "header": {
                            "anchor": "v2-brands_object-properties"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## List Brands \n\nGets the collection of brands. (Default sorting is by brand id, from lowest to highest.)\n\n>`GET /stores/{store_hash}/v2/brands`\n\n### Filters \n\nFilter parameters can be added to the URL query string to select specific brands in the collection.\n\n| Parameter | Type | Example |\n|  |  |  |\n| name | string | /api/v2/brands?name={value} |\n| min_id | int | /api/v2/brands?min_id={value} |\n| max_id | int | /api/v2/brands?max_id={value} |\n\n### Pagination \n\nParameters can be added to the URL query string to paginate the collection. The maximum limit is 250. If a limit isn’t provided, BigCommerce returns up to 50 brands by default.\n\n| Parameter | Type | Example |\n|  |  |  |\n| Page | int | /api/v2/brands?page={number} |\n| Limit | int | /api/v2/brands?limit={count} |\n\n### Response \n\nExample JSON returned in the response:\n\n```\n[\n  {\n    \"id\": 1,\n    \"name\": \"Apple\",\n    \"page_title\": \"\",\n    \"meta_keywords\": \"\",\n    \"meta_description\": \"\",\n    \"image_file\": \"\",\n    \"search_keywords\": \"\"\n  },\n  {\n    \"id\": 2,\n    \"name\": \"Microsoft\",\n    \"page_title\": \"\",\n    \"meta_keywords\": \"\",\n    \"meta_description\": \"\",\n    \"image_file\": \"\",\n    \"search_keywords\": \"\"\n  }\n]\n```",
                          "header": {
                            "anchor": "v2-brands_list-brands"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Brand \n\nGets a brand.\n\n\n>`GET /stores/{store_hash}/v2/brands/{id}`\n\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 1,\n  \"name\": \"Apple\",\n  \"page_title\": \"\",\n  \"meta_keywords\": \"\",\n  \"meta_description\": \"\",\n  \"image_file\": \"\",\n  \"search_keywords\": \"\"\n}\n```",
                          "header": {
                            "anchor": "v2-brands_get-brands"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Get a Count of Brands \n\nReturns the total number of brands in the store.\n\n>`GET /stores/{store_hash}/v2/brands/count`\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"count\": 25\n}\n```",
                          "header": {
                            "anchor": "v2-brands_get-count-brands"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Create a Brand \n\nCreates a new brand.\n\n>`POST /stores/{store_hash}/v2/brands`\n\n\n### Read-only Properties \n\nThe following properties of the brand are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n\n### Requirements \n\nThe following properties of the brand are required. The request won’t be fulfilled unless these properties are valid.\n\n*   name\n\n### Notes \n\nTo maximize system performance, BigCommerce caps the number of brands that can be added to a store at 30,000. If your POST causes the store to exceed the maximum of 30,000 brands, BigCommerce will return a 403 error.\n\n### Request \n\nExample request object:\n\n```\n{\n  \"name\": \"Xmen\",\n  \"page_title\": \"X men brand\"\n}\n```\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"name\": \"Xmen\",\n  \"page_title\": \"X men brand\",\n  \"meta_keywords\": null,\n  \"meta_description\": null,\n  \"image_file\": \"\",\n  \"search_keywords\": \"\"\n}\n```",
                          "header": {
                            "anchor": "v2-brands_create-brands"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "\n## Update a Brand \n\nUpdates an existing brand.\n\n\n>`PUT /stores/{store_hash}/v2/brands/{id}`\n\n\n### Read-only Properties \n\nThe following properties of the brand are read-only. If one or more of these properties are included in the request, it will be rejected.\n\n*   id\n\n### Requirements \n\nThe following properties of the brand are required. The request won’t be fulfilled unless these properties are valid.\n\n### Response \n\nExample JSON returned in the response:\n\n```\n{\n  \"id\": 10,\n  \"name\": \"Xmen\",\n  \"page_title\": \"X men brand\",\n  \"meta_keywords\": null,\n  \"meta_description\": null,\n  \"image_file\": \"t/apirmzk0a__43675.jpg\",\n  \"search_keywords\": \"xmen, awesomeness\"\n}\n```",
                          "header": {
                            "anchor": "v2-brands_update-brands"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete a Brand \n\nDeletes a brand.\n\n>`DELETE /stores/{store_hash}/v2/brands/{id}`",
                          "header": {
                            "anchor": "2-brands_delete-brands"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Delete All Brands \n\nDeletes all brands belonging to a product.\n\n>`DELETE /stores/{store_hash}/v2/brands`",
                          "header": {
                            "anchor": "v2-brands_delete-all-brands"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Blueprint Themes",
              "route": {
                "path": "/blueprint-themes"
              },
              "data": {
                "children": [
                  {
                    "title": "reCAPTCHA v2",
                    "route": {
                      "path": "/recaptcha-two"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>ReCaptcha 2</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#better-spam-deterrance\">Better Spam Deterrance</a></li>\n\t\t<li><a href=\"#blueprint-how-to-upgrade-recaptcha\">How to Upgrade</a></li>\n\t\t<li><a href=\"#blueprint-supported-browsers\">Supported Browsers</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "To deter spam submission through storefront forms, BigCommerce now supports Google [reCAPTCHA v2](https://support.google.com/recaptcha/?hl=en#6080933) challenges, to distinguish human customers/visitors from automated bots.",
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": "## Better Spam Deterrence\n\nWe recommend that all storefront themes take advantage of this upgraded bot detection. However, BigCommerce's legacy Blueprint themes were last published in our Theme Marketplace before we implemented reCAPTCHA v2. Therefore, please use the following instructions to update your Blueprint-based theme with the best-available deterrent against automated spam.\n",
                          "header": {
                            "anchor": "better-spam-deterrance"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## How to Upgrade\n\nTo incorporate reCAPTCHA v2, you will need to update script references in these three template files: \n\n* `Panels/CreateAccountForm.html`\n* `page_contact_form.html`\n* `product_comments.html`",
                          "header": {
                            "anchor": "blueprint-how-to-upgrade-recaptcha"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "body": "Please back up each file before making any changes. \n\nThe instructions below are based on the default Blueprint theme (Classic Next), as it was last published in BigCommerce’s Theme Marketplace. Therefore, the HTML markup will vary, based on customizations you have already made to this theme, or to other Marketplace themes.",
                            "title": " Updating Safely \n"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Script Tag to Remove\nSearch each of the three template files for a ``<script>`` tag like the following. If you find it, delete the whole tag. (This script invokes a legacy reCAPTCHA v1 challenge:)"
                        },
                        {
                          "type": "code",
                          "data": "<script type=\"text/javascript\"> \n var RecaptchaOptions = { \n theme : 'clean' or 'white' \n }; \n </script>",
                          "header": {
                            "title": "Script Tag to Remove"
                          },
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Variable to Remove\n\nAlternately, you might see the same `RecaptchaOptions` variable inside a different `<script>` tag at the top of the same three templates. If so, delete the lines shown here:\n\n"
                        },
                        {
                          "type": "code",
                          "data": "var RecaptchaOptions = { \n theme : 'clean' or 'white'\n };\n",
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### reCAPTCHA Script to Update\n\nNext, in each of the three template files, replace the \"before\" code block just below with the simplified \"after\" code that follows.\n\n\n#### Replace this (before):",
                          "header": {}
                        },
                        {
                          "type": "code",
                          "data": "<script type=\"text/javascript\"\nsrc=\"https://www.google.com/recaptcha/api/challenge?k=%%GLOBAL_ReCaptchaAPIKeyPublic%%\">\n</script>\n\n<noscript>\n<iframe src=\"https://www.google.com/recaptcha/api/noscript?k=%%GLOBAL_ReCaptchaAPIKeyPublic%%\"\nheight=\"300\" width=\"500\" frameborder=\"0\"></iframe>\n<br>\n<textarea name=\"recaptcha_challenge_field\" rows=\"3\" cols=\"40\">\n</textarea>\n<input type=\"hidden\" name=\"recaptcha_response_field\"\nvalue=\"manual_challenge\">\n</noscript>",
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "#### ...with this (after):\n"
                        },
                        {
                          "type": "code",
                          "data": "%%GLOBAL_ReCaptchaMarkup%%\n",
                          "config": {
                            "mode": "java"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Supported Browsers \n\nBelow are the browsers supported for the BigCommerce control panel. We drop support when a version falls below 2% of usage. The browsers are sorted by popularity, with the most popular browsers at the top.\n\n| Desktop |\n|  |\n| Chrome latest |\n| Firefox latest |\n| Internet Explorer 11 or later |\n| Safari latest |\n\nFor a current list of target browsers (desktop and mobile) that BigCommerce supports for _storefronts_ using our themes, please see <NOBR><a href=\"https://forum.bigcommerce.com/s/article/Themes-Supported-Browsers\" target=\"_blank\">this support page</a>.</nobr>",
                          "header": {
                            "anchor": "blueprint-supported-browsers"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Anatomy of a Theme",
                    "route": {
                      "path": "/anatomy-of-a-theme"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Anatomy of a Theme</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#directory-structure\">Directory Structure</a></li>\n\t\t<li><a href=\"#blueprint-images\">Images</a></li>\n\t\t<li><a href=\"#blueprint-layouts\">Layouts</a></li>\n    <li><a href=\"#blueprint-panels\">Panels</a></li>\n    <li><a href=\"#blueprint-snippets\">Snippets</a></li>\n    <li><a href=\"#blueprint-styles\">Styles</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Themes are built using a powerful template system that enables designers and developers familiar with CSS and HTML to modify the presentation and structure of a BigCommerce store."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Directory Structure\n\nTheme files that apply to a store design are organized in several different directories, as follows:\n\n*   **Images**\n*   **Panels**\n*   **Snippets**\n*   **Styles**\n",
                          "header": {
                            "anchor": "directory-structure"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Images\n\nTheme specific static images (referenced from CSS, or in image tags).",
                          "header": {
                            "anchor": "blueprint-images"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Layouts\n\nLayout templates provide the base HTML structure that wraps storefront page content. Each layout file corresponds to a specific page.\n\nFor example, `product.html` refers to the page that’s shown when a customer is viewing the details of a product.\n\nMost layout files contain nothing more than references to individual panels to be shown on a page. These panels are contained in div tags that generally define left, center, or right columns of the page.",
                          "header": {
                            "anchor": "blueprint-layouts"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Panels\n\nPanels provide reusable blocks or dynamic sections of content.\n\nFor example, the `SideCategoryList` panel builds a list of categories to be shown throughout the store.\n\nPanels are generally referenced directly from layout templates. They define which content should be shown on a particular page and handle the generation of that specific content.\n\nSome panels contain strictly static content (such as the store name) whilst others generate content dynamically. Dynamically generated panels cannot be created ad-hoc as they are linked to specific data and logic within the application.",
                          "header": {
                            "anchor": "blueprint-panels"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Snippets\n\nSnippets are templates containing a fragment of HTML that can be embedded multiple times in a page, either from direct references or from being part of a loop that iterates over the items in a list.\n\nFor example, the `HomeFeaturedProductsItem` snippet renders each individual product listed in the `HomeFeaturedProducts` panel.",
                          "header": {
                            "anchor": "blueprint-snippets"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Styles\n\nPrimary layout stylesheets for the Theme, with `styles.css` being the core file.",
                          "header": {
                            "anchor": "blueprint-styles"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Blueprint and Developer Mode",
                    "route": {
                      "path": "/blueprint-and-developer-mode"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "text",
                          "data": "<h1>Blueprint and Developer Mode</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#foundation-for-creating-themes\">A Foundation for Creating Themes</a></li>\n\t\t<li><a href=\"#setting-up-your-environment\">Setting Up Your Environment</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "Restricted/Grandfathered Access",
                            "body": "As of November 2016, new BigCommerce stores are being offered themes exclusively from BigCommerce's new <a href=\"https://support.bigcommerce.com/articles/Public/The-Stencil-Theme-Platform\" target=\"_blank\">Stencil</a> theme platform. For existing stores, the control panel's <NOBR><b>Themes Marketplace</b></nobr> and <NOBR><b>My Themes</b></nobr> pages will show only those Blueprint themes that have been applied to the store and/or purchased before November 2016. <br><br> \n\nThis means that the workflow below will work only for stores that have applied or purchased at least one Blueprint theme before November 2016. For information about developing on the current Stencil platform, please see <a href=\"https://stencil.bigcommerce.com/docs/\" target=\"_blank\">this developer documentation</a>.",
                            "type": "warning"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## A Foundation for Creating Themes \n\nOur (legacy) Blueprint \"Classic Next\" base theme provides a starting point for creating a new theme. This theme includes responsive support out-of-the-box, so it works with lower resolutions like those on mobile devices. The visual design has been stripped back, so you can create from a clean canvas.\n\n<a href=\"https://blueprint-demo.mybigcommerce.com\" target=\"_blank\">View the demo</a>.",
                          "header": {
                            "anchor": "foundation-for-creating-themes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Setting Up Your Environment \n\nFollow these steps to start developing using the Blueprint theme:\n\n1.  To enable the Blueprint theme on your store, simply log in to the control panel, and place <NOBR>`/index.php?ToDo=viewTemplates&dev=enable` </nobr>after `/admin`.<br>\n    (For example: <NOBR>`https://store-123abmy.mybigcommerce.com/admin/index.php?ToDo=viewTemplates&dev=enable`.</nobr>)\n2.  Apply the Blueprint theme.\n3.  Connect to the site via <a href=\"https://forum.bigcommerce.com/s/article/File-Access-WebDAV\" target=\"_blank\">WebDAV</a>.\n4.  Once connected via WebDav, navigate to the `/template/` folder, where you will have access to all the files that make up a theme.\n5.  To make a change to a file, just download the file, edit it, and then upload your altered version.\n6.  Every time you make changes to any files, you will need to upload them through WebDAV for the changes to be reflected on your site.",
                          "header": {
                            "anchor": "setting-up-your-environment"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Theme Update Process",
                    "route": {
                      "path": "/blueprint-theme-update-process"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Theme Update Process</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#theme-update-prerequisites\">Prerequisites</a></li>\n\t\t<li><a href=\"#blueprint-theme-update-process\">Update Process</a></li>\n    <li><a href=\"#theme-update-other-requirements\">Requirements</a></li>\n  \n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Here is how BigCommerce and our partners collaborate to integrate a partner's theme changes/updates into the BigCommerce Theme Marketplace (which merchants also know as our \"theme store\"):"
                        },
                        {
                          "type": "text",
                          "data": "## Prerequisites \n\nIntegrating a partner's theme changes requires these preconditions:\n\n*   Partner has an existing theme in the BigCommerce Theme Marketplace.\n\n*   BigCommerce sets up a Theme Development store (or converts an existing regular store) and applies the theme. All theme files will automatically be copied into the WebDAV `/template/` directory.",
                          "header": {
                            "anchor": "theme-update-prerequisites"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "Template Path Abstracted",
                            "body": "The Theme Development store resolves the %%GLOBAL_TPL_PATH%% variable into /template/. Therefore, assets will be pulled from the /template/ directory, which is accessible via WebDAV or via the BigCommerce control panel.\n"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Update Process \n\n1.  The partner switches on Theme Development mode, by using:  \n`http://<STORE>/admin/index.php?ToDo=viewTemplates&dev=enable`.\n2.  The partner asks BigCommerce to switch a theme. (Partners currently cannot switch it directly, because it’s a paid theme.)",
                          "header": {
                            "anchor": "blueprint-theme-update-process"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "body": "This step will wipe out all files in the /template/ directory and copy in the latest version of the integrated theme."
                          }
                        },
                        {
                          "type": "text",
                          "data": "3.  The partner pulls changes from BigCommerce's GitHub fork, to get the most recent version onto their local machine as well.\n4.  The partner makes appropriate changes to CSS/HTML files.\n5.  The partner commits their changes into the feature branch, and opens a pull request against the BigCommerce fork."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "If BigCommerce made conflicting changes (which should happen only when resolving urgent issues), the partner might need to rebase changes (using git rebase master) in order to resolve the conflicts."
                          }
                        },
                        {
                          "type": "text",
                          "data": "6.  Partner [emails](mailto:themestore@bigcommerce.com) their Git URL to the BigCommerce Theme Marketplace.\n7.  BigCommerce integrates changes into BigCommerce Themes."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Other Requirements \n\n*   Partners must not change the repository's directory structure or directory names.\n*   Files should have permission 644 (`rw-r–r–`).\n*   Directories should have permission 755 (`drwxr-x-r-x`).",
                          "header": {
                            "anchor": "theme-update-other-requirements"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Style Editor",
                    "route": {
                      "path": "/style-editor"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Style Editor</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#what-is-lessjs\">What is Less.js?</a></li>\n\t\t<li><a href=\"#integrating-theme-style-editor\">Integrating a Theme with the Style Editor</a></li>\n\t\t<li><a href=\"#testing-style-editor-with-theme\">Testing Style Editor with Your Theme</a></li>\n \n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Style Editor allows users to customize the look and feel of their BigCommerce store, without needing to know HTML or CSS conventions. Using a simple WYSIWYG interface, users can edit colors and fonts, then see the changes simultaneously in a live preview.\n\nStyle Editor uses Less.js as a CSS preprocessor. This allows Style Editor to take advantage of variables and other functions to ensure design consistency.\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## What Is Less.js? \n\nLess (formally, Less.js) is a CSS preprocessor that allows theme designers to use advanced functions and programming principles in their CSS. A JavaScript compiler runs over the Less files, and converts them into usable CSS that can be included in themes.\n\nFor more information on examples, techniques, and how to install Less, please see <a href=\"http://lesscss.org/\" target=\"_blank\">lesscss.org</a>.\n",
                          "header": {
                            "anchor": "what-is-lessjs"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Integrating a Theme with the Style Editor \n\nThe Style Editor uses a specific group of files to build its user interface, and to compile and generate the stylesheet. BigCommerce’s base developer theme, Blueprint, already contains these out-of-the-box. The files are stored in the `Styles/less` directory.\n\nThe Style Editor depends on these files:\n\n*   `style-editor-variables.less`\n*   `internal-variables.less`\n*   `init.less`\n*   `theme.less`\n\n### style-editor-variables.less \n\nStyle Editor uses this file to generate its user interface. Here, you can enter variables for colours, fonts and numbers that will help the merchant customize the design of the theme. You can separate these variables out into sections with headings to help categorize the variables in a logical manner. No actual CSS is written in this file.\n\nThere are some syntax patterns involved that Style Editor will understand to help you customize the UI. Special syntax:\n\n`@color-your-text-here` — This is the naming convention for a color variable. The style editor will generate this as a color picker, with the value of the variable set as the color picker’s default hexadecimal color value.\n\nFor example:",
                          "header": {
                            "anchor": "integrating-theme-style-editor"
                          }
                        },
                        {
                          "type": "code",
                          "data": "@color-header-background: #FFFFFF;",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "This will generate a color picker with the label “Header Background”, set to #FFFFFF (white) by default.\n\n`@font-your-text-here` — This is the naming convention for a font variable. The style editor will generate this as a dropdown, preloaded with your theme’s predefined fonts. The variable’s value will be preselected.\n\nFor example:"
                        },
                        {
                          "type": "code",
                          "data": "@font-page-text: \"Open Sans\",Helvetica,Arial,sans-serif;",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "This will generate a dropdown with the label “Page Text”, and with the “Open Sans” font preselected. The dropdown’s other options will be the predefined list of fonts you’ve provided.\n\n`@font-declaration` — This variable will store all the default fonts (and their fallbacks) for the style editor. It will use these fonts in the font dropdown mentioned in the above point.\n\nFor example:"
                        },
                        {
                          "type": "code",
                          "data": "@font-declaration: '{ \"Lato\":[\"Lato\", \"Arial\", \"sans-serif\"], \"Freckle Face\":[\"Freckle Face\", \"cursive\"]}';\n",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "This will populate all font drop-downs with the fonts “Lato” and “Freckle Face,” and if one of them is selected, the fonts for that variable will be set to the values in the corresponding array of fonts. For example, “Lato” will set the fonts to “Lato”, Arial, sans-serif.\n\nTo use these fonts in the Style Editor, they must be included in the style editor variables file through an import. For the above example, you would include the styles from Google Fonts like so:"
                        },
                        {
                          "type": "code",
                          "data": "@import url(//fonts.googleapis.com/css?family=Lato|Freckle+Face);\n",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "`@color-declaration` — This variable will store all the default colors for the style editor. It will list these colours in the color picker’s palette after all the color picker’s defaults.\n\nFor example:\n"
                        },
                        {
                          "type": "code",
                          "data": "@color-declaration: '[\"#FF7700, #9966CC\" ]';",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "This will add a shade of orange and a shade of purple to the end of the list of colors selectable in the color picker.\n\n`//! @section: your text here` — You can group variables into sections with headings using this syntax to help your users read and understand your variables more easily.\n\nFor example:\n\n`//! @section: Header`  \n`@color-header-background: #FFF;`  \n`//! @endsection`  of\n\nThis will create a section in the left navigation with the title “Header”, which will house the “Header Background” variable.\n\nMore information on syntax, and examples, can be found in the comments of the style-editor-variables.less file found in Blueprint.\n"
                        },
                        {
                          "type": "text",
                          "data": "### internal-variables.less \n\nThis file is for you to store the variables that you may need to use, but don’t want the Style editor to see. For example, you can use it to create a hierarchy within your Less file, so that:\n\n*   The user sets a value to @color-store-name;\n*   in internal-variables.less, @main-accent: @color-store-name;\n*   in init.less, we set a:hover {color: @main-accent};\n\nIn this example, the link hover color will be set to whatever the store name color is. We can add as many selectors as we want to this css statement, depending on our design.\n\nThis way, we can reuse the color that gets set to `@color-store-name` as the color for elements that we may not want to be edited in the Style Editor, but will now carry on the colour of the store name to create consistency within your design.\n"
                        },
                        {
                          "type": "text",
                          "data": "### init.less \n\nThis is where you initialize the use of the variables. This file contains all the CSS that will be compiled and generated into the theme.css file. For example, the @color-store-name can now be applied to the `#HeaderLogo h1` element by saying:\n"
                        },
                        {
                          "type": "code",
                          "data": "#HeaderLogo h1 {\ncolor: @color-store-name\n}\n",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### theme.less \n\nThe file that ultimately gets compiled into `theme.css`. This just uses `@import` to include the other three Less files for compilation. The Style Editor will read this file for instructions on how to compile your styles using Less.\n\nCompiling your Less files\n\nOnce you have finished working on your `.less` files, _don’t forget to compile them!_ If you are using the command line, you should be doing something similar to:\n\n"
                        },
                        {
                          "type": "code",
                          "data": "lessc Styles/less/theme.less > Styles/theme.css \n\n\n",
                          "config": {
                            "mode": "html"
                          }
                        },
                        {
                          "type": "text",
                          "data": "This will use the `theme.less` file to generate the `theme.css` file into your theme's `Styles/` folder.\n\nIf you find that you have to make a change to `theme.css`, please don't forget to replicate this change in `theme.less` (but more preferably, in `init.less`). Otherwise, every time you recompile the less files, this change will be overwritten.\n\nLess offers a variety of compilation methods, including applications for both Windows and Mac that you can use if you prefer not to use the command prompt/terminal."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Testing Style Editor with Your Theme \n\nIf you'd like to add Style Editor support to your theme, you can enable the Style Editor on just your store. Simply log in to the control panel and place `/index.php?ToDo=viewTemplates&dev=enable` after `/admin`.<br>\n(For example: <NOBR>`https://store-123abmy.mybigcommerce.com/admin/index.php?ToDo=viewTemplates&dev=enable`</nobr>)\n\nThis will enable [Developer Mode](#) for your store, which also enables Blueprint and other features for theme developers. You can [use Blueprint](#) as a basis for creating new themes.",
                          "header": {
                            "anchor": "testing-style-editor-with-theme"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Product Filtering Toolkit",
                    "route": {
                      "path": "/product-filtering-toolkit"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Product Filtering Toolkit</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#creating-new-theme-product-filtering\">Creating a New Theme With Product Filtering</a></li>\n\t\t<li><a href=\"#enabling-product-filtering-customized-theme\">Enabling Product Filtering for Your Customized Theme</a></li>\n\t\t<li><a href=\"#implementing-product-filtering-your-theme\">Implementing Product Filtering in Your Theme</a></li>\n    <li><a href=\"#allowing-filtering-on-off\">Allowing For Filtering On/Off</a></li>\n    <li><a href=\"#category-filtering-details\">Category Filtering Details</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Product filtering (also known as faceted search) enables shoppers to refine product searches based on multiple attributes like price, size, ratings, etc. For a store owner's view of administering this feature, please see <a href=\"https://forum.bigcommerce.com/s/article/Product-Filtering-Settings\" target=\"_blank\">this KB article</a>. \n"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "title": "Requirements/Restrictions",
                            "body": "<ul>\n<li>\nAdding product filtering to a theme is recommended for experienced theme developers only. You must have facility with HTML and CSS, and must also familiarize yourself with how BigCommerce themes are structured and operate. </li>\n<li>\nProduct filtering is a Pro/Enterprise feature. To enable it on an active public store, you must upgrade to a Pro or Enterprise plan.\n</li>\n<li>\nAs noted below, we recommend implementing product filtering on a temporary sandbox store. You can create a trial store, and then upload your theme customizations to that store via WebDAV to replicate your local changes.</li>\n</ul>"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Creating a New Theme with Product Filtering \n\nProduct filtering is fully functional in the Blueprint base theme. Once you’ve enabled [Developer Mode](#blueprint-and-developer-mode), you’ll be able to access this base theme and add product filtering to your developer store.\n",
                          "header": {
                            "anchor": "creating-new-theme-product-filtering"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "title": "Restricted/Grandfathered Access to Blueprint Base Theme",
                            "body": "The Blueprint base theme is now available only to stores that applied it before November 2016. <br><br>\n\nAs of that date, stores are being offered themes only from BigCommerce's new <a href=\"https://support.bigcommerce.com/articles/Public/The-Stencil-Theme-Platform\" target=\"_blank\">Stencil</a> theme platform. Within a store's control panel, the <NOBR><b>Themes Marketplace</b></nobr> and <NOBR><b>My Themes</b></nobr> pages will show only those Blueprint themes that have been applied to the store and/or purchased before November 2016. <br><br> \n\nFor information about developing on the current Stencil platform, please see <a href=\"https://stencil.bigcommerce.com/docs/\" target=\"_blank\">this developer documentation</a>."
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Enabling Product Filtering for Your Customized Theme \n\nTo enable product filtering, just enable [Developer Mode](#devmode) on your store. This will enable product filtering on your store by default, regardless of whether or not your theme and plan support it.\n",
                          "header": {
                            "anchor": "enabling-product-filtering-customized-theme"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "title": "Start with a Sandbox Store",
                            "body": "Depending on the customizations you have made to your theme, enabling Developer Mode could have unexpected results. <NOBR>We recommend</nobr> using a sandbox store (not your main store) when applying these changes for the first time."
                          }
                        },
                        {
                          "type": "text",
                          "data": "If you are working with a new store, product filtering might already work out-of-the-box for your theme.\n\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Implementing Product Filtering in Your Theme \n\nOnce you’ve enabled product filtering for your sandbox store, you’ll need to get the most up-to-date Blueprint files and copy them into your own theme. Here is how to do so.\n",
                          "header": {
                            "anchor": "implementing-product-filtering-your-theme"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "body": "As noted above, the Blueprint base theme is now available only to stores that applied it before November 2016.",
                            "title": " Restricted/Grandfathered Access to Blueprint Base Theme\n"
                          }
                        },
                        {
                          "type": "text",
                          "data": "1.  Enable [Developer Mode](#devmode) in your sandbox store, if you haven’t already. This will enable the Blueprint theme and the faceted search feature.\n2.  Unless you’re starting from scratch, back up your theme customizations.\n3.  Select Blueprint as your store’s theme. \n4.  Download the Blueprint theme – don’t worry, you’ll only need certain files for faceted search.\n5.  Restore your theme from the backups you downloaded in step 2.\n6.  Upload the following files from Blueprint to your sandbox store:\n   *   `Panels/FacetedSearch.html` – This panel contains the markup for your Faceted Search column. It calls all the panels for each of the searchable facets as well.\n    *   `Panels/FacetedSearchProductGrid.html` - This panel contains the markup for your list of product results when your category lists are set to \"grid view\".\n    *   `Panels/FacetedSearchProductList.html` - This panel contains the markup for your list of product results when your category lists are set to \"list view\".\n    *   `Panels/FacetedSearchTemplateCategory.html` – The panel that contains the markup for the Category facet.\n    *   `Panels/FacetedSearchTemplateMultichoice.html` – The panel that contains the markup for any facet containing multiple-choice check boxes.\n    *   `Panels/FacetedSearchTemplateRange.html` – The panel that contains the markup for facets containing ranges.\n    *   `Panels/FacetedSearchTemplateRating.html` – The panel that contains the markup for the Rating facet.\n    *   `Panels/FacetedSearchTemplateShowing.html` – The panel that contains the markup for the list of currently selected filters.\n    *   `Panels/FacetedSearchTemplateSingle.html` – The panel that contains the markup for any facet containing single-choice radio buttons.\n    *   `Panels/Pagination.html` – The panel that contains the markup for your pagination – note that this will not use any existing pagination panels that your theme may have.\n    *   `Styles/faceted-search.css` – This will be included in `FacetedSearch.html`, so you don’t need to add it to your `HTMLHead.html` file.\n\n7.  Copy your `brands.html` page and name it `brands_with_facets.html`.\n8.  Copy your `search.html` page and name it `search_with_facets.html`.\n9.  Copy your `category.html` page and name it `category_with_facets.html`.\n10.  Include the required assets on your new facets pages. You can use the facets pages from Blueprint for reference (the assets will be named the same):\n   *   `%%Panel.FacetedSearch%%` – This is the main Faceted Search panel, and will call the rest of the panels it needs accordingly (including required JavaScript and CSS).\n    *   Add the `js-faceted-search-column` class to the container of your Faceted Search panel.\n    *   If you have a responsive theme, you can add the `Refine` button to your page, which toggles the Faceted Search column on or off. By default, this button displays only on mobile:<br>\n    `<button class=\"js-faceted-search-action btn\"> %%LNG_FilterBy%% </button>`\n11.  If the pages mentioned above don’t exist, you can copy the existing pages from the Blueprint theme. Keep in mind that you’ll need to modify these pages to suit the structure of your theme."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Allowing For Filtering On/Off \n\nWhen faceted search is switched on, the following templates will be used:\n\n*   Brand pages > `brands_with_facets.html`\n*   Search page > `search_with_facets.html`\n*   Category pages > `category_with_facets.html`\n\nWhen switched off:\n\n*   Brand pages > `brands.html`\n*   Search page > `search.html`\n*   Category pages > `category.html`\n",
                          "header": {
                            "anchor": "allowing-filtering-on-off"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "warning",
                            "title": " Clone and Rename Templates, Don’t Alter Originals",
                            "body": "Development agencies should not modify the <em>base</em> templates of the <code>brand.html</code>, <code>search.html</code>, or <code>category.html</code> pages to include faceted search. Clients who are not on a Pro or Enterprise plan do not get faceted search, so if you include it on <code>category.html</code>, <code>brand.html</code> or <code>search.html</code> page, your theme will be useless to those clients."
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Category Filtering Details \n\nWhen you turn on product filtering for a store, it will automatically switch all `Category Layout File`s to your new `category_with_facets.html` page. To view product filtering on Category pages, you must ensure that the `Category Layout File` is set to `category_with_facets.html`.\n\nYou will not see the Category filter on storefront Category pages. This has been hidden for SEO reasons.",
                          "header": {
                            "anchor": "category-filtering-details"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Template Syntax",
                    "route": {
                      "path": "/blueprint-template-syntax"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Template Syntax</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#global-variables-references\">Global-Variables References/a></li>\n\t\t<li><a href=\"#panel-references\">Panel References/a></li>\n\t\t<li><a href=\"#snippet-references\">Snippet References</a></li>\n    <li><a href=\"#referencing-distributed-theme-assets\">Referencing Distributed Theme Assets</a></li>\n    <li><a href=\"#file-includes\">File Includes</a></li>\n</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Each of the layout, panel, and snippet files in a theme uses variables (also called placeholders) to show external content or content fetched from the database (such as the name of a product).\n\nTemplate variables are enclosed within `%%` markers. These types of variables are available for use in templates: global variables, string variables, panel references, snippet references, and file includes."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Global-Variables References \n\n\nGlobal variables are used to render dynamic content into a template. Global variables are referenced using the following syntax:\n\n<pre>%%GLOBAL_[placeholder_name]%%</pre>\n\nFor example:\n\n<pre>%%GLOBAL_ProductName%%</pre>\n\nSpecific variables' availability depends on the layout template that you're editing. For example, the variable for a product's description is available on the product details page, but not on the category view/product listing page.",
                          "header": {
                            "anchor": "global-variables-references"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Panel References \n\nPanels are the different blocks used by BigCommerce to build a page. Panels are referenced both inside layout files and inside other panel files.\n\nPanels are referenced in templates as follows, where `[panel_name]` is a placeholder for the name of a file in the theme’s Panels directory:\n\n<pre>%%Panel.[panel_name]%%</pre>\n\nFor example:\n\n<pre>%%Panel.HomeFeaturedProducts%%</pre>\n\nThis panel reference will load in the content from the `Panels/HomeFeaturedProducts.html` panel file.",
                          "header": {
                            "anchor": "panel-references"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Snippet References \n\nSnippets are templates containing HTML, which you can use multiple times on one page – either by using them in different parts of the template, or by including them a loop. For example, a loop might build a list of products on the page, with each product in the list being a repeated version of the same snippet.\n\nSnippets are referenced in templates as follows:\n\n<pre>%%SNIPPET_[snippet_name]%%</pre>\n\nIn most cases, this will correspond to a similarly named file in the theme’s Snippets directory. For example:\n\n<pre>%%SNIPPET_HomeFeaturedProducts%%</pre>\n\nThis snippet reference will contain repeated copies of `Snippets/HomeFeaturedProductsItem.html`, one for each featured product to be shown in the list.",
                          "header": {
                            "anchor": "snippet-references"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Referencing Distributed Theme Assets \n\nAfter the Blueprint framework was first released, BigCommerce added the ability to reference theme assets that are stored remotely on a CDN (content delivery network). This section provides examples that map first-generation Blueprint syntax to updated syntax for distributed assets.\n\nYou can use WebDAV to upload your own custom theme assets (JavaScripts, stylesheets, images, fonts, etc). In your HTML, reference these assets that aren’t present in the base theme using the `ASSET` syntax:\n\n<pre>%%ASSET_[path_to_asset]%%</pre>\n\nThis syntax will output an absolute URL like: \n\n<pre>http://cdn-host/templates/__custom/path_to_asset?t=timestamp`</pre>\n\nThis loads the custom asset from our CDN server, and includes a cache-busting querystring.\n\nFor example:\n\n<pre>%%ASSET_Styles/myownstyle.css%%</pre>\n\n...will be output as:\n\n<pre>http://cdn-host/templates/__custom/Styles/myonwstyle.css?t=123</pre>",
                          "header": {
                            "anchor": "referencing-distributed-theme-assets"
                          }
                        },
                        {
                          "type": "text",
                          "data": "#### Syntax Examples \n\nThe following tables map earlier to current syntax:\n\n##### Assets in CSS Files \n\n| Previous Syntax | Updated Syntax (CDN) |\n|--||\n| `url(/template/images/foo.jpg)` | `url(%%ASSET_images/foo.jpg%%)` |\n| `url(/templates/__custom/images/foo.jpg)` | `url(%%ASSET_images/foo.jpg%%)` |\n| `url(/template/foo/bar/font.woff)` | `url(%%ASSET_foo/bar/font.woff%%)` |\n| `url(../images/foo.jpg)` | `url(%%ASSET_images/foo.jpg%%)` |\n| `url(icons/foo.ico)` | `url(%%ASSET_Styles/icons/foo.ico%%)` |\n| `url(//mystore.com/template/images/foo.jpg)` | `url(%%ASSET_images/foo.jpg%%)` |\n\n##### Assets in HTML Files \n\n| Previous Syntax | Updated Syntax (CDN) |\n||-|\n| `<img src=\"../images/foo.jpg\" />` | `<img src=\"%%ASSET_images/foo.jpg%%\" />` |\n| `<img src=\"//mystore.com/template/images/foo.jpg\">` | `<img src=\"%%ASSET_images/foo.jpg%%\" />` |\n| `<link href=\"/template/Styles/foo.css\" />` | `<link href=\"%%ASSET_Styles/foo.css%%\" />` |\n| `<script src=\"/template/js/foo.js%%\"></script>` | `<script src=\"%%ASSET_js/foo.js%%\"></script>` |\n\n##### Assets Outside of the /template/ Directory \n\nThe `ASSET` variable can be used only with files and folders inside the `/template/` directory. To take advantage of a CDN's benefits, we strongly recommend moving your assets to the `/template/` directory. However, if you need to keep assets outside of the `/template/` directory, the best practice is to use _protocol-relative_, absolute or fully qualified, URLs. Here are some examples:\n\n```\n<img src=\"//mystore.com/content/images/foo.jpg\" />\nurl(//mystore.com/content/images/foo.jpg\")\n<link href=\"//mystore.com/content/foo.css\" rel=\"stylesheet\" type=\"text/css\" />\n```\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## File Includes \n\nYou can include another file within a template, using file include variables. This practice is extremely useful for external files such as banners or site-network headers.\n\nIncludes are referenced within template files as follows:\n\n<pre>\n%%Include.http://www.example.com/remote_file.html%%\n%%Include.https://www.example.com/secure_remote_file.html%%</pre>\n\nNotes: Included external links will not follow redirects (http status code 301 or 302). So if a redirect is encountered, it will not include the content.",
                          "header": {
                            "anchor": "file-includes"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Store-Wide Global Panels",
                    "route": {
                      "path": "/store-wide-global-panels"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Store-Wide Global Panels</h1>\n"
                        },
                        {
                          "type": "text",
                          "data": "The following panels are available store-wide:\n\n| Variable | Description |\n|--||\n| `HTMLHead` | Content shown between the `<head>` tags of each page. This includes code for visitor tracking, RSS feeds, etc. |\n| `Header` | The header for each page in the store (includes the `TopMenu` and `HeaderSearch` panels) |\n| `Footer` | The footer for each page in the store. |\n| `SideCategoryList` | A list of categories shown in the store, to the category depth configured in the control panel. |\n| `SideNewProducts` | A list of products recently added to the store. |\n| `SideNewsletterBox` | The newsletter subscription form. |\n| `SideShopByBrand` | A list of popular brands on the store (based on the number of products in each brand). |\n| `SideProductRecentlyViewed` | A list of the products recently viewed by the current customer. |\n| `SideTopSellers` | A list of top selling-products on the store (based purely on the number of times the product has sold on this store). |\n| `SidePopularProducts` | A list of popular products on the store (by average rating). |\n| `SideLiveChatServices` | Any live chat service code that has been integrated in to the store. |\n| `SideCurrencySelector` | The store currency selection box, containing the list of currencies configured on the store. |\n| `SideCartContents` | A list of items in currently in the customer's cart. |\n| `TopMenu` | The top navigation menu (`Home`, `My Account`, `Sign In or Create Account`, etc.) |\n| `PagesMenu` | A list of parent-level pages configured on the store. |\n| `HeaderSearch` | The search box included at the top of each of the store's pages. |"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Store-Wide Global Variables",
                    "route": {
                      "path": "/store-wide-global-variables"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Store-Wide Global Variables</h1>\n"
                        },
                        {
                          "type": "text",
                          "data": "The following GLOBAL variables are available from any layout, panel, or snippet in the store, independent of session status.\n\n| Variable | Description |\n|  |  |\n| `%%GLOBAL_AllPricesAreInCurrency%%` | This variable produces a text string that identifies the currency currently active on the store. For example: <NOBR>`All Prices are in USD`</nobr> |\n| `%%GLOBAL_AlternateClass%%` | . |\n| `%%GLOBAL_CdnAppPath%%` | The URI of the CDN application. |\n| `%%GLOBAL_CdnStorePath%%` | The URI to the store's CDN directory. |\n| `%%GLOBAL_CharacterSet%%` | The character set currently active on the store. For example, UTF-8. |\n| `%%GLOBAL_CheckoutLink%%` | The URI that initiates a checkout sequence. |\n| `%%GLOBAL_CurrentCustomerFirstName%%` | The first name of the customer who is currently logged in. If no customer is logged in, returns: `Guest` |\n| `%%GLOBAL_CurrentCustomerLastName%%` | The last name of the customer who is currently logged in. If no customer is logged in, returns no content. |\n| `%%GLOBAL_CustomerGroupId%%` | The ID of the customer group for the currently logged-in user or guest. Blank if none. |\n| `%%GLOBAL_CustomerGroupName%%` | The name of the customer group for the currently logged-in user or guest. Blank if none. |\n| `%%GLOBAL_Favicon%%` | The URI location of the favicon file. |\n| `%%GLOBAL_HeaderLogo%%` | The store's logo. This can be either an image file or an HTML-formatted text string. |\n| `%%GLOBAL_ImageDirectory%%` | The name of the images directory. |\n| `%%GLOBAL_IMG_PATH%%` | The URI of the directory in which the site's image files reside. |\n| `%%GLOBAL_jQueryPath%%` | The URI of the minified jQuery library in use. For example:<br>`https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js` |\n| `%%GLOBAL_jQueryUIPath%%` | The path to the jQuery UI script. For example:<br> `https://ajax.googleapis.com/ajax/libs/jqueryui/1.8.18/jquery-ui.js` |\n| `%%GLOBAL_LiveChatCodeEnabled%%` | A value representing whether Live Chat is enabled or disabled. For example: `none` |\n| `%%GLOBAL_LoginOrLogoutText%%` | The HTML code of the string (including links) providing the option to sign into the store or to log out. For example: <NOBR>`Sign in or Create an account`</nobr> |\n| `%%GLOBAL_LogoText%%` | The text string used for the store logo. |\n| `%%GLOBAL_MASTER_THEME_PATH%%` | The URI of the __master theme directory. |\n| `%%GLOBAL_PageLink%%` | The URI of the page. |\n| `%%GLOBAL_PageName%%` | The name of the page. For example: <NOBR>`RSS Syndication`</nobr> |\n| `%%GLOBAL_PoweredBy%%` | The string identifying the software used by the store. For example: `Shopping Cart Software by BigCommerce` |\n| `%%GLOBAL_SHARED_GIFT_THEME_PATH%%` | The CDN URI of the store's gift themes. |\n| `%%GLOBAL_ShopPath%%` | The store's URI. If the page is protected with TLS/SSL, this will be an HTTPS path. |\n| `%%GLOBAL_ShopPathNormal%%` | The unencrypted URI of the store, prefixed with HTTP. |\n| `%%GLOBAL_ShopPathSSL%%` | The encrypted URI of the store, prefixed with HTTPS. |\n| `%%GLOBAL_ShowCookieWarningMessage%%` | A boolean value that represents whether or not the display of a cookie warning message is enabled or disabled. |\n| `%%GLOBAL_SiteColor%%` | The current template's active color scheme. |\n| `%%GLOBAL_SitemapURL_HTML%%` | The URI to the store's site map directory. |\n| `%%GLOBAL_SocialMedia_Service_Class%%` | The name of the social media class. For example: `#FFFFFF` |\n| `%%GLOBAL_SocialMedia_Service_Url%%` | The URI to the social media service. |\n| `%%GLOBAL_SocialMediaService_Name%%` | The name of the social media service. For example: `LinkedIn` |\n| `%%GLOBAL_StoreLogo%%` | The file name of the store logo image. |\n| `%%GLOBAL_StoreName%%` | The name of the store. |\n| `%%GLOBAL_StorePhoneNumber%%` | The phone number of the store. |\n| `%%GLOBAL_STYLE_PATH%%` | The CDN URI of the active theme's styles directory. |\n| `%%GLOBAL_SwapFrequency%%` | . |\n| `%%GLOBAL_TPL_PATH%%` | The CDN URI of the theme. |\n| `%%GLOBAL_value%%` | The type of value. For example: `Array` |\n| `%%GLOBAL_Year%%` | The current year. For example: `2015` |"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Global Variables",
                    "route": {
                      "path": "/global-variables"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Global Variables</h1>\n"
                        },
                        {
                          "type": "text",
                          "data": "Blueprint themes use the following GLOBAL variables to pull data from the store's database.\n\nWhile these variables are prefixed with the word GLOBAL, the data's availability actually varies per session, layout, panel, and snippet. For the list of variables available from anywhere in the store, regardless of session status, see [Store-Wide Variables](/legacy/blueprint-themes/store-wide-global-variables).\n\nThe list below is sorted by the number of times that the Blueprint base theme references the variable – with the most frequently referenced variables at the top:\n"
                        },
                        {
                          "type": "text",
                          "data": "| Variable | Description |\n|  |  |\n| `%%GLOBAL_ShopPath%%` | The full URL to the store without a trailing slash. If on an SSL based page, this will be the HTTPS version of the store path. |\n| `%%GLOBAL_IMG_PATH%%` | . |\n| `%%GLOBAL_ProductName%%` | . |\n| `%%GLOBAL_ProductId%%` | . |\n| `%%GLOBAL_ShopPathNormal%%` | The normal (non SSL) version of the store URL. |\n| `%%GLOBAL_JSCacheToken%%` | . |\n| `%%GLOBAL_ProductRating%%` | . |\n| `%%GLOBAL_CdnAppPath%%` | . |\n| `%%GLOBAL_ProductPrice%%` | . |\n| `%%GLOBAL_ProductAddText%%` | . |\n| `%%GLOBAL_ProductFieldId%%` | . |\n| `%%GLOBAL_EmailFooter%%` | . |\n| `%%GLOBAL_ProductLink%%` | . |\n| `%%GLOBAL_ShopPathSSL%%` | The SSL version of the store URL. |\n| `%%GLOBAL_OrderId%%` | . |\n| `%%GLOBAL_ProductThumb%%` | . |\n| `%%GLOBAL_HideProductRating%%` | . |\n| `%%GLOBAL_ProductURL%%` | . |\n| `%%GLOBAL_TPL_PATH%%` | . |\n| `%%GLOBAL_HideActionAdd%%` | . |\n| `%%GLOBAL_StoreName%%` | The name of the store. |\n| `%%GLOBAL_ProductQuantity%%` | . |\n| `%%GLOBAL_AlternateClass%%` | . |\n| `%%GLOBAL_CartItemId%%` | . |\n| `%%GLOBAL_CompareLink%%` | . |\n| `%%GLOBAL_HideCompareItems%%` | . |\n| `%%GLOBAL_ProductOptions%%` | . |\n| `%%GLOBAL_UpperAddressType%%` | . |\n| `%%GLOBAL_ErrorMessage%%` | . |\n| `%%GLOBAL_ProductNumber%%` | . |\n| `%%GLOBAL_HeaderLogo%%` | . |\n| `%%GLOBAL_GiftCertificateCode%%` | . |\n| `%%GLOBAL_WishListMessage%%` | . |\n| `%%GLOBAL_ProductFieldRequired%%` | . |\n| `%%GLOBAL_FieldRequiredClass%%` | . |\n| `%%GLOBAL_EmailHeader%%` | . |\n| `%%GLOBAL_OrderAmount%%` | . |\n| `%%GLOBAL_GiftCertificateTo%%` | . |\n| `%%GLOBAL_ShipToBillingName%%` | . |\n| `%%GLOBAL_SiteColor%%` | The current template’s active color scheme. |\n| `%%GLOBAL_ProductFieldName%%` | . |\n| `%%GLOBAL_AddressId%%` | . |\n| `%%GLOBAL_PageTitle%%` | . |\n| `%%GLOBAL_CharacterSet%%` | . |\n| `%%GLOBAL_SearchTrackClass%%` | . |\n| `%%GLOBAL_ItemId%%` | . |\n| `%%GLOBAL_ProductTotal%%` | . |\n| `%%GLOBAL_ProductFieldInputSize%%` | . |\n| `%%GLOBAL_ProductFieldValue%%` | . |\n| `%%GLOBAL_AddressType%%` | . |\n| `%%GLOBAL_HideWishlist%%` | . |\n| `%%GLOBAL_VideoId%%` | . |\n| `%%GLOBAL_SHARED_GIFT_THEME_PATH%%` | . |\n| `%%GLOBAL_GiftCertificateAmount%%` | . |\n| `%%GLOBAL_GiftCertificateFrom%%` | . |\n| `%%GLOBAL_GiftCertificateMessage%%` | . |\n| `%%GLOBAL_GiftCertificateExpiryInfo%%` | . |\n| `%%GLOBAL_HideShippingOptions%%` | . |\n| `%%GLOBAL_HideLimitedCreditWarning%%` | . |\n| `%%GLOBAL_ProductAttributes%%` | . |\n| `%%GLOBAL_ImageDescription%%` | . |\n| `%%GLOBAL_HideErrorMessage%%` | . |\n| `%%GLOBAL_ExtraCategoryClass%%` | . |\n| `%%GLOBAL_BillingAddress%%` | . |\n| `%%GLOBAL_ShippingAddress%%` | . |\n| `%%GLOBAL_OrderDate%%` | . |\n| `%%GLOBAL_HideReviewCaptcha%%` | . |\n| `%%GLOBAL_HideReturnAction%%` | . |\n| `%%GLOBAL_OrderTotal%%` | . |\n| `%%GLOBAL_NewsTitle%%` | . |\n| `%%GLOBAL_BrandName%%` | . |\n| `%%GLOBAL_VideoTitleLong%%` | . |\n| `%%GLOBAL_ItemClass%%` | . |\n| `%%GLOBAL_EventDate%%` | . |\n| `%%GLOBAL_GiftWrappingName%%` | . |\n| `%%GLOBAL_WishListID%%` | . |\n| `%%GLOBAL_FormFieldRequiredJS%%` | . |\n| `%%GLOBAL_HideCreditCardError%%` | . |\n| `%%GLOBAL_CustomerName%%` | . |\n| `%%GLOBAL_CustomerEmail%%` | . |\n| `%%GLOBAL_CustomerGroupId%%` | Contains the group ID for a logged-in customer who is part of a group. Also contains the group ID for a guest where a default group is set for guests. Blank for a logged-in customer who belongs to no group. Also blank for a guest where no default group is set for guests. Globally available across panels and snippets. |\n| `%%GLOBAL_ReCaptchaAPIKeyPublic%%` | . |\n| `%%GLOBAL_SearchId%%` | . |\n| `%%GLOBAL_OrderComments%%` | . |\n| `%%GLOBAL_AllBrandsLink%%` | . |\n| `%%GLOBAL_CheckoutLink%%` | . |\n| `%%GLOBAL_AdditionalCheckoutButtons%%` | . |\n| `%%GLOBAL_CheckoutShippingTitle%%` | . |\n| `%%GLOBAL_HideUseStoreCredit%%` | . |\n| `%%GLOBAL_HideMailingListInvite%%` | . |\n| `%%GLOBAL_AllPricesAreInCurrency%%` | . |\n| `%%GLOBAL_HidePurchasingOptions%%` | . |\n| `%%GLOBAL_jQueryUIPath%%` | . |\n| `%%GLOBAL_ProductMaxTinyWidth%%` | . |\n| `%%GLOBAL_ProductMaxTinyHeight%%` | . |\n| `%%GLOBAL_BrandLink%%` | . |\n| `%%GLOBAL_OrderProductId%%` | . |\n| `%%GLOBAL_HideExpectedReleaseDate%%` | . |\n| `%%GLOBAL_ExpectedReleaseDate%%` | . |\n| `%%GLOBAL_label%%` | . |\n| `%%GLOBAL_value%%` | . |\n| `%%GLOBAL_ShipSuburb%%` | . |\n| `%%GLOBAL_ShipState%%` | . |\n| `%%GLOBAL_ShipZip%%` | . |\n| `%%GLOBAL_ShipCountry%%` | . |\n| `%%GLOBAL_ProductAvailability%%` | . |\n| `%%GLOBAL_ProductFieldType%%` | . |\n| `%%GLOBAL_FileTypes%%` | . |\n| `%%GLOBAL_TransitTime%%` | . |\n| `%%GLOBAL_ShippingPrice%%` | . |\n| `%%GLOBAL_HideGiftWrapping%%` | . |\n| `%%GLOBAL_ProviderId%%` | . |\n| `%%GLOBAL_ShippingAddressId%%` | . |\n| `%%GLOBAL_BaseCompareLink%%` | . |\n| `%%GLOBAL_GiftWrappingId%%` | . |\n| `%%GLOBAL_HideSectionPaging%%` | . |\n| `%%GLOBAL_SectionPagingPrevious%%` | . |\n| `%%GLOBAL_SectionPagingNext%%` | . |\n| `%%GLOBAL_SectionPaging%%` | . |\n| `%%GLOBAL_TrailBrandName%%` | . |\n| `%%GLOBAL_LoginMessage%%` | . |\n| `%%GLOBAL_ShippingMethod%%` | . |\n| `%%GLOBAL_HideCaptcha%%` | . |\n| `%%GLOBAL_HideOrderComments%%` | . |\n| `%%GLOBAL_DisableReturnButton%%` | . |\n| `%%GLOBAL_ShippingProvider%%` | . |\n| `%%GLOBAL_HideCheckoutButton%%` | . |\n| `%%GLOBAL_ShippingFormAction%%` | . |\n| `%%GLOBAL_ShipCustomFields%%` | . |\n| `%%GLOBAL_ShipToAddressChecked%%` | . |\n| `%%GLOBAL_ShipAddressButtonText%%` | . |\n| `%%GLOBAL_ShippingQuotes%%` | . |\n| `%%GLOBAL_DeliveryDisclaimer%%` | . |\n| `%%GLOBAL_totals%%` | . |\n| `%%GLOBAL_HideCartOptions%%` | . |\n| `%%GLOBAL_CommentsHTML%%` | . |\n| `%%GLOBAL_AddThisLink%%` | . |\n| `%%GLOBAL_TinyImageClickJavascript%%` | . |\n| `%%GLOBAL_FeaturedVideo%%` | . |\n| `%%GLOBAL_QuickViewProductURL%%` | . |\n| `%%GLOBAL_ThumbImageURL%%` | . |\n| `%%GLOBAL_ProductAttributeList%%` | . |\n| `%%GLOBAL_DisplayAdd%%` | . |\n| `%%GLOBAL_DisplayAddQty%%` | . |\n| `%%GLOBAL_HideNormalMessage%%` | . |\n| `%%GLOBAL_HideSuccessMessage%%` | . |\n| `%%GLOBAL_WishListName%%` | . |\n| `%%GLOBAL_DownloadsLink%%` | . |\n| `%%GLOBAL_HideWrappingOptions%%` | . |\n| `%%GLOBAL_ReturnId%%` | . |\n| `%%GLOBAL_ReturnReason%%` | . |\n| `%%GLOBAL_ReturnAction%%` | . |\n| `%%GLOBAL_ReturnComments%%` | . |\n| `%%GLOBAL_ShipFullName%%` | . |\n| `%%GLOBAL_ShipCompany%%` | . |\n| `%%GLOBAL_ShipPhone%%` | . |\n| `%%GLOBAL_RecentPostUrl%%` | . |\n| `%%GLOBAL_CatTrailName%%` | . |\n| `%%GLOBAL_HideThumbColumn%%` | . |\n| `%%GLOBAL_HideGiftMessagePreview%%` | . |\n| `%%GLOBAL_GiftMessagePreview%%` | . |\n| `%%GLOBAL_CustomFieldName%%` | . |\n| `%%GLOBAL_CustomFieldValue%%` | . |\n| `%%GLOBAL_ShippingQuoteId%%` | . |\n| `%%GLOBAL_PageLink%%` | . |\n| `%%GLOBAL_CartProductFields%%` | . |\n| `%%GLOBAL_PaymentFieldPrefix%%` | . |\n| `%%GLOBAL_FromURL%%` | . |\n| `%%GLOBAL_AddressLine%%` | . |\n| `%%GLOBAL_FeaturedCategoryName%%` | . |\n| `%%GLOBAL_HideGiftWrapMessage%%` | . |\n| `%%GLOBAL_PaymentMessage%%` | . |\n| `%%GLOBAL_TagName%%` | . |\n| `%%GLOBAL_PaymentMethod%%` | . |\n| `%%GLOBAL_ProductSku%%` | . |\n| `%%GLOBAL_ZoomImageMaxWidth%%` | . |\n| `%%GLOBAL_ZoomImageMaxHeight%%` | . |\n| `%%GLOBAL_SectionType%%` | . |\n| `%%GLOBAL_SharingName%%` | . |\n| `%%GLOBAL_SubBrandLink%%` | . |\n| `%%GLOBAL_SubCatLink%%` | . |\n| `%%GLOBAL_Amount%%` | . |\n| `%%GLOBAL_TransactionType%%` | . |\n| `%%GLOBAL_DateTime%%` | . |\n| `%%GLOBAL_AuthorisationCode%%` | . |\n| `%%GLOBAL_ResponseCode%%` | . |\n| `%%GLOBAL_ResponseMessage%%` | . |\n| `%%GLOBAL_MerchantURL%%` | . |\n| `%%GLOBAL_CardholderName%%` | . |\n| `%%GLOBAL_ReferenceNumber%%` | . |\n| `%%GLOBAL_InvoiceNumber%%` | . |\n| `%%GLOBAL_HideMessagesMenu%%` | . |\n| `%%GLOBAL_HideReturnRequestsMenu%%` | . |\n| `%%GLOBAL_ReturnInstructions%%` | . |\n| `%%GLOBAL_AuthorizeNetHideCVV2%%` | . |\n| `%%GLOBAL_BlogPageTitle%%` | . |\n| `%%GLOBAL_CCTypes%%` | . |\n| `%%GLOBAL_HideLoginMessage%%` | . |\n| `%%GLOBAL_MessageClass%%` | . |\n| `%%GLOBAL_EWayHideCardCode%%` | . |\n| `%%GLOBAL_CreditCardErrorMessage%%` | . |\n| `%%GLOBAL_CreditCardNum%%` | . |\n| `%%GLOBAL_CreditCardHideCardCode%%` | . |\n| `%%GLOBAL_MessageText%%` | . |\n| `%%GLOBAL_NMIHideCVV2%%` | . |\n| `%%GLOBAL_STYLE_PATH%%` | . |\n| `%%GLOBAL_StoreAddressFormatted%%` | The address of the store (as configured on the store settings page) |\n| `%%GLOBAL_BillingPhone%%` | . |\n| `%%GLOBAL_ShippingPhone%%` | . |\n| `%%GLOBAL_HideShippingMethod%%` | . |\n| `%%GLOBAL_DateShipped%%` | . |\n| `%%GLOBAL_ProductsTable%%` | . |\n| `%%GLOBAL_HideComments%%` | . |\n| `%%GLOBAL_Comments%%` | . |\n| `%%GLOBAL_PageContent%%` | . |\n| `%%GLOBAL_HideFullName%%` | . |\n| `%%GLOBAL_HideCompanyName%%` | . |\n| `%%GLOBAL_HidePhone%%` | . |\n| `%%GLOBAL_HideOrderNo%%` | . |\n| `%%GLOBAL_HideRMANo%%` | . |\n| `%%GLOBAL_PayflowProHideCVV2%%` | . |\n| `%%GLOBAL_HideReviewEmail%%` | . |\n| `%%GLOBAL_ProductReviewPaging%%` | . |\n| `%%GLOBAL_ProdImageJavascript%%` | . |\n| `%%GLOBAL_SearchTitle%%` | . |\n| `%%GLOBAL_HideRelatedSearches%%` | . |\n| `%%GLOBAL_ShowSearchSuggestion%%` | . |\n| `%%GLOBAL_SuggestQueryEscaped%%` | . |\n| `%%GLOBAL_SuggestQuery%%` | . |\n| `%%GLOBAL_ShippingAddressFormTitle%%` | . |\n| `%%GLOBAL_HideReturnForm%%` | . |\n| `%%GLOBAL_OrderStatus%%` | . |\n| `%%GLOBAL_AKBPath%%` | . |\n| `%%GLOBAL_AddressFormFieldID%%` | . |\n| `%%GLOBAL_HideShopByBrandPanel%%` | . |\n| `%%GLOBAL_ListJS%%` | . |\n| `%%GLOBAL_CompareOnSubmit%%` | . |\n| `%%GLOBAL_CategoryProductListing%%` | . |\n| `%%GLOBAL_HideErrors%%` | . |\n| `%%GLOBAL_ShipAddressButtonText_JS%%` | . |\n| `%%GLOBAL_CheckoutShippingIntro%%` | . |\n| `%%GLOBAL_ItemList%%` | . |\n| `%%GLOBAL_HideCheckoutError%%` | . |\n| `%%GLOBAL_CheckoutErrorMsg%%` | . |\n| `%%GLOBAL_HideCheckoutSuccess%%` | . |\n| `%%GLOBAL_CheckoutSuccessMsg%%` | . |\n| `%%GLOBAL_HideUseCoupon%%` | . |\n| `%%GLOBAL_HidePaymentOptions%%` | . |\n| `%%GLOBAL_CheckoutStoreCreditWarning%%` | . |\n| `%%GLOBAL_StoreCredit%%` | . |\n| `%%GLOBAL_Remaining%%` | . |\n| `%%GLOBAL_HideRemainingStoreCredit%%` | . |\n| `%%GLOBAL_RemainingCredit%%` | . |\n| `%%GLOBAL_HideLimitedCreditPaymentOption%%` | . |\n| `%%GLOBAL_StoreCreditPaymentProviders%%` | . |\n| `%%GLOBAL_CheckoutWith%%` | . |\n| `%%GLOBAL_HideCreditAltOptionList%%` | . |\n| `%%GLOBAL_CreditAlt%%` | . |\n| `%%GLOBAL_HidePaymentProviderList%%` | . |\n| `%%GLOBAL_PaymentProviders%%` | . |\n| `%%GLOBAL_HideOrderTermsAndConditions%%` | . |\n| `%%GLOBAL_HideTermsAndConditionsTextarea%%` | . |\n| `%%GLOBAL_OrderTermsAndConditions%%` | . |\n| `%%GLOBAL_AgreeTermsAndConditions%%` | . |\n| `%%GLOBAL_TermsAndConditionsLink%%` | . |\n| `%%GLOBAL_NewsletterBoxIsTicked%%` | . |\n| `%%GLOBAL_HideOrderCheckBox%%` | . |\n| `%%GLOBAL_OrderBoxIsTicked%%` | . |\n| `%%GLOBAL_PaymentButtonSwitch%%` | . |\n| `%%GLOBAL_CreateAccountAccountFormFieldID%%` | . |\n| `%%GLOBAL_StatusMessage%%` | . |\n| `%%GLOBAL_QuickViewButtonText%%` | . |\n| `%%GLOBAL_QuickViewButtonColor%%` | . |\n| `%%GLOBAL_QuickViewGradientColor%%` | . |\n| `%%GLOBAL_QuickViewTextColor%%` | . |\n| `%%GLOBAL_FacetedSearchScriptPath%%` | . |\n| `%%GLOBAL_DebugDetails%%` | . |\n| `%%GLOBAL_DesignModeHTML%%` | . |\n| `%%GLOBAL_QueryList%%` | . |\n| `%%GLOBAL_DesignModeScriptTag%%` | . |\n| `%%GLOBAL_LiveChatFooterCode%%` | . |\n| `%%GLOBAL_FooterScripts%%` | . |\n| `%%GLOBAL_HideForgotPasswordError%%` | . |\n| `%%GLOBAL_MaintenanceNotice%%` | . |\n| `%%GLOBAL_CartItems%%` | A textual string representing the number of items in the cart (1 item, 2 items, etc.). |\n| `%%GLOBAL_HideSectionSeparator%%` | . |\n| `%%GLOBAL_ProductThumbWidth%%` | . |\n| `%%GLOBAL_ProductThumbHeight%%` | . |\n| `%%GLOBAL_HideBrandLink%%` | . |\n| `%%GLOBAL_HideRating%%` | . |\n| `%%GLOBAL_Rating%%` | . |\n| `%%GLOBAL_HidePrice%%` | . |\n| `%%GLOBAL_RetailPrice%%` | . |\n| `%%GLOBAL_IncludingExcludingTax%%` | . |\n| `%%GLOBAL_YouSave%%` | . |\n| `%%GLOBAL_VideoLength%%` | . |\n| `%%GLOBAL_VideoDescriptionLong%%` | . |\n| `%%GLOBAL_CartLink%%` | . |\n| `%%GLOBAL_ProductOptionRequired%%` | . |\n| `%%GLOBAL_FastCartButtonJs%%` | . |\n| `%%GLOBAL_HideProductAttributeList%%` | . |\n| `%%GLOBAL_AddToCartQty%%` | . |\n| `%%GLOBAL_HideBulkDiscountLink%%` | . |\n| `%%GLOBAL_BulkDiscountThickBoxRates%%` | . |\n| `%%GLOBAL_ItemSoldOut%%` | . |\n| `%%GLOBAL_OptionMessage%%` | . |\n| `%%GLOBAL_ShowAddToCartQtyBox%%` | . |\n| `%%GLOBAL_ProductMinMaxQtyJavascript%%` | . |\n| `%%GLOBAL_EventDateJavascript%%` | . |\n| `%%GLOBAL_AgreeChecked%%` | . |\n| `%%GLOBAL_HideThemeSelect%%` | . |\n| `%%GLOBAL_GiftCertificateMinimum%%` | . |\n| `%%GLOBAL_GiftCertificateMaximum%%` | . |\n| `%%GLOBAL_HideSearchPage%%` | . |\n| `%%GLOBAL_ProductTabActive%%` | . |\n| `%%GLOBAL_ProductTabUrl%%` | . |\n| `%%GLOBAL_ContentTabActive%%` | . |\n| `%%GLOBAL_ContentTabUrl%%` | . |\n| `%%GLOBAL_ProductContainerDisplay%%` | . |\n| `%%GLOBAL_ContentContainerDisplay%%` | . |\n| `%%GLOBAL_SelectedSearchTab%%` | . |\n| `%%GLOBAL_HideProductSearchOptions%%` | . |\n| `%%GLOBAL_HideSearchResultsNoResult%%` | . |\n| `%%GLOBAL_OriginalSearchQuery%%` | . |\n| `%%GLOBAL_HideSideProductRecentlyViewedCompare%%` | . |\n| `%%GLOBAL_HideIfNoSubsection%%` | . |\n| `%%GLOBAL_HideSuggestiveCartContent%%` | . |\n| `%%GLOBAL_SuggestedProductListing%%` | . |\n| `%%GLOBAL_HideAccountOptions%%` | . |\n| `%%GLOBAL_DownloadLink%%` | . |\n| `%%GLOBAL_ExpiryInfo%%` | . |\n| `%%GLOBAL_AccountOrderItemList%%` | . |\n| `%%GLOBAL_StrikeStart%%` | . |\n| `%%GLOBAL_StrikeEnd%%` | . |\n| `%%GLOBAL_Refunded%%` | . |\n| `%%GLOBAL_HidePaymentInstructions%%` | . |\n| `%%GLOBAL_ReturnStatus%%` | . |\n| `%%GLOBAL_ShipAddressLines%%` | . |\n| `%%GLOBAL_RecentPostTitle%%` | . |\n| `%%GLOBAL_CatTrailLink%%` | . |\n| `%%GLOBAL_CouponCode%%` | . |\n| `%%GLOBAL_CouponDiscount%%` | . |\n| `%%GLOBAL_GiftCertificateRemaining%%` | . |\n| `%%GLOBAL_CertificateAmountUsed%%` | . |\n| `%%GLOBAL_ProductImage%%` | . |\n| `%%GLOBAL_ProductNameSpan%%` | . |\n| `%%GLOBAL_ProductExpectedReleaseDate%%` | . |\n| `%%GLOBAL_GiftCertificateName%%` | . |\n| `%%GLOBAL_HideCartFileName%%` | . |\n| `%%GLOBAL_ProductFieldFileValue%%` | . |\n| `%%GLOBAL_HideDeleteFileLink%%` | . |\n| `%%GLOBAL_HideFileHelp%%` | . |\n| `%%GLOBAL_FileSize%%` | . |\n| `%%GLOBAL_CurrentProductFile%%` | . |\n| `%%GLOBAL_SelectOptions%%` | . |\n| `%%GLOBAL_ShipperName%%` | . |\n| `%%GLOBAL_TaxName%%` | . |\n| `%%GLOBAL_TaxCost%%` | . |\n| `%%GLOBAL_PageNumber%%` | . |\n| `%%GLOBAL_ProductDescription%%` | . |\n| `%%GLOBAL_AccountEmail%%` | . |\n| `%%GLOBAL_ShipAddressLine1%%` | . |\n| `%%GLOBAL_ShipAddressLine2%%` | . |\n| `%%GLOBAL_HideChooseAddress%%` | . |\n| `%%GLOBAL_UseAddressTitle%%` | . |\n| `%%GLOBAL_FlyoutAttributes%%` | . |\n| `%%GLOBAL_FlyoutChildHtml%%` | . |\n| `%%GLOBAL_CurrencyName%%` | . |\n| `%%GLOBAL_AddressFieldId%%` | . |\n| `%%GLOBAL_PageName%%` | . |\n| `%%GLOBAL_CurrentProductLink%%` | . |\n| `%%GLOBAL_InitialZoomImage%%` | . |\n| `%%GLOBAL_HideBillingEmail%%` | . |\n| `%%GLOBAL_BillingEmail%%` | . |\n| `%%GLOBAL_hideInvoiceShippingDetails%%` | . |\n| `%%GLOBAL_HideShippingEmail%%` | . |\n| `%%GLOBAL_ShippingEmail%%` | . |\n| `%%GLOBAL_hideAddressColumn%%` | . |\n| `%%GLOBAL_HideAttributes%%` | . |\n| `%%GLOBAL_HideVariationOptions%%` | . |\n| `%%GLOBAL_HideConfigurableFields%%` | . |\n| `%%GLOBAL_ProductConfigurableFields%%` | . |\n| `%%GLOBAL_ProductGiftWrapping%%` | . |\n| `%%GLOBAL_HideEventDate%%` | . |\n| `%%GLOBAL_ProductEventDate%%` | . |\n| `%%GLOBAL_OptionChooseText%%` | . |\n| `%%GLOBAL_ReviewStart%%` | . |\n| `%%GLOBAL_ReviewLink%%` | . |\n| `%%GLOBAL_FontSize%%` | . |\n| `%%GLOBAL_TagLink%%` | . |\n| `%%GLOBAL_TagProductCount%%` | . |\n| `%%GLOBAL_ProductThumbIndex%%` | . |\n| `%%GLOBAL_VariationName%%` | . |\n| `%%GLOBAL_VariationNumber%%` | . |\n| `%%GLOBAL_OptionId%%` | . |\n| `%%GLOBAL_OptionValue%%` | . |\n| `%%GLOBAL_NewsURL%%` | . |\n| `%%GLOBAL_PageURL%%` | . |\n| `%%GLOBAL_PageSmallContent%%` | . |\n| `%%GLOBAL_SectionSearchResults%%` | . |\n| `%%GLOBAL_RSSURL%%` | . |\n| `%%GLOBAL_HideSplitWrappingOptions%%` | . |\n| `%%GLOBAL_ShipperId%%` | . |\n| `%%GLOBAL_CatId%%` | . |\n| `%%GLOBAL_SocialMedia_Service_Name%%` | . |\n| `%%GLOBAL_SubBrandName%%` | . |\n| `%%GLOBAL_SubCatName%%` | . |\n| `%%GLOBAL_ISOCode%%` | . |\n| `%%GLOBAL_IssuerName%%` | . |\n| `%%GLOBAL_IssuerConfirmation%%` | . |\n| `%%GLOBAL_FirstName%%` | . |\n| `%%GLOBAL_NewGuestAccountResetLink%%` | . |\n| `%%GLOBAL_OrderStatusChangedHi%%` | . |\n| `%%GLOBAL_OrderNumberStatusChangedTo%%` | . |\n| `%%GLOBAL_DatePlaced%%` | . |\n| `%%GLOBAL_AC_EmailFooterNote%%` | . |\n| `%%GLOBAL_ProductUrl%%` | . |\n| `%%GLOBAL_Contact%%` | . |\n| `%%GLOBAL_DownloadTitle%%` | . |\n| `%%GLOBAL_HideReturnInstructions%%` | . |\n| `%%GLOBAL_HideAuthorizeNetError%%` | . |\n| `%%GLOBAL_AuthorizeNetErrorMessage%%` | . |\n| `%%GLOBAL_AuthorizeNetName%%` | . |\n| `%%GLOBAL_AuthorizeNetNum%%` | . |\n| `%%GLOBAL_AuthorizeNetMonths%%` | . |\n| `%%GLOBAL_AuthorizeNetYears%%` | . |\n| `%%GLOBAL_AuthorizeNetCCV2%%` | . |\n| `%%GLOBAL_HideCCManualError%%` | . |\n| `%%GLOBAL_CCErrorMessage%%` | . |\n| `%%GLOBAL_CCName%%` | . |\n| `%%GLOBAL_CCNum%%` | . |\n| `%%GLOBAL_CCCVV2%%` | . |\n| `%%GLOBAL_CCIssueNo%%` | . |\n| `%%GLOBAL_CCMonths%%` | . |\n| `%%GLOBAL_CCYears%%` | . |\n| `%%GLOBAL_CCIssueDateMonths%%` | . |\n| `%%GLOBAL_CCIssueDateYears%%` | . |\n| `%%GLOBAL_HideCheckoutGuest%%` | . |\n| `%%GLOBAL_HideCheckoutRegistrationRequired%%` | . |\n| `%%GLOBAL_CustomCheckoutFormNewAccount%%` | . |\n| `%%GLOBAL_CustomCheckoutFormBillingAddress%%` | . |\n| `%%GLOBAL_CustomCheckoutFormShippingAddress%%` | . |\n| `%%GLOBAL_ExpressCheckoutSignedIn%%` | . |\n| `%%GLOBAL_ExpressCheckoutDigitalOrder%%` | . |\n| `%%GLOBAL_GoToStep%%` | . |\n| `%%GLOBAL_CollapsedStepClassAccountDetails%%` | . |\n| `%%GLOBAL_ExpressCheckoutHideAccountDetails%%` | . |\n| `%%GLOBAL_ExpressCheckoutStepAccountDetails%%` | . |\n| `%%GLOBAL_HideGuestCheckoutOptions%%` | . |\n| `%%GLOBAL_HideRegisteredCheckoutOptions%%` | . |\n| `%%GLOBAL_CollapsedStepClassBillingAddress%%` | . |\n| `%%GLOBAL_ExpressCheckoutStepBillingAddress%%` | . |\n| `%%GLOBAL_CollapsedStepClassShippingAddress%%` | . |\n| `%%GLOBAL_ExpressCheckoutHideShippingAddress%%` | . |\n| `%%GLOBAL_ExpressCheckoutStepShippingAddress%%` | . |\n| `%%GLOBAL_CollapsedStepClassShippingProvider%%` | . |\n| `%%GLOBAL_ExpressCheckoutHideShippingProviders%%` | . |\n| `%%GLOBAL_ExpressCheckoutStepShippingProvider%%` | . |\n| `%%GLOBAL_CollapsedStepClassConfirmation%%` | . |\n| `%%GLOBAL_ExpressCheckoutStepConfirmation%%` | . |\n| `%%GLOBAL_CollapsedStepClassPaymentDetails%%` | . |\n| `%%GLOBAL_ExpressCheckoutHidePaymentDetails%%` | . |\n| `%%GLOBAL_ExpressCheckoutStepPaymentDetails%%` | . |\n| `%%GLOBAL_PaymentFormContent%%` | . |\n| `%%GLOBAL_ContinueLink%%` | . |\n| `%%GLOBAL_Continue%%` | . |\n| `%%GLOBAL_BlogName%%` | . |\n| `%%GLOBAL_ErrorDetails%%` | . |\n| `%%GLOBAL_HideeSelectPlusDPError%%` | . |\n| `%%GLOBAL_eSelectPlusDPErrorMessage%%` | . |\n| `%%GLOBAL_eSelectPlusDPNum%%` | . |\n| `%%GLOBAL_eSelectPlusDPMonths%%` | . |\n| `%%GLOBAL_eSelectPlusDPYears%%` | . |\n| `%%GLOBAL_eSelectPlusDPCCV2%%` | . |\n| `%%GLOBAL_eSelectPlusDPCardHolderName%%` | . |\n| `%%GLOBAL_eSelectPlusDPBillStNum%%` | . |\n| `%%GLOBAL_eSelectPlusDPBillStName%%` | . |\n| `%%GLOBAL_eSelectPlusDPBillZip%%` | . |\n| `%%GLOBAL_HideEWayError%%` | . |\n| `%%GLOBAL_EWayErrorMessage%%` | . |\n| `%%GLOBAL_EWayName%%` | . |\n| `%%GLOBAL_EWayMonths%%` | . |\n| `%%GLOBAL_EWayYears%%` | . |\n| `%%GLOBAL_EWayCardCode%%` | . |\n| `%%GLOBAL_CreditCardName%%` | . |\n| `%%GLOBAL_CreditCardIssueNo%%` | . |\n| `%%GLOBAL_CreditCardIssueDateMonths%%` | . |\n| `%%GLOBAL_CreditCardIssueDateYears%%` | . |\n| `%%GLOBAL_CreditCardMonths%%` | . |\n| `%%GLOBAL_CreditCardYears%%` | . |\n| `%%GLOBAL_CreditCardCardCode%%` | . |\n| `%%GLOBAL_AdditionalPaymentPageContents%%` | . |\n| `%%GLOBAL_HideIdealError%%` | . |\n| `%%GLOBAL_IdealErrorMessage%%` | . |\n| `%%GLOBAL_IdealPaymentForm%%` | . |\n| `%%GLOBAL_PrintInvoiceStylesheetPath%%` | . |\n| `%%GLOBAL_PrintableInvoiceList%%` | . |\n| `%%GLOBAL_PrintableInvoiceScript%%` | . |\n| `%%GLOBAL_MaintenanceLogo%%` | . |\n| `%%GLOBAL_MessageTitle%%` | . |\n| `%%GLOBAL_HideNMIError%%` | . |\n| `%%GLOBAL_NMIErrorMessage%%` | . |\n| `%%GLOBAL_NMIName%%` | . |\n| `%%GLOBAL_NMINum%%` | . |\n| `%%GLOBAL_NMIMonths%%` | . |\n| `%%GLOBAL_NMIYears%%` | . |\n| `%%GLOBAL_NMICCV2%%` | . |\n| `%%GLOBAL_HideError%%` | . |\n| `%%GLOBAL_HidePaidOrderConfirmation%%` | . |\n| `%%GLOBAL_HidePhysicalOrderConfirmation%%` | . |\n| `%%GLOBAL_PhysicalOrderConfirmation%%` | . |\n| `%%GLOBAL_HideDigitalOrderConfirmation%%` | . |\n| `%%GLOBAL_DigitalOrderConfirmation%%` | . |\n| `%%GLOBAL_HideDigitalOrderDownloadLink%%` | . |\n| `%%GLOBAL_ViewFullOrderPath%%` | . |\n| `%%GLOBAL_HideAwaitingPayment%%` | . |\n| `%%GLOBAL_HideSuccess%%` | . |\n| `%%GLOBAL_OrderConfirmationDetails%%` | . |\n| `%%GLOBAL_ContinueShoppingOnStoreName%%` | . |\n| `%%GLOBAL_ConversionCode%%` | . |\n| `%%GLOBAL_PackingSlipTitle%%` | . |\n| `%%GLOBAL_HideBillingPhone%%` | . |\n| `%%GLOBAL_HideShippingPhone%%` | . |\n| `%%GLOBAL_HideShippingDate%%` | . |\n| `%%GLOBAL_HideTrackingNo%%` | . |\n| `%%GLOBAL_TrackingNo%%` | . |\n| `%%GLOBAL_HideFormError%%` | . |\n| `%%GLOBAL_PageId%%` | . |\n| `%%GLOBAL_ContactName%%` | . |\n| `%%GLOBAL_ContactEmail%%` | . |\n| `%%GLOBAL_ContactCompanyName%%` | . |\n| `%%GLOBAL_ContactPhone%%` | . |\n| `%%GLOBAL_ContactOrderNo%%` | . |\n| `%%GLOBAL_ContactRMA%%` | . |\n| `%%GLOBAL_ContactQuestion%%` | . |\n| `%%GLOBAL_CaptchaImage%%` | . |\n| `%%GLOBAL_ARSPanel%%` | . |\n| `%%GLOBAL_HidePayflowProError%%` | . |\n| `%%GLOBAL_PayflowProErrorMessage%%` | . |\n| `%%GLOBAL_PayflowProName%%` | . |\n| `%%GLOBAL_PayflowProNum%%` | . |\n| `%%GLOBAL_PayflowProMonths%%` | . |\n| `%%GLOBAL_PayflowProYears%%` | . |\n| `%%GLOBAL_PayflowProCCV2%%` | . |\n| `%%GLOBAL_ProductReviewFlashMessages%%` | . |\n| `%%GLOBAL_throttleToken%%` | . |\n| `%%GLOBAL_ReviewRating5%%` | . |\n| `%%GLOBAL_ReviewRating4%%` | . |\n| `%%GLOBAL_ReviewRating3%%` | . |\n| `%%GLOBAL_ReviewRating2%%` | . |\n| `%%GLOBAL_ReviewRating1%%` | . |\n| `%%GLOBAL_RevTitle%%` | . |\n| `%%GLOBAL_RevText%%` | . |\n| `%%GLOBAL_HideNoReviewsMessage%%` | . |\n| `%%GLOBAL_NoReviews%%` | . |\n| `%%GLOBAL_ProductReviewList%%` | . |\n| `%%GLOBAL_AutoShowReviewForm%%` | . |\n| `%%GLOBAL_JumpToReviews%%` | . |\n| `%%GLOBAL_popupCssPath%%` | . |\n| `%%GLOBAL_jQueryPath%%` | . |\n| `%%GLOBAL_CurrentImageIndex%%` | . |\n| `%%GLOBAL_ProductMaxImageHeight%%` | . |\n| `%%GLOBAL_ProductMaxImageWidth%%` | . |\n| `%%GLOBAL_VariationImage%%` | . |\n| `%%GLOBAL_RuleImage%%` | . |\n| `%%GLOBAL_ProductTinyBoxHeight%%` | . |\n| `%%GLOBAL_UnsubscribeTitle%%` | . |\n| `%%GLOBAL_DownloadIntro%%` | . |\n| `%%GLOBAL_HideMessageSuccess%%` | . |\n| `%%GLOBAL_HideMessageError%%` | . |\n| `%%GLOBAL_HideNoOrderMessage%%` | . |\n| `%%GLOBAL_HideInbox%%` | . |\n| `%%GLOBAL_HideInboxMessage%%` | . |\n| `%%GLOBAL_AccountInboxIntro%%` | . |\n| `%%GLOBAL_ReturnReasonsList%%` | . |\n| `%%GLOBAL_ReturnActionsList%%` | . |\n| `%%GLOBAL_HideOrderStatus%%` | . |\n| `%%GLOBAL_HideSingleShippingAddress%%` | . |\n| `%%GLOBAL_FlassMessage%%` | . |\n| `%%GLOBAL_HideItemDetailsHeader%%` | . |\n| `%%GLOBAL_OrderTotalRows%%` | . |\n| `%%GLOBAL_ShowOrderActions%%` | . |\n| `%%GLOBAL_LNG_OrderShipments%%` | . |\n| `%%GLOBAL_HideOrderStatusList%%` | . |\n| `%%GLOBAL_HideNoOrderStatusMessage%%` | . |\n| `%%GLOBAL_HideOrderList%%` | . |\n| `%%GLOBAL_HideNoOrdersMessage%%` | . |\n| `%%GLOBAL_HideRecentItemList%%` | . |\n| `%%GLOBAL_HideNoRecentItemsMessage%%` | . |\n| `%%GLOBAL_HideNoReturnsMessage%%` | . |\n| `%%GLOBAL_HideReturnsList%%` | . |\n| `%%GLOBAL_CheckEmail%%` | . |\n| `%%GLOBAL_BrandsMessage%%` | . |\n| `%%GLOBAL_HideBrandProductListing%%` | . |\n| `%%GLOBAL_BrandProductListing%%` | . |\n| `%%GLOBAL_HideShoppingCartGrid%%` | . |\n| `%%GLOBAL_CartItemTotal%%` | . |\n| `%%GLOBAL_HideGiftWrappingTotal%%` | . |\n| `%%GLOBAL_GiftWrappingTotal%%` | . |\n| `%%GLOBAL_HideDiscountAmount%%` | . |\n| `%%GLOBAL_DiscountAmount%%` | . |\n| `%%GLOBAL_HideShoppingCartShippingEstimator%%` | . |\n| `%%GLOBAL_ShippingCountryList%%` | . |\n| `%%GLOBAL_ShippingHideStateList%%` | . |\n| `%%GLOBAL_ShippingStateList%%` | . |\n| `%%GLOBAL_ShippingHideStateBox%%` | . |\n| `%%GLOBAL_AddressState%%` | . |\n| `%%GLOBAL_ShippingZip%%` | . |\n| `%%GLOBAL_HideShoppingCartShippingCost%%` | . |\n| `%%GLOBAL_ShippingCost%%` | . |\n| `%%GLOBAL_HideShoppingCartHandlingCost%%` | . |\n| `%%GLOBAL_HandlingCost%%` | . |\n| `%%GLOBAL_Taxes%%` | . |\n| `%%GLOBAL_CartTotal%%` | . |\n| `%%GLOBAL_InclusiveTaxes%%` | . |\n| `%%GLOBAL_HideMultipleAddressShipping%%` | . |\n| `%%GLOBAL_HideMultipleAddressShippingOr%%` | . |\n| `%%GLOBAL_KeepShoppingLink%%` | . |\n| `%%GLOBAL_KeepShoppingText%%` | . |\n| `%%GLOBAL_HideShoppingCartEmptyMessage%%` | . |\n| `%%GLOBAL_CartCheckoutButtonControlScript%%` | . |\n| `%%GLOBAL_CartStatusMessage%%` | . |\n| `%%GLOBAL_CatName%%` | . |\n| `%%GLOBAL_CatDesc%%` | . |\n| `%%GLOBAL_DisplayMode%%` | . |\n| `%%GLOBAL_CompareButton%%` | . |\n| `%%GLOBAL_HideTitle%%` | . |\n| `%%GLOBAL_BalanceTitle%%` | . |\n| `%%GLOBAL_HideGiftCertificateError%%` | . |\n| `%%GLOBAL_HideIntro%%` | . |\n| `%%GLOBAL_HideExampleImage%%` | . |\n| `%%GLOBAL_HideShippingTabs%%` | . |\n| `%%GLOBAL_ActiveTabSingle%%` | . |\n| `%%GLOBAL_ActiveTabMultiple%%` | . |\n| `%%GLOBAL_HideTabSingle%%` | . |\n| `%%GLOBAL_HideTabMultiple%%` | . |\n| `%%GLOBAL_CheckoutMultiShippingIntro%%` | . |\n| `%%GLOBAL_HideShippingProviderList%%` | . |\n| `%%GLOBAL_HideNoShippingProviders%%` | . |\n| `%%GLOBAL_ShippingError%%` | . |\n| `%%GLOBAL_ComparisonHeading%%` | . |\n| `%%GLOBAL_HideTooManyProductsMessage%%` | . |\n| `%%GLOBAL_TooManyProductsMessage%%` | . |\n| `%%GLOBAL_NumCompareItems%%` | . |\n| `%%GLOBAL_HideConfirmOrderPage%%` | . |\n| `%%GLOBAL_HideShippingDetails%%` | . |\n| `%%GLOBAL_CreateAccountHeading%%` | . |\n| `%%GLOBAL_HideCreateAccountIntroMessage%%` | . |\n| `%%GLOBAL_HideCreateAccountErrorMessage%%` | . |\n| `%%GLOBAL_CreateAccountEmailPassword%%` | . |\n| `%%GLOBAL_CreateAccountDetails%%` | . |\n| `%%GLOBAL_CreateAccountButtonText%%` | . |\n| `%%GLOBAL_CreateAccountShippingFormFieldID%%` | . |\n| `%%GLOBAL_HideEditAccountIntroMessage%%` | . |\n| `%%GLOBAL_HideEditAccountErrorMessage%%` | . |\n| `%%GLOBAL_HideEditAccountSuccessMessage%%` | . |\n| `%%GLOBAL_AccountCurrentEmail%%` | . |\n| `%%GLOBAL_AccountFirstName%%` | . |\n| `%%GLOBAL_AccountLastName%%` | . |\n| `%%GLOBAL_AccountCompanyName%%` | . |\n| `%%GLOBAL_AccountPhone%%` | . |\n| `%%GLOBAL_AccountFields%%` | . |\n| `%%GLOBAL_EditAccountAccountFormFieldID%%` | . |\n| `%%GLOBAL%%` | . |\n| `%%GLOBAL_FacetedSearchOptionsJSON%%` | . |\n| `%%GLOBAL_QuickLinkText%%` | . |\n| `%%GLOBAL_Year%%` | . |\n| `%%GLOBAL_PoweredBy%%` | . |\n| `%%GLOBAL_PinterestJS%%` | . |\n| `%%GLOBAL_CustomerId%%` | . |\n| `%%GLOBAL_ForgottenPasswordToken%%` | . |\n| `%%GLOBAL_CustomerEmailAddress%%` | . |\n| `%%GLOBAL_RemainingBalance%%` | . |\n| `%%GLOBAL_AdditionalMetaTags%%` | . |\n| `%%GLOBAL_HeadFonts%%` | . |\n| `%%GLOBAL_Favicon%%` | . |\n| `%%GLOBAL_Stylesheets%%` | . |\n| `%%GLOBAL_HeadRSSLinks%%` | . |\n| `%%GLOBAL_TrackingCode%%` | . |\n| `%%GLOBAL_DesignModeStyleSheet%%` | . |\n| `%%GLOBAL_HeaderImageStyle%%` | . |\n| `%%GLOBAL_FastCart%%` | . |\n| `%%GLOBAL_ShowCookieWarningMessage%%` | . |\n| `%%GLOBAL_ProductThumbImageWidth%%` | . |\n| `%%GLOBAL_ProductThumbImageHeight%%` | . |\n| `%%GLOBAL_AdditionalScriptTags%%` | . |\n| `%%GLOBAL_RTLStyles%%` | . |\n| `%%GLOBAL_HideHomeFeaturedProductsPanel%%` | . |\n| `%%GLOBAL_HideHomeNewProductsPanel%%` | . |\n| `%%GLOBAL_HideHomeRecentBlogsPanel%%` | . |\n| `%%GLOBAL_SwapFrequency%%` | . |\n| `%%GLOBAL_IdealIssuerOptions%%` | . |\n| `%%GLOBAL_NewAccountHeading%%` | . |\n| `%%GLOBAL_HideNewCustomerButton%%` | . |\n| `%%GLOBAL_HideLoginNewAccountIntro%%` | . |\n| `%%GLOBAL_BlogPathNormal%%` | . |\n| `%%GLOBAL_BlogTitle%%` | . |\n| `%%GLOBAL_NewsDate%%` | . |\n| `%%GLOBAL_NewsContent%%` | . |\n| `%%GLOBAL_SubscriptionHeading%%` | . |\n| `%%GLOBAL_Class%%` | . |\n| `%%GLOBAL_SubscriptionMessage%%` | . |\n| `%%GLOBAL_ShortName%%` | . |\n| `%%GLOBAL_PostTitle%%` | . |\n| `%%GLOBAL_PostAuthor%%` | . |\n| `%%GLOBAL_PostISO8601DatePublished%%` | . |\n| `%%GLOBAL_PostDatePublished%%` | . |\n| `%%GLOBAL_PostBody%%` | . |\n| `%%GLOBAL_HideBreadCrumbs%%` | . |\n| `%%GLOBAL_BreadCrumbs%%` | . |\n| `%%GLOBAL_FindByCategory%%` | . |\n| `%%GLOBAL_ProductDesc%%` | . |\n| `%%GLOBAL_productAttributesCssPath%%` | . |\n| `%%GLOBAL_CurrentProdThumbImage%%` | . |\n| `%%GLOBAL_ProductMaxZoomWidth%%` | . |\n| `%%GLOBAL_ProductMaxZoomHeight%%` | . |\n| `%%GLOBAL_ShowImageZoomer%%` | . |\n| `%%GLOBAL_ProductDetailFlashMessages%%` | . |\n| `%%GLOBAL_HideProductThumb%%` | . |\n| `%%GLOBAL_LightBoxImageJavascript%%` | . |\n| `%%GLOBAL_HideImageCarousel%%` | . |\n| `%%GLOBAL_HideMorePicturesLink%%` | . |\n| `%%GLOBAL_SeeMorePictures%%` | . |\n| `%%GLOBAL_PinterestButton%%` | . |\n| `%%GLOBAL_HideReviewLink%%` | . |\n| `%%GLOBAL_ReviewLinkOnClick%%` | . |\n| `%%GLOBAL_ReviewLinkText%%` | . |\n| `%%GLOBAL_FacebookLikeButtonAbove%%` | . |\n| `%%GLOBAL_FacebookLikeButtonBelow%%` | . |\n| `%%GLOBAL_NavLinkDisplay%%` | . |\n| `%%GLOBAL_DisablePrevLink%%` | . |\n| `%%GLOBAL_DisableNextLink%%` | . |\n| `%%GLOBAL_TotalImages%%` | . |\n| `%%GLOBAL_HideCustomFields%%` | . |\n| `%%GLOBAL_ProductTabsControlScript%%` | . |\n| `%%GLOBAL_ProductImageMode%%` | . |\n| `%%GLOBAL_HideSingleVideo%%` | . |\n| `%%GLOBAL_HideVideoList%%` | . |\n| `%%GLOBAL_ProductWarranty%%` | . |\n| `%%GLOBAL_QuickViewShareLinks%%` | . |\n| `%%GLOBAL_QuickViewFacebookLikeButton%%` | . |\n| `%%GLOBAL_QuickViewProductName%%` | . |\n| `%%GLOBAL_QuickViewReviews%%` | . |\n| `%%GLOBAL_HideRRP%%` | . |\n| `%%GLOBAL_CertificateTitle%%` | . |\n| `%%GLOBAL_HideGiftCertificateForm%%` | . |\n| `%%GLOBAL_CertificateTo%%` | . |\n| `%%GLOBAL_CertificateToEmail%%` | . |\n| `%%GLOBAL_CertificateFrom%%` | . |\n| `%%GLOBAL_CertificateFromEmail%%` | . |\n| `%%GLOBAL_CertificateMessage%%` | . |\n| `%%GLOBAL_HideGiftCertificateAmountSelect%%` | . |\n| `%%GLOBAL_GiftCertificateAmountSelect%%` | . |\n| `%%GLOBAL_HideGiftCertificateCustomAmount%%` | . |\n| `%%GLOBAL_CustomCertificateAmount%%` | . |\n| `%%GLOBAL_GiftCertificateRange%%` | . |\n| `%%GLOBAL_HideExpiryInfo%%` | . |\n| `%%GLOBAL_GiftCertificateTerms%%` | . |\n| `%%GLOBAL_GiftCertificateThemes%%` | . |\n| `%%GLOBAL_SaveGiftCertificateButton%%` | . |\n| `%%GLOBAL_GiftCertificatePreviewModalTitle%%` | . |\n| `%%GLOBAL_CategoryOptions%%` | . |\n| `%%GLOBAL_SelectedCategoryOptions%%` | . |\n| `%%GLOBAL_AutoHideSearchForm%%` | . |\n| `%%GLOBAL_HideAdvancedLink%%` | . |\n| `%%GLOBAL_HideAdvancedOptions%%` | . |\n| `%%GLOBAL_FormattedSearchQuery%%` | . |\n| `%%GLOBAL_BrandNameOptions%%` | . |\n| `%%GLOBAL_PriceFrom%%` | . |\n| `%%GLOBAL_PriceTo%%` | . |\n| `%%GLOBAL_HideSearchResults%%` | . |\n| `%%GLOBAL_SearchResults%%` | . |\n| `%%GLOBAL_HideSearchResultsContent%%` | . |\n| `%%GLOBAL_SearchResultsContent%%` | . |\n| `%%GLOBAL_HideSearchResultsCategoryAndBrand%%` | . |\n| `%%GLOBAL_HideSearchResultsCategory%%` | . |\n| `%%GLOBAL_SearchResultsCategory%%` | . |\n| `%%GLOBAL_HideSearchResultsBrand%%` | . |\n| `%%GLOBAL_SearchResultsBrand%%` | . |\n| `%%GLOBAL_HideSearchResultsProduct%%` | . |\n| `%%GLOBAL_SearchResultsProduct%%` | . |\n| `%%GLOBAL_SnippetSearchResultsFeed%%` | . |\n| `%%GLOBAL_FirstProductId%%` | . |\n| `%%GLOBAL_SharingData%%` | . |\n| `%%GLOBAL_HideChooseAnotherToShare%%` | . |\n| `%%GLOBAL_HideAddShippingAddressIntroMessage%%` | . |\n| `%%GLOBAL_ShippingAddressFormIntro%%` | . |\n| `%%GLOBAL_HideAddShippingAddressMessage%%` | . |\n| `%%GLOBAL_Message%%` | . |\n| `%%GLOBAL_ShippingAddressFormAction%%` | . |\n| `%%GLOBAL_ShipId%%` | . |\n| `%%GLOBAL_NumNewMessages%%` | . |\n| `%%GLOBAL_NumWishListItems%%` | . |\n| `%%GLOBAL_HideStoreCredit%%` | . |\n| `%%GLOBAL_StoreCreditAmount%%` | . |\n| `%%GLOBAL_HideBrandTagCloudPanel%%` | . |\n| `%%GLOBAL_HideSideCart%%` | . |\n| `%%GLOBAL_SideCartItemCount%%` | . |\n| `%%GLOBAL_SideCategoryListTypeClass%%` | . |\n| `%%GLOBAL_HideSideCategoryNewProductsPanel%%` | . |\n| `%%GLOBAL_HideSideCategoryPopularProductsPanel%%` | . |\n| `%%GLOBAL_HideSideCategoryShopByPricePanel%%` | . |\n| `%%GLOBAL_HideSideCategoryTopSellersPanel%%` | . |\n| `%%GLOBAL_SideLiveChatCode%%` | . |\n| `%%GLOBAL_HideSideNewProductsPanel%%` | . |\n| `%%GLOBAL_NewsletterBoxControlScript%%` | . |\n| `%%GLOBAL_HideSidePopularProductsPanel%%` | . |\n| `%%GLOBAL_WishLists%%` | . |\n| `%%GLOBAL_AlsoBoughtProductListing%%` | . |\n| `%%GLOBAL_HideRecentlyViewedProductsPanel%%` | . |\n| `%%GLOBAL_HideRelatedProductsPanel%%` | . |\n| `%%GLOBAL_HideSideShopByBrandFullPanel%%` | . |\n| `%%GLOBAL_HideSubPagesList%%` | . |\n| `%%GLOBAL_PageLinks%%` | . |\n| `%%GLOBAL_HideSideTopSellersPanel%%` | . |\n| `%%GLOBAL_HideIfSubsection%%` | . |\n| `%%GLOBAL_SitemapLink%%` | . |\n| `%%GLOBAL_SitemapSubsectionTrail%%` | . |\n| `%%GLOBAL_ShowNewsFeed%%` | . |\n| `%%GLOBAL_ShowNewProductsFeed%%` | . |\n| `%%GLOBAL_ShowPopularProductsFeed%%` | . |\n| `%%GLOBAL_ShowFeaturedProductsFeed%%` | . |\n| `%%GLOBAL_ShowSearchFeed%%` | . |\n| `%%GLOBAL_TaggedProducts%%` | . |\n| `%%GLOBAL_TagProductListing%%` | . |\n| `%%GLOBAL_ShowStorePhoneNumber%%` | . |\n| `%%GLOBAL_StorePhoneNumber%%` | . |\n| `%%GLOBAL_LiveChatCodeEnabled%%` | . |\n| `%%GLOBAL_LiveChatCode%%` | . |\n| `%%GLOBAL_LoginOrLogoutText%%` | . |\n| `%%GLOBAL_HideWishListAddFrom%%` | . |\n| `%%GLOBAL_WishListAction%%` | . |\n| `%%GLOBAL_SelectPublic%%` | . |\n| `%%GLOBAL_HideWishListItems%%` | . |\n| `%%GLOBAL_HideShareWishList%%` | . |\n| `%%GLOBAL_ShareWishListClass%%` | . |\n| `%%GLOBAL_ShareWishListIntro%%` | . |\n| `%%GLOBAL_PublicWishListUrl%%` | . |\n| `%%GLOBAL_HideWishLists%%` | . |\n| `%%GLOBAL_HideWishListsTable%%` | . |\n| `%%GLOBAL_DownloadName%%` | . |\n| `%%GLOBAL_DisplayDownloadLink%%` | . |\n| `%%GLOBAL_DownloadSize%%` | . |\n| `%%GLOBAL_DownloadColor%%` | . |\n| `%%GLOBAL_DisplayDownloadExpired%%` | . |\n| `%%GLOBAL_DownloadDescription%%` | . |\n| `%%GLOBAL_MessageSubject%%` | . |\n| `%%GLOBAL_MessageDate%%` | . |\n| `%%GLOBAL_Icon%%` | . |\n| `%%GLOBAL_Sender%%` | . |\n| `%%GLOBAL_MessageContent%%` | . |\n| `%%GLOBAL_OrderItemMessage%%` | . |\n| `%%GLOBAL_ProductQtySelect%%` | . |\n| `%%GLOBAL_DisableViewButton%%` | . |\n| `%%GLOBAL_DownloadItemEncrypted%%` | . |\n| `%%GLOBAL_ItemQty%%` | . |\n| `%%GLOBAL_ItemName%%` | . |\n| `%%GLOBAL_ItemShippingRow%%` | . |\n| `%%GLOBAL_DisableReorder%%` | . |\n| `%%GLOBAL_Qty%%` | . |\n| `%%GLOBAL_Link%%` | . |\n| `%%GLOBAL_Target%%` | . |\n| `%%GLOBAL_Name%%` | . |\n| `%%GLOBAL_HideItemMessage%%` | . |\n| `%%GLOBAL_ReorderMessage%%` | . |\n| `%%GLOBAL_Price%%` | . |\n| `%%GLOBAL_ItemShippingRow_AddressLine%%` | . |\n| `%%GLOBAL_TrackingLink%%` | . |\n| `%%GLOBAL_OrderInstructions%%` | . |\n| `%%GLOBAL_ReturnedQuantity%%` | . |\n| `%%GLOBAL_ReturnedProduct%%` | . |\n| `%%GLOBAL_ReturnedProductOptions%%` | . |\n| `%%GLOBAL_DateRequested%%` | . |\n| `%%GLOBAL_HideReturnComment%%` | . |\n| `%%GLOBAL_AddThisServiceButtonMeta%%` | . |\n| `%%GLOBAL_AddThisServiceButtons%%` | . |\n| `%%GLOBAL_Thumbnail%%` | . |\n| `%%GLOBAL_RecentPostSummary%%` | . |\n| `%%GLOBAL_NumProducts%%` | . |\n| `%%GLOBAL_TagSize%%` | . |\n| `%%GLOBAL_ChooseBrandFromList%%` | . |\n| `%%GLOBAL_CouponId%%` | . |\n| `%%GLOBAL_MASTER_THEME_PATH%%` | . |\n| `%%GLOBAL_CustomizeProductTitle%%` | . |\n| `%%GLOBAL_GiftCertificateId%%` | . |\n| `%%GLOBAL_HideGiftWrappingAdd%%` | . |\n| `%%GLOBAL_HideGiftWrappingEdit%%` | . |\n| `%%GLOBAL_CartItemQty%%` | . |\n| `%%GLOBAL_HideCartItemRemove%%` | . |\n| `%%GLOBAL_QtySelectStyle%%` | . |\n| `%%GLOBAL_Quantity1%%` | . |\n| `%%GLOBAL_Quantity2%%` | . |\n| `%%GLOBAL_Quantity3%%` | . |\n| `%%GLOBAL_Quantity4%%` | . |\n| `%%GLOBAL_Quantity5%%` | . |\n| `%%GLOBAL_Quantity6%%` | . |\n| `%%GLOBAL_Quantity7%%` | . |\n| `%%GLOBAL_Quantity8%%` | . |\n| `%%GLOBAL_Quantity9%%` | . |\n| `%%GLOBAL_Quantity10%%` | . |\n| `%%GLOBAL_Quantity11%%` | . |\n| `%%GLOBAL_Quantity12%%` | . |\n| `%%GLOBAL_Quantity13%%` | . |\n| `%%GLOBAL_Quantity14%%` | . |\n| `%%GLOBAL_Quantity15%%` | . |\n| `%%GLOBAL_Quantity16%%` | . |\n| `%%GLOBAL_Quantity17%%` | . |\n| `%%GLOBAL_Quantity18%%` | . |\n| `%%GLOBAL_Quantity19%%` | . |\n| `%%GLOBAL_Quantity20%%` | . |\n| `%%GLOBAL_Quantity21%%` | . |\n| `%%GLOBAL_Quantity22%%` | . |\n| `%%GLOBAL_Quantity23%%` | . |\n| `%%GLOBAL_Quantity24%%` | . |\n| `%%GLOBAL_Quantity25%%` | . |\n| `%%GLOBAL_Quantity26%%` | . |\n| `%%GLOBAL_Quantity27%%` | . |\n| `%%GLOBAL_Quantity28%%` | . |\n| `%%GLOBAL_Quantity29%%` | . |\n| `%%GLOBAL_Quantity30%%` | . |\n| `%%GLOBAL_QtyOptionSelected%%` | . |\n| `%%GLOBAL_ProductAttributeName%%` | . |\n| `%%GLOBAL_ProductAttributeValue%%` | . |\n| `%%GLOBAL_NextLink%%` | . |\n| `%%GLOBAL_PrevLink%%` | . |\n| `%%GLOBAL_URL%%` | . |\n| `%%GLOBAL_HiddenSortField%%` | . |\n| `%%GLOBAL_SortFeaturedSelected%%` | . |\n| `%%GLOBAL_SortNewestSelected%%` | . |\n| `%%GLOBAL_SortBestSellingSelected%%` | . |\n| `%%GLOBAL_SortAlphaAsc%%` | . |\n| `%%GLOBAL_SortAlphaDesc%%` | . |\n| `%%GLOBAL_SortAvgReview%%` | . |\n| `%%GLOBAL_SortPriceAsc%%` | . |\n| `%%GLOBAL_SortPriceDesc%%` | . |\n| `%%GLOBAL_HideCartProductFields%%` | . |\n| `%%GLOBAL_MailFormatPreferenceOptions%%` | . |\n| `%%GLOBAL_ProviderChecked%%` | . |\n| `%%GLOBAL_ProviderType%%` | . |\n| `%%GLOBAL_ProviderPaymentFormClass%%` | . |\n| `%%GLOBAL_ProviderName%%` | . |\n| `%%GLOBAL_HideAddressButton%%` | . |\n| `%%GLOBAL_CompareWidth%%` | . |\n| `%%GLOBAL_RemoveCompareLink%%` | . |\n| `%%GLOBAL_HideComparisonReviewLink%%` | . |\n| `%%GLOBAL_NumReviews%%` | . |\n| `%%GLOBAL_ProductSummary%%` | . |\n| `%%GLOBAL_CustomFields%%` | . |\n| `%%GLOBAL_ProductBrand%%` | . |\n| `%%GLOBAL_CompareHeadWidth%%` | . |\n| `%%GLOBAL_HideProductPrice%%` | . |\n| `%%GLOBAL_PrivacyCookieNotification%%` | . |\n| `%%GLOBAL_ProductAttributesJavascript%%` | . |\n| `%%GLOBAL_DesignModeCurrentTemplate%%` | . |\n| `%%GLOBAL_DesignModeUpdateUrl%%` | . |\n| `%%GLOBAL_ShippingQuoteRow%%` | . |\n| `%%GLOBAL_EventDateNameRequired%%` | . |\n| `%%GLOBAL_EventDateName%%` | . |\n| `%%GLOBAL_EventDateLimitations%%` | . |\n| `%%GLOBAL_EventDateMonthStyle%%` | . |\n| `%%GLOBAL_OverviewToMonths%%` | . |\n| `%%GLOBAL_EventDateDayStyle%%` | . |\n| `%%GLOBAL_OverviewToDays%%` | . |\n| `%%GLOBAL_EventDateYearStyle%%` | . |\n| `%%GLOBAL_OverviewToYears%%` | . |\n| `%%GLOBAL_AddressSelected%%` | . |\n| `%%GLOBAL_UseExistingAddress%%` | . |\n| `%%GLOBAL_AddressList%%` | . |\n| `%%GLOBAL_AddNewAddress%%` | . |\n| `%%GLOBAL_HideCreateAddress%%` | . |\n| `%%GLOBAL_CompiledFormFields%%` | . |\n| `%%GLOBAL_HideSaveAddress%%` | . |\n| `%%GLOBAL_SaveAddressChecked%%` | . |\n| `%%GLOBAL_CompiledFormFieldJavascript%%` | . |\n| `%%GLOBAL_AdjustedTotalCost%%` | . |\n| `%%GLOBAL_HideButtomPaymentButton%%` | . |\n| `%%GLOBAL_ExpressCheckoutLoadPaymentForm%%` | . |\n| `%%GLOBAL_FrameWidth%%` | . |\n| `%%GLOBAL_FacebookButtonHref%%` | . |\n| `%%GLOBAL_fastCartProdImg%%` | . |\n| `%%GLOBAL_fastCartQuantityTxt%%` | . |\n| `%%GLOBAL_fastCartProdLink%%` | . |\n| `%%GLOBAL_fastCartQuantity%%` | . |\n| `%%GLOBAL_fastCartProdTotal%%` | . |\n| `%%GLOBAL_fastCartSubtotal%%` | . |\n| `%%GLOBAL_fastCartNumItemsTxt%%` | . |\n| `%%GLOBAL_FeaturedCategoryTextColourClass%%` | . |\n| `%%GLOBAL_FeaturedCategoryRootName%%` | . |\n| `%%GLOBAL_FeaturedCategoryUrl%%` | . |\n| `%%GLOBAL_FeaturedCategoryImage%%` | . |\n| `%%GLOBAL_FeaturedCategoryImageStyle%%` | . |\n| `%%GLOBAL_FlyoutNodeUrl%%` | . |\n| `%%GLOBAL_FlyoutNodeLabel%%` | . |\n| `%%GLOBAL_HideWrappingTitle%%` | . |\n| `%%GLOBAL_ExtraClass%%` | . |\n| `%%GLOBAL_WrappingOptions%%` | . |\n| `%%GLOBAL_GiftWrapPreviewLinks%%` | . |\n| `%%GLOBAL_GiftWrapMessage%%` | . |\n| `%%GLOBAL_HideWrappingSeparator%%` | . |\n| `%%GLOBAL_CurrencyID%%` | . |\n| `%%GLOBAL_CurrencyFlagURL%%` | . |\n| `%%GLOBAL_CurrencyClass%%` | . |\n| `%%GLOBAL_CustomerPhone%%` | . |\n| `%%GLOBAL_TotalCost%%` | . |\n| `%%GLOBAL_CdnStorePath%%` | . |\n| `%%GLOBAL_ImageDirectory%%` | The name of the product images directory. |\n| `%%GLOBAL_StoreLogo%%` | The store logo (image or text logo) |\n| `%%GLOBAL_LogoText%%` | . |\n| `%%GLOBAL_MsgBox_Type%%` | . |\n| `%%GLOBAL_MsgBox_Message%%` | . |\n| `%%GLOBAL_MobileSiteURL%%` | . |\n| `%%GLOBAL_ShippingAddressSelect%%` | . |\n| `%%GLOBAL_HasSubMenuClass%%` | . |\n| `%%GLOBAL_ActivePageClass%%` | . |\n| `%%GLOBAL_SubMenu%%` | . |\n| `%%GLOBAL_SubMenuLinks%%` | . |\n| `%%GLOBAL_RSSLink%%` | . |\n| `%%GLOBAL_RSSTitle%%` | . |\n| `%%GLOBAL_RSSDescription%%` | . |\n| `%%GLOBAL_sPageLink%%` | . |\n| `%%GLOBAL_sPageName%%` | . |\n| `%%GLOBAL_PinterestButtonDescription%%` | . |\n| `%%GLOBAL_TagUrl%%` | . |\n| `%%GLOBAL_InvoiceTitle%%` | . |\n| `%%GLOBAL_invoiceItemClass%%` | . |\n| `%%GLOBAL_addressColumnRowSpan%%` | . |\n| `%%GLOBAL_productShippingAddress%%` | . |\n| `%%GLOBAL_HidePreOrder%%` | . |\n| `%%GLOBAL_ProductPreOrder%%` | . |\n| `%%GLOBAL_ProductCost%%` | . |\n| `%%GLOBAL_ProductTotalCost%%` | . |\n| `%%GLOBAL_FieldName%%` | . |\n| `%%GLOBAL_SKUValue%%` | . |\n| `%%GLOBAL_FieldValue%%` | . |\n| `%%GLOBAL_classNameAppend%%` | . |\n| `%%GLOBAL_totalRowColspan%%` | . |\n| `%%GLOBAL_ProductBinNumber%%` | . |\n| `%%GLOBAL_AddToCartButtonControlScript%%` | . |\n| `%%GLOBAL_HideSKU%%` | . |\n| `%%GLOBAL_SKU%%` | . |\n| `%%GLOBAL_HideCondition%%` | . |\n| `%%GLOBAL_ProductCondition%%` | . |\n| `%%GLOBAL_HideWeight%%` | . |\n| `%%GLOBAL_ProductWeight%%` | . |\n| `%%GLOBAL_HideAvailability%%` | . |\n| `%%GLOBAL_Availability%%` | . |\n| `%%GLOBAL_HideShipping%%` | . |\n| `%%GLOBAL_HideMinQty%%` | . |\n| `%%GLOBAL_MinQty%%` | . |\n| `%%GLOBAL_HideMaxQty%%` | . |\n| `%%GLOBAL_MaxQty%%` | . |\n| `%%GLOBAL_HideCurrentStock%%` | . |\n| `%%GLOBAL_CurrentStockLabel%%` | . |\n| `%%GLOBAL_InventoryList%%` | . |\n| `%%GLOBAL_GiftWrappingAvailable%%` | . |\n| `%%GLOBAL_ProductBulkDiscountThickBox%%` | . |\n| `%%GLOBAL_BreadcrumbItems%%` | . |\n| `%%GLOBAL_BulkDiscountThickBoxTitle%%` | . |\n| `%%GLOBAL_ReleaseDate%%` | . |\n| `%%GLOBAL_CheckboxFieldNameLeft%%` | . |\n| `%%GLOBAL_CheckboxFieldNameRight%%` | . |\n| `%%GLOBAL_FindByCategoryItems%%` | . |\n| `%%GLOBAL_ProdImageZoomJavascript%%` | . |\n| `%%GLOBAL_LightBoxImageList%%` | . |\n| `%%GLOBAL_ProductTinyBoxWidth%%` | . |\n| `%%GLOBAL_VisibleImageTotal%%` | . |\n| `%%GLOBAL_ReviewError%%` | . |\n| `%%GLOBAL_AlternateReviewClass%%` | . |\n| `%%GLOBAL_ReviewTitle%%` | . |\n| `%%GLOBAL_ReviewRating%%` | . |\n| `%%GLOBAL_ReviewName%%` | . |\n| `%%GLOBAL_ReviewDate%%` | . |\n| `%%GLOBAL_ReviewText%%` | . |\n| `%%GLOBAL_ProductReviews%%` | . |\n| `%%GLOBAL_PrevRevLink%%` | . |\n| `%%GLOBAL_ReviewEnd%%` | . |\n| `%%GLOBAL_ProductNumReviews%%` | . |\n| `%%GLOBAL_NextRevLink%%` | . |\n| `%%GLOBAL_TinyImageOverJavascript%%` | . |\n| `%%GLOBAL_ProductThumbImageURL%%` | . |\n| `%%GLOBAL_ProductZoomImageURL%%` | . |\n| `%%GLOBAL_ProductTinyImageURL%%` | . |\n| `%%GLOBAL_VariationChooseText%%` | . |\n| `%%GLOBAL_OptionChecked%%` | . |\n| `%%GLOBAL_BlogLink%%` | . |\n| `%%GLOBAL_BlogText%%` | . |\n| `%%GLOBAL_BlogPreview%%` | . |\n| `%%GLOBAL_RelatedSearchQuery%%` | . |\n| `%%GLOBAL_RelatedSearchText%%` | . |\n| `%%GLOBAL_ProductNoImageClassName%%` | . |\n| `%%GLOBAL_ProductRatingImage%%` | . |\n| `%%GLOBAL_HideSectionSorting%%` | . |\n| `%%GLOBAL_SectionSortingOptions%%` | . |\n| `%%GLOBAL_SectionExtraClass%%` | . |\n| `%%GLOBAL_SectionResults%%` | . |\n| `%%GLOBAL_NewsSmallContent%%` | . |\n| `%%GLOBAL_GiftWrappingTitle%%` | . |\n| `%%GLOBAL_GiftWrapModalClass%%` | . |\n| `%%GLOBAL_ShippingData%%` | . |\n| `%%GLOBAL_HideAddressLine%%` | . |\n| `%%GLOBAL_HideItemList%%` | . |\n| `%%GLOBAL_ShippingProviders%%` | . |\n| `%%GLOBAL_HideHorizontalRule%%` | . |\n| `%%GLOBAL_PriceLink%%` | . |\n| `%%GLOBAL_PriceLow%%` | . |\n| `%%GLOBAL_PriceHigh%%` | . |\n| `%%GLOBAL_LastChildClass%%` | . |\n| `%%GLOBAL_CategoryLink%%` | . |\n| `%%GLOBAL_CategoryName%%` | . |\n| `%%GLOBAL_SubCategoryList%%` | . |\n| `%%GLOBAL_CurrencyFlagStyle%%` | . |\n| `%%GLOBAL_CurrencySwitchLink%%` | . |\n| `%%GLOBAL_CurrencySelected%%` | . |\n| `%%GLOBAL_CurrencyFlag%%` | . |\n| `%%GLOBAL_RootCatName%%` | . |\n| `%%GLOBAL_RootCatList%%` | . |\n| `%%GLOBAL_ProductRatingImageDimensions%%` | . |\n| `%%GLOBAL_SitemapURL_HTML%%` | . |\n| `%%GLOBAL_ModelType%%` | . |\n| `%%GLOBAL_ModelHeading%%` | . |\n| `%%GLOBAL_ModelBody%%` | . |\n| `%%GLOBAL_ModelHideAllLink%%` | . |\n| `%%GLOBAL_ModelSubsectionURL%%` | . |\n| `%%GLOBAL_Slide_Link_Url%%` | . |\n| `%%GLOBAL_Slide_Heading_Color%%` | . |\n| `%%GLOBAL_Slide_Heading_Text%%` | . |\n| `%%GLOBAL_Slide_Text_Color%%` | . |\n| `%%GLOBAL_Slide_Text_Text%%` | . |\n| `%%GLOBAL_Slide_Button_Hide%%` | . |\n| `%%GLOBAL_Slide_Button_Color%%` | . |\n| `%%GLOBAL_Slide_Button_Text%%` | . |\n| `%%GLOBAL_Slide_Image_Url%%` | . |\n| `%%GLOBAL_Slide_Image_AlternateText%%` | . |\n| `%%GLOBAL_SocialMedia_Service_Url%%` | . |\n| `%%GLOBAL_UseThemeSettingsClass%%` | . |\n| `%%GLOBAL_SocialMedia_Service_Class%%` | . |\n| `%%GLOBAL_SharingActiveTab%%` | . |\n| `%%GLOBAL_SharingIcon%%` | . |\n| `%%GLOBAL_SharingDisplay%%` | . |\n| `%%GLOBAL_SubBrandImage%%` | . |\n| `%%GLOBAL_SubCatImage%%` | . |\n| `%%GLOBAL_VideoTitleShort%%` | . |\n| `%%GLOBAL_VideoDescriptionShort%%` | . |\n| `%%GLOBAL_NumOfItems%%` | . |\n| `%%GLOBAL_WishListShared%%` | . |\n| `%%GLOBAL_ShareWishListLink%%` | . |\n| `%%GLOBAL_HideRemoveItemButton%%` | . |\n| `%%GLOBAL_MerchantName%%` | . |\n| `%%GLOBAL_AC_EmailBody%%` | . |\n| `%%GLOBAL_AC_UnsubscribeLink%%` | . |\n| `%%GLOBAL_Email%%` | . |\n| `%%GLOBAL_Password%%` | . |\n| `%%GLOBAL_Ebay_Listing_Abort_Email_Message_1%%` | . |\n| `%%GLOBAL_Ebay_Listing_Abort_Email_Message_2%%` | . |\n| `%%GLOBAL_Ebay_Listing_Error_Email_Message_1%%` | . |\n| `%%GLOBAL_Ebay_Listing_Error_Email_Error_Heading%%` | . |\n| `%%GLOBAL_Ebay_Listing_Error_Email_Error%%` | . |\n| `%%GLOBAL_Ebay_Listing_Error_Email_Error_Footer%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Message_1%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Message_2%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Message_3%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Message_4%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Errors_Heading%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Errors%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Warnings_Heading%%` | . |\n| `%%GLOBAL_Ebay_Listing_End_Email_Warnings%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_Abort_Email_Message_1%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_Abort_Email_Message_2%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_Error_Email_Message_1%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_Error_Email_Error_Heading%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_Error_Email_Error%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_Error_Email_Error_Footer%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_End_Email_Message_1%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_End_Email_Message_2%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_End_Email_Message_3%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_End_Email_Message_4%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_End_Email_Errors_Heading%%` | . |\n| `%%GLOBAL_EmailIntegration_Export_End_Email_Errors%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Header%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Intro%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Error%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Message%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Time%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Details%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Type%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Subscription%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_CommonCauses%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause1_Intro%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause1_Detail%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause2_Intro%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause2_Detail%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause3_Intro%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause3_Detail%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause4_Intro%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause4_Detail%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause5_Intro%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Cause5_Detail%%` | . |\n| `%%GLOBAL_EmailIntegrationNotice_Closing%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_1%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_2%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_Lists%%` | . |\n| `%%GLOBAL_DeletedLists%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_3%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesDeletion_4%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_1%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_2%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_MergeFields%%` | . |\n| `%%GLOBAL_MergeFieldsList%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_3%%` | . |\n| `%%GLOBAL_NoticeOfEmailIntegrationRulesUpdate_4%%` | . |\n| `%%GLOBAL_EmailMessage%%` | . |\n| `%%GLOBAL_ToName%%` | . |\n| `%%GLOBAL_Intro%%` | . |\n| `%%GLOBAL_NoPaymentTaken%%` | . |\n| `%%GLOBAL_OrderNumber%%` | . |\n| `%%GLOBAL_ViewOrderStatusMsg%%` | . |\n| `%%GLOBAL_PendingPaymentNotice%%` | . |\n| `%%GLOBAL_PendingPaymentDetails%%` | . |\n| `%%GLOBAL_OrderCommentBlock%%` | . |\n| `%%GLOBAL_CartItemColumns%%` | . |\n| `%%GLOBAL_LowInventoryWarning%%` | . |\n| `%%GLOBAL_LowInventoryWarningIntro%%` | . |\n| `%%GLOBAL_LowInventoryWarningProduct%%` | . |\n| `%%GLOBAL_LowInventoryWarningCurrentStock%%` | . |\n| `%%GLOBAL_LowInventoryWarningNotice%%` | . |\n| `%%GLOBAL_TrackingLinkList%%` | . |\n| `%%GLOBAL_ViewOrderStatusLink%%` | . |\n| `%%GLOBAL_FormFieldList%%` | . |\n| `%%GLOBAL_Question%%` | . |\n| `%%GLOBAL_ProductReviewEmailUnsubscribeLink%%` | . |\n| `%%GLOBAL_CustomerFirstName%%` | . |\n| `%%GLOBAL_ReturnReceivedCredit%%` | . |\n| `%%GLOBAL_AC_EmailIntroText%%` | . |\n| `%%GLOBAL_ProductThumbnailUrl%%` | . |\n| `%%GLOBAL_AC_ExistingCustomer%%` | . |\n| `%%GLOBAL_AC_CustomerName%%` | . |\n| `%%GLOBAL_AC_CustomerEmail%%` | . |\n| `%%GLOBAL_AC_CustomerPhone%%` | . |\n| `%%GLOBAL_AC_CustomerAddress%%` | . |\n| `%%GLOBAL_AC_ModifiedType%%` | . |\n| `%%GLOBAL_AC_DateModified%%` | . |\n| `%%GLOBAL_AC_CartContents%%` | . |\n| `%%GLOBAL_AC_CouponCode%%` | . |\n| `%%GLOBAL_AC_CouponCodeText%%` | . |\n| `%%GLOBAL_FormField%%` | . |\n| `%%GLOBAL_FormValue%%` | . |\n| `%%GLOBAL_PaymentGatewayAmount%%` | . |\n| `%%GLOBAL_NoPaymentTakenModuleInTestMode%%` | . |\n| `%%GLOBAL_OrderTrackingNo%%` | . |\n| `%%GLOBAL_TrackURL%%` | . |\n| `%%GLOBAL_RawProductPrice%%` | Currency, as a unique alphanumeric code. To follow best practices for microdata, use this variable – together with `%%GLOBAL_RawProductPrice%%` – rather than `%%GLOBAL_ProductPrice%%` (which includes a currency token/symbol). |\n| `%%GLOBAL_SelectedCurrencyCode%% ` | Currency, as a unique alphanumeric code. To follow best practices for microdata, use this variable – together with `%%GLOBAL_RawProductPrice%%` – rather than `%%GLOBAL_ProductPrice%%` (which includes a currency token/symbol). |\n| `%%GLOBAL_ProductReviewLink%%` | . |\n| `%%GLOBAL_ProductQty%%` | . |\n| `%%GLOBAL_ProductCustomFields%%` | You can use the %%GLOBAL_ProductCustomFields%% variable in any template file where you can use %%GLOBAL_ProductPrice%%. (Namely, in template files that render a particular panel's individual items. Examples are: Snippets/CategoryProductsItem.html, for category pages; or Snippets/HomeFeaturedProductsItem.html, for the Featured Products panel.) Once %%GLOBAL_ProductCustomFields%% is added, it will render the entire table of custom fields. To incorporate this variable into faceted search, we recommend adding the following code to Panels/FacetedSearchProductGrid.html:\n| |Once %%GLOBAL_ProductCustomFields%% is added, it will render the entire table of custom fields. To incorporate this variable into faceted search, we recommend adding the following code to Panels/FacetedSearchProductGrid.html:\n| |<pre>{{#each product.custom_fields}}\n| |   {{ id }} : {{ name }} : {{ value }}\n| |{{/each}} </pre>|\n        "
                        }
                      ]
                    }
                  },
                  {
                    "title": "LNG Variables",
                    "route": {
                      "path": "/lng-variables"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>LNG Variables</h1>\n"
                        },
                        {
                          "type": "text",
                          "data": "The Blueprint theme uses the following LNG variables to reference text strings. This list is sorted alphabetically by variable name. \n\nTo make it easier for store owners who might wish to translate, or otherwise modify, their strings: Use these variables instead of hard-coding string values into your theme.\n<br>\n\n<table>\n<thead>\n   <tr>\n       <th class=\"filters-parameter\">Variable</th>\n       <th class=\"variable-description\">Default string value</th>\n   </tr>\n</thead>\n<tbody>\n<TR><TD><CODE>%%LNG_AC_AbandonedCartConvertedHeading%%</code></TD>\n<TD>\"An abandoned cart was converted to an order\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_AbandonedCartNoticeHeading%%</code></TD>\n<TD>\"Abandoned Cart Notice\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_CartContentsSubheading%%</code></TD>\n<TD>\"Products In Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_ContactDetailsSubheading%%</code></TD>\n<TD>\"Contact Details\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_CouponCodeAfterText%%</code></TD>\n<TD>\" during checkout to receive \"</td></tr>\n<TR><TD><CODE>%%LNG_AC_CouponCodeBeforeText%%</code></TD>\n<TD>\"Enter coupon code \"</td></tr>\n<TR><TD><CODE>%%LNG_AC_EmailUnsubscribe%%</code></TD>\n<TD>\"Unsubscribe\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_EmailUnsubscribeSuffix%%</code></TD>\n<TD>\" from future emails like this\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_RecoveredEmailIntroText%%</code></TD>\n<TD>\"The automated emails we've been sending shoppers who didn't make it all the way through the checkout process have resulted in a new order. The customer's contact details and ordered items are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_AC_RecoveredEmailSubHeading%%</code></TD>\n<TD>\"Congratulations!\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountDetailsDescription%%</code></TD>\n<TD>\"Update your contact details, email address and/or change your password.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterFirstName%%</code></TD>\n<TD>\"Please type in your first name.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterLastName%%</code></TD>\n<TD>\"Please type in your last name.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterPassword%%</code></TD>\n<TD>\"Please type in a password.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterPhoneNumber%%</code></TD>\n<TD>\"Please type in your phone number.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountEnterValidEmail%%</code></TD>\n<TD>\"Please type in a valid email address, such as joe@aol.com\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountInboxIntroNoOrders%%</code></TD>\n<TD>\"Once you place an order you'll have full access to your inbox from this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountNoRecentItems%%</code></TD>\n<TD>\"You haven't looked at any items on our site. When you do, they will appear here.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrdersIntro%%</code></TD>\n<TD>\"Your completed orders with us are shown below. Click 'View Order' to view an orders details.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrdersNone%%</code></TD>\n<TD>\"You don't have any completed orders with us. When you do, they will appear on this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrderStatusIntro%%</code></TD>\n<TD>\"The status of your recent orders is shown below. Click 'View Order' to see complete details.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountOrderStatusNone%%</code></TD>\n<TD>\"You haven't placed any orders with us. When you do, their status will appear on this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountPasswordsDontMatch%%</code></TD>\n<TD>\"Your passwords don't match.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountRecentItemsIntro%%</code></TD>\n<TD>\"The items you've recently looked at on our site are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountReturnsIntro%%</code></TD>\n<TD>\"To return an item from one of your previous orders, please &lt;a href='account.php?action=view_orders'&gt;click here&lt;/a&gt;.\"</td></tr>\n<TR><TD><CODE>%%LNG_AccountReturnsNone%%</code></TD>\n<TD>\"You do not have any outstanding return requests with us at the moment.\"</td></tr>\n<TR><TD><CODE>%%LNG_Action%%</code></TD>\n<TD>\"Action\"</td></tr>\n<TR><TD><CODE>%%LNG_Add%%</code></TD>\n<TD>\"Add\"</td></tr>\n<TR><TD><CODE>%%LNG_AddressBook%%</code></TD>\n<TD>\"Address Book\"</td></tr>\n<TR><TD><CODE>%%LNG_AddressBookDescription%%</code></TD>\n<TD>\"Add, edit and remove shipping and billing destinations from your address book.\"</td></tr>\n<TR><TD><CODE>%%LNG_AddShippingAddress%%</code></TD>\n<TD>\"Add New Address\"</td></tr>\n<TR><TD><CODE>%%LNG_AddToCart1%%</code></TD>\n<TD>\"Click the button below to add the\"</td></tr>\n<TR><td><code>%%LNG_AddToWishList%%</code></TD>\n<TD>\"Add to Wish List\"</td></tr>\n<TR><TD><CODE>%%LNG_AdminMaintenanceNotice%%</code></TD>\n<TD>\"&lt;br /&gt;Only administrators can view the store at the moment. Visit your control panel settings page to disable maintenance mode.&lt;br /&gt;&lt;br /&gt;&lt;a href='?showStore=no'&gt;Click here to see what your visitors will see.&lt;/a&gt;\"</td></tr>\n<TR><TD><CODE>%%LNG_AdminMaintenanceNoticeHeader%%</code></TD>\n<TD>\"Your store is down for maintenance.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedExample1%%</code></TD>\n<TD>\"ipod &lt;em&gt;or&lt;/em&gt; creative\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedExample2%%</code></TD>\n<TD>\"music &lt;em&gt;not&lt;/em&gt; creative\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearch%%</code></TD>\n<TD>\"Advanced Search\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearching%%</code></TD>\n<TD>\"Advanced Searching\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingAnd%%</code></TD>\n<TD>\"&lt;em&gt;not&lt;/em&gt; specifies that the term must not be present in the search results.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingKeywords%%</code></TD>\n<TD>\"The words 'and', 'or' and 'not' are special keywords used to join words.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingNot%%</code></TD>\n<TD>\"&lt;em&gt;not&lt;/em&gt; specifies that the term must not be present in the search results.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingOr%%</code></TD>\n<TD>\"<em>or</em> specifies that either of the terms must be present in the results.\"</td></tr>\n<TR><TD><CODE>%%LNG_AdvancedSearchingPhrases%%</code></TD>\n<TD>\"If you wish to search for a phrase, enclose it within &lt;em&gt;&quot;double quotes&quot;&lt;/em&gt;\"</td></tr>\n<TR><TD><CODE>%%LNG_AlphaAsc%%</code></TD>\n<TD>\"Alphabetical: A to Z\"</td></tr>\n<TR><TD><CODE>%%LNG_AlphaDesc%%</code></TD>\n<TD>\"Alphabetical: Z to A\"</td></tr>\n<TR><TD><CODE>%%LNG_AlreadyHaveAnAccount%%</code></TD>\n<TD>\"I'm A Returning Customer\"</td></tr>\n<TR><TD><CODE>%%LNG_AlreadyHaveAnAccountIntro%%</code></TD>\n<TD>\"To continue, please enter your email address and password that you use for your account.\"</td></tr>\n<TR><TD><CODE>%%LNG_AlsoWantToShipToThisAddress%%</code></TD>\n<TD>\"I also want to ship to this address\"</td></tr>\n<TR><TD><CODE>%%LNG_Amount%%</code></TD>\n<TD>\"Amount\"</td></tr>\n<TR><TD><CODE>%%LNG_Apply%%</code></TD>\n<TD>\"Apply\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorisationCode%%</code></TD>\n<TD>\"Authorisation Code\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCreditCardCCV2%%</code></TD>\n<TD>”CVV Code\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterCVV2Number%%</code></TD>\n<TD>”Please enter your credit card vertification number. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_AuthorizeNetTotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_AutoSearchSubCats%%</code></TD>\n<TD>\"Automatically search sub categories\"</td></tr>\n<TR><TD><CODE>%%LNG_Availability%%</code></TD>\n<TD>\"Availability\"</td></tr>\n<TR><TD><CODE>%%LNG_AvgCustomerReview%%</code></TD>\n<TD>\"Avg. Customer Review\"</td></tr>\n<TR><TD><CODE>%%LNG_BadContactFormCaptcha%%</code></TD>\n<TD>\"The characters you copied from the image are incorrect. Please try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicExample1%%</code></TD>\n<TD>\"ipod touch\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicExample2%%</code></TD>\n<TD>\"mp3 player\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearching%%</code></TD>\n<TD>\"Basic Searching\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingCommon%%</code></TD>\n<TD>\"Common words such as 'are' and 'is' as well as words below 3 characters are automatically removed from your search terms.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingFields%%</code></TD>\n<TD>\"All search terms are matched against product names, descriptions and the product code.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingMultiple%%</code></TD>\n<TD>\"Multiple search words are supported. Results containing all of your search terms are ranked higher than those which don't.\"</td></tr>\n<TR><TD><CODE>%%LNG_BasicSearchingShort%%</code></TD>\n<TD>\"Try to keep search terms short and to the point.\"</td></tr>\n<TR><TD><CODE>%%LNG_Bestselling%%</code></TD>\n<TD>\"Bestselling\"</td></tr>\n<TR><TD><CODE>%%LNG_BillAndShipToAddress%%</code></TD>\n<TD>\"Bill & Ship to this Address\"</td></tr>\n<TR><TD><CODE>%%LNG_BillingAddress%%</code></TD>\n<TD>\"Billing Address\"</td></tr>\n<TR><TD><CODE>%%LNG_BillingDetails%%</code></TD>\n<TD>\"Billing Details\"</td></tr>\n<TR><TD><CODE>%%LNG_BillTo%%</code></TD>\n<TD>\"Billing Details\"</td></tr>\n<TR><TD><CODE>%%LNG_BillToThisAddress%%</code></TD>\n<TD>\"Bill to this address\"</td></tr>\n<TR><TD><CODE>%%LNG_Brand%%</code></TD>\n<TD>\"Brand\"</td></tr>\n<TR><TD><CODE>%%LNG_BrandName%%</code></TD>\n<TD>\"Brand Name\"</td></tr>\n<TR><TD><CODE>%%LNG_Brands%%</code></TD>\n<TD>\"Brands\"</td></tr>\n<TR><TD><CODE>%%LNG_BrandsTagCloud%%</code></TD>\n<TD>\"Brands Tag Cloud\"</td></tr>\n<TR><TD><CODE>%%LNG_BrandTagCloudHelp%%</code></TD>\n<TD>\"The &lt;em>brands tag cloud&lt;/em&gt; shows all of the brands available for purchase.&lt;br /&gt;&lt;br /&gt;The bigger the brand appears, the more products it contains.&lt;br /&gt;&lt;br /&gt;Click on a brand below to see all products listed under that brand.&lt;br /&gt;&lt;br />\"</td></tr>\n<TR><TD><CODE>%%LNG_BulkDiscountLink%%</code></TD>\n<TD>\"Buy in bulk and save\"</td></tr>\n<TR><TD><CODE>%%LNG_BulkDiscountThickBoxIntro%%</code></TD>\n<TD>\"Below are the available bulk discount rates for each individual item when you purchase a certain amount\"</td></tr>\n<TR><TD><CODE>%%LNG_BulkDiscountThickBoxIntro%%</code></TD>\n<TD>\"Below are the available bulk discount rates for each individual item when you purchase a certain amount\"</td></tr>\n<TR><TD><CODE>%%LNG_CalculateShipping%%</code></TD>\n<TD>\"Estimate Shipping &amp; Tax\"</td></tr>\n<TR><TD><CODE>%%LNG_CalculateShippingHandling%%</code></TD>\n<TD>\"Estimate Shipping &amp; Tax\"</td></tr>\n<TR><TD><CODE>%%LNG_Calculating%%</code></TD>\n<TD>\"Estimating...\"</td></tr>\n<TR><TD><CODE>%%LNG_Cancel%%</code></TD>\n<TD>\"Cancel\"</td></tr>\n<TR><TD><CODE>%%LNG_CantReorderGiftCertificateAlert%%</code></TD>\n<TD>\"Unfortunately gift certificates can not be reordered. Click on the 'Gift Certificates' link to purchase a new one.\"</td></tr>\n<TR><TD><CODE>%%LNG_CantReorderItems%%</code></TD>\n<TD>\"One or more selected items can\\'t be reordered.\"</td></tr>\n<TR><TD><CODE>%%LNG_CapitalFor%%</code></TD>\n<TD>\"For\"</td></tr>\n<TR><TD><CODE>%%LNG_CaptchaIntro%%</code></TD>\n<TD>\"Please copy the characters from the image into the text field below. Doing this helps us prevent automated submissions.\"</td></tr>\n<TR><TD><CODE>%%LNG_CaptchaVerification%%</code></TD>\n<TD>\"Captcha Check\"</td></tr>\n<TR><TD><CODE>%%LNG_CardholderName%%</code></TD>\n<TD>\"Cardholder Name\"</td></tr>\n<TR><TD><CODE>%%LNG_CartItems%%</code></TD>\n<TD>\"Cart Items\"</td></tr>\n<TR><TD><CODE>%%LNG_CartRemoveConfirm%%</code></TD>\n<TD>\"Are you sure you want to remove this item from your cart?\"</td></tr>\n<TR><TD><CODE>%%LNG_CatalogPriceExTaxLabel%%</code></TD>\n<TD>\" (ex :label)\"</td></tr>\n<TR><TD><CODE>%%LNG_CatalogPriceIncTaxLabel%%</code></TD>\n<TD>\" (inc :label)\"</td></tr>\n<TR><TD><CODE>%%LNG_Categories%%</code></TD>\n<TD>\"Categories\"</td></tr>\n<TR><TD><CODE>%%LNG_CategoryNewProductsFeed%%</code></TD>\n<TD>\"New Products RSS Feed for %s\"</td></tr>\n<TR><TD><CODE>%%LNG_CategoryPopularProductsFeed%%</code></TD>\n<TD>\"Popular Products RSS Feed for %s\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualChooseCardType%%</code></TD>\n<TD>”You forgot to choose a card type.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardCCV2%%</code></TD>\n<TD>”CCV2 Value\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardCVV2Help%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardIssueNo%%</code></TD>\n<TD>”Card Issue No\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardIssueNoHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardNo%%</code></TD>\n<TD>”Credit Card No\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardNoHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualCreditCardType%%</code></TD>\n<TD>”Card Type\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCardNumber%%</code></TD>\n<TD>”Please enter a valid credit card number containing no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterCVV2Number%%</code></TD>\n<TD>”Please enter your credit card verification number. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterIssueDetails%%</code></TD>\n<TD>”Please enter a valid issue number or issue date.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualIssueDate%%</code></TD>\n<TD>”Card Issue Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CCManualIssueDateHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualPayForOrder%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualPaymentIntro%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualPleaseChoose%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_CCManualTotalAmount%%</code></TD>\n<TD>.</td></tr>\n<TR><td><code>%%LNG_CertificateCode%%</code></TD>\n<TD>\"Code\"</td></tr>\n<TR><td><code>%%LNG_CertificateFrom%%</code></TD>\n<TD>\"From\"</td></tr>\n<TR><td><code>%%LNG_CertificateTo%%</code></TD>\n<TD>\"To\"</td></tr>\n<TR><TD><CODE>%%LNG_Change%%</code></TD>\n<TD>\"Change\"</td></tr>\n<TR><TD><CODE>%%LNG_ChangeYourPassword%%</code></TD>\n<TD>\"Change Your Password\"</td></tr>\n<TR><TD><CODE>%%LNG_CharactersRemaining%%</code></TD>\n<TD>\"characters remaining\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckBalance%%</code></TD>\n<TD>\"Check Balance\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckCertificateBalance%%</code></TD>\n<TD>\"Check Remaining Balance\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckingOutAs%%</code></TD>\n<TD>\"Checking Out As\"</td></tr>\n<TR><TD><CODE>%%LNG_Checkout%%</code></TD>\n<TD>\"Checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutAsAGuest%%</code></TD>\n<TD>\"Checkout as a guest\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutButtonTitle%%</code></TD>\n<TD>\"Click here to proceed to checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutGuestIntro%%</code></TD>\n<TD>\"Register with us for a faster checkout, to track the status of your order and more. You can also checkout as a guest.\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutUseStoreCredit%%</code></TD>\n<TD>\"Pay using my store credit\"</td></tr>\n<TR><TD><CODE>%%LNG_CheckoutWithMultipleAddresses%%</code></TD>\n<TD>\"Checkout with multiple addresses\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseAnotherProduct%%</code></TD>\n<TD>\"Choose Another Product\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseGiftWrappingOption%%</code></TD>\n<TD>\"-- Please choose a type of gift wrapping --\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseHowToWrapItems%%</code></TD>\n<TD>\"Please choose how you'd like to have this item gift wrapped.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseReturnAction%%</code></TD>\n<TD>\"-- Please Choose an Action (Optional) --\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseReturnReason%%</code></TD>\n<TD>\"-- Please Choose a Reason --\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingCountry%%</code></TD>\n<TD>\"Please choose your country.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingMethod%%</code></TD>\n<TD>\"Please choose a shipping method.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingProvider%%</code></TD>\n<TD>\"Choose a Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseShippingState%%</code></TD>\n<TD>\"Please choose a state/province.\"</td></tr>\n<TR><TD><CODE>%%LNG_ChooseYourOptions%%</code></TD>\n<TD>\"Choose Your Options\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickHere%%</code></TD>\n<TD>\"click here\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickHereToTrackYourOrder%%</code></TD>\n<TD>\"Track the status of your order\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickToCreateAnAccount%%</code></TD>\n<TD>\"Click here to create a new account.\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickToPrintInvoice%%</code></TD>\n<TD>\"Print Invoice\"</td></tr>\n<TR><TD><CODE>%%LNG_ClickToViewReturnStatus%%</code></TD>\n<TD>\"Click here to view the status of this return.\"</td></tr>\n<TR><TD><CODE>%%LNG_Close%%</code></TD>\n<TD>\"Close\"</td></tr>\n<TR><TD><CODE>%%LNG_CloseWindow%%</code></TD>\n<TD>\"Close Window\"</td></tr>\n<TR><TD><CODE>%%LNG_CloseWindow%%</code></TD>\n<TD>\"Close Window\"</td></tr>\n<TR><TD><CODE>%%LNG_Code%%</code></TD>\n<TD>\"Code/SKU\"</td></tr>\n<TR><TD><CODE>%%LNG_Comments%%</code></TD>\n<TD>\"Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_CompanyName%%</code></TD>\n<TD>\"Company Name\"</td></tr>\n<TR><td><code>%%LNG_Compare%%</code></TD>\n<TD>\"Compare\"</td></tr>\n<TR><TD><CODE>%%LNG_CompareSelected%%</code></TD>\n<TD>\"Compare Selected\"</td></tr>\n<TR><TD><CODE>%%LNG_CompareSelectMessage%%</code></TD>\n<TD>\"Please choose at least 2 products to compare.\"</td></tr>\n<TR><TD><CODE>%%LNG_CompareTwoProducts%%</code></TD>\n<TD>\"At least 2 products are needed to make a valid comparison.\"</td></tr>\n<TR><TD><CODE>%%LNG_CompletedOrders%%</code></TD>\n<TD>\"Completed Orders\"</td></tr>\n<TR><TD><CODE>%%LNG_CompletedOrdersDescription%%</code></TD>\n<TD>\"See all completed orders you've placed at %s. You can also print invoices from this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_Condition%%</code></TD>\n<TD>\"Condition\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmAddressTypeChange%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmDeleteShippingAddress%%</code></TD>\n<TD>\"Are you sure you want to delete this shipping address?\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmDeleteWishLists%%</code></TD>\n<TD>\"Are you sure you want to delete the selected wish list(s)? This action cannot be undone.\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmRemoveGiftWrapping%%</code></TD>\n<TD>\"Are you sure you want to remove the gift wrapping from this item?\"</td></tr>\n<TR><TD><CODE>%%LNG_ConfirmYourOrder%%</code></TD>\n<TD>\"Please Review Your Order Before Continuing\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactCompanyName%%</code></TD>\n<TD>\"Company Name\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactEmail%%</code></TD>\n<TD>\"Email Address\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormDetails%%</code></TD>\n<TD>\"Here are their details\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormEmail1%%</code></TD>\n<TD>\"A user has submitted the contact form on your store.\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormEnterEmail%%</code></TD>\n<TD>\"Please enter a valid email address, such as john@example.com.\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactFormEnterQuestion%%</code></TD>\n<TD>\"You forgot to enter your question/comment.\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactName%%</code></TD>\n<TD>\"Full Name\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactOrderNo%%</code></TD>\n<TD>\"Order Number\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactPageFormSubmitted%%</code></TD>\n<TD>\"'%s' submitted the form from your '%s' page\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactPhone%%</code></TD>\n<TD>\"Phone Number\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactQuestion%%</code></TD>\n<TD>\"Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ContactRMANo%%</code></TD>\n<TD>\"RMA Number\"</td></tr>\n<TR><TD><CODE>%%LNG_ContainsTheFollowingItems%%</code></TD>\n<TD>\"Contained the Following Items\"</td></tr>\n<TR><td><code>%%LNG_Continue%%</code></TD>\n<TD>\"Continue\"</td></tr>\n<TR><TD><CODE>%%LNG_ContinueRaquo%%</code></TD>\n<TD>\"Continue &raquo;\"</td></tr>\n<TR><TD><CODE>%%LNG_ContinueShopping%%</code></TD>\n<TD>\"Continue Shopping\"</td></tr>\n<TR><TD><CODE>%%LNG_CouldNotShipFollowingItems%%</code></TD>\n<TD>\"The following item(s) could not be shipped to your shipping address:\"</td></tr>\n<TR><TD><CODE>%%LNG_Country%%</code></TD>\n<TD>\"Country\"</td></tr>\n<TR><TD><CODE>%%LNG_Coupon%%</code></TD>\n<TD>\"Coupon\"</td></tr>\n<TR><TD><CODE>%%LNG_CouponCode%%</code></TD>\n<TD>\"Coupon Code\"</td></tr>\n<TR><TD><CODE>%%LNG_CouponCodeIntro%%</code></TD>\n<TD>\"If you have a coupon code, enter it in the box below and click 'Go'.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccount%%</code></TD>\n<TD>\"Create Account\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro1%%</code></TD>\n<TD><b>Checkout:</b> \"Fill in the fields below to create a \"<br><b>Express Checkout:</b> \"Checkout faster\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro2%%</code></TD>\n<TD><b>Checkout:</b> \"account. You'll be able to shop and check out faster on your next visit, check your order status online and optionally receive updates on special offers and events.\"<br><b>Express Checkout:</b> \"Save multiple addresses in your address book\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro3%%</code></TD>\n<TD>\"Access order history and track your orders\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro4%%</code></TD>\n<TD>\"Checkout faster at\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntro5%%</code></TD>\n<TD>\"and save multiple addresses in your address book.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountIntroTitle%%</code></TD>\n<TD>\"Create an account with us and you'll be able to:\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountLoginIntro%%</code></TD>\n<TD>\"&lt;p>Create an account with us and you'll be able to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Check out faster&lt;/li&gt;&lt;li&gt;Save multiple shipping addresses&lt;/li&gt;&lt;li&gt;Access your order history&lt;/li&gt;&lt;li&gt;Track new orders&lt;/li&gt;&lt;li&gt;Save items to your wish list&lt;/li&gt;&lt;/ul&gt;\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountPersonalIntro%%</code></TD>\n<TD>\"Enter your email address and password to create your account.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountShippingIntro%%</code></TD>\n<TD>\"Enter the name and address you'd like us to ship your order to.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountThanks%%</code></TD>\n<TD>\"Your Account Has Been Created\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateAccountThanksIntro%%</code></TD>\n<TD>\"Thank you for creating your account at %s. Your account details have been emailed to %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreateANewWishList%%</code></TD>\n<TD>\"Create a New Wish List...\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCardCode%%</code></TD>\n<TD>”CVV2\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCardType%%</code></TD>\n<TD>”Credit Card Type\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardChooseCardType%%</code></TD>\n<TD>”You forgot to choose a card type.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardIssueNo%%</code></TD>\n<TD>”Card Issue No\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardIssueNoHelp%%</code></TD>\n<TD>”The issue number found on the front of your card under 'ISS' or 'ISSUE'&lt;br /&gt;Only required for cards that contain it.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardCVV2Help%%</code></TD>\n<TD>\"For Visa/MasterCard/Discover cards, it\\'s the three digit code beside your signature strip on the back of the card. For American Express cards, it\\'s the four digit code above the account number on the front of the card.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCardCode%%</code></TD>\n<TD>”Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterIssueNoOrDate%%</code></TD>\n<TD>”Please enter your card issue number or issue date.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardIssueDate%%</code></TD>\n<TD>”Card Issue Date\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardIssueDateHelp%%</code></TD>\n<TD>”The issue date found on the front of your card.&lt;br /&gt;Only required for cards that contain it.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardPleaseChoose%%</code></TD>\n<TD>”-- Please Choose --\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditCardTotalAmount%%</code></TD>\n<TD>”Total Amount\"</td></tr>\n<TR><TD><CODE>%%LNG_CreditPaymentMethod%%</code></TD>\n<TD>\"Pay the remaining %s via:\"</td></tr>\n<TR><TD><CODE>%%LNG_CurrencyConverter%%</code></TD>\n<TD>\"Currency Converter\"</td></tr>\n<TR><TD><CODE>%%LNG_Currently%%</code></TD>\n<TD>\"Currently\"</td></tr>\n<TR><TD><CODE>%%LNG_CurrentTopSellers%%</code></TD>\n<TD>\"Current Top Sellers\"</td></tr>\n<TR><TD><CODE>%%LNG_CustomersAlsoBought%%</code></TD>\n<TD>\"Customers Also Purchased\"</td></tr>\n<TR><TD><CODE>%%LNG_CustomersWhoLikedThisProductAlsoLiked%%</code></TD>\n<TD>\"Customers Who Liked This Product Also Liked\"</td></tr>\n<TR><TD><CODE>%%LNG_DateAndTime%%</code></TD>\n<TD>\"Date and Time\"</td></tr>\n<TR><TD><CODE>%%LNG_DateOfOrder%%</code></TD>\n<TD>\"Order Date\"</td></tr>\n<TR><TD><CODE>%%LNG_DateRequested%%</code></TD>\n<TD>\"Date Requested\"</td></tr>\n<TR><TD><CODE>%%LNG_DateShipped%%</code></TD>\n<TD>\"Date Shipped\"</td></tr>\n<TR><TD><CODE>%%LNG_Dear%%</code></TD>\n<TD>\"Dear\"</td></tr>\n<TR><TD><CODE>%%LNG_Delete%%</code></TD>\n<TD>\"Delete\"</td></tr>\n<TR><TD><CODE>%%LNG_DeleteProductFieldFileConfirmation%%</code></TD>\n<TD>\"Are you sure you want to delete the uploaded file?\"</td></tr>\n<TR><TD><CODE>%%LNG_DeliveryDisclaimer%%</code></TD>\n<TD>\"*Delivery time is approximate from date of shipment\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeCancel%%</code></TD>\n<TD>\"Cancel\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeChangesSaved%%</code></TD>\n<TD>\"Your design mode changes have been saved successfully.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeConfirmDisable%%</code></TD>\n<TD>\"Are you sure you want to disable design mode? Any changes you've made won't be saved.\\n\\nYou can re-enable design mode at any time by logging in to your store's control panel, visiting the 'Store Design' page and clicking the 'Design Mode' tab.\\n\\nClick OK to confirm.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeConfirmPanelRemove%%</code></TD>\n<TD>\"Are you sure you want to remove the panel ':panel' from the page? It may still appear on other pages. Click OK to confirm.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeConfirmUndo%%</code></TD>\n<TD>\"Are you sure? Any changes you've made wont be saved. Click OK to confirm.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeDisable%%</code></TD>\n<TD>\"Disable\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeLangSaving%%</code></TD>\n<TD>\"Saving...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuEditLayout%%</code></TD>\n<TD>\"Edit Layout...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuEditPanel%%</code></TD>\n<TD>\"Edit Panel...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuEditStylesheet%%</code></TD>\n<TD>\"Edit Stylesheet...\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeMenuRemovePanel%%</code></TD>\n<TD>\"Remove Panel\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeRemoveLastPanel%%</code></TD>\n<TD>\"This is the last panel in this column.\\n\\nIf you wish to move this panel please move another panel in to this column first.\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeSave%%</code></TD>\n<TD>\"Save\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeToggle%%</code></TD>\n<TD>\"Toggle\"</td></tr>\n<TR><TD><CODE>%%LNG_DesignModeUndo%%</code></TD>\n<TD>\"Undo\"</td></tr>\n<TR><TD><CODE>%%LNG_DidYouMean%%</code></TD>\n<TD>\"Did you mean\"</td></tr>\n<TR><TD><CODE>%%LNG_Discount%%</code></TD>\n<TD>\"Discount\"</td></tr>\n<TR><TD><CODE>%%LNG_DownloadLink%%</code></TD>\n<TD>\"Download\"</td></tr>\n<TR><TD><CODE>%%LNG_DownloadTheItemsYouOrdered%%</code></TD>\n<TD>\"Download the items you ordered\"</td></tr>\n<TR><TD><CODE>%%LNG_Edit%%</code></TD>\n<TD>\"Edit\"</td></tr>\n<TR><TD><CODE>%%LNG_EditAccountIntro%%</code></TD>\n<TD>\"Make changes to your account details below. Click 'Update My Details' when you're done.\"</td></tr>\n<TR><TD><CODE>%%LNG_Email%%</code></TD>\n<TD>.</td></tr>\n<TR><td><code>%%LNG_EmailAddress%%</code></TD>\n<TD>\"Email Address\"</td></tr>\n<TR><TD><CODE>%%LNG_EmptyCartInfo%%</code></TD>\n<TD>\"To add a product to your cart, first browse for it or use the search box and then click its &quot;Add to Cart&quot; button.\"</td></tr>\n<TR><TD><CODE>%%LNG_EmptyHomePage%%</code></TD>\n<TD>\"home page.\"</td></tr>\n<TR><TD><CODE>%%LNG_EmptySmallSearch%%</code></TD>\n<TD>\"You forgot to enter some search keywords.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterCaptchaCode%%</code></TD>\n<TD>\"Please copy the characters from the image into the \\'Captcha Check\\' text box.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterCouponCode%%</code></TD>\n<TD>\"Please enter your coupon code.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterGiftCertificateCode%%</code></TD>\n<TD>\"Please enter your gift certificate code.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterGiftCertificateValueBetween%%</code></TD>\n<TD>\"Please enter an amount between the minimum and maximum gift certificate value.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterOrderComments%%</code></TD>\n<TD>\"Order Instructions/Comments (Optional)\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterRequiredField%%</code></TD>\n<TD>\"Please enter the required field(s).\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingAddress%%</code></TD>\n<TD>\"Please type in an address.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingCity%%</code></TD>\n<TD>\"Please type in your suburb/city.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingFirstName%%</code></TD>\n<TD>\"Please type in your first name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingLastName%%</code></TD>\n<TD>\"Please type in your last name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingPhone%%</code></TD>\n<TD>\"Please enter your phone number.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterShippingZip%%</code></TD>\n<TD>\"Please type in your zip/postcode.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterTheCodeBelow%%</code></TD>\n<TD>\"Enter the code below:\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateCode%%</code></TD>\n<TD>\"Please enter a gift certificate code.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateFromEmail%%</code></TD>\n\n<TD>\"Please enter your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateFromName%%</code></TD>\n<TD>\"Please enter your name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateToEmail%%</code></TD>\n<TD>\"Please enter a valid email address for the person you wish to send this gift certificate to.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidCertificateToName%%</code></TD>\n<TD>\"Please enter the name of the person you wish to send this gift certificate to.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidFromPrice%%</code></TD>\n<TD>\"Please enter a valid \\'from\\' price containing numbers only.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidGiftCertificateAmount%%</code></TD>\n<TD>\"Please enter a valid amount for this gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterValidToPrice%%</code></TD>\n<TD>\"Please enter a valid \\'to\\' price containing numbers only.\"</td></tr>\n<TR><TD><CODE>%%LNG_EnterWishListName%%</code></TD>\n<TD>\"Please enter a wishlist name.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCreditCardCCV2%%</code></TD>\n<TD>”Card Security Code\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterCVV2Number%%</code></TD>\n<TD>”Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterPostcode%%</code></TD>\n<TD>”You forgot to enter a zip/postcode.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterStreetName%%</code></TD>\n<TD>”You forgot to enter your street name.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPEnterStreetNumber%%</code></TD>\n<TD>”You forgot to enter your street number.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPPaymentIntro%%</code></TD>\n<TD>”Please enter the following information as it appears on your credit card statement and then click the &quot;Pay for Order&quot; button to pay for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPStreetName%%</code></TD>\n<TD>”Street Address\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPTotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_eSelectPlusDPZip%%</code></TD>\n<TD>”Zip/Postcode\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCardCode%%</code></TD>\n<TD>”CVV Code\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCardHoldersName%%</code></TD>\n<TD>”Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayCreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCardCode%%</code></TD>\n<TD>”Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCardNumber%%</code></TD>\n<TD>”Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCreditCardMonth%%</code></TD>\n<TD>”You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterCreditCardYear%%</code></TD>\n<TD>”You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayEnterName%%</code></TD>\n<TD>”You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_EWayTotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutCheckingOutAsGuest%%</code></TD>\n<TD>\"Checking out as a guest\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutChooseBilling%%</code></TD>\n<TD>\"Please select the address you'd like to use as your billing address for this order.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutChooseShipper%%</code></TD>\n<TD>\"Please select the shipping method you'd like to use for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutChooseShipping%%</code></TD>\n<TD>\"Please select the address you'd like to use as your shipping address for this order.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutCreatingAnAccount%%</code></TD>\n<TD>\"Creating an account\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutFor%%</code></TD>\n<TD>\"for\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutLoadError%%</code></TD>\n<TD>\"There was an error loading this step of the checkout. Please try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutLoading%%</code></TD>\n<TD>\"Loading...\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutSelectShippingProvider%%</code></TD>\n<TD>\"Please choose the shipping method for your order:\"</td></tr>\n<TR><td><code>%%LNG_ExpressCheckoutStep%%</code></TD>\n<TD>\"Step\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepAccountDetails%%</code></TD>\n<TD>\"Account Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepBillingAccountDetails%%</code></TD>\n<TD>\"Billing &amp; Account Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepBillingAddress%%</code></TD>\n<TD>\"Billing Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepOrderConfirmation%%</code></TD>\n<TD>\"Order Confirmation\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepPaymentDetails%%</code></TD>\n<TD>\"Payment Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepShippingAddress%%</code></TD>\n<TD>\"Shipping Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ExpressCheckoutStepShippingMethod%%</code></TD>\n<TD>\"Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedItems%%</code></TD>\n<TD>\"Featured Items\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedProduct%%</code></TD>\n<TD>\"Featured Product\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedProducts%%</code></TD>\n<TD>\"Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_FeaturedProductsFeed%%</code></TD>\n<TD>\"Featured Products RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_FilterBy%%</code></TD>\n<TD>\"Filter by\"</td></tr>\n<TR><TD><CODE>%%LNG_FindByCategory%%</code></TD>\n<TD>\"Find Similar Products by Category\"</td></tr>\n<TR><TD><CODE>%%LNG_FindProductsByTag%%</code></TD>\n<TD>\"Find Similar Products by Tag\"</td></tr>\n<TR><TD><CODE>%%LNG_FirstName%%</code></TD>\n<TD>\"First Name\"</td></tr>\n<TR><TD><CODE>%%LNG_ForbiddenAccessPage%%</code></TD>\n<TD>\"You Do Not Have Permission To Access This Page\"</td></tr>\n<TR><TD><CODE>%%LNG_ForgotPassword%%</code></TD>\n<TD>\"Forgot Password\"</td></tr>\n<TR><TD><CODE>%%LNG_ForgotPasswordIntro%%</code></TD>\n<TD>\"Fill in your email below to request a new password. An email will be sent to the address below containing a link to verify your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_ForgotYourPassword%%</code></TD>\n<TD>\"Forgot your password?\"</td></tr>\n<TR><TD><CODE>%%LNG_FreeShipping%%</code></TD>\n<TD>\"Free Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_From%%</code></TD>\n<TD>\"From\"</td></tr>\n<TR><TD><CODE>%%LNG_GetNewPasswordIntro%%</code></TD>\n<TD>\"Your password should be at least 6 characters long and will be case sensitive.\"</td></tr>\n<TR><td><code>%%LNG_GiftCertificate%%</code></TD>\n<TD>\"Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateAmount%%</code></TD>\n<TD>\"Amount\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateBalanceCode%%</code></TD>\n<TD>\"Gift Certificate Code\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateBalanceFor%%</code></TD>\n<TD>\"Gift Certificate Balance for\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateBalanceIntro%%</code></TD>\n<TD>\"You can check the balance of a gift certificate by typing the code in to the box below.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateCode%%</code></TD>\n<TD>\"Redeem Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateCodeIntro%%</code></TD>\n<TD>\"To pay for this order using a gift certificate, enter the gift certificate code in the box below and click 'Go'.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailAttached%%</code></TD>\n<TD>\"Your gift certificate is attached to this email.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailedAfterPurchase%%</code></TD>\n<TD>\"This gift certificate will be emailed to the recipient after your order has been paid for.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailInstructions%%</code></TD>\n<TD>\"For instructions on how to redeem your gift certificate please &lt;a href='%s/giftcertificates.php?action=redeem'&gt;click here&lt;/a&gt;.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailWarning%%</code></TD>\n<TD>\"Please download or print a copy of your gift certificate for safe keeping as gift certificates are non-transferable.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateEmailYouHaveReceived%%</code></TD>\n<TD>\"You have received a Gift Certificate for\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateFrom%%</code></TD>\n<TD>\"Your Name\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateFromEmail%%</code></TD>\n<TD>\"Your Email\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateMessage%%</code></TD>\n<TD>\"Your Message\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateMessageTooLong%%</code></TD>\n<TD>\"Please enter a shorter message for your gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateRemaining%%</code></TD>\n<TD>\"remaining\"</td></tr>\n<TR><td><code>%%LNG_GiftCertificates%%</code></TD>\n<TD>\"Gift Certificates\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateTerms2%%</code></TD>\n<TD>\"I understand that gift certificates are non-refundable\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateTheme%%</code></TD>\n<TD>\"Gift Certificate Theme\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateTo%%</code></TD>\n<TD>\"Recipient's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftCertificateToEmail%%</code></TD>\n<TD>\"Recipient's Email\"</td></tr>\n<TR><TD><CODE>%%LNG_GiftMessage%%</code></TD>\n<TD>\"Gift Message\"</td></tr>\n<TR><td><code>%%LNG_GiftWrapping%%</code></TD>\n<TD>\"Gift Wrapping\"</td></tr>\n<TR><TD><CODE>%%LNG_GrandTotal%%</code></TD>\n<TD>\"Grand Total\"</td></tr>\n<TR><TD><CODE>%%LNG_Handling%%</code></TD>\n<TD>\"Handling\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_address%%</code></TD>\n<TD>”Address\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_allbrands%%</code></TD>\n<TD>”View all brands\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_allprices%%</code></TD>\n<TD>”All prices are in\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_billingaddress%%</code></TD>\n<TD>”Billing Address\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_brands%%</code></TD>\n<TD>”Brands\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_calluson%%</code></TD>\n<TD>”Call us on\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_categories%%</code></TD>\n<TD>”Categories\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_chooseproduct%%</code></TD>\n<TD>”choose another product\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_clicktochangebilling%%</code></TD>\n<TD>”Click Here to Change Billing Details if Required\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_continuetostore%%</code></TD>\n<TD>”Continue to our store\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_customerviewed%%</code></TD>\n<TD>”Customers also viewed\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_date%%</code></TD>\n<TD>”Date\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_downloadedfileexpired%%</code></TD>\n<TD>”This file can no longer be downloaded as it has expired.\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_email%%</code></TD>\n<TD>”Email\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_emailbigcommerce%%</code></TD>\n<TD>”with BigCommerce\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_emaillaunchstore%%</code></TD>\n<TD>”Launch your own store for free\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_emailpowered%%</code></TD>\n<TD>”is powered by BigCommerce\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_existingcustomer%%</code></TD>\n<TD>”Existing Customer\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_giftcertificatecode%%</code></TD>\n<TD>”Gift certificate code\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_giftcertificatecoupon%%</code></TD>\n<TD>”Gift Certificate or Coupon Code\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_modify%%</code></TD>\n<TD>”Modify\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_name%%</code></TD>\n<TD>”Name\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_nomarketingmails%%</code></TD>\n<TD>”You will no longer receive marketing emails from\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_ok%%</code></TD>\n<TD>”OK\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_or%%</code></TD>\n<TD>”or\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_order%%</code></TD>\n<TD>”Order\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_orderconfirmation%%</code></TD>\n<TD>”Order Confirmation\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_outofstock%%</code></TD>\n<TD>”Out of Stock\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_payfororder%%</code></TD>\n<TD>”Pay for your order\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_phone%%</code></TD>\n<TD>”Phone\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_proceedcheckout%%</code></TD>\n<TD>”Proceed To Checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_productreviews%%</code></TD>\n<TD>”Product Reviews\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_quantity%%</code></TD>\n<TD>”Quantity\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_returnitem%%</code></TD>\n<TD>”Return Item(s)\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_returnstore%%</code></TD>\n<TD>”Return to store\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_rrp%%</code></TD>\n<TD>”RRP\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_searchresults%%</code></TD>\n<TD>HC_searchresults\t”Search Results\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_securityquestion%%</code></TD>\n<TD>”Security Question\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_sharediffproduct%%</code></TD>\n<TD>”To share a different product, just select it from those shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_sharethis%%</code></TD>\n<TD>”Share This\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_shippingaddress%%</code></TD>\n<TD>”Shipping Address\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_shippingmethod%%</code></TD>\n<TD>”Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_shopnow%%</code></TD>\n<TD>”SHOP NOW\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_signin%%</code></TD>\n<TD>”Sign In\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_signinorcreate%%</code></TD>\n<TD>”Sign in or Create Account\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_signupnewsletter%%</code></TD>\n<TD>”Sign up for our newsletter\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_Submit%%</code></TD>\n<TD>\"Submit\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_total%%</code></TD>\n<TD>”Total\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_unsubscribe%%</code></TD>\n<TD>”Unsubscribe from\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_voucherredemptioncode%%</code></TD>\n<TD>”Voucher redemption code\"</td></tr>\n<TR><TD><CODE>%%LNG_HC_writereview%%</code></TD>\n<TD>”Write Review\"</td></tr>\n<TR><TD><CODE>%%LNG_HCT_delete%%</code></TD>\n<TD>”Delete\"</td></tr>\n<TR><TD><CODE>%%LNG_HCT_edit%%</code></TD>\n<TD>”Edit\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_addshoppingbag%%</code></TD>\n<TD>”Add to shopping bag\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_apply%%</code></TD>\n<TD>”Apply\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_clearform%%</code></TD>\n<TD>”Clear Form\"</td></tr>\n<TR><TD><CODE>%%LNG_HCV_go%%</code></TD>\n<TD>”Go\"</td></tr>\n<TR><TD><CODE>%%LNG_HearFromUsViaEmail%%</code></TD>\n<TD>\"Hear From Us Via Email?\"</td></tr>\n<TR><TD><CODE>%%LNG_HeresHowToPayForYourOrder%%</code></TD>\n<TD>”Your order was sent to us but requires payment before it can be completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_HeresHowtoPayforYourOrderThanks%%</code></TD>\n<TD>”Here's How To Pay For Your Order\"</td></tr>\n<TR><TD><CODE>%%LNG_HeresHowtoPayforYourOrderUC%%</code></TD>\n<TD>\"Here's How to Pay for Your Order...\"</td></tr>\n<TR><TD><CODE>%%LNG_Hi%%</code></TD>\n<TD>\"Hi\"</td></tr>\n<TR><TD><CODE>%%LNG_HideSearchForm%%</code></TD>\n<TD>\"Hide Search Form\"</td></tr>\n<TR><td><code>%%LNG_Home%%</code></TD>\n<TD>\"Home\"</td></tr>\n<TR><TD><CODE>%%LNG_HowRateProduct%%</code></TD>\n<TD>\"How do you rate this product?\"</td></tr>\n<TR><TD><CODE>%%LNG_HowWouldYouLikeToPay%%</code></TD>\n<TD>\"How Would You Like to Pay?\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealBank%%</code></TD>\n<TD>\"Bank\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealIssuerNotSelected%%</code></TD>\n<TD>\"Please select your issuer to continue\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealPaymentIntro%%</code></TD>\n<TD>\"Select your bank below and click the &quot;Continue&quot; button to proceed with payment.\"</td></tr>\n<TR><TD><CODE>%%LNG_IdealProcessingError%%</code></TD>\n<TD>\"Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_Image%%</code></TD>\n<TD>\"Image\"</td></tr>\n<TR><TD><CODE>%%LNG_Inbox%%</code></TD>\n<TD>\"Inbox\"</td></tr>\n<TR><TD><CODE>%%LNG_InstructionsForPaymentBelow%%</code></TD>\n<TD>\"Instructions to pay for your order are shown below:\"</td></tr>\n<TR><TD><CODE>%%LNG_InvalidFileTypeJS%%</code></TD>\n<TD>\"The file type of the file you are trying to upload is not allowed for this field.\"</td></tr>\n<TR><TD><CODE>%%LNG_InvalidQuantity%%</code></TD>\n<TD>\"Please enter a valid product quantity.\"</td></tr>\n<TR><TD><CODE>%%LNG_InvoiceNumber%%</code></TD>\n<TD>\"Hi\"</td></tr>\n<TR><TD><CODE>%%LNG_InvoicePendingPaymentText%%</code></TD>\n<TD>\"Your order requires payment before it can be finalized. Details on how to pay are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_IPreferThisEmailFormat%%</code></TD>\n<TD>\"I prefer to receive emails in this format:\"</td></tr>\n<TR><TD><CODE>%%LNG_ISOCode%%</code></TD>\n<TD>\"ISO Code\"</td></tr>\n<TR><TD><CODE>%%LNG_IssuerConfirmation%%</code></TD>\n<TD>\"Issuer Confirmation\"</td></tr>\n<TR><TD><CODE>%%LNG_IssuerName%%</code></TD>\n<TD>\"Issuer Name\"</td></tr>\n<TR><TD><CODE>%%LNG_Item%%</code></TD>\n<TD>\"Item\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemDetails%%</code></TD>\n<TD>\"Item Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemPrice%%</code></TD>\n<TD>\"Item Price\"</td></tr>\n<TR><TD><CODE>%%LNG_Items%%</code></TD>\n<TD>\"Items\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemsShippedTo%%</code></TD>\n<TD>\"Items shipped to\"</td></tr>\n<TR><TD><CODE>%%LNG_ItemTotal%%</code></TD>\n<TD>\"Item Total\"</td></tr>\n<TR><TD><CODE>%%LNG_JS_BillToThisAddress%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Description%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_OtherDetails%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_OtherProducts%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_ProductVideos%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Reviews%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_SimilarProducts%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_SimilarProductsByCustomerViews%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Tags%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JS_Warranty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_JustSentAnEmailConfirmation%%</code></TD>\n<TD>\"We've just sent you an email confirming your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_LastName%%</code></TD>\n<TD>\"Last Name\"</td></tr>\n<TR><TD><CODE>%%LNG_LoadingPleaseWait%%</code></TD>\n<TD>\"Loading... Please wait...\"</td></tr>\n<TR><TD><CODE>%%LNG_Login%%</code></TD>\n<TD>\"Sign in\"</td></tr>\n<TR><TD><CODE>%%LNG_LoginEnterPassword%%</code></TD>\n<TD>\"Please type in your password.\"</td></tr>\n<TR><TD><CODE>%%LNG_LoginEnterValidEmail%%</code></TD>\n<TD>\"Please type in a valid email address, such as joe@aol.com\"</td></tr>\n<TR><TD><CODE>%%LNG_LoginWord%%</code></TD>\n<TD>\"Sign In\"</td></tr>\n<TR><TD><CODE>%%LNG_LowInventoryWarningAdjust%%</code></TD>\n<TD>\"Click here to adjust the inventory level for this product.\"</td></tr>\n<TR><TD><CODE>%%LNG_LowInventoryWarningAll%%</code></TD>\n<TD>\"Click here to view all products with a low inventory level.\"</td></tr>\n<TR><TD><CODE>%%LNG_ManageYourAccount%%</code></TD>\n<TD>\"Manage Your Account\"</td></tr>\n<TR><TD><CODE>%%LNG_MerchantName%%</code></TD>\n<TD>\"Merchant Name\"</td></tr>\n<TR><TD><CODE>%%LNG_MerchantURL%%</code></TD>\n<TD>\"Merchant URL\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageContent%%</code></TD>\n<TD>\"Message\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEmailText1%%</code></TD>\n<TD>\"has sent you a message about your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEmailText2%%</code></TD>\n<TD>\"To view the message and reply, follow the link below:\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEnterContent%%</code></TD>\n<TD>\"Please enter a message.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageEnterSubject%%</code></TD>\n<TD>\"Please enter a subject.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageOrder%%</code></TD>\n<TD>\"Order\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSaid%%</code></TD>\n<TD>\"Said\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSendError%%</code></TD>\n<TD>\"Something went wrong when trying to send your message. Please try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSendSuccess%%</code></TD>\n<TD>\"Your message was sent and you will receive a response via email shortly.\"</td></tr>\n<TR><TD><CODE>%%LNG_MessageSubject%%</code></TD>\n<TD>\"Subject\"</td></tr>\n<TR><TD><CODE>%%LNG_MobileSite%%</code></TD>\n<TD>\"Mobile Site\"</td></tr>\n<TR><TD><CODE>%%LNG_NewCustomerIntro1%%</code></TD>\n<TD>\"If this is your first purchase from\"</td></tr>\n<TR><TD><CODE>%%LNG_NewCustomerIntro2%%</code></TD>\n<TD>\"please click the &quot;Continue.&quot; button to get started.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewestItems%%</code></TD>\n<TD>\"Newest Items\"</td></tr>\n<TR><TD><CODE>%%LNG_NewProducts%%</code></TD>\n<TD>\"New Products\"</td></tr>\n<TR><TD><CODE>%%LNG_NewProductsFeed%%</code></TD>\n<TD>\"New Products RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterEnterEmail%%</code></TD>\n<TD>\"You forgot to type in your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterEnterFirstName%%</code></TD>\n<TD>\"You forgot to type in your first name.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterEnterValidEmail%%</code></TD>\n<TD>\"Please enter a valid email address, such as john@example.com.\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterSpecialOffersText%%</code></TD>\n<TD>\"I'd like to receive special offers\"</td></tr>\n<TR><TD><CODE>%%LNG_NewsletterSubscription%%</code></TD>\n<TD>\"Newsletter Subscription\"</td></tr>\n<TR><TD><CODE>%%LNG_Next%%</code></TD>\n<TD>\"Next\"</td></tr>\n<TR><TD><CODE>%%LNG_NextImage%%</code></TD>\n<TD>\"Next\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICardHoldersName%%</code></TD>\n<TD>\"Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICreditCardCCV2%%</code></TD>\n<TD>”CVV Code\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICreditCardNo%%</code></TD>\n<TD>”Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_NMICreditCardNoHelp%%</code></TD>\n<TD>”Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIExpirationDate%%</code></TD>\n<TD>”Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIPayForOrder%%</code></TD>\n<TD>”Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIPaymentIntro%%</code></TD>\n<TD>”Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order using our secure server.\"</td></tr>\n<TR><TD><CODE>%%LNG_NMIProcessingError%%</code></TD>\n<TD>”Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_NMITotalAmount%%</code></TD>\n<TD>”Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_NoCaptcha%%</code></TD>\n<TD>\"Please enter the code shown.\"</td></tr>\n<TR><TD><CODE>%%LNG_NoItemsInCart%%</code></TD>\n<TD>\"There are no products in your cart.\"</td></tr>\n<TR><TD><CODE>%%LNG_NoPermissionToAccessThisPage%%</code></TD>\n<TD>\"You don't have the necessary permissions to view this page.\"</td></tr>\n<TR><TD><CODE>%%LNG_NoPreference%%</code></TD>\n<TD>\"No Preference\"</td></tr>\n<TR><TD><CODE>%%LNG_NoProductsInCategory%%</code></TD>\n<TD>\"There are no products in this category.\"</td></tr>\n<TR><TD><CODE>%%LNG_NotAnExistingCustomer%%</code></TD>\n<TD>\"I'm A New Customer\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFound%%</code></TD>\n<TD>\"Not Found\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundError%%</code></TD>\n<TD>\"The page you were looking for appears to have been moved, deleted or does not exist.\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundReason1%%</code></TD>\n<TD>\"An outdated link on another site\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundReason2%%</code></TD>\n<TD>\"A typo in the address / URL\"</td></tr>\n<TR><TD><CODE>%%LNG_NotFoundReasonTitle%%</code></TD>\n<TD>\"This is most likely due to:\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationAReturnSummaryIsShownBelow%%</code></TD>\n<TD>\"A summary of your return is shown below. To view the status of this return\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationClickHereViewReturn%%</code></TD>\n<TD>\"View details for return #\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationConfirmationForReturn%%</code></TD>\n<TD>\"Confirmation for Return Request for Order ID\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationCustomerDetails%%</code></TD>\n<TD>\"Customer Details\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationNewReturnRequest%%</code></TD>\n<TD>\"New Return Request for Order ID\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationReturnRequestSubmitted%%</code></TD>\n<TD>\"A new return request has been submitted on\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationTheReturnContainsTheFollowingItems%%</code></TD>\n<TD>\"The Return Request Contains the Following Items...\"</td></tr>\n<TR><TD><CODE>%%LNG_NotificationYourReturnContainsTheFollowingItems%%</code></TD>\n<TD>\"Your Return Request Contains the Following Items...\"</td></tr>\n<TR><TD><CODE>%%LNG_Of%%</code></TD>\n<TD>\"of\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyFeaturedProducts%%</code></TD>\n<TD>\"Only Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyFreeShipping%%</code></TD>\n<TD>\"Only Free Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyNonFeaturedProducts%%</code></TD>\n<TD>\"Only Non-Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_OnlyPaidShipping%%</code></TD>\n<TD>\"Only Paid Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_OnThe%%</code></TD>\n<TD>\"on the\"</td></tr>\n<TR><TD><CODE>%%LNG_Oops%%</code></TD>\n<TD>\"Oops...\"</td></tr>\n<TR><TD><CODE>%%LNG_Optional%%</code></TD>\n<TD>\"Optional\"</td></tr>\n<TR><TD><CODE>%%LNG_Or%%</code></TD>\n<TD>\"or\"</td></tr>\n<TR><TD><CODE>%%LNG_Order%%</code></TD>\n<TD>\"Order\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderAwaitingPayment%%</code></TD>\n<TD>\"Your order was sent to us but is currently awaiting payment. Once we receive the payment for your order, it will be completed. If you've already provided payment details then we will process your order manually and send you an email when it's completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderComments%%</code></TD>\n<TD>\"Order Instructions/Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderDate%%</code></TD>\n<TD>\"Order Date\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderDetails%%</code></TD>\n<TD>\"Order Details\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderDownloads%%</code></TD>\n<TD>\"Files\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderedItemRemovedFromStore%%</code></TD>\n<TD>\"That item was removed from our store and is no longer available for order.\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderId%%</code></TD>\n<TD>\"Order #%s\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderIdHash%%</code></TD>\n<TD>\"Order #\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderItems%%</code></TD>\n<TD>\"Order Items\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatus%%</code></TD>\n<TD>\"Order Status\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChanged%%</code></TD>\n<TD>\"Order Status Changed\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedDatePlaced%%</code></TD>\n<TD>\"Date Placed\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedIntro%%</code></TD>\n<TD>\"An order you recently placed on our website has had its status changed.\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedOrderTotal%%</code></TD>\n<TD>\"Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderStatusChangedPaymentMethod%%</code></TD>\n<TD>\"Payment Method\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderSubtotal%%</code></TD>\n<TD>\"Order Subtotal\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderTotal%%</code></TD>\n<TD>\"Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_OrderTrackingNoIs%%</code></TD>\n<TD>\"The tracking number for this order is\"</td></tr>\n<TR><TD><CODE>%%LNG_Other%%</code></TD>\n<TD>\"Other\"</td></tr>\n<TR><TD><CODE>%%LNG_OtherDetails%%</code></TD>\n<TD>\"Other Details\"</td></tr>\n<TR><TD><CODE>%%LNG_Outstanding%%</code></TD>\n<TD>\"outstanding\"</td></tr>\n<TR><TD><CODE>%%LNG_OutstandingOrderTotal%%</code></TD>\n<TD>\"Your outstanding order total:\"</td></tr>\n<TR><td><code>%%LNG_Password%%</code></TD>\n<TD>\"Password\"</td></tr>\n<TR><TD><CODE>%%LNG_PasswordConfirm%%</code></TD>\n<TD>\"Confirm Password\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCardHoldersName%%</code></TD>\n<TD>\"Cardholder's Name\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCreditCardCCV2%%</code></TD>\n<TD>\"Card Security Code\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCreditCardNo%%</code></TD>\n<TD>\"Credit Card Number\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProCreditCardNoHelp%%</code></TD>\n<TD>\"Numbers only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCardNumber%%</code></TD>\n<TD>\"Please enter the card number only, no spaces or dashes.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCreditCardMonth%%</code></TD>\n<TD>\"You forgot to choose an expiry month.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCreditCardYear%%</code></TD>\n<TD>\"You forgot to choose an expiry year.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProEnterCVV2Number%%</code></TD>\n<TD>\"Please enter your credit card security code. This is usually the last three or four digits on the signature strip of your card.\"</td></tr>\n\n<TR><TD><CODE>%%LNG_PayflowProEnterName%%</code></TD>\n<TD>\"You forgot to enter the cardholder's name.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProExpirationDate%%</code></TD>\n<TD>\"Expiration Date\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProPayForOrder%%</code></TD>\n<TD>\"Pay for Order\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProPaymentIntro%%</code></TD>\n<TD>\"Complete the form below and then click the &quot;Pay for Order&quot; button to pay for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProProcessingError%%</code></TD>\n<TD>\"Something went wrong when trying to process your payment. Please review the error message and try again:\"</td></tr>\n<TR><TD><CODE>%%LNG_PayflowProTotalAmount%%</code></TD>\n<TD>\"Order Total\"</td></tr>\n<TR><TD><CODE>%%LNG_PayForYourOrderHelp%%</code></TD>\n<TD>\"Once you've provided payment, your order will be completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_PayForYourOrderHelp%%</code></TD>\n<TD>\"Once you've provided payment your order will be completed.\"</td></tr>\n<TR><TD><CODE>%%LNG_PaymentMethod%%</code></TD>\n<TD>\"Payment Method\"</td></tr>\n<TR><TD><CODE>%%LNG_PersonalDetails%%</code></TD>\n<TD>\"Personal Details\"</td></tr>\n<TR><TD><CODE>%%LNG_Phone%%</code></TD>\n<TD>\"Phone\"</td></tr>\n<TR><TD><CODE>%%LNG_PhoneNumber%%</code></TD>\n<TD>\"Phone Number\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseAgreeGiftCertificateTerms%%</code></TD>\n<TD>\"Please agree to the gift certificate terms.\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseChooseAPaymentMethod%%</code></TD>\n<TD>\"Please choose a payment method.\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseChooseShippingProvider%%</code></TD>\n<TD>\"Please choose a shipping method.\"</td></tr>\n<TR><TD><CODE>%%LNG_PleaseSelectAProduct%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_PopularProducts%%</code></TD>\n<TD>\"Popular Products\"</td></tr>\n<TR><TD><CODE>%%LNG_PopularProductsFeed%%</code></TD>\n<TD>\"Popular Products RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_PostedBy%%</code></TD>\n<TD>\"Posted by\"</td></tr>\n<TR><TD><CODE>%%LNG_PostedOn%%</code></TD>\n<TD>\"Posted on\"</td></tr>\n<TR><TD><CODE>%%LNG_PrepositionOn%%</code></TD>\n<TD>\"on\"</td></tr>\n<TR><TD><CODE>%%LNG_Preview%%</code></TD>\n<TD>\"Preview\"</td></tr>\n<TR><TD><CODE>%%LNG_Previous%%</code></TD>\n<TD>\"Previous\"</td></tr>\n<TR><TD><CODE>%%LNG_PreviousImage%%</code></TD>\n<TD>\"Previous\"</td></tr>\n<TR><td><code>%%LNG_PreviousPage%%</code></TD>\n<TD>\"Previous Page\"</td></tr>\n<TR><TD><CODE>%%LNG_Price%%</code></TD>\n<TD>\"Price\"</td></tr>\n<TR><TD><CODE>%%LNG_PriceAsc%%</code></TD>\n<TD>\"Price: Low to High\"</td></tr>\n<TR><TD><CODE>%%LNG_PriceDesc%%</code></TD>\n<TD>\"Price: High to Low\"</td></tr>\n<TR><TD><CODE>%%LNG_PriceRange%%</code></TD>\n<TD>\"Price Range\"</td></tr>\n<TR><TD><CODE>%%LNG_ProceedToPayment%%</code></TD>\n<TD>\"Proceed to Payment\"</td></tr>\n<TR><TD><CODE>%%LNG_ProceedToPaymentContinue%%</code></TD>\n<TD>\"Continue\"</td></tr>\n<TR><TD><CODE>%%LNG_ProdBin%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProdName%%</code></TD>\n<TD>\"Product Name\"</td></tr>\n<TR><TD><CODE>%%LNG_Product%%</code></TD>\n<TD>\"Product\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductAddToCartLink%%</code></TD>\n<TD>\"Add To Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductChooseOptionLink%%</code></TD>\n<TD>\"Choose Options\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductComparison%%</code></TD>\n<TD>\"Product Comparison\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductComparisonIntro%%</code></TD>\n<TD>\"Your product comparison is shown below. Click a product attribute in the left column to sort by that attribute.\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductDescription%%</code></TD>\n<TD>\"Product Description\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductDetails%%</code></TD>\n<TD>\"Product Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductMaxQty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductMinQty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductPreOrderCartLink%%</code></TD>\n<TD>\"Pre-Order Now\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailHeading%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailInstructions%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailSubheading%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailThanks%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailUnsubscribe%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewEmailUnsubscribeSuffix%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ProductReviewLinkText%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Products%%</code></TD>\n<TD>\"Products\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductsByCategory%%</code></TD>\n<TD>\"Categories\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductTagCloud%%</code></TD>\n<TD>\"Browse by Tag\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductTagCloudIntro%%</code></TD>\n<TD>\"The product tag cloud shows the different tags (keywords) associated with products. The bigger the tag appears, the more products it contains. Click on a tag to see all products listed under that tag.\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductVideos%%</code></TD>\n<TD>\"Product Videos\"</td></tr>\n<TR><TD><CODE>%%LNG_ProductWarranty%%</code></TD>\n<TD>\"Warranty Information\"</td></tr>\n<TR><TD><CODE>%%LNG_PublishedBy%%</code></TD>\n<TD>\"Posted by\"</td></tr>\n<TR><TD><CODE>%%LNG_PurchaseGiftCertificate%%</code></TD>\n<TD>\"Purchase a Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_PurchaseGiftCertificates%%</code></TD>\n<TD>.</td></tr>\n<TR><td><code>%%LNG_Qty%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Quantity%%</code></TD>\n<TD>\"Quantity\"</td></tr>\n<TR><TD><CODE>%%LNG_QuantityFull%%</code></TD>\n<TD>\"Quantity\"</td></tr>\n<TR><TD><CODE>%%LNG_QuestionMark%%</code></TD>\n<TD>\"?\"</td></tr>\n<TR><TD><CODE>%%LNG_QuickViewBulkDiscountsLabel%%</code></TD>\n<TD>\"Bulk Discounts\"</td></tr>\n<TR><TD><CODE>%%LNG_QuickViewViewDetailsText%%</code></TD>\n<TD>\"View Details\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate1Star%%</code></TD>\n<TD>\"1 star (worst)\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate2Stars%%</code></TD>\n<TD>\"2 stars\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate3Stars%%</code></TD>\n<TD>\"3 stars (average)\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate4Stars%%</code></TD>\n<TD>\"4 stars\"</td></tr>\n<TR><TD><CODE>%%LNG_Rate5Stars%%</code></TD>\n<TD>\"5 stars (best)\"</td></tr>\n<TR><TD><CODE>%%LNG_Rating%%</code></TD>\n<TD>\"Rating\"</td></tr>\n<TR><TD><CODE>%%LNG_ReadMoreLink%%</code></TD>\n<TD>\"Read More &raquo;\"</td></tr>\n<TR><TD><CODE>%%LNG_ReadReviews%%</code></TD>\n<TD>\"Read Reviews\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentBlogsFeed%%</code></TD>\n<TD>\"Recent News RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentlySubmittedReturnRequest%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_RecentlyViewedItems%%</code></TD>\n<TD>\"Your Recent Items\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentlyViewedItemsDescription%%</code></TD>\n<TD>\"See a list of items you've recently viewed at %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentNews%%</code></TD>\n<TD>\"Recent Updates\"</td></tr>\n<TR><TD><CODE>%%LNG_RecentPosts%%</code></TD>\n<TD>\"Recent Posts\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemAGiftCertificate%%</code></TD>\n<TD>\"Redeem a Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate%%</code></TD>\n<TD>\"Redeem a Gift Certificate\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate1%%</code></TD>\n<TD>\"You need your unique gift certificate code, which is part of the gift certificate that was emailed to you as an attachment. It will look something like Z50-Y6K-COS-402.\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate2%%</code></TD>\n<TD>\"Browse the store and add items to your cart as you normally would.\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate3%%</code></TD>\n<TD>\"Click the '&lt;a href='cart.php'&gt;View Cart&lt;/a&gt;' link to view the contents of your shopping cart.\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificate4%%</code></TD>\n<TD>\"Type your gift certificate code in to the 'Redeem Gift Certificate' box and click 'Go'.\"</td></tr>\n<TR><td><code>%%LNG_RedeemGiftCertificateAt%%</code></TD>\n<TD>\"Redeem your gift certificate at\"</td></tr>\n<TR><TD><CODE>%%LNG_RedeemGiftCertificateIntro%%</code></TD>\n<TD>\"To redeem a gift certificate at %s, follow the simple steps below.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReferenceNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_RegisterAnAccount%%</code></TD>\n<TD>\"Register an account\"</td></tr>\n<TR><TD><CODE>%%LNG_RelatedProducts%%</code></TD>\n<TD>\"Related Products\"</td></tr>\n<TR><TD><CODE>%%LNG_RelatedSearches%%</code></TD>\n<TD>\"Related Searches\"</td></tr>\n<TR><TD><CODE>%%LNG_RemainingStoreCredit%%</code></TD>\n<TD>\"Remaining store credit:\"</td></tr>\n<TR><TD><CODE>%%LNG_Remove%%</code></TD>\n<TD>\"Remove\"</td></tr>\n<TR><TD><CODE>%%LNG_RemoveFromWishList%%</code></TD>\n<TD>\"Remove Item\"</td></tr>\n<TR><TD><CODE>%%LNG_Reorder%%</code></TD>\n<TD>\"Reorder\"</td></tr>\n<TR><TD><CODE>%%LNG_ReplyToYourOrderMessage%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ResponseCode%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ResponseMessage%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Return%%</code></TD>\n<TD>\"Return\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnAction%%</code></TD>\n<TD>\"Return Action\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnComments%%</code></TD>\n<TD>\"Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnedItem%%</code></TD>\n<TD>\"Returned Item\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnInstructions%%</code></TD>\n<TD>\"Return Instructions\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnItems%%</code></TD>\n<TD>\"Return Items\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnOrderItems%%</code></TD>\n<TD>\"Return Item(s)\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnQty%%</code></TD>\n<TD>\"Qty. to Return\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnReason%%</code></TD>\n<TD>\"Return Reason\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnRequests%%</code></TD>\n<TD>\"Return Requests\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnRequestsDescription%%</code></TD>\n<TD>\"View any outstanding return requests you've made for products you ordered from %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnRequestSubmitted%%</code></TD>\n<TD>\"Your return request has been submitted successfully.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnStatusChangedTo%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ReturnSubmittedInfo%%</code></TD>\n<TD>\"Your return request was submitted to %s for processing. When it has been processed you will receive an email with more details.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReturnToHomepage%%</code></TD>\n<TD>\"Return to the home page\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewEmailHint%%</code></TD>\n<TD>\"We promise to never spam you, and just use your email address to identify you as a valid customer.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewEnterYourEmail%%</code></TD>\n<TD>\"Your email:\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewEnterYourName%%</code></TD>\n<TD>\"Enter your name: (optional)\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoEmail%%</code></TD>\n<TD>\"Please enter your email address.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoRating%%</code></TD>\n<TD>\"Please select a rating.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoText%%</code></TD>\n<TD>\"Please enter some text for your review.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewNoTitle%%</code></TD>\n<TD>\"Please enter a title for your review.\"</td></tr>\n<TR><TD><CODE>%%LNG_ReviewTheContentsOfYourOrder%%</code></TD>\n<TD>\"Please review the contents of your order below and then choose how you'd like to pay for your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_SaleProducts%%</code></TD>\n<TD>\"Products On Sale\"</td></tr>\n<TR><TD><CODE>%%LNG_Save%%</code></TD>\n<TD>\"Save\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveAddress%%</code></TD>\n<TD>\"Save Address\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveAddressInAddressBook%%</code></TD>\n<TD>\"Save this address in my address book\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveMyReview%%</code></TD>\n<TD>\"Save My Review\"</td></tr>\n<TR><TD><CODE>%%LNG_SaveWishList%%</code></TD>\n<TD>\"Save Wish List\"</td></tr>\n<TR><TD><CODE>%%LNG_Search%%</code></TD>\n<TD>\"Search\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchByPrice%%</code></TD>\n<TD>\"Search by Price\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchBySetting%%</code></TD>\n<TD>\"Search by Setting\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchDidNotMatchContent%%</code></TD>\n<TD>\"did not match any news or information.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchDidNotMatchProduct%%</code></TD>\n<TD>\"did not match any products.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchedForBrands%%</code></TD>\n<TD>\"Did you mean to browse one of the following brands instead?\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchedForCategories%%</code></TD>\n<TD>\"Did you mean to browse one of the following categories instead?\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchExamples%%</code></TD>\n<TD>\"Examples:\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFeed%%</code></TD>\n<TD>\"View Results as RSS Feed\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters%%</code></TD>\n<TD>\"Search Filters\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters1%%</code></TD>\n<TD>\"Search filters allow you to specify custom conditions in your search terms. It's similar to performing an advanced search however you do not have to visit the advanced search page first.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters2%%</code></TD>\n<TD>\"Search filters should be appended to the end of your search terms. Multiple search filters can be separated by a space.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFilters3%%</code></TD>\n<TD>\"Supported search filters are listed below.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersFeatured%%</code></TD>\n<TD>\"Return featured products only.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersFreeShipping%%</code></TD>\n<TD>\"Return products with free shipping.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersInStock%%</code></TD>\n<TD>\"Return products that are currently in stock.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersPrice%%</code></TD>\n<TD>\"Allows search results to be filtered by price.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchFiltersRating%%</code></TD>\n<TD>\"Allows search results to be filtered by rating.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchKeyword%%</code></TD>\n<TD>\"Search Keyword\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchResultsTabContent%%</code></TD>\n<TD>\"News &amp; Information\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchResultsTabProduct%%</code></TD>\n<TD>\"Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestion1%%</code></TD>\n<TD>\"Make sure all words are spelled correctly.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestion2%%</code></TD>\n<TD>\"Try different keywords.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestion3%%</code></TD>\n<TD>\"Try more general keywords.\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchSuggestions%%</code></TD>\n<TD>\"Suggestions\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchTips%%</code></TD>\n<TD>\"Search Tips\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchTypeNewsItem%%</code></TD>\n<TD>\"News Item\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchTypeWebPage%%</code></TD>\n<TD>\"Web Page\"</td></tr>\n<TR><TD><CODE>%%LNG_SearchYourSearch%%</code></TD>\n<TD>\" Your search for\"</td></tr>\n<TR><TD><CODE>%%LNG_SecureCheckout%%</code></TD>\n<TD>\"Secure Checkout\"</td></tr>\n<TR><TD><CODE>%%LNG_SeeAllBrands%%</code></TD>\n<TD>\"See all brands\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectAWishListToDelete%%</code></TD>\n<TD>\"Please choose at least one wish list to delete.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectItemsToReorder%%</code></TD>\n<TD>\"Please select one or more items to reorder.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectItemsToReturn%%</code></TD>\n<TD>\"Which items do you want to return?\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectOneMoreItemsReturn%%</code></TD>\n<TD>\"Please select one or more items to return.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectReturnReason%%</code></TD>\n<TD>\"Please enter the reason you are returning these item(s).\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectValidGiftCertificateAmount%%</code></TD>\n<TD>\"Please choose a valid amount for this gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_SelectValidGiftCertificateTheme%%</code></TD>\n<TD>\"Please select a theme for your gift certificate.\"</td></tr>\n<TR><TD><CODE>%%LNG_SendAMessage%%</code></TD>\n<TD>\"Send a Message\"</td></tr>\n<TR><TD><CODE>%%LNG_SendForm%%</code></TD>\n<TD>\"Send Form\"</td></tr>\n<TR><TD><CODE>%%LNG_SendMessage%%</code></TD>\n<TD>\"Send Message\"</td></tr>\n<TR><TD><CODE>%%LNG_Shared%%</code></TD>\n<TD>\"Shared\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipAllItemsToDifferentAddresses%%</code></TD>\n<TD>\"Ship items to different addresses\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipAllItemsToOneAddress%%</code></TD>\n<TD>\"Ship all items to the same address\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipmentOrderDate%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ShipmentTrackingNumbersLinks%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ShippedItems%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ShippedTo%%</code></TD>\n<TD>\"Shipped to\"</td></tr>    \n<TR><TD><CODE>%%LNG_Shipping%%</code></TD>\n<TD>\"Shipping\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingAddress%%</code></TD>\n<TD>\"Shipping Address\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingDetails%%</code></TD>\n<TD>\"Shipping Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingMethod%%</code></TD>\n<TD>\"Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingMethodCombined%%</code></TD>\n<TD>\"Multiple Shipping Methods\"</td></tr>\n<TR><TD><CODE>%%LNG_ShippingProvider%%</code></TD>\n<TD>\"Choose a Shipping Method\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipTo%%</code></TD>\n<TD>\"Shipping Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipToTheseAddresses%%</code></TD>\n<TD>\"Ship to These Addresses\"</td></tr>\n<TR><TD><CODE>%%LNG_ShipToThisAddress%%</code></TD>\n<TD>\"Ship to this address\"</td></tr>\n<TR><TD><CODE>%%LNG_ShopByPrice%%</code></TD>\n<TD>\"Shop by Price\"</td></tr>\n<TR><TD><CODE>%%LNG_ShowingReviews%%</code></TD>\n<TD>\"Showing reviews\"</td></tr>\n<TR><TD><CODE>%%LNG_ShowSearchForm%%</code></TD>\n<TD>\"Show Search Form\"</td></tr>\n<TR><TD><CODE>%%LNG_SideCartTotalCost%%</code></TD>\n<TD>\"Your sub total is <strong>%s</strong>.\"</td></tr>\n<TR><TD><CODE>%%LNG_Sitemap%%</code></TD>\n<TD>\"Sitemap\"</td></tr>\n<TR><TD><CODE>%%LNG_SitemapIntroduction%%</code></TD>\n<TD>\"A sitemap lists all pages available on a website. The sitemap for web pages on %%GLOBAL_StoreName%% is shown below:\"</td></tr>\n<TR><TD><CODE>%%LNG_SitemapSeeAll%%</code></TD>\n<TD>\"See All\"</td></tr>\n<TR><TD><CODE>%%LNG_Size%%</code></TD>\n<TD>\"Maximum Size\"</td></tr>\n<TR><TD><CODE>%%LNG_SKU%%</code></TD>\n<TD>\"SKU\"</td></tr>\n<TR><TD><CODE>%%LNG_SomethingWentWrong%%</code></TD>\n<TD>\"Something Went Wrong...\"</td></tr>\n<TR><TD><CODE>%%LNG_SortBy%%</code></TD>\n<TD>\"Sort by\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductBrand%%</code></TD>\n<TD>\"Sort products by brand\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductName%%</code></TD>\n<TD>\"Sort products by name\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductPrice%%</code></TD>\n<TD>\"Sort products by price\"</td></tr>\n<TR><TD><CODE>%%LNG_SortByProductRating%%</code></TD>\n<TD>\"Sort products by average rating\"</td></tr>\n<TR><TD><CODE>%%LNG_StateProvince%%</code></TD>\n<TD>\"State/Province\"</td></tr>\n<TR><TD><CODE>%%LNG_StatusOfReturnChanged%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_StoreCredit%%</code></TD>\n<TD>\"Store Credit\"</td></tr>\n<TR><TD><CODE>%%LNG_StoreCreditBalance%%</code></TD>\n<TD>\"Your store credit balance:\"</td></tr>\n<TR><TD><CODE>%%LNG_SubmitNewReturn%%</code></TD>\n<TD>\"Return Item(s) from Order #%s\"</td></tr>\n<TR><TD><CODE>%%LNG_SubmitReturn%%</code></TD>\n<TD>\"Submit Return Request\"</td></tr>\n<TR><TD><CODE>%%LNG_Subtotal%%</code></TD>\n<TD>\"Subtotal\"</td></tr>\n<TR><TD><CODE>%%LNG_SuggestiveCartIntro%%</code></TD>\n<TD>\"We found some products that you might also be interested in.\"</td></tr>\n<TR><TD><CODE>%%LNG_Summary%%</code></TD>\n<TD>\"Summary\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProducts%%</code></TD>\n<TD>\"Featured Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProductsAtom%%</code></TD>\n<TD>\"Latest %s Featured Products (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProductsIntro%%</code></TD>\n<TD>\"The featured products feed contains the latest %s featured products.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateFeaturedProductsRSS%%</code></TD>\n<TD>\"Latest %s Featured Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateIntro%%</code></TD>\n<TD>\"RSS feeds are used for syndicating regularly changing content on a web site, including this one. You can open an RSS feed using an &lt;a href='http://en.wikipedia.org/wiki/Aggregator'&gt;RSS reader&lt;/a&gt; and use it to see if there is any new content on this site or you can set up a server-side script to parse the feed and display it on your web site.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProducts%%</code></TD>\n<TD>\"New Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProductsAtom%%</code></TD>\n<TD>\"Latest %s New Products (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProductsIntro%%</code></TD>\n<TD>\"The latest products feed contains the latest %s products added to %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewProductsRSS%%</code></TD>\n<TD>\"Latest %s New Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNews%%</code></TD>\n<TD>\"Recent News\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewsAtom%%</code></TD>\n<TD>\"Latest %s News items (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewsIntro%%</code></TD>\n<TD>\"The recent news feed contains the latest %s news items published on %s.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateNewsRSS%%</code></TD>\n<TD>\"Latest %s New Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProducts%%</code></TD>\n<TD>\"Popular Products\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProductsAtom%%</code></TD>\n<TD>\"Latest %s Popular Products (Atom)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProductsIntro%%</code></TD>\n<TD>\"The popular products feed contains the top %s most popular products on %s as rated by users.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicatePopularProductsRSS%%</code></TD>\n<TD>\"Latest %s Popular Products (RSS)\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateSearches%%</code></TD>\n<TD>\"Product Searches\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateSearchesIntro%%</code></TD>\n<TD>\"Product search feeds allow you to save your custom product searches as syndication feed that will always update when there are new results.\"</td></tr>\n<TR><TD><CODE>%%LNG_SyndicateSearchesIntro2%%</code></TD>\n<TD>\"To create a product search feed, perform a standard search on %s and at the bottom of the page click on one of the syndication options.\"</td></tr>\n<TR><TD><CODE>%%LNG_TermsAndConditions%%</code></TD>\n<TD>\"Terms And Conditions\"</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringAt%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringAtIntro%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringEmailHelp%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringEmailLogin%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForRegisteringEmailLogin%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThanksForYourOrder%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_ThisIsAnAutomatedMessage%%</code></TD>\n<TD>\"*** This is an automated message, please do not reply ***\"</td></tr>\n<TR><TD><CODE>%%LNG_ThisOrderIsMarkedAs%%</code></TD>\n<TD>\"This order is marked as\"</td></tr>\n<TR><TD><CODE>%%LNG_TickArgeeTermsAndConditions%%</code></TD>\n<TD>\"Please agree to the terms and conditions by ticking the check box to place your order.\"</td></tr>\n<TR><TD><CODE>%%LNG_To%%</code></TD>\n<TD>\"to\"</td></tr>\n<TR><TD><CODE>%%LNG_Total%%</code></TD>\n<TD>\"Total\"</td></tr>\n<TR><TD><CODE>%%LNG_ToYourWishList%%</code></TD>\n<TD>\"to your wish list.\"</td></tr>\n<TR><TD><CODE>%%LNG_TrackingLink%%</code></TD>\n<TD>\"Tracking Link\"</td></tr>\n<TR><TD><CODE>%%LNG_TrackingNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_TransactionType%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_TryAgain%%</code></TD>\n<TD>\"Try again.\"</td></tr>\n<TR><TD><CODE>%%LNG_Type%%</code></TD>\n<TD>\"Type\"</td></tr>\n<TR><TD><CODE>%%LNG_units%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_Update%%</code></TD>\n<TD>\"Update\"</td></tr>\n<TR><TD><CODE>%%LNG_UpdateMyDetails%%</code></TD>\n<TD>\"Update My Details\"</td></tr>\n<TR><TD><CODE>%%LNG_UpdateShippingCost%%</code></TD>\n<TD>\"Update Shipping Cost\"</td></tr>\n<TR><TD><CODE>%%LNG_ValutecNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_VariationSoldOutMessage%%</code></TD>\n<TD>\"The selected product combination is currently unavailable.\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewCart%%</code></TD>\n<TD>\"View Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewEditCart%%</code></TD>\n<TD>\"View or edit your cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewMessages%%</code></TD>\n<TD>\"View Messages\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewMessagesDescription%%</code></TD>\n<TD>\"You can receive and send messages to %s about your order. When a message is sent regarding one of your orders, you will receive an email notification.\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewOrder%%</code></TD>\n<TD>\"View Order Details\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewOrderStatusDescription%%</code></TD>\n<TD>\"See the status of every order you've placed at %s, including whether it has been shipped, and if so an optional tracking number.\"</td></tr>\n<TR><TD><CODE>%%LNG_ViewYourOrderStatus%%</code></TD>\n<TD>\"View Order Status\"</td></tr>\n<TR><TD><CODE>%%LNG_Weight%%</code></TD>\n<TD>\"Weight\"</td></tr>\n<TR><td><code>%%LNG_WhatsThis%%</code></TD>\n<TD>\"What's This?\"</td></tr>\n<TR><TD><CODE>%%LNG_WhyReturningItems%%</code></TD>\n<TD>\"Why are you returning these items?\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListCancel%%</code></TD>\n<TD>\"Are you sure you want to cancel? Any unsaved changes will be lost.\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListDelete%%</code></TD>\n<TD>\"Delete Selected\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListName%%</code></TD>\n<TD>\"Wish List Name\"</td></tr>\n<TR><TD><CODE>%%LNG_WishLists%%</code></TD>\n<TD>\"Wish Lists\"</td></tr>\n<TR><TD><CODE>%%LNG_WishListsDescription%%</code></TD>\n<TD>\"See a list of items in your wish list and optionally add each item to your shopping cart for purchase.\"</td></tr>\n<TR><TD><CODE>%%LNG_WouldLikeToReceiveNewsletter%%</code></TD>\n<TD>\"I'd like to receive your newsletter\"</td></tr>\n<TR><TD><CODE>%%LNG_WrapItemsDifferently%%</code></TD>\n<TD>\"I'd like to gift wrap each item separately\"</td></tr>\n<TR><TD><CODE>%%LNG_WrapItemsTheSame%%</code></TD>\n<TD>\"I'd like to wrap each of this item using the same wrapping options\"</td></tr>\n<TR><TD><CODE>%%LNG_WriteAHeadline%%</code></TD>\n<TD>\"Write a headline for your review here:\"</td></tr>\n<TR><TD><CODE>%%LNG_WriteYourOwnReview%%</code></TD>\n<TD>\"Write Your Own Review\"</td></tr>\n<TR><TD><CODE>%%LNG_WriteYourReview%%</code></TD>\n<TD>\"Write your review here:\"</td></tr>\n<TR><TD><CODE>%%LNG_xOn%%</code></TD>\n<TD>\"on\"</td></tr>\n<TR><TD><CODE>%%LNG_YesShareWishList%%</code></TD>\n<TD>\"I want to be able to share this wish list\"</td></tr>\n<TR><TD><CODE>%%LNG_YouMayAlsoLike%%</code></TD>\n<TD>\"You May Also Like...\"</td></tr>\n<TR><td><code>%%LNG_YourAccount%%</code></TD>\n<TD>\"My Account\"</td></tr>\n<TR><TD><CODE>%%LNG_YourAccountDetails%%</code></TD>\n<TD>\"Your Account Details\"</td></tr>\n<TR><TD><CODE>%%LNG_YourAccountHelpIntro%%</code></TD>\n<TD>\"From this page you can view your orders, update your account details and more. Choose an option from the menu on the right or learn more about each option below:\"</td></tr>\n<TR><TD><CODE>%%LNG_YourAddressBook%%</code></TD>\n<TD>\"Your Address Book\"</td></tr>\n<TR><TD><CODE>%%LNG_YourCartContains%%</code></TD>\n<TD>\"Your cart contains\"</td></tr>\n<TR><TD><CODE>%%LNG_YourComments%%</code></TD>\n<TD>\"Your Comments\"</td></tr>\n<TR><TD><CODE>%%LNG_YouRecentlyViewed%%</code></TD>\n<TD>\"You Recently Viewed...\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrder%%</code></TD>\n<TD>\"Your Order\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderContainsTheFollowingDownloadableItems%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderContainsTheFollowingItems%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderContainsTheFollowingItems2%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderDetailsBelow%%</code></TD>\n<TD>\"Your order details are shown below.\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderIDIs%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderNumber%%</code></TD>\n<TD>.</td></tr>\n<TR><TD><CODE>%%LNG_YourOrders%%</code></TD>\n<TD>\"Your Completed Orders\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderTotal%%</code></TD>\n<TD>\"Your order total cost:\"</td></tr>\n<TR><TD><CODE>%%LNG_YourOrderTotalIs%%</code></TD>\n<TD>\"The outstanding balance of your order is\"</td></tr>\n<TR><TD><CODE>%%LNG_YourReturns%%</code></TD>\n<TD>\"Your Return Requests\"</td></tr>\n<TR><TD><CODE>%%LNG_YourShoppingCart%%</code></TD>\n<TD>\"Your Shopping Cart\"</td></tr>\n<TR><TD><CODE>%%LNG_ZipPostcode%%</code></TD>\n<TD>\"Zip/Postcode\"</td></tr>\n</tbody>\n</table>"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Email Templates",
                    "route": {
                      "path": "/blueprint-email-templates"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Email Templates</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#gift-certificate-email-template\">Gift Certificate Email Template</a></li>\n\t\t<li><a href=\"#abandoned-cart-email-template\">Abandoned Cart Email Template</a></li>\n    <li><a href=\"#invoice-email-template\">Invoice Email Template</a></li>\n    <li><a href=\"#order-status-email-template\">Order Status Email Template</a></li>\n    <li><a href=\"#return-confirmation-email-template\">Return Confirmation Email Template</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "The following variables are available within individual BigCommerce email template:\n\n"
                        },
                        {
                          "type": "text",
                          "data": "## Gift Certificate Email Template \n\nSent to the recipient of a gift certificate.\n\n### Available Variables \n|||\n|||\n| %%LNG_GiftCertificateEmailYouHaveReceived%%\n| %%GLOBAL_StoreName%%\n| %%LNG_Dear%%\n| %%GLOBAL_ToName%%\n| %%GLOBAL_Intro%%\n| %%GLOBAL_ExpiryInfo%%\n| %%LNG_GiftCertificateEmailInstructions%%\n| %%LNG_GiftCertificateEmailAttached%%\n| %%LNG_GiftCertificateEmailWarning%%\n| %%GLOBAL_EmailFooter%%",
                          "header": {
                            "anchor": "gift-certificate-email-template"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Abandoned Cart Email Template \n\nSent when a customer abandons a shopping cart.\n\n### Available Variables \n|||\n|||\n| %%GLOBAL_AC_EmailBody%%\n| %%GLOBAL_EmailFooter%%\n| %%GLOBAL_AC_UnsubscribeLink%%\n| %%LNG_AC_EmailUnsubscribe%%\n| %%LNG_AC_EmailUnsubscribeSuffix%%",
                          "header": {
                            "anchor": "abandoned-cart-email-template"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Invoice Email Template \n\nSent when a customer places an order.\n\n### Available Variables \n|||\n|||\n| %%GLOBAL_NoPaymentTaken%%\n| %%LNG_ThanksForYourOrder%%\n| %%GLOBAL_IMG_PATH%%\n| %%LNG_YourOrderIDIs%%\n| %%GLOBAL_OrderNumber%%\n| %%GLOBAL_ViewOrderStatusMsg%%\n| %%GLOBAL_PendingPaymentNotice%%\n| %%LNG_ShippingAddress%%\n| %%GLOBAL_ShippingAddress%%</div>\n| %%GLOBAL_HideShippingEmail%%\"\n| %%LNG_Email%%\n| %%GLOBAL_ShippingEmail%%\n| %%LNG_BillingAddress%%\n| %%GLOBAL_BillingAddress%%\n| %%GLOBAL_HideBillingEmail%%\n| %%LNG_Email%%\n| %%GLOBAL_BillingEmail%%\n| %%GLOBAL_PendingPaymentDetails%%\n| %%GLOBAL_OrderCommentBlock%%\n| %%LNG_YourOrderContainsTheFollowingItems%%\n| %%GLOBAL_CartItemColumns%%\n| %%SNIPPET_CartItems%%\n| %%SNIPPET_TotalRows%%\n| %%SNIPPET_PaymentMethod%%\n| %%GLOBAL_EmailFooter%%\n| %%GLOBAL_ProductThumbImageURL%%\n",
                          "header": {
                            "anchor": "invoice-email-template"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Order Status Email Template \n\nSent when an order's status is changed.\n\n### Available Variables \n|||\n|||\n| %%LNG_OrderStatusChanged%% |\n| %%GLOBAL_OrderStatusChangedHi%% |\n| %%LNG_OrderStatusChangedIntro%% |\n| %%GLOBAL_OrderNumberStatusChangedTo%% |\n| %%LNG_OrderDetails%% |\n| %%LNG_OrderStatusChangedOrderTotal%% |\n| %%GLOBAL_OrderTotal%% |\n| %%LNG_OrderStatusChangedDatePlaced%% |\n| %%GLOBAL_DatePlaced%% |\n| %%LNG_OrderStatusChangedPaymentMethod%% |\n| %%GLOBAL_PaymentMethod%% |\n| %%LNG_ShipmentTrackingNumbersLinks%% |\n| %%GLOBAL_TrackingLinkList%% |\n| %%GLOBAL_ViewOrderStatusLink%% |\n| %%GLOBAL_EmailFooter%% |",
                          "header": {
                            "anchor": "order-status-email-template"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Return Confirmation Email Template \n\nSent when a customer submits a return request.\n\n### Available Variables \n|||\n|||\n| %%LNG_NotificationConfirmationForReturn%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_NotificationAReturnSummaryIsShownBelow%% |\n| %%GLOBAL_ShopPath%% |\n| %%LNG_ClickHere%% |\n| %%LNG_ReturnReason%% |\n| %%GLOBAL_ReturnReason%% |\n| %%GLOBAL_HideReturnAction%% |\n| %%LNG_ReturnAction%% |\n| %%GLOBAL_ReturnAction%% |\n| %%LNG_YourComments%% |\n| %%GLOBAL_ReturnComments%% |\n| %%LNG_NotificationYourReturnContainsTheFollowingItems%% |\n| %%LNG_ReturnItems%% |\n| %%LNG_Qty%% |\n| %%SNIPPET_ReturnItems%% |\n| %%GLOBAL_EmailFooter%% |",
                          "header": {
                            "anchor": "return-confirmation-email-template"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Checkout Styling",
                    "route": {
                      "path": "/checkout-styling"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Checkout Styling</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3>On This Page</h3>\n\t<ul>\n\t\t<li><a href=\"#customization-options-restrictions\">Customization Options/Restrictions</a></li>\n\t\t<li><a href=\"#configuring-desktop-viewport\">Configuring the Desktop Viewport</a></li>\n    <li><a href=\"#deploying-custom-css\">Deploying Custom CSS</a></li>\n    <li><a href=\"#classes-provided\">Classes Provided</a></li>\n    <li><a href=\"#css-skeleton\">CSS Skeleton</a></li>\n\t\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "To support stores that enable BigCommerce's Optimized One-Page Checkout feature, you can customize the Optimized Checkout page's styling within your theme. You do this by adding custom CSS to the `optimized-checkout-webdav.css` template file that we provide. You can copy the CSS [below](#css-skeleton)."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "success",
                            "body": "Although you will see references to \"Stencil\" functions throughout this template file's CSS, this version of the CSS is designed to be fully compatible with Blueprint themes.",
                            "title": "Function Names"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Customization Options/Restrictions \n\nAs a theme developer, you are free to change classes' contents – but do not nest elements, nor change any class names. \n\nThe structure and class naming are reserved because each class here maps to multiple Optimized Checkout elements. So renaming would break updates available in future Optimized Checkout enhancements.\n",
                          "header": {
                            "anchor": "customization-options-restrictions"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Configuring the Desktop Viewport \n\nWithin the CSS file, to set up Optimized Checkout's responsive features, you should configure the following breakpoint to define your preferred desktop viewport size:\n",
                          "header": {
                            "anchor": "configuring-desktop-viewport"
                          }
                        },
                        {
                          "type": "code",
                          "data": "\n// TODO:\n// Configure media query to be 'desktop' breakpoint size\n// --\n@media (min-width: 801px) {\n    text-align: stencilString(\"optimizedCheckout-logo-position\");\n}",
                          "config": {
                            "mode": "css"
                          }
                        },
                        {
                          "type": "text",
                          "data": "For other customization options, please see the class descriptions [below](#classes-provided).\n"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Deploying Custom CSS \n\nTo deploy your custom CSS to a BigCommerce store, you will need to upload your `optimized-checkout-webdav.css` file (once customized) via WebDAV. \n\nFor a general overview of the process, please see [this support article](https://support.bigcommerce.com/articles/Public/Accessing-and-Customizing-Template-Files/). Place your customized `optimized-checkout-webdav.css` file directly within WebDAV's `/content/` folder.\n\nFor details on interacting with WebDAV, please see [this article](https://support.bigcommerce.com/articles/Public/Connecting-to-WebDav).",
                          "header": {
                            "anchor": "deploying-custom-css"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Classes Provided \n\nBelow is a summary of the classes provided in the template CSS, with corresponding page elements that they style. (These class names and mappings are subject to change, so please see the inline comments embedded in the file itself.)",
                          "header": {
                            "anchor": "classes-provided"
                          }
                        },
                        {
                          "type": "text",
                          "data": "| Class | Styles This Optimized One-Page Checkout Element: |\n|||\n| .optimizedCheckout-header | Page header. |\n| .optimizedCheckout-headingPrimary | Top-level headings. |\n| .optimizedCheckout-headingSecondary | Certain lower-level elements, such as descriptions of cart items. |\n| .optimizedCheckout-overlay | Shipping Method box. |\n| .optimizedCheckout-contentPrimary | Body text in the desktop `Order Summary`/`Order Confirmation` (cart contents); drop-down-list items; and text that summarizes completed steps. |\n| .optimizedCheckout-contentSecondary | Text labels on check boxes, and lower-level text in the desktop Order Summary. |\n| .optimizedCheckout-button--primary | `CONTINUE` button and final `PAY` button. |\n| .optimizedCheckout-button--secondary | `Edit` buttons.\n| .optimizedCheckout-orderSummary | Colors in the `Order Summary` mobile drawer/modal.\n| .optimizedCheckout-step | Large step-number indicators on the page's left side. |\n| .optimizedCheckout-form-label | Styles form fields like `Email Address` – the field's text-label color. | \n| .optimizedCheckout-form-input | Styles form fields like `Email Address` – the entry box's background and border colors. |"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## CSS Skeleton \n\nYou can copy and modify the template `optimized-checkout-webdav.css` file's current contents directly from this documentation, below: ",
                          "header": {
                            "anchor": "css-skeleton"
                          }
                        },
                        {
                          "type": "code",
                          "data": "/* \n// =============================================================================\n// Stencil Checkout - Customize the Optimized Single-Page Checkout experience\n// =============================================================================\n*/\n\n/*\n// =============================================================================\n//\n// IMPORTANT DISCLAIMER\n// Please do not nest elements within class selectors, and do not use class selectors other than those given below.\n// Future support is guaranteed only if class selectors' structure and naming are left unchanged.\n//\n// =============================================================================\n*/\n\n\n/*\n// Header Section\n// Background, Logo Position\n// --\n*/\n\n.optimizedCheckout-header {\n    background-color: stencilColor(\"optimizedCheckout-header-backgroundColor\");\n    background-image: url(stencilImage('optimizedCheckout-backgroundImage', 'optimizedCheckout-backgroundImage-size'));\n    background-size: cover;\n}\n\n/*\n// TODO:\n// Configure media query to be 'desktop' breakpoint size\n// --\n*/\n\n@media (min-width: 801px) {\n    .optimizedCheckout-header {\n        text-align: stencilString(\"optimizedCheckout-logo-position\");\n    }\n}\n\n/*\n// Primary and Secondary Headings\n// Text Color & Typography\n//\n// .optimizedCheckout-headingPrimary styles top-level headings.\n//\n// .optimizedCheckout-headingSecondary styles certain lower-level elements, such as descriptions of cart items.\n// --\n*/\n\n.optimizedCheckout-headingPrimary {\n    color: stencilColor(\"optimizedCheckout-headingPrimary-color\");\n    font-family: stencilFontFamily(\"optimizedCheckout-headingPrimary-font\"), Arial, Helvetica, sans-serif;\n    font-weight: stencilFontWeight(\"optimizedCheckout-headingPrimary-font\");\n}\n\n.optimizedCheckout-headingSecondary {\n    color: stencilColor(\"optimizedCheckout-headingSecondary-color\");\n    font-family: stencilFontFamily(\"optimizedCheckout-headingSecondary-font\"), Arial, Helvetica, sans-serif;\n    font-weight: stencilFontWeight(\"optimizedCheckout-headingSecondary-font\");\n}\n\n/*\n// Body\n// Background & Shipping Method Overlay\n// --\n*/\n\nbody {\n    background-color: stencilColor(\"optimizedCheckout-body-backgroundColor\");\n}\n\n.optimizedCheckout-overlay {\n    background-color: stencilColor(\"optimizedCheckout-body-backgroundColor\");\n}\n\n/*\n// Primary & Secondary Content\n// Text Color & Typography\n//\n// .optimizedCheckout-contentPrimary styles body text in the Order Summary/Order Confirmation; \n// drop-down-list items; and text summarizing completed steps.\n//\n// .optimizedCheckout-contentSecondary styles check boxes' text labels, \n// and lower-level text in the Order Summary.\n// --\n*/\n\n.optimizedCheckout-contentPrimary {\n    color: stencilColor(\"optimizedCheckout-contentPrimary-color\");\n    font-family: stencilFontFamily(\"optimizedCheckout-contentPrimary-font\"), Arial, Helvetica, sans-serif;\n    font-weight: stencilFontWeight(\"optimizedCheckout-contentPrimary-font\");\n}\n\n.optimizedCheckout-contentSecondary {\n    color: stencilColor(\"optimizedCheckout-contentSecondary-color\");\n    font-family: stencilFontFamily(\"optimizedCheckout-contentSecondary-font\"), Arial, Helvetica, sans-serif;\n    font-weight: stencilFontWeight(\"optimizedCheckout-contentSecondary-font\");\n}\n\n/*\n// Primary Button\n// Background & Border & Text Color & Typography\n//\n// Styles the CONTINUE button for each step, & the final confirmation button.\n// --\n*/\n\n.optimizedCheckout-buttonPrimary {\n    background-color: stencilColor(\"optimizedCheckout-buttonPrimary-backgroundColor\");\n    border-color: stencilColor(\"optimizedCheckout-buttonPrimary-borderColor\");\n    color: stencilColor(\"optimizedCheckout-buttonPrimary-color\");\n    font-family: stencilFontFamily(\"optimizedCheckout-buttonPrimary-font\"), Arial, Helvetica, sans-serif;\n    font-weight: stencilFontWeight(\"optimizedCheckout-buttonPrimary-font\");\n}\n\n.optimizedCheckout-buttonPrimary:focus,\n.optimizedCheckout-buttonPrimary:hover {\n    background-color: stencilColor(\"optimizedCheckout-buttonPrimary-backgroundColorHover\");\n    border-color: stencilColor(\"optimizedCheckout-buttonPrimary-borderColorHover\");\n    color: stencilColor(\"optimizedCheckout-buttonPrimary-colorHover\");\n}\n\n.optimizedCheckout-buttonPrimary:active {\n    background-color: stencilColor(\"optimizedCheckout-buttonPrimary-backgroundColorActive\");\n    border-color: stencilColor(\"optimizedCheckout-buttonPrimary-borderColorActive\");\n    color: stencilColor(\"optimizedCheckout-buttonPrimary-colorActive\");\n}\n\n/*\n// Secondary Button\n// Background & Border & Text Color & Typography\n//\n// Styles the EDIT button for each step.\n// --\n*/\n\n.optimizedCheckout-buttonSecondary {\n    background-color: stencilColor(\"optimizedCheckout-buttonSecondary-backgroundColor\");\n    border-color: stencilColor(\"optimizedCheckout-buttonSecondary-borderColor\");\n    color: stencilColor(\"optimizedCheckout-buttonSecondary-color\");\n    font-family: stencilFontFamily(\"optimizedCheckout-buttonSecondary-font\"), Arial, Helvetica, sans-serif;\n    font-weight: stencilFontWeight(\"optimizedCheckout-buttonSecondary-font\");\n}\n\n/*\n// Links\n// Text Color & Typography\n// --\n*/\n\na {\n    color: stencilColor(\"optimizedCheckout-link-color\");\n    font-family: stencilFontFamily(\"optimizedCheckout-link-font\"), Arial, Helvetica, sans-serif;\n    font-weight: stencilFontWeight(\"optimizedCheckout-link-font\");\n}\n\n/*\n// Order Summary (Mobile Drawer & Modal)\n// Background\n// --\n*/\n\n.optimizedCheckout-orderSummary {\n    background-color: stencilColor(\"optimizedCheckout-orderSummary-backgroundColor\");\n}\n\n/*\n// Checkout Steps\n// Background & Text Color\n//\n// Styles the large step-number indicators on the page's left side.\n// --\n*/\n\n.optimizedCheckout-step {\n    background-color: stencilColor(\"optimizedCheckout-step-backgroundColor\");\n}\n\n.optimizedCheckout-step::before {\n    color: stencilColor(\"optimizedCheckout-step-text\");\n}\n\n.optimizedCheckout-step svg {\n    fill: stencilColor(\"optimizedCheckout-step-text\");\n}\n\n/*\n// Form Labels\n// Text Color\n//\n// Styles text labels on form fields.\n// --\n*/\n\n.optimizedCheckout-form-label {\n    color: stencilColor(\"optimizedCheckout-form-text\");\n}\n\n/*\n// Form Input\n// Background & Border Color\n//\n// Styles form fields.\n// --\n*/\n\n.optimizedCheckout-form-input {\n    background-color: stencilString(\"optimizedCheckout-formField-backgroundColor\");\n    border-color: stencilColor(\"optimizedCheckout-formField-borderColor\");\n}",
                          "config": {
                            "mode": "css"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Blueprint Reference",
              "route": {
                "path": "/blueprint-reference"
              },
              "data": {
                "children": [
                  {
                    "title": "Layouts",
                    "route": {
                      "path": "/blueprint-layouts"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "text",
                          "data": "# 403 Layout \n\n`403.html`\n\nShown when a customer does not have the permissions necessary to view a particular category, product or web page.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n\n|||\n|||\n| %%GLOBAL_Contact%% |\n\n# 404 Layout \n\n`404.html`\n\nShown when a customer accesses an invalid URL (such as an old removed product) or there is a typo in the URL they’re viewing.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Account Addressbook Layout \n\n`account_addressbook.html`\n\nA list of shipping addresses (found under the My Account > Address Book menu) that the customer currently has as well as edit/remove links.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.ChooseShippingAddress%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n# Account Downloaditem Layout \n\n`account_downloaditem.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountDownloadItemsBreadcrumb%% |\n| %%Panel.AccountDownloadItems%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_DownloadTitle%% |\n\n# Account Inbox Layout \n\n`account_inbox.html`\n\nThe list of order messages the customer has associated with any of their past orders and the “new order message” form for submitting a new order message.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountInbox%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n# Account New Return Layout \n\n`account_new_return.html`\n\nThe new return request/submission page.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountNewReturnBreadcrumb%% |\n| %%Panel.AccountNewReturnProducts%% |\n| %%Panel.AccountNewReturnInfo%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_HideErrorMessage%% |\n| %%GLOBAL_ErrorMessage%% |\n\n# Account Order Layout \n\n`account_order.html`\n\nShown when a customer is viewing the details of a past order they’ve placed on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountOrder%% |\n| %%Panel.AccountOrderLinks%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n# Account Orders Layout \n\n`account_orders.html`\n\nA list of previously completed orders placed on the store by the customer.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountOrders%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n# Account Orderstatus Layout \n\n`account_orderstatus.html`\n\nA list of currently pending orders placed on the store by the customer.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountOrderStatus%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n# Account Recentitems Layout \n\n`account_recentitems.html`\n\nA list of products recently viewed on the store by the customer.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountRecentItems%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n# Account Returns Layout \n\n`account_returns.html`\n\nA list of previously submitted returns requests by the customer.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountReturns%% |\n| %%Panel.AccountReturns%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n# Account Saved Return Layout \n\n`account_saved_return.html`\n\nShown after a customer successfully submits a new returns request on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideReturnInstructions%% |\n| %%GLOBAL_ReturnInstructions%% |\n\n# Account Layout \n\n`account.html`\n\nThe “My Account” welcome page with an explanation on each of the sections available for the customer.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.SideAccountStoreCredit%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideMessagesMenu%% |\n| %%GLOBAL_HideReturnRequestsMenu%% |\n| %%GLOBAL_HideWishlist%% |\n\n# Createaccount Layout \n\n`createaccount.html`\n\nThe account creation/signup form where customers can create an account on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.CreateAccountBreadcrumb%% |\n| %%Panel.CreateAccountForm%% |\n| %%Panel.Footer%% |\n\n# Createaccount Thanks Layout \n\n`createaccount_thanks.html`\n\nA thank you page shown after the customer has successfully registered an account on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_Continue%% |\n| %%GLOBAL_ContinueLink%% |\n\n# Editaccount Layout \n\n`editaccount.html`\n\nShown in the “My Account” section of the store when a customer chooses to edit their account.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.EditAccountBreadcrumb%% |\n| %%Panel.EditAccountForm%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Bottom Layout \n\n`bottom.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Brands Layout \n\n`brands.html`\n\nA list of products in a particular brand, or if no brand is specified, a list of brands configured in the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.BrandBreadcrumb%% |\n| %%Panel.BrandContent%% |\n| %%Panel.SideBrandTagCloud%% |\n| %%Panel.SideShopByBrandFull%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Cart Layout \n\n`cart.html`\n\nThe “View Cart” page showing the contents of the current customers cart.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.CartBreadcrumb%% |\n| %%Panel.CartHeader%% |\n| %%Panel.CartStatusMessage%% |\n| %%Panel.CartContent%% |\n| %%Panel.SuggestiveCartContent%% |\n| %%Panel.SideCouponCodeBox%% |\n| %%Panel.SideGiftCertificateCodeBox%% |\n| %%Panel.SideProductRecentlyViewed%% |\n| %%Panel.SideTopSellers%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Category Layout \n\n`category.html`\n\nA list of products or sub categories that exist within a particular category.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideCategoryShopByPrice%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideLiveChatServices%% |\n| %%Panel.CategoryBreadcrumb%% |\n| %%Panel.CategoryHeading%% |\n| %%Panel.CategoryPagingTop%% |\n| %%Panel.CategoryContent%% |\n| %%Panel.CategoryPagingBottom%% |\n| %%Panel.SideCategoryTopSellers%% |\n| %%Panel.SideCategoryPopularProducts%% |\n| %%Panel.SideCategoryNewProducts%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ExtraCategoryClass%% |\n| %%GLOBAL_HideRightColumn%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Checkout Address Layout \n\n`checkout_address.html`\n\nThe billing/shipping address form shown as the second step of the checkout process.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.ChooseBillingAddress%% |\n| %%Panel.ChooseShippingAddress%% |\n| %%Panel.CheckoutNewAddressForm%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n\n# Checkout Confirm Layout \n\n`checkout_confirm.html`\n\nThe order confirmation page (last page of the multi-page checkout) showing a summary of the order.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.ConfirmOrder%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n\n# Checkout Express Layout \n\n`checkout_express.html`\n\nThe express single-page checkout.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_LoginMessage%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_CollapsedStepClassBillingAddress%% |\n| %%GLOBAL_ExpressCheckoutStepBillingAddress%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_CollapsedStepClassShippingAddress%% |\n| %%GLOBAL_ExpressCheckoutHideShippingAddress%% |\n| %%GLOBAL_ExpressCheckoutStepShippingAddress%% |\n| %%GLOBAL_CollapsedStepClassShippingProvider%% |\n| %%GLOBAL_ExpressCheckoutHideShippingProviders%% |\n| %%GLOBAL_ExpressCheckoutStepShippingProvider%% |\n| %%GLOBAL_CollapsedStepClassConfirmation%% |\n| %%GLOBAL_ExpressCheckoutStepConfirmation%% |\n| %%GLOBAL_CollapsedStepClassPaymentDetails%% |\n| %%GLOBAL_ExpressCheckoutHidePaymentDetails%% |\n| %%GLOBAL_ExpressCheckoutStepPaymentDetails%% |\n| %%GLOBAL_CustomCheckoutFormNewAccount%% |\n| %%GLOBAL_CustomCheckoutFormBillingAddress%% |\n| %%GLOBAL_CustomCheckoutFormShippingAddress%% |\n| %%GLOBAL_ExpressCheckoutSignedIn%% |\n| %%GLOBAL_ExpressCheckoutDigitalOrder%% |\n| %%GLOBAL_GoToStep%% |\n| %%GLOBAL_FormFieldRequiredJS%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_CollapsedStepClassAccountDetails%% |\n| %%GLOBAL_ExpressCheckoutHideAccountDetails%% |\n| %%GLOBAL_ExpressCheckoutStepAccountDetails%% |\n| %%GLOBAL_HideGuestCheckoutOptions%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideRegisteredCheckoutOptions%% |\n| %%GLOBAL_IMG_PATH%% |\n\n# Checkout Payment Layout \n\n`checkout_payment.html`\n\nThe payment details collection form shown in the multi-page checkout. This page will be shown if the selected payment method has an additional form (such as one for requesting credit card details)\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PaymentFormContent%% |\n\n# Checkout Shipper Layout \n\n`checkout_shipper.html`\n\nThe shipping provider selection page shown for the multi-page checkout.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.ChooseShippingProvider%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n\n# Checkout Layout \n\n`checkout.html`\n\nThe first page of the standard multi-page checkout shown for guests asking them to either login, create an account or checkout as a guest.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideCheckoutGuest%% |\n| %%GLOBAL_HideCheckoutRegistrationRequired%% |\n| %%GLOBAL_HideLoginMessage%% |\n| %%GLOBAL_MessageClass%% |\n| %%GLOBAL_LoginMessage%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Compare Layout \n\n`compare.html`\n\nShown when a customer chooses to compare one or more products with each other.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.CompareBreadcrumb%% |\n| %%Panel.CompareContent%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Default Layout \n\n`default.html`\n\nThe default index page of the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SidePopularVendors%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideLiveChatServices%% |\n| %%Panel.HomeFeaturedProducts%% |\n| %%Panel.HomeNewProducts%% |\n| %%Panel.HomeRecentBlogs%% |\n| %%Panel.SideCartContents%% |\n| %%Panel.SideTopSellers%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SidePopularProducts%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Error Layout \n\n`error.html`\n\nA generic page that can be shown whenever there is an error message on the store and no additional content on the page needs to be shown.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ErrorMessage%% |\n| %%GLOBAL_ErrorDetails%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Giftcertificates Balance Layout \n\n`giftcertificates_balance.html`\n\nAllows customers to check the remaining balance (and shows the remaining balance) of a gift certificate.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.GiftCertificatesMenu%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.GiftCertificateBalanceRemaining%% |\n| %%Panel.CheckGiftCertificateBalance%% |\n| %%Panel.Footer%% |\n\n# Giftcertificates Redeem Layout \n\n`giftcertificates_redeem.html`\n\nThe page shown containing instructions on how to redeem a gift certificate during the checkout process.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.GiftCertificatesMenu%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.RedeemGiftCertificate%% |\n| %%Panel.Footer%% |\n\n# Giftcertificates Layout \n\n`giftcertificates.html`\n\nShown when a customer clicks the “Gift Certificates” link on the top menu of the store. Displays how to purchase/use a gift certificate.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.GiftCertificatesMenu%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.PurchaseGiftCertificate%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Ideal Layout \n\n`ideal.html`\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideIdealError%% |\n| %%GLOBAL_IdealErrorMessage%% |\n| %%GLOBAL_IdealPaymentForm%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Invoice Print Layout \n\n`invoice_print.html`\n\nA printable invoice for an order that a customer can print from the front end of the store.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PrintableInvoiceScript%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_PrintInvoiceStylesheetPath%% |\n| %%GLOBAL_PrintableInvoiceList%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Login Layout \n\n`login.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.LoginBreadcrumb%% |\n| %%Panel.LoginForm%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Maintenance Layout \n\n`maintenance.html`\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_MessageText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Message Layout \n\n`message.html`\n\nShown when a page simply needs to show a particular message to the user.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_MessageTitle%% |\n| %%GLOBAL_MessageText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# News Layout \n\n`news.html`\n\nThe page that shows an individual news item on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.NewsBreadcrumb%% |\n| %%Panel.NewsContent%% |\n| %%Panel.NewsComments%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Newsletter Subscribe Layout \n\n`newsletter_subscribe.html`\n\nThe thank you page shown after a visitor subscribes to the store newsletter.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SidePopularProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.NewsletterBreadcrumb%% |\n| %%Panel.NewsletterContent%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Order Layout \n\n`order.html`\n\nThe “Thank you for your order” page shown after an order is successfully placed on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideTopSellers%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CustomerName%% |\n| %%GLOBAL_HideError%% |\n| %%GLOBAL_ErrorMessage%% |\n| %%GLOBAL_HidePaidOrderConfirmation%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_HidePhysicalOrderConfirmation%% |\n| %%GLOBAL_PhysicalOrderConfirmation%% |\n| %%GLOBAL_HideDigitalOrderConfirmation%% |\n| %%GLOBAL_DigitalOrderConfirmation%% |\n| %%GLOBAL_HideDigitalOrderDownloadLink%% |\n| %%GLOBAL_HideAwaitingPayment%% |\n| %%GLOBAL_HideSuccess%% |\n| %%GLOBAL_OrderConfirmationDetails%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_ContinueShoppingOnStoreName%% |\n| %%GLOBAL_ConversionCode%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Packing Slip Print Layout \n\n`packing_slip_print.html`\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_BillingAddress%% |\n| %%GLOBAL_CustomerEmail%% |\n| %%GLOBAL_HideBillingPhone%% |\n| %%GLOBAL_STYLE_PATH%% |\n| %%GLOBAL_BillingPhone%% |\n| %%GLOBAL_ShippingAddress%% |\n| %%GLOBAL_HideShippingPhone%% |\n| %%GLOBAL_ShippingPhone%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_HeaderLogo%% |\n| %%GLOBAL_OrderDate%% |\n| %%GLOBAL_HideShippingMethod%% |\n| %%GLOBAL_ShippingMethod%% |\n| %%GLOBAL_HideShippingDate%% |\n| %%GLOBAL_DateShipped%% |\n| %%GLOBAL_HideTrackingNo%% |\n| %%GLOBAL_TrackingNo%% |\n| %%GLOBAL_ProductsTable%% |\n| %%GLOBAL_HideComments%% |\n| %%GLOBAL_Comments%% |\n| %%GLOBAL_PackingSlipTitle%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Page Layout \n\n`page.html`\n\nThe layout file shown when viewing a web page created on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideSubPageList%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SidePopularVendors%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideLiveChatServices%% |\n| %%Panel.PageBreadcrumb%% |\n| %%Panel.PageContent%% |\n| %%Panel.PageComments%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Forgotpassword Layout \n\n`forgotpassword.html`\n\nThe page shown when a customer clicks the “Forgot your password?” link on the login page. Used to reset their account password.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.ForgotPasswordBreadcrumb%% |\n| %%Panel.ForgotPasswordForm%% |\n| %%Panel.Footer%% |\n\n# Getnewpassword Layout \n\n`getnewpassword.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.GetNewPasswordBreadcrumb%% |\n| %%Panel.GetNewPasswordForm%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Authorizenet Layout \n\n`authorizenet.html`\n\nThe Authorize.net payment module form. This form is included on both the multistep and express checkout pages.\n\n## Available Panels \n|||\n|||\n| %%Panel.AuthorizeNetPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AuthorizeNetName%% |\n| %%GLOBAL_AuthorizeNetNum%% |\n| %%GLOBAL_AuthorizeNetMonths%% |\n| %%GLOBAL_AuthorizeNetYears%% |\n| %%GLOBAL_AuthorizeNetHideCVV2%% |\n| %%GLOBAL_AuthorizeNetHideCVV2%% |\n| %%GLOBAL_AuthorizeNetCCV2%% |\n| %%GLOBAL_OrderAmount%% |\n| %%GLOBAL_HideAuthorizeNetError%% |\n| %%GLOBAL_AuthorizeNetErrorMessage%% |\n\n# Ccmanual Layout \n\n`ccmanual.html`\n\nThe credit card (manual) payment method credit card details form.\n\n## Available Panels \n|||\n|||\n| %%Panel.CCManualPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CCName%% |\n| %%GLOBAL_CCTypes%% |\n| %%GLOBAL_CCNum%% |\n| %%GLOBAL_CCCVV2%% |\n| %%GLOBAL_CCIssueNo%% |\n| %%GLOBAL_CCMonths%% |\n| %%GLOBAL_CCYears%% |\n| %%GLOBAL_HideCCManualError%% |\n| %%GLOBAL_CCIssueDateMonths%% |\n| %%GLOBAL_CCIssueDateYears%% |\n| %%GLOBAL_CCErrorMessage%% |\n| %%GLOBAL_OrderAmount%% |\n\n# Eselectplusdp Layout \n\n`eselectplusdp.html`\n\nThe payment details collection form for the eSelect DirectPost payment module.\n\n## Available Panels \n|||\n|||\n| %%Panel.eSelectPlusDPPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_eSelectPlusDPNum%% |\n| %%GLOBAL_eSelectPlusDPMonths%% |\n| %%GLOBAL_eSelectPlusDPYears%% |\n| %%GLOBAL_eSelectPlusDPCCV2%% |\n| %%GLOBAL_eSelectPlusDPCardHolderName%% |\n| %%GLOBAL_eSelectPlusDPBillStNum%% |\n| %%GLOBAL_eSelectPlusDPBillStName%% |\n| %%GLOBAL_eSelectPlusDPBillZip%% |\n| %%GLOBAL_HideeSelectPlusDPError%% |\n| %%GLOBAL_OrderAmount%% |\n| %%GLOBAL_eSelectPlusDPErrorMessage%% |\n\n# Eway Layout\n\n`eway.html`\n\nShown when a customer chooses to pay via eWay when making a purchase on the store.\n\n## Available Panels \n|||\n|||\n| %%Panel.EWayPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_EWayName%% |\n| %%GLOBAL_EWayMonths%% |\n| %%GLOBAL_EWayYears%% |\n| %%GLOBAL_EWayHideCardCode%% |\n| %%GLOBAL_EWayHideCardCode%% |\n| %%GLOBAL_EWayCardCode%% |\n| %%GLOBAL_OrderAmount%% |\n| %%GLOBAL_HideEWayError%% |\n| %%GLOBAL_EWayErrorMessage%% |\n\n# Genericcreditcard Layout \n\n`genericcreditcard.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.GenericCreditCardPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideCreditCardError%% |\n| %%GLOBAL_CCTypes%% |\n| %%GLOBAL_CreditCardName%% |\n| %%GLOBAL_CreditCardNum%% |\n| %%GLOBAL_CreditCardIssueNo%% |\n| %%GLOBAL_CreditCardIssueDateMonths%% |\n| %%GLOBAL_CreditCardIssueDateYears%% |\n| %%GLOBAL_HideCreditCardError%% |\n| %%GLOBAL_CreditCardMonths%% |\n| %%GLOBAL_CreditCardYears%% |\n| %%GLOBAL_CreditCardHideCardCode%% |\n| %%GLOBAL_CreditCardHideCardCode%% |\n| %%GLOBAL_CreditCardCardCode%% |\n| %%GLOBAL_OrderAmount%% |\n| %%GLOBAL_CreditCardErrorMessage%% |\n| %%GLOBAL_AdditionalPaymentPageContents%% |\n\n# NMI Layout \n\n`nmi.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.NMIPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NMIName%% |\n| %%GLOBAL_NMINum%% |\n| %%GLOBAL_NMIMonths%% |\n| %%GLOBAL_NMIYears%% |\n| %%GLOBAL_NMIHideCVV2%% |\n| %%GLOBAL_NMIHideCVV2%% |\n| %%GLOBAL_NMICCV2%% |\n| %%GLOBAL_OrderAmount%% |\n| %%GLOBAL_HideNMIError%% |\n| %%GLOBAL_NMIErrorMessage%% |\n\n# PayflowPro Layout \n\n`payflowpro.html`\n\nThe payment details (credit card entry) form shown when a customer chooses to pay via PayPal PayFlow Pro.\n\n## Available Panels \n|||\n|||\n| %%Panel.PayflowProPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PayflowProName%% |\n| %%GLOBAL_PayflowProNum%% |\n| %%GLOBAL_PayflowProMonths%% |\n| %%GLOBAL_PayflowProYears%% |\n| %%GLOBAL_PayflowProHideCVV2%% |\n| %%GLOBAL_PayflowProHideCVV2%% |\n| %%GLOBAL_PayflowProCCV2%% |\n| %%GLOBAL_OrderAmount%% |\n| %%GLOBAL_HidePayflowProError%% |\n| %%GLOBAL_PayflowProErrorMessage%% |\n\n# Valuteccard Layout \n\n`valuteccard.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.ValutecCardPaymentJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideCreditCardError%% |\n| %%GLOBAL_CreditCardNum%% |\n| %%GLOBAL_OrderAmount%% |\n| %%GLOBAL_HideCreditCardError%% |\n| %%GLOBAL_CreditCardErrorMessage%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Product Layout\n\n`product.html`\n\n## Available Panels\n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideLiveChatServices%% |\n| %%Panel.ProductBreadcrumb%% |\n| %%Panel.ProductDetails%% |\n| %%Panel.ProductTabs%% |\n| %%Panel.ProductDescription%% |\n| %%Panel.ProductVideos%% |\n| %%Panel.ProductWarranty%% |\n| %%Panel.ProductOtherDetails%% |\n| %%Panel.SimilarProductsByTag%% |\n| %%Panel.ProductByCategory%% |\n| %%Panel.ProductVendorsOtherProducts%% |\n| %%Panel.ProductReviews%% |\n| %%Panel.SimilarProductsByCustomerViews%% |\n| %%Panel.SideCurrencySelector%% |\n| %%Panel.SideProductAddToWishList%% |\n| %%Panel.SideProductRelated%% |\n| %%Panel.SideProductRecentlyViewed%% |\n| %%Panel.Footer%% |\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n\n# Product Comments Layout\n\n`product_comments.html`\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideSectionSeparator%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_throttleToken%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_ReviewRating5%% |\n| %%GLOBAL_ReviewRating4%% |\n| %%GLOBAL_ReviewRating3%% |\n| %%GLOBAL_ReviewRating2%% |\n| %%GLOBAL_ReviewRating1%% |\n| %%GLOBAL_RevTitle%% |\n| %%GLOBAL_RevText%% |\n| %%GLOBAL_HideReviewEmail%% |\n| %%GLOBAL_CustomerEmail%% |\n| %%GLOBAL_HideReviewEmail%% |\n| %%GLOBAL_CustomerName%% |\n| %%GLOBAL_HideReviewCaptcha%% |\n| %%GLOBAL_HideReviewCaptcha%% |\n| %%GLOBAL_ProductReviewFlashMessages%% |\n| %%GLOBAL_ReCaptchaAPIKeyPublic%% |\n| %%GLOBAL_ReCaptchaAPIKeyPublic%% |\n| %%GLOBAL_HideNoReviewsMessage%% |\n| %%GLOBAL_NoReviews%% |\n| %%GLOBAL_ProductReviewPaging%% |\n| %%GLOBAL_ProductReviewList%% |\n| %%GLOBAL_ProductReviewPaging%% |\n| %%GLOBAL_HideReviewCaptcha%% |\n| %%GLOBAL_AutoShowReviewForm%% |\n| %%GLOBAL_JumpToReviews%% |\n\n# Product Video Layout\n\n`product_video.html`\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_VideoId%% |\n| %%GLOBAL_STYLE_PATH%% |\n| %%GLOBAL_VideoId%% |\n\n#  Productimage Layout\n\n`productimage.html`\n\nThe popup window used to display product images.\n\n## Available Panels \n|||\n|||\n| %%Panel.ProductImagePopup%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CurrentImageIndex%% |\n| %%GLOBAL_ProductMaxImageHeight%% |\n| %%GLOBAL_ProductMaxImageWidth%% |\n| %%GLOBAL_VariationImage%% |\n| %%GLOBAL_RuleImage%% |\n| %%GLOBAL_ProdImageJavascript%% |\n| %%GLOBAL_popupCssPath%% |\n| %%GLOBAL_jQueryPath%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Search Layout \n\n`search.html`\n\nThe page that either shows the form to search for products or product search results if a search is currently being performed.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SearchPageHeader%% |\n| %%Panel.SearchPage%% |\n| %%Panel.Footer%% |\n\n# Search Tips Layout \n\n`search_tips.html`\n\nThe page that shows tips and tricks for using the product search.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SearchTips%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Shippingaddressform Layout \n\n`shippingaddressform.html`\n\nShown when a customer wishes to edit a shipping/billing address in their address book from the “My Account” section.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.AccountBreadcrumb%% |\n| %%Panel.ShippingAddressForm%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Sitemap Layout \n\n`sitemap.html`\n\n### Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SitemapBreadcrumb%% |\n| %%Panel.SitemapContent%% |\n| %%Panel.SideBrandTagCloud%% |\n| %%Panel.SideShopByBrandFull%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Tags Layout \n\n`tags.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.SideLiveChatServices%% |\n| %%Panel.Breadcrumb%% |\n| %%Panel.ProductTagCloud%% |\n| %%Panel.TagProducts%% |\n| %%Panel.Footer%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Top Layout \n\n`top.html`\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideShopByBrand%% |\n| %%Panel.SideNewsletterBox%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Unsubscribe Layout\n\n`unsubscribe.html`\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_UnsubscribeTitle%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Wishlist Layout \n\n`wishlist.html`\n\nThe page shown when any action related to wishlists (adding items, managing wishlists etc) is shown.\n\n## Available Panels \n|||\n|||\n| %%Panel.HTMLHead%% |\n| %%Panel.Header%% |\n| %%Panel.WrapperBanner%% |\n| %%Panel.SideCategoryList%% |\n| %%Panel.SideNewProducts%% |\n| %%Panel.SideNewsletterBox%% |\n| %%Panel.WishListItems%% |\n| %%Panel.WishLists%% |\n| %%Panel.WishListAddForm%% |\n| %%Panel.SideAccountMenu%% |\n| %%Panel.SidePopularProducts%% |\n| %%Panel.Footer%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideRightMenu%% |"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Panels",
                    "route": {
                      "path": "/blueprint-panels"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "text",
                          "data": "# AccountDownloadItemsBreadcrumb Panel \n\nThe breadcrumb navigation shown when downloading digital items from an order.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_OrderId%% |\n\n# AccountDownloadItems Panel \n\nThe list of downloadable items in a digital order.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_DownloadIntro%% |\n\n# AccountInbox Panel \n\nA list of order messages in the customer’s account. Also includes the form to send a message relating to a past order placed on the store.\n\n##  Available Panels\n|||\n|||\n| AccountInbox |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideNoOrderMessage%% |\n| %%GLOBAL_HideInbox%% |\n| %%GLOBAL_HideInboxMessage%% |\n| %%GLOBAL_AccountInboxIntro%% |\n| %%GLOBAL_HideMessageSuccess%% |\n| %%GLOBAL_HideMessageError%% |\n\n# AccountNewReturnBreadcrumb Panel \n\nThe breadcrumb navigation menu.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_OrderId%% |\n\n# AccountNewReturnInfo Panel \n\nForm for entering details about the new return request such as the reason, action and comments.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ReturnReasonsList%% |\n| %%GLOBAL_HideReturnAction%% |\n| %%GLOBAL_HideReturnAction%% |\n| %%GLOBAL_ReturnActionsList%% |\n| %%GLOBAL_HideReturnForm%% |\n\n# AccountNewReturnProducts Panel \n\nA table of products in the particular order including choices to select the quantity of each item to return.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideReturnForm%% |\n\n# AccountOrderLinks Panel \n\nLinks shown on the right to submit a return request for this order or print a copy of the invoice for this order.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShowOrderActions%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_DisableReturnButton%% |\n| %%GLOBAL_OrderId%% |\n\n#  AccountOrderShipments Panel\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_LNG_OrderShipments%% |\n\n# AccountOrderStatus Panel \n\nThe list of pending orders placed on the store by the customer.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideNoOrderStatusMessage%% |\n| %%GLOBAL_HideOrderStatusList%% |\n\n# AccountOrder Panel \n\nThe details of the order (billing and shipping address as well as the products purchased)\n\n##  Available Panels\n|||\n|||\n| AccountOrder |\n| AccountOrder |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_OrderStatus%% |\n| %%GLOBAL_OrderDate%% |\n| %%GLOBAL_OrderTotal%% |\n| %%GLOBAL_BillingAddress%% |\n| %%GLOBAL_HideSingleShippingAddress%% |\n| %%GLOBAL_ShippingAddress%% |\n| %%GLOBAL_FlassMessage%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_HideItemDetailsHeader%% |\n| %%GLOBAL_OrderTotalRows%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_HideOrderComments%% |\n| %%GLOBAL_OrderComments%% |\n| %%GLOBAL_HideOrderStatus%% |\n\n# AccountOrders Panel \n\nThe list of previously placed orders on the store by the customer.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideNoOrdersMessage%% |\n| %%GLOBAL_HideOrderList%% |\n\n# AccountRecentItems Panel \n\nThe list of items that the customer has recently viewed on the store.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CompareLink%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_HideNoRecentItemsMessage%% |\n| %%GLOBAL_HideRecentItemList%% |\n\n# AccountReturns Panel \n\nThe list of submitted returns requests.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideReturnsList%% |\n| %%GLOBAL_HideNoReturnsMessage%% |"
                        },
                        {
                          "type": "text",
                          "data": "# BrandBreadcrumb Panel \n\nThe breadcrumb navigation menu.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AllBrandsLink%% |\n| %%GLOBAL_TrailBrandName%% |\n\n# BrandContent Panel \n\nThe contents of the brands page. Either the products in a particular brand or a list of brands in the store.\n\n## Available Panels \n|||\n|||\n| BrandContent |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CompareLink%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_TrailBrandName%% |\n\n# BrandProductListing Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_BrandsMessage%% |\n| %%GLOBAL_HideBrandProductListing%% |\n| %%GLOBAL_BrandProductListing%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CartContent Panel \n\nThe contents of the customers shopping cart and the bottom “Proceed to Checkout” button.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideCheckoutButton%% |\n| %%GLOBAL_CheckoutLink%% |\n| %%GLOBAL_OptimizerLinkFunction%% |\n| %%GLOBAL_CartCheckoutButtonOptimizerScriptTag%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_CartCheckoutButtonOptimizerNoScriptTag%% |\n| %%GLOBAL_HideMultipleAddressShipping%% |\n| %%GLOBAL_HideMultipleAddressShippingOr%% |\n| %%GLOBAL_AdditionalCheckoutButtons%% |\n| %%GLOBAL_KeepShoppingLink%% |\n| %%GLOBAL_KeepShoppingText%% |\n| %%GLOBAL_HideShoppingCartEmptyMessage%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_HideShoppingCartGrid%% |\n| %%GLOBAL_CartItemTotal%% |\n| %%GLOBAL_HideGiftWrappingTotal%% |\n| %%GLOBAL_GiftWrappingTotal%% |\n| %%GLOBAL_HideDiscountAmount%% |\n| %%GLOBAL_DiscountAmount%% |\n| %%GLOBAL_HideShoppingCartShippingEstimator%% |\n| %%GLOBAL_ShippingCountryList%% |\n| %%GLOBAL_ShippingHideStateList%% |\n| %%GLOBAL_ShippingStateList%% |\n| %%GLOBAL_AddressState%% |\n| %%GLOBAL_ShippingHideStateBox%% |\n| %%GLOBAL_ShippingZip%% |\n| %%GLOBAL_HideShoppingCartShippingCost%% |\n| %%GLOBAL_ShippingProvider%% |\n| %%GLOBAL_ShippingCost%% |\n| %%GLOBAL_HideShoppingCartHandlingCost%% |\n| %%GLOBAL_HandlingCost%% |\n| %%GLOBAL_Taxes%% |\n| %%GLOBAL_CartTotal%% |\n| %%GLOBAL_InclusiveTaxes%% |\n| %%GLOBAL_HideCartQuantityTextBox%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n\n# CartHeader Panel \n\nThe header of the cart contents page with the title and the top “Proceed to Checkout” button.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_CartCheckoutButtonOptimizerNoScriptTag%% |\n| %%GLOBAL_AdditionalCheckoutButtons%% |\n| %%GLOBAL_OptimizerLinkScript%% |\n| %%GLOBAL_CartCheckoutButtonControlScript%% |\n| %%GLOBAL_HideCheckoutButton%% |\n| %%GLOBAL_CheckoutLink%% |\n| %%GLOBAL_OptimizerLinkFunction%% |\n| %%GLOBAL_CartCheckoutButtonOptimizerScriptTag%% |\n\n# CartStatusMessage Panel \n\nIf an alternate status message is to be shown, the status message.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CartStatusMessage%% |\n\n# SuggestiveCartContent Panel \n\nDisplays recommended products after a product was added to the cart. This includes products that customers who purchased this product have also purchased, related products and popular products.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSuggestiveCartContent%% |\n| %%GLOBAL_SuggestedProductListing%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CategoryContent Panel \n\nThe list of products in the category being viewed on the store.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CompareButtonTop%% |\n| %%GLOBAL_DisplayMode%% |\n| %%GLOBAL_CategoryProductListing%% |\n| %%GLOBAL_CompareButton%% |\n| %%GLOBAL_CompareLink%% |\n| %%GLOBAL_CategoryContentFlashMessages%% |\n| %%GLOBAL_ListJS%% |\n| %%GLOBAL_CompareLink%% |\n| %%GLOBAL_CompareOnSubmit%% |\n\n# CategoryHeading Panel \n\nThe heading (category name) as well as the “sort” box for a particular category view.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CatDesc%% |\n| %%GLOBAL_CategoryDescriptionOptimizerNoScriptTag%% |\n| %%GLOBAL_CategoryNameOptimizerScriptTag%% |\n| %%GLOBAL_CatName%% |\n| %%GLOBAL_CategoryNameOptimizerNoScriptTag%% |\n| %%GLOBAL_CategoryDescriptionOptimizerScriptTag%% |\n\n# CategoryProductListing Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CategoryProductListing%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CheckGiftCertificateBalance Panel \n\nDisplays the form asking for the gift certificate code to check the balance of.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideExampleImage%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_BalanceTitle%% |\n| %%GLOBAL_HideTitle%% |\n| %%GLOBAL_HideGiftCertificateError%% |\n| %%GLOBAL_ErrorMessage%% |\n| %%GLOBAL_HideIntro%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ChooseBillingAddress Panel \n\n## Available Panels \n|||\n|||\n| ChooseBillingAddress |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CheckoutShippingTitle%% |\n| %%GLOBAL_CheckoutShippingIntro%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ChooseShippingAddress Panel \n\nIf the customer is logged in, this panel is shown containing the list of shipping addresses in their address book.\n\n## Available Panels \n|||\n|||\n| ChooseShippingAddress |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideTabSingle%% |\n| %%GLOBAL_CheckoutShippingIntro%% |\n| %%GLOBAL_HideTabMultiple%% |\n| %%GLOBAL_CheckoutMultiShippingIntro%% |\n| %%GLOBAL_CheckoutShippingTitle%% |\n| %%GLOBAL_HideShippingTabs%% |\n| %%GLOBAL_ActiveTabSingle%% |\n| %%GLOBAL_ActiveTabMultiple%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CompareContent Panel \n\nThe table showing the products being compared.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NumCompareItems%% |\n| %%GLOBAL_ComparisonHeading%% |\n| %%GLOBAL_HideTooManyProductsMessage%% |\n| %%GLOBAL_TooManyProductsMessage%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ConfirmOrder Panel \n\nThe order confirmation and payment method selection form.\n\n## Available Panels \n|||\n|||\n| ConfirmOrder |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CreditAlt%% |\n| %%GLOBAL_HidePaymentProviderList%% |\n| %%GLOBAL_PaymentProviders%% |\n| %%GLOBAL_HideOrderComments%% |\n| %%GLOBAL_OrderComments%% |\n| %%GLOBAL_HideOrderTermsAndConditions%% |\n| %%GLOBAL_HideTermsAndConditionsTextarea%% |\n| %%GLOBAL_OrderTermsAndConditions%% |\n| %%GLOBAL_AgreeTermsAndConditions%% |\n| %%GLOBAL_TermsAndConditionsLink%% |\n| %%GLOBAL_HideCheckoutError%% |\n| %%GLOBAL_HideMailingListInvite%% |\n| %%GLOBAL_HideMailingListInvite%% |\n| %%GLOBAL_NewsletterBoxIsTicked%% |\n| %%GLOBAL_HideOrderCheckBox%% |\n| %%GLOBAL_OrderBoxIsTicked%% |\n| %%GLOBAL_CheckoutErrorMsg%% |\n| %%GLOBAL_HideButtomPaymentButton%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_PaymentButtonSwitch%% |\n| %%GLOBAL_HideCheckoutSuccess%% |\n| %%GLOBAL_CheckoutSuccessMsg%% |\n| %%GLOBAL_HideConfirmOrderPage%% |\n| %%GLOBAL_BillingAddress%% |\n| %%GLOBAL_HideShippingDetails%% |\n| %%GLOBAL_ShippingAddress%% |\n| %%GLOBAL_totals%% |\n| %%GLOBAL_HideUseCoupon%% |\n| %%GLOBAL_RedeemTitle%% |\n| %%GLOBAL_RedeemIntro%% |\n| %%GLOBAL_HidePaymentOptions%% |\n| %%GLOBAL_HideUseStoreCredit%% |\n| %%GLOBAL_HideTopPaymentButton%% |\n| %%GLOBAL_HideUseStoreCredit%% |\n| %%GLOBAL_CheckoutStoreCreditWarning%% |\n| %%GLOBAL_HideLimitedCreditWarning%% |\n| %%GLOBAL_StoreCredit%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_HideLimitedCreditWarning%% |\n| %%GLOBAL_Remaining%% |\n| %%GLOBAL_HideRemainingStoreCredit%% |\n| %%GLOBAL_RemainingCredit%% |\n| %%GLOBAL_HideLimitedCreditPaymentOption%% |\n| %%GLOBAL_HideLimitedCreditWarning%% |\n| %%GLOBAL_StoreCreditPaymentProviders%% |\n| %%GLOBAL_CheckoutWith%% |\n| %%GLOBAL_HideCreditAltOptionList%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Footer Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_DesignModeHTML%% |\n| %%GLOBAL_QueryList%% |\n| %%GLOBAL_DesignModeScriptTag%% |\n| %%GLOBAL_LiveChatFooterCode%% |\n| %%GLOBAL_OptimizerTrackingScript%% |\n| %%GLOBAL_OptimizerConversionScript%% |\n| %%GLOBAL_OptimizerSetCookieScript%% |\n| %%GLOBAL_FooterScripts%% |\n| %%GLOBAL_DebugDetails%% |\n| %%GLOBAL_AllPricesAreInCurrency%% |\n| %%GLOBAL_Year%% |\n| %%GLOBAL_MobileSiteLink%% |\n| %%GLOBAL_PoweredBy%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Page Contact Form Layout \n\npage_contact_form.html\n\nThe form shown when a web page is configured as a “Contact Form” allowing users to submit a question/message to the store owner.\n\n## Available Panels \n|||\n|||\n| %%Panel.ContactFormJavaScript%% |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideFullName%% |\n| %%GLOBAL_ContactName%% |\n| %%GLOBAL_HideFullName%% |\n| %%GLOBAL_ContactEmail%% |\n| %%GLOBAL_HideCompanyName%% |\n| %%GLOBAL_ContactCompanyName%% |\n| %%GLOBAL_HideCompanyName%% |\n| %%GLOBAL_HidePhone%% |\n| %%GLOBAL_ContactPhone%% |\n| %%GLOBAL_HidePhone%% |\n| %%GLOBAL_HideOrderNo%% |\n| %%GLOBAL_ContactOrderNo%% |\n| %%GLOBAL_HideOrderNo%% |\n| %%GLOBAL_HideRMANo%% |\n| %%GLOBAL_ContactRMA%% |\n| %%GLOBAL_HideRMANo%% |\n| %%GLOBAL_ContactQuestion%% |\n| %%GLOBAL_HideFormError%% |\n| %%GLOBAL_HideCaptcha%% |\n| %%GLOBAL_HideCaptcha%% |\n| %%GLOBAL_CaptchaImage%% |\n| %%GLOBAL_ARSPanel%% |\n| %%GLOBAL_PageId%% |\n\n# CheckoutNewAddressForm Panel \n\nIf the customer is not logged in and checking out as a guest this panel is shown containing the fields to enter their billing/shipping address.\n\n## Available Panels \n|||\n|||\n| CheckoutNewAddressForm |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShipCustomFields%% |\n| %%GLOBAL_HideShippingOptions%% |\n| %%GLOBAL_HideShippingOptions%% |\n| %%GLOBAL_ShipToAddressChecked%% |\n| %%GLOBAL_ShipToBillingName%% |\n| %%GLOBAL_ShipAddressButtonText%% |\n| %%GLOBAL_CheckoutShippingTitle%% |\n| %%GLOBAL_ShipAddressButtonText_JS%% |\n| %%GLOBAL_HideErrors%% |\n| %%GLOBAL_ErrorMessage%% |\n| %%GLOBAL_ShippingFormAction%% |\n\n# CreateAccountForm Panel \n\nA form containing the fields necessary to create a customer account on the store.\n\n## Available Panels \n|||\n|||\n| CreateAccountForm |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideCreateAccountErrorMessage%% |\n| %%GLOBAL_ErrorMessage%% |\n| %%GLOBAL_CreateAccountEmailPassword%% |\n| %%GLOBAL_CreateAccountDetails%% |\n| %%GLOBAL_HideReviewCaptcha%% |\n| %%GLOBAL_HideReviewCaptcha%% |\n| %%GLOBAL_ReCaptchaAPIKeyPublic%% |\n| %%GLOBAL_ReCaptchaAPIKeyPublic%% |\n| %%GLOBAL_CreateAccountButtonText%% |\n| %%GLOBAL_CreateAccountHeading%% |\n| %%GLOBAL_HideCreateAccountIntroMessage%% |\n\n# EditAccountForm Panel \n\nForm shown allowing the customer to change the details (email address, password, name etc) of their registered account.\n\n## Available Panels \n|||\n|||\n| EditAccountForm |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideEditAccountSuccessMessage%% |\n| %%GLOBAL_StatusMessage%% |\n| %%GLOBAL_AccountCurrentEmail%% |\n| %%GLOBAL_AccountFirstName%% |\n| %%GLOBAL_AccountLastName%% |\n| %%GLOBAL_AccountCompanyName%% |\n| %%GLOBAL_AccountPhone%% |\n| %%GLOBAL_AccountFields%% |\n| %%GLOBAL_HideEditAccountIntroMessage%% |\n| %%GLOBAL_HideEditAccountErrorMessage%% |\n| %%GLOBAL_StatusMessage%% |\n\n# ForgotPasswordForm Panel \n\nThe form shown for the customer to enter their email address to have their password reset.\n\n## Available Panels \n|||\n|||\n| ForgotPasswordForm |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideForgotPasswordError%% |\n| %%GLOBAL_ErrorMessage%% |\n\n# GetNewPasswordForm Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CustomerId%% |\n| %%GLOBAL_ForgottenPasswordToken%% |\n| %%GLOBAL_CustomerEmailAddress%% |\n| %%GLOBAL_HideForgotPasswordError%% |\n| %%GLOBAL_ErrorMessage%% |\n\n# IdealPaymentForm Panel \n\n## Available Panels \n|||\n|||\n| IdealPaymentForm |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IdealIssuerOptions%% |\n\n# LoginForm Panel \n\nThe “Create an Account” and “Sign in to Your Account” options shown on the login page.\n\n## Available Panels \n|||\n|||\n| LoginForm |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideLoginNewAccountIntro%% |\n| %%GLOBAL_ExistingUserHeading%% |\n| %%GLOBAL_HideLoginMessage%% |\n| %%GLOBAL_MessageClass%% |\n| %%GLOBAL_LoginMessage%% |\n| %%GLOBAL_NewAccountHeading%% |\n| %%GLOBAL_HideNewCustomerButton%% |\n\n# ShippingAddressForm Panel \n\nThe form containing the fields for either editing or adding a shipping/billing address to the customer address book.\n\n## Available Panels \n|||\n|||\n| ShippingAddressForm |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShippingAddressFormAction%% |\n| %%GLOBAL_ShipId%% |\n| %%GLOBAL_ShipCustomFields%% |\n| %%GLOBAL_ShippingAddressFormTitle%% |\n| %%GLOBAL_HideAddShippingAddressIntroMessage%% |\n| %%GLOBAL_ShippingAddressFormIntro%% |\n| %%GLOBAL_HideAddShippingAddressMessage%% |\n| %%GLOBAL_Message%% |\n\n# CartEditProductFieldsForm Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_jQueryUIPath%% |\n| %%GLOBAL_MASTER_THEME_PATH%% |\n| %%GLOBAL_CustomizeProductTitle%% |\n| %%GLOBAL_ItemId%% |\n| %%SNIPPET_ProductFieldsList%% |\n| %%GLOBAL_ProductAttributeList%% |\n| %%LNG_Cancel%% |\n| %%LNG_Save%% |\n| %%LNG_EnterRequiredField%% |\n| %%LNG_InvalidFileTypeJS%% |\n| %%LNG_DeleteProductFieldFileConfirmation%% |\n\n# ListCheckForm Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_InvoicePendingPaymentText%% |\n| %%GLOBAL_JSCacheToken%% |"
                        },
                        {
                          "type": "text",
                          "data": "# GiftCertificateBalanceRemaining Panel \n\nShown after a customer enters their gift certificate code and displays the remaining balance and expiry date.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_GiftCertificateCode%% |\n| %%GLOBAL_RemainingBalance%% |"
                        },
                        {
                          "type": "text",
                          "data": "# HeaderSearch Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_OriginalSearchQuery%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n\n# Header Panel \n\n## Available Panels \n|||\n|||\n| Header |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_MaintenanceNotice%% |\n| %%GLOBAL_HeaderLogo%% |\n\n# HtmlHead Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HeadFonts%% |\n| %%GLOBAL_Favicon%% |\n| %%GLOBAL_OptimizerControlScript%% |\n| %%GLOBAL_Stylesheets%% |\n| %%GLOBAL_HeadRSSLinks%% |\n| %%GLOBAL_TrackingCode%% |\n| %%GLOBAL_DesignModeStyleSheet%% |\n| %%GLOBAL_HeaderImageStyle%% |\n| %%GLOBAL_jQueryPath%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_FastCart%% |\n| %%GLOBAL_ProductThumbImageWidth%% |\n| %%GLOBAL_ProductThumbImageHeight%% |\n| %%GLOBAL_AdditionalScriptTags%% |\n| %%GLOBAL_QuickSearchJS%% |\n| %%GLOBAL_RTLStyles%% |\n| %%GLOBAL_CharacterSet%% |\n| %%GLOBAL_AdditionalMetaTags%% |"
                        },
                        {
                          "type": "text",
                          "data": "# HomeFeaturedProducts Panel \n\nA list of store-wide featured products (products marked as featured in the control panel)\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideHomeFeaturedProductsPanel%% |\n\n# HomeNewProducts Panel \n\nA list of store-wide new products (based on the date they were added to the store)\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideHomeNewProductsPanel%% |\n\n# HomeRecentBlogs Panel \n\nA list of products that are on sale (those that have a sale price configured that’s less than the normal price of the product)\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideHomeRecentBlogsPanel%% |\n\n# HomeSlideShow Panel \n\n## Available Panels \n|||\n|||\n| HomeSlideShow |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SwapFrequency%% |"
                        },
                        {
                          "type": "text",
                          "data": "# AddShippingAddressJavaScript Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AddressFormFieldID%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_FormFieldRequiredJS%% |\n| %%GLOBAL_CheckEmail%% |\n| %%GLOBAL_AddressFormFieldID%% |\n\n# ChooseCheckoutProviderJavaScript Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n\n# ContactFormJavaScript Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideCaptcha%% |\n\n# CreateAccountJavaScript Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_CreateAccountAccountFormFieldID%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_FormFieldRequiredJS%% |\n| %%GLOBAL_CreateAccountAccountFormFieldID%% |\n| %%GLOBAL_CreateAccountShippingFormFieldID%% |\n\n# EditAccountJavaScript Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_EditAccountAccountFormFieldID%% |\n| %%GLOBAL_FormFieldRequiredJS%% |\n\n# HomeSlideShowJavaScript Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n\n# SearchJavaScript Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SearchId%% |\n| %%GLOBAL_SelectedCategoryOptions%% |\n| %%GLOBAL_AutoHideSearchForm%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_CategoryOptions%% |"
                        },
                        {
                          "type": "text",
                          "data": "# NewsBreadcrumb Panel \n\nThe breadcrumb navigation menu.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NewsTitle%% |\n\n# NewsComments Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CommentsHTML%% |\n\n# NewsContent Panel \n\nUsed to display an individual news item on the news page.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NewsTitle%% |\n| %%GLOBAL_NewsDate%% |\n| %%GLOBAL_NewsContent%% |"
                        },
                        {
                          "type": "text",
                          "data": "# PageComments Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CommentsHTML%% |\n\n# PageContent Panel \n\nDisplays the title and the content of the web page currently being viewed.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PageNameOptimizerScriptTag%% |\n| %%GLOBAL_PageTitle%% |\n| %%GLOBAL_PageNameOptimizerNoScriptTag%% |\n| %%GLOBAL_PageDescriptionOptimizerScriptTag%% |\n| %%GLOBAL_PageContent%% |\n| %%GLOBAL_PageDescriptionOptimizerNoScriptTag%% |\n\n# PagesMenu Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ActivePageHomeClass%% |\n"
                        },
                        {
                          "type": "text",
                          "data": "# ProductBreadcrumb Panel \n\nThe breadcrumb navigation menu.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideBreadCrumbs%% |\n| %%GLOBAL_BreadCrumbs%% |\n\n# ProductByCategory Panel \n\nShows a list of categories related to the product currently being viewed.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_FindByCategory%% |\n| %%GLOBAL_HideSectionSeparator%% |\n\n# ProductDescription Panel \n\nContains the description of the product currently being viewed.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductDescriptionOptimizerScriptTag%% |\n| %%GLOBAL_ProductDesc%% |\n| %%GLOBAL_ProductDescriptionOptimizerNoScriptTag%% |\n| %%GLOBAL_HideSectionSeparator%% |\n\n# ProductDetails Panel \n\nContains the details (price, brand, shipping information, product image and product name) to be shown on the product view page.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductCondition%% |\n| %%GLOBAL_HideWeight%% |\n| %%GLOBAL_ProductWeight%% |\n| %%GLOBAL_HideRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_Rating%% |\n| %%GLOBAL_HideReviewLink%% |\n| %%GLOBAL_ReviewLinkOnClick%% |\n| %%GLOBAL_ReviewLinkText%% |\n| %%GLOBAL_HideAvailability%% |\n| %%GLOBAL_Availability%% |\n| %%GLOBAL_CurrentProdThumbImage%% |\n| %%GLOBAL_HideShipping%% |\n| %%GLOBAL_ShippingPrice%% |\n| %%GLOBAL_HideMinQty%% |\n| %%GLOBAL_MinQty%% |\n| %%GLOBAL_HideMaxQty%% |\n| %%GLOBAL_MaxQty%% |\n| %%GLOBAL_ProductThumbWidth%% |\n| %%GLOBAL_HideCurrentStock%% |\n| %%GLOBAL_CurrentStockLabel%% |\n| %%GLOBAL_InventoryList%% |\n| %%GLOBAL_ProductThumbHeight%% |\n| %%GLOBAL_HideGiftWrapMessage%% |\n| %%GLOBAL_GiftWrappingAvailable%% |\n| %%GLOBAL_ProductMaxZoomWidth%% |\n| %%GLOBAL_FacebookLikeButtonBelow%% |\n| %%GLOBAL_ProductMaxZoomHeight%% |\n| %%GLOBAL_ProductMaxTinyWidth%% |\n| %%GLOBAL_ProductMaxTinyHeight%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_ProdImageJavascript%% |\n| %%GLOBAL_ShowImageZoomer%% |\n| %%GLOBAL_ProductDetailFlashMessages%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_productAttributesCssPath%% |\n| %%GLOBAL_ProductNameOptimizerScriptTag%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductNameOptimizerNoScriptTag%% |\n| %%GLOBAL_AddThisLink%% |\n| %%GLOBAL_HideProductThumb%% |\n| %%GLOBAL_LightBoxImageJavascript%% |\n| %%GLOBAL_jQueryUIPath%% |\n| %%GLOBAL_HideImageCarousel%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_HideMorePicturesLink%% |\n| %%GLOBAL_SeeMorePictures%% |\n| %%GLOBAL_TinyImageClickJavascript%% |\n| %%GLOBAL_PinterestButton%% |\n| %%GLOBAL_FacebookLikeButtonAbove%% |\n| %%GLOBAL_HideRRP%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_RetailPrice%% |\n| %%GLOBAL_HidePrice%% |\n| %%GLOBAL_PriceLabel%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_IncludingExcludingTax%% |\n| %%GLOBAL_YouSave%% |\n| %%GLOBAL_HideSKU%% |\n| %%GLOBAL_SKU%% |\n| %%GLOBAL_HideVendorDetails%% |\n| %%GLOBAL_VendorName%% |\n| %%GLOBAL_HideBrandLink%% |\n| %%GLOBAL_BrandLink%% |\n| %%GLOBAL_BrandName%% |\n| %%GLOBAL_HideCondition%% |\n\n# ProductImagePopup Panel \n\nShows an individual product image in the product image popup and the buttons to navigate between the product images.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_NavLinkDisplay%% |\n| %%GLOBAL_DisablePrevLink%% |\n| %%GLOBAL_DisableNextLink%% |\n| %%GLOBAL_TotalImages%% |\n\n# ProductOtherDetails Panel \n\nDisplays the custom fields configured for the product being shown.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideCustomFields%% |\n\n# ProductReviews Panel \n\nA list of product reviews for this particular product as well as the form for posting a new review for this product.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CommentsHTML%% |\n\n# ProductTabs Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductTabsOptimizerScriptTag%% |\n| %%GLOBAL_ProductTabsControlScript%% |\n| %%GLOBAL_ProductTabsOptimizerNoScriptTag%% |\n\n# ProductVideos Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_FeaturedVideo%% |\n| %%GLOBAL_FeaturedVideo%% |\n| %%GLOBAL_HideSingleVideo%% |\n| %%GLOBAL_VideoLength%% |\n| %%GLOBAL_VideoTitleLong%% |\n| %%GLOBAL_VideoDescriptionLong%% |\n| %%GLOBAL_HideVideoList%% |\n| %%GLOBAL_FeaturedVideo%% |\n| %%GLOBAL_HideSectionSeparator%% |\n| %%GLOBAL_ProductImageMode%% |\n\n# ProductWarranty Panel \n\nIf the product has any warranty text/information set, it will be shown in this panel.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductWarranty%% |\n| %%GLOBAL_HideSectionSeparator%% |"
                        },
                        {
                          "type": "text",
                          "data": "# PurchaseGiftCertificate Panel \n\nDisplays the form used to make the purchase of a gift certificate from the store.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideGiftCertificateForm%% |\n| %%GLOBAL_GiftCertificateMinimum%% |\n| %%GLOBAL_CartItemId%% |\n| %%GLOBAL_GiftCertificateMaximum%% |\n| %%GLOBAL_CertificateTo%% |\n| %%GLOBAL_GiftCertificatePreviewModalTitle%% |\n| %%GLOBAL_CertificateToEmail%% |\n| %%GLOBAL_CertificateFrom%% |\n| %%GLOBAL_CertificateFromEmail%% |\n| %%GLOBAL_CertificateTitle%% |\n| %%GLOBAL_CertificateMessage%% |\n| %%GLOBAL_HideGiftCertificateAmountSelect%% |\n| %%GLOBAL_GiftCertificateAmountSelect%% |\n| %%GLOBAL_HideGiftCertificateCustomAmount%% |\n| %%GLOBAL_CustomCertificateAmount%% |\n| %%GLOBAL_GiftCertificateRange%% |\n| %%GLOBAL_HideExpiryInfo%% |\n| %%GLOBAL_AgreeChecked%% |\n| %%GLOBAL_GiftCertificateTerms%% |\n| %%GLOBAL_AgreeChecked%% |\n| %%GLOBAL_HideThemeSelect%% |\n| %%GLOBAL_HideThemeSelect%% |\n| %%GLOBAL_GiftCertificateThemes%% |\n| %%GLOBAL_SaveGiftCertificateButton%% |\n| %%GLOBAL_HideErrorMessage%% |\n| %%GLOBAL_ErrorMessage%% |"
                        },
                        {
                          "type": "text",
                          "data": "# QuickViewContent Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductWeight%% |\n| %%GLOBAL_HideAvailability%% |\n| %%GLOBAL_Availability%% |\n| %%GLOBAL_QuickViewShareLinks%% |\n| %%GLOBAL_HideShipping%% |\n| %%GLOBAL_ShippingPrice%% |\n| %%GLOBAL_HideMinQty%% |\n| %%GLOBAL_MinQty%% |\n| %%GLOBAL_HideMaxQty%% |\n| %%GLOBAL_MaxQty%% |\n| %%GLOBAL_HideCurrentStock%% |\n| %%GLOBAL_CurrentStockLabel%% |\n| %%GLOBAL_InventoryList%% |\n| %%GLOBAL_HideGiftWrapMessage%% |\n| %%GLOBAL_GiftWrappingAvailable%% |\n| %%GLOBAL_HideRating%% |\n| %%GLOBAL_HideProductAttributeList%% |\n| %%GLOBAL_ProductAttributeList%% |\n| %%GLOBAL_DisplayAdd%% |\n| %%GLOBAL_DisplayAddQty%% |\n| %%GLOBAL_DisplayAddQty%% |\n| %%GLOBAL_AddToCartQty%% |\n| %%GLOBAL_QuickViewRating%% |\n| %%GLOBAL_HideBulkDiscountLink%% |\n| %%GLOBAL_BulkDiscountThickBoxRates%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_DisplayAdd%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_DisplayAdd%% |\n| %%GLOBAL_QuickViewProductURL%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_ItemSoldOut%% |\n| %%GLOBAL_QuickViewProductName%% |\n| %%GLOBAL_OptionMessage%% |\n| %%GLOBAL_QuickViewProductURL%% |\n| %%GLOBAL_QuickViewReviews%% |\n| %%GLOBAL_ShowAddToCartQtyBox%% |\n| %%GLOBAL_ProductMinMaxQtyJavascript%% |\n| %%GLOBAL_EventDateJavascript%% |\n| %%GLOBAL_QuickViewProductURL%% |\n| %%GLOBAL_ThumbImageURL%% |\n| %%GLOBAL_QuickViewProductDescription%% |\n| %%GLOBAL_CartLink%% |\n| %%GLOBAL_FastCartButtonJs%% |\n| %%GLOBAL_ProductOptionRequired%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_HideRRP%% |\n| %%GLOBAL_RetailPrice%% |\n| %%GLOBAL_HidePrice%% |\n| %%GLOBAL_PriceLabel%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_IncludingExcludingTax%% |\n| %%GLOBAL_YouSave%% |\n| %%GLOBAL_HideSKU%% |\n| %%GLOBAL_QuickViewFacebookLikeButton%% |\n| %%GLOBAL_SKU%% |\n| %%GLOBAL_HideVendorDetails%% |\n| %%GLOBAL_VendorName%% |\n| %%GLOBAL_QuickViewShareLinksLabel%% |\n| %%GLOBAL_HideBrandLink%% |\n| %%GLOBAL_BrandLink%% |\n| %%GLOBAL_BrandName%% |\n| %%GLOBAL_HideCondition%% |\n| %%GLOBAL_ProductCondition%% |\n| %%GLOBAL_HideWeight%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SearchPageHeader Panel\n\nThe header containing the search form and breadcrumb navigation menu.\n\n## Available Panels\n|||\n|||\n| SearchPageHeader |\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideAdvancedOptions%% |\n| %%GLOBAL_FormattedSearchQuery%% |\n| %%GLOBAL_BrandNameOptions%% |\n| %%GLOBAL_HideAdvancedLink%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductSearchOptions%% |\n| %%GLOBAL_HideProductSearchOptions%% |\n| %%GLOBAL_PriceFrom%% |\n| %%GLOBAL_PriceTo%% |\n| %%GLOBAL_HideProductSearchOptions%% |\n| %%GLOBAL_HideProductSearchOptions%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_SearchTitle%% |\n| %%GLOBAL_HideRelatedSearches%% |\n| %%GLOBAL_ShowSearchSuggestion%% |\n| %%GLOBAL_SearchId%% |\n| %%GLOBAL_SuggestQuery%% |\n| %%GLOBAL_SuggestQueryEscaped%% |\n\n# SearchPageProducts Panel\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideSearchResults%% |\n| %%GLOBAL_SearchResults%% |\n\n# SearchPage Panel\n\nIf a search is being performed, this panel will be shown containing any results matching the search terms.\n\n## Available Panels\n|||\n|||\n| SearchPage |\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ContentContainerDisplay%% |\n| %%GLOBAL_HideSearchPage%% |\n| %%GLOBAL_SelectedSearchTab%% |\n| %%GLOBAL_ProductTabActive%% |\n| %%GLOBAL_ProductTabUrl%% |\n| %%GLOBAL_ContentTabActive%% |\n| %%GLOBAL_ContentTabUrl%% |\n| %%GLOBAL_ProductContainerDisplay%% |\n\n# SearchTabContents Panel\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideSearchResultsContent%% |\n| %%GLOBAL_SearchResultsContent%% |\n| %%GLOBAL_HideSearchResultsNoResult%% |\n| %%GLOBAL_OriginalSearchQuery%% |\n\n# SearchTabProducts Panel\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSearchResultsProduct%% |\n| %%GLOBAL_SearchResultsProduct%% |\n| %%GLOBAL_SnippetSearchResultsFeed%% |\n| %%GLOBAL_HideSearchResultsNoResult%% |\n| %%GLOBAL_OriginalSearchQuery%% |\n| %%GLOBAL_HideSearchResultsCategoryAndBrand%% |\n| %%GLOBAL_HideSearchResultsCategory%% |\n| %%GLOBAL_SearchResultsCategory%% |\n| %%GLOBAL_HideSearchResultsBrand%% |\n| %%GLOBAL_SearchResultsBrand%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ShareProductById Panel \n\n## Available Panels \n|||\n|||\n| ShareProductById |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideChooseAnotherToShare%% |\n| %%GLOBAL_FirstProductId%% |\n| %%GLOBAL_SharingData%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ShareProductChoices Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SideAccountMenu Panel \n\nThe list of links/options available in the “My Account” section of the store.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideWishlist%% |\n| %%GLOBAL_NumWishListItems%% |\n| %%GLOBAL_HideMessagesMenu%% |\n| %%GLOBAL_NumNewMessages%% |\n| %%GLOBAL_HideReturnRequestsMenu%% |\n\n# SideAccountStoreCredit Panel \n\nIf the customer has store credit, shows the amount of store credit their account contains\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideStoreCredit%% |\n| %%GLOBAL_StoreCreditAmount%% |\n\n# SideBrandTagCloud Panel \n\nA tag cloud showing the popularity/density of brand names on the store.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideBrandTagCloudPanel%% |\n\n# SideCartContents Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AdditionalCheckoutButtons%% |\n| %%GLOBAL_HideCartOptions%% |\n| %%GLOBAL_HidePurchasingOptions%% |\n| %%GLOBAL_HideSideCart%% |\n| %%GLOBAL_SideCartItemCount%% |\n\n# SideCategoryList Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SideCategoryListTypeClass%% |\n\n# SideCategoryNewProducts Panel \n\nA list of new products in the category currently being viewed.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideCategoryNewProductsPanel%% |\n\n# SideCategoryPopularProducts Panel \n\nList of the popular products (based on the ratings/reviews) for a particular category.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideCategoryPopularProductsPanel%% |\n\n# SideCategoryShopByPrice Panel \n\nThe price point options for browsing items between different price ranges in the current category.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideCategoryShopByPricePanel%% |\n\n# SideCategoryTopSellers Panel \n\nThe list of top selling products (based on the number sold) for a particular category.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideCategoryTopSellersPanel%% |\n\n# SideCouponCodeBox Panel \n\nThe coupon code entry box shown on the side of the cart page.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n\n# SideGiftCertificateCodeBox Panel \n\nThe gift certificate code entry box shown on the side of the cart page.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n\n# SideLiveChatServices Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SideLiveChatCode%% |\n\n# SideNewProducts Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideNewProductsPanel%% |\n\n# SideNewsletterBox Panel \n\n## Available Panels \n|||\n|||\n| SideNewsletterBox |\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NewsletterButtonOptimizerScriptTag%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_NewsletterBoxOptimizerNoScriptTag%% |\n| %%GLOBAL_NewsletterBoxControlScript%% |\n| %%GLOBAL_NewsletterHeaderOptimizerScriptTag%% |\n| %%GLOBAL_NewsletterBoxOptimizerNoScriptTag%% |\n#  SidePopularProducts Panel\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSidePopularProductsPanel%% |\n| %%SNIPPET_SidePopularProductsFeed%% |\n| %%LNG_PopularProducts%% |\n| %%SNIPPET_SidePopularProducts%% |\n\n# SideProductAddToWishList Panel \n\nThe button to add this product to the customer’s wishlist.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_HidePurchasingOptions%% |\n| %%GLOBAL_HideWishlist%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_WishLists%% |\n\n# SideProductAlsoBought Panel \n\nShows a list of products that customers have purchased who have also purchased the product being shown.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlsoBoughtProductListing%% |\n\n# SideProductRecentlyViewed Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideProductRecentlyViewedCompare%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_HideRecentlyViewedProductsPanel%% |\n| %%GLOBAL_CompareLink%% |\n\n# SideProductRelated Panel \n\nA list of products related to this product (either automatically fetched or manually configured)\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideRelatedProductsPanel%% |\n\n# SideShopByBrandFull Panel \n\nA complete list of brand names on the store ordered alphabetically.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideShopByBrandFullPanel%% |\n\n# SideShopByBrand Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideShopByBrandPanel%% |\n\n# SideTopSellers Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideTopSellersPanel%% |\n"
                        },
                        {
                          "type": "text",
                          "data": "# SimilarProductsByTag Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSectionSeparator%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SitemapBreadcrumb Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideIfSubsection%% |\n| %%GLOBAL_HideIfNoSubsection%% |\n| %%GLOBAL_SitemapLink%% |\n| %%GLOBAL_HideIfNoSubsection%% |\n| %%GLOBAL_SitemapSubsectionTrail%% |"
                        },
                        {
                          "type": "text",
                          "data": "# Syndicate Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShowNewProductsFeed%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ShowPopularProductsFeed%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ShowFeaturedProductsFeed%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ShowSearchFeed%% |\n| %%GLOBAL_ShowNewsFeed%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_IMG_PATH%% |"
                        },
                        {
                          "type": "text",
                          "data": "# TagProducts Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CompareLink%% |\n| %%GLOBAL_TagProductListing%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_TaggedProducts%% |"
                        },
                        {
                          "type": "text",
                          "data": "# TopMenu Panel \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideWishlist%% |\n| %%GLOBAL_HideCartOptions%% |\n| %%GLOBAL_HideAccountOptions%% |\n| %%GLOBAL_LoginOrLogoutText%% |\n| %%GLOBAL_OptimizerLinkScript%% |\n| %%GLOBAL_HidePurchasingOptions%% |\n| %%GLOBAL_LiveChatCodeEnabled%% |\n| %%GLOBAL_LiveChatCode%% |\n| %%GLOBAL_HideAccountOptions%% |\n| %%GLOBAL_HideAccountOptions%% |"
                        },
                        {
                          "type": "text",
                          "data": "# WishListAddForm Panel \n\nThe form that allows creation of a wishlist.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PageTitle%% |\n| %%GLOBAL_HideNormalMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideErrorMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideWishListAddFrom%% |\n| %%GLOBAL_HideSuccessMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_WishListAction%% |\n| %%GLOBAL_WishListName%% |\n| %%GLOBAL_SelectPublic%% |\n| %%GLOBAL_PageTitle%% |\n\n# WishListItems Panel \n\nUsed when displaying the contents of a particular wishlist.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_WishListName%% |\n| %%GLOBAL_HideNormalMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideErrorMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideWishListItems%% |\n| %%GLOBAL_HideSuccessMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideShareWishList%% |\n| %%GLOBAL_ShareWishListClass%% |\n| %%GLOBAL_PublicWishListUrl%% |\n| %%GLOBAL_ShareWishListIntro%% |\n| %%GLOBAL_WishListName%% |\n\n# WishLists Panel \n\nShown whenever a list of wishlists the customer has is to be displayed.\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideNormalMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideErrorMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideSuccessMessage%% |\n| %%GLOBAL_WishListMessage%% |\n| %%GLOBAL_HideWishLists%% |\n| %%GLOBAL_HideWishListsTable%% |"
                        }
                      ]
                    }
                  },
                  {
                    "title": "Snippets",
                    "route": {
                      "path": "/blueprint-snippets"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "text",
                          "data": "# AccountDownloadItemList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_DownloadName%% |\n| %%GLOBAL_DisplayDownloadLink%% |\n| %%GLOBAL_DownloadLink%% |\n| %%GLOBAL_DownloadSize%% |\n| %%GLOBAL_DownloadColor%% |\n| %%GLOBAL_DisplayDownloadExpired%% |\n| %%GLOBAL_ExpiryInfo%% |\n| %%GLOBAL_DownloadDescription%% |\n\n# AccountInboxMessage Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_MessageSubject%% |\n| %%GLOBAL_MessageDate%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_Icon%% |\n| %%GLOBAL_Sender%% |\n| %%LNG_MessageSaid%% |\n| %%GLOBAL_MessageContent%% |\n\n# AccountInboxOrderItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_OrderItemMessage%% |\n| %%GLOBAL_OrderId%% |\n\n# AccountNewReturnItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ItemClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_ItemClass%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_OrderProductId%% |\n| %%GLOBAL_ProductQtySelect%% |\n\n# AccountOrderItemDownloadLink Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPathSSL%% |\n| %%GLOBAL_DownloadItemEncrypted%% |\n\n# AccountOrderItemList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_StrikeStart%% |\n| %%GLOBAL_ItemQty%% |\n| %%GLOBAL_ItemName%% |\n| %%GLOBAL_StrikeEnd%% |\n| %%GLOBAL_Refunded%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_DownloadLink%% |\n| %%GLOBAL_HideExpectedReleaseDate%% |\n| %%GLOBAL_ExpectedReleaseDate%% |\n\n# AccountOrderItemRow Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ItemShippingRow%% |\n| %%GLOBAL_ItemClass%% |\n| %%GLOBAL_OrderProductId%% |\n| %%GLOBAL_DisableReorder%% |\n| %%GLOBAL_StrikeStart%% |\n| %%GLOBAL_Qty%% |\n| %%GLOBAL_Link%% |\n| %%GLOBAL_Target%% |\n| %%GLOBAL_Name%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_EventDate%% |\n| %%GLOBAL_StrikeEnd%% |\n| %%GLOBAL_Refunded%% |\n| %%GLOBAL_DownloadsLink%% |\n| %%GLOBAL_HideWrappingOptions%% |\n| %%LNG_GiftWrapping%% |\n| %%GLOBAL_GiftWrappingName%% |\n| %%GLOBAL_HideItemMessage%% |\n| %%GLOBAL_ReorderMessage%% |\n| %%GLOBAL_HideExpectedReleaseDate%% |\n| %%GLOBAL_ExpectedReleaseDate%% |\n| %%GLOBAL_ItemClass%% |\n| %%GLOBAL_Price%% |\n\n# AccountOrderItemShippingRow Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_ItemsShippedTo%% |\n| %%GLOBAL_ItemShippingRow_AddressLine%% |\n| %%LNG_Price%% |\n\n# AccountOrderItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_OrderId%% |\n| %%LNG_HC_returnitem%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%LNG_ViewOrder%% |\n| %%GLOBAL_DisableViewButton%% |\n| %%GLOBAL_DisableReturnButton%% |\n| %%LNG_ReturnOrderItems%% |\n| %%LNG_Order%% |\n| %%LNG_OrderDate%% |\n| %%GLOBAL_OrderDate%% |\n| %%LNG_YourOrderContainsTheFollowingItems2%% |\n| %%GLOBAL_AccountOrderItemList%% |\n\n# AccountOrderShipmentRow Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_DateShipped%% |\n| %%GLOBAL_ShippingProvider%% |\n| %%GLOBAL_HideShippingMethod%% |\n| %%GLOBAL_ShippingMethod%% |\n| %%GLOBAL_TrackingLink%% |\n\n# AccountOrderStatusItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_OrderId%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%LNG_ViewOrder%% |\n| %%LNG_Reorder%% |\n| %%LNG_Order%% |\n| %%LNG_OrderDate%% |\n| %%GLOBAL_OrderDate%% |\n| %%LNG_ThisOrderIsMarkedAs%% |\n| %%GLOBAL_OrderStatus%% |\n| %%GLOBAL_HidePaymentInstructions%% |\n| %%LNG_YourOrderTotalIs%% |\n| %%GLOBAL_OrderTotal%% |\n| %%LNG_HeresHowToPayForYourOrder%% |\n| %%GLOBAL_OrderInstructions%% |\n| %%LNG_YourOrderContainsTheFollowingItems2%% |\n| %%GLOBAL_AccountOrderItemList%% |\n\n# AccountOrderTotalRow Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_label%% |\n| %%GLOBAL_value%% |  \n\n# AccountRecentlyViewedProducts Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%GLOBAL_ProductId%% |\n| %%LNG_Compare%% |\n\n# AccountReturnItem Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_Return%% |\n| %%GLOBAL_ReturnId%% |\n| %%GLOBAL_ReturnStatus%% |\n| %%LNG_ReturnedItem%% |\n| %%GLOBAL_ReturnedQuantity%% |\n| %%GLOBAL_ReturnedProduct%% |\n| %%GLOBAL_ReturnedProductOptions%% |\n| %%LNG_DateRequested%% |\n| %%GLOBAL_DateRequested%% |\n| %%LNG_ReturnReason%% |\n| %%GLOBAL_ReturnReason%% |\n| %%GLOBAL_HideReturnAction%% |\n| %%LNG_ReturnAction%% |\n| %%GLOBAL_ReturnAction%% |\n| %%GLOBAL_HideReturnComment%% |\n| %%LNG_YourComments%% |\n| %%GLOBAL_ReturnComments%% |"
                        },
                        {
                          "type": "text",
                          "data": "# AddThisLink Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AddThisServiceButtonMeta%% |\n| %%GLOBAL_AddThisServiceButtons%% |"
                        },
                        {
                          "type": "text",
                          "data": "# AddressLabel Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShipFullName%% |\n| %%GLOBAL_ShipCompany%% |\n| %%GLOBAL_ShipAddressLines%% |\n| %%GLOBAL_ShipSuburb%% |\n| %%GLOBAL_ShipState%% |\n| %%GLOBAL_ShipZip%% |\n| %%GLOBAL_ShipCountry%% |\n| %%GLOBAL_ShipPhone%% |  "
                        },
                        {
                          "type": "text",
                          "data": "# BlogRecentPostsContentItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_Thumbnail%% |\n| %%GLOBAL_RecentPostUrl%% |\n| %%GLOBAL_RecentPostTitle%% |\n| %%GLOBAL_RecentPostSummary%% |\n| %%LNG_ReadMoreLink%% |"
                        },
                        {
                          "type": "text",
                          "data": "# BlogRecentPostsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_RecentPostUrl%% |\n| %%GLOBAL_RecentPostTitle%% |"
                        },
                        {
                          "type": "text",
                          "data": "# BrandCloudItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_BrandName%% |\n| %%GLOBAL_NumProducts%% |\n| %%LNG_Products%% |\n| %%GLOBAL_TagSize%%% |\n| %%GLOBAL_BrandLink%% |\n\n# BrandMainPageMessage Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ChooseBrandFromList%% |\n\n# BrandProductsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%LNG_Compare%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# BreadcrumbItemCurrent Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CatTrailName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# BreadcrumbItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CatTrailLink%% |\n| %%GLOBAL_CatTrailName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CartCoupon Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_Coupon%% |\n| %%GLOBAL_CouponCode%% |\n| %%GLOBAL_CouponId%% |\n| %%LNG_Remove%% |\n| %%GLOBAL_CouponDiscount%% |\n\n# CartGiftCertificate Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_GiftCertificate%% |\n| %%GLOBAL_GiftCertificateCode%% |\n| %%GLOBAL_GiftCertificateRemaining%% |\n| %%LNG_GiftCertificateRemaining%% |\n| %%GLOBAL_GiftCertificateId%% |\n| %%LNG_Remove%% |\n| %%GLOBAL_CertificateAmountUsed%% |\n\n# CartItemGiftCertificate Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideThumbColumn%% |\n| %%GLOBAL_ProductNameSpan%% |\n| %%GLOBAL_GiftCertificateName%% |\n| %%GLOBAL_CartItemId%% |\n| %%LNG_Edit%% |\n| %%LNG_CapitalFor%% |\n| %%GLOBAL_GiftCertificateTo%% |\n| %%GLOBAL_CartItemId%% |\n| %%LNG_Remove%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductTotal%% |\n\n# CartItemQtySelect Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CartItemId%% |\n| %%GLOBAL_QtySelectStyle%% |\n| %%GLOBAL_Quantity1%% |\n| %%GLOBAL_Quantity2%% |\n| %%GLOBAL_Quantity3%% |\n| %%GLOBAL_Quantity4%% |\n| %%GLOBAL_Quantity5%% |\n| %%GLOBAL_Quantity6%% |\n| %%GLOBAL_Quantity7%% |\n| %%GLOBAL_Quantity8%% |\n| %%GLOBAL_Quantity9%% |\n| %%GLOBAL_Quantity10%% |\n| %%GLOBAL_Quantity11%% |\n| %%GLOBAL_Quantity12%% |\n| %%GLOBAL_Quantity13%% |\n| %%GLOBAL_Quantity14%% |\n| %%GLOBAL_Quantity15%% |\n| %%GLOBAL_Quantity16%% |\n| %%GLOBAL_Quantity17%% |\n| %%GLOBAL_Quantity18%% |\n| %%GLOBAL_Quantity19%% |\n| %%GLOBAL_Quantity20%% |\n| %%GLOBAL_Quantity21%% |\n| %%GLOBAL_Quantity22%% |\n| %%GLOBAL_Quantity23%% |\n| %%GLOBAL_Quantity24%% |\n| %%GLOBAL_Quantity25%% |\n| %%GLOBAL_Quantity26%% |\n| %%GLOBAL_Quantity27%% |\n| %%GLOBAL_Quantity28%% |\n| %%GLOBAL_Quantity29%% |\n| %%GLOBAL_Quantity30%% |\n| %%GLOBAL_QtyOptionSelected%% |\n\n# CartItemQtyText Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CartItemId%% |\n| %%GLOBAL_ProductQuantity%% |\n\n# CartItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideThumbColumn%% |\n| %%GLOBAL_ProductImage%% |\n| %%GLOBAL_ProductNameSpan%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_ProductAvailability%% |\n| %%GLOBAL_HideExpectedReleaseDate%% |\n| %%GLOBAL_ProductExpectedReleaseDate%% |\n| %%GLOBAL_EventDate%% |\n| %%GLOBAL_HideWrappingOptions%% |\n| %%LNG_GiftWrapping%% |\n| %%GLOBAL_GiftWrappingName%% |\n| %%GLOBAL_CartItemId%% |\n| %%GLOBAL_HideGiftWrappingAdd%% |\n| %%LNG_Add%% |\n| %%GLOBAL_HideGiftWrappingEdit%% |\n| %%LNG_Change%% |\n| %%LNG_Remove%% |\n| %%GLOBAL_HideGiftMessagePreview%% |\n| %%LNG_GiftMessage%% |\n| %%GLOBAL_GiftMessagePreview%% |\n| %%GLOBAL_CartItemQty%% |\n| %%GLOBAL_HideCartItemRemove%% |\n| %%GLOBAL_CartItemId%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductTotal%% |\n\n# CartProductAttribute Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductAttributeName%% |\n| %%GLOBAL_ProductAttributeValue%% |\n\n# CartProductAttributesList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductAttributes%% |\n| %%GLOBAL_CartItemId%% |\n| %%LNG_Change%% |\n\n# CartProductFieldCheckbox Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_ProductFieldType%% |\n| %%GLOBAL_ProductFieldInputSize%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldValue%% |\n\n# CartProductFieldFile Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldInputSize%% |\n| %%GLOBAL_ProductFieldValue%% |\n| %%GLOBAL_HideCartFileName%% |\n| %%LNG_Currently%% |\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_ItemId%% |\n| %%GLOBAL_ProductFieldFileValue%% |\n| %%GLOBAL_HideDeleteFileLink%% |\n| %%LNG_Delete%% |\n| %%GLOBAL_HideFileHelp%% |\n| %%LNG_Size%% |\n| %%GLOBAL_FileSize%% |\n| %%LNG_Type%% |\n| %%GLOBAL_FileTypes%% |\n| %%GLOBAL_CurrentProductFile%% |\n\n# CartProductFieldInput Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_ProductFieldType%% |\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldInputSize%% |\n| %%GLOBAL_ProductFieldValue%% |\n\n# CartProductFieldSelect Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldInputSize%% |\n| %%GLOBAL_SelectOptions%% |\n\n# CartProductFieldTextarea Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldValue%% |\n\n# CartProductFields Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_CustomFieldName%% |\n| %%GLOBAL_CustomFieldValue%% |\n\n# CartShippingQuoteRow Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShippingQuoteId%% |\n| %%GLOBAL_ShipperName%% |\n| %%GLOBAL_TransitTime%% |\n| %%GLOBAL_ShippingPrice%% |\n\n# CartShippingTransitTime Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_TransitTime%% |\n\n# CartTotalTaxRow Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_TaxName%% |\n| %%GLOBAL_TaxCost%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CategoryPagingItemCurrent Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PageNumber%% |\n\n# CategoryPagingItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PageLink%% |\n| %%GLOBAL_PageNumber%% |\n\n# CategoryPagingNext Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NextLink%% |\n| %%LNG_Next%% |  \n\n# CategoryPagingPrevious Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PrevLink%% |\n| %%LNG_Previous%% |\n\n# CategoryPaging Snippet \n\n## Available Variables \n|||\n|||\n| %%SNIPPET_CategoryPagingPrevious%% |\n| %%SNIPPET_CategoryPagingNext%% |\n| %%LNG_Pages%% |\n| %%SNIPPET_PagingData%% |\n\n# CategoryProductsItemList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_AddToCartQty%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_ProductDescription%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%LNG_Compare%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# CategoryProductsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%LNG_Compare%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# CategorySortBox Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_URL%% |\n| %%GLOBAL_HiddenSortField%% |\n| %%LNG_SortBy%% |\n| %%GLOBAL_SortFeaturedSelected%% |\n| %%LNG_FeaturedItems%% |\n| %%GLOBAL_SortNewestSelected%% |\n| %%LNG_NewestItems%% |\n| %%GLOBAL_SortBestSellingSelected%% |\n| %%LNG_Bestselling%% |\n| %%GLOBAL_SortAlphaAsc%% |\n| %%LNG_AlphaAsc%% |\n| %%GLOBAL_SortAlphaDesc%% |\n| %%LNG_AlphaDesc%% |\n| %%GLOBAL_SortAvgReview%% |\n| %%LNG_AvgCustomerReview%% |\n| %%GLOBAL_SortPriceAsc%% |\n| %%LNG_PriceAsc%% |\n| %%GLOBAL_SortPriceDesc%% |\n| %%LNG_PriceDesc%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CheckoutBillingAddressFields Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_EmailAddress%% |\n| %%GLOBAL_AccountEmail%% |\n\n# CheckoutCartItemGiftCertificate Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_GiftCertificateName%% |\n| %%LNG_CapitalFor%% |\n| %%GLOBAL_GiftCertificateTo%% |\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductTotal%% |\n\n# CheckoutCartItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_EventDate%% |\n| %%GLOBAL_ProductAvailability%% |\n| %%GLOBAL_HideExpectedReleaseDate%% |\n| %%GLOBAL_ProductExpectedReleaseDate%% |\n| %%GLOBAL_HideGiftWrapping%% |\n| %%LNG_GiftWrapping%% |\n| %%GLOBAL_GiftWrappingName%% |\n| %%GLOBAL_HideGiftMessagePreview%% |\n| %%LNG_GiftMessage%% |\n| %%GLOBAL_GiftMessagePreview%% |\n| %%GLOBAL_HideCartProductFields%% |\n| %%GLOBAL_CartProductFields%% |\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductTotal%% |\n\n# CheckoutCartTotal Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_label%% |\n| %%GLOBAL_value%% |\n\n# CheckoutMailFormatPreference Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_IPreferThisEmailFormat%% |\n| %%GLOBAL_MailFormatPreferenceOptions%% |\n\n# CheckoutProviderOption Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PaymentFieldPrefix%% |\n| %%GLOBAL_ProviderId%% |\n| %%GLOBAL_ProviderChecked%% |\n| %%GLOBAL_ProviderType%% |\n| %%GLOBAL_ProviderPaymentFormClass%% |\n| %%GLOBAL_ProviderName%% |\n\n# CheckoutShippingAddressItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShipFullName%% |\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_ShippingAddressId%% |\n| %%GLOBAL_FromURL%% |\n| %%LNG_HCT_edit%% |\n| %%LNG_Edit%% |\n| %%GLOBAL_ShopPath%% |\n| %%LNG_HCT_delete%% |\n| %%LNG_Delete%% |\n| %%GLOBAL_ShipCompany%% |\n| %%GLOBAL_ShipAddressLine1%% |\n| %%GLOBAL_ShipAddressLine2%% |\n| %%GLOBAL_ShipSuburb%% |\n| %%GLOBAL_ShipState%% |\n| %%GLOBAL_ShipZip%% |\n| %%GLOBAL_ShipCountry%% |\n| %%GLOBAL_ShipPhone%% |\n| %%GLOBAL_HideAddressButton%% |\n| %%GLOBAL_ShippingFormAction%% |\n| %%GLOBAL_ShipAddressButtonText%% |\n\n# CheckoutTaxLine Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_TaxName%% |\n| %%GLOBAL_TaxCost%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CompareButtonList Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideCompareItems%% |\n| %%LNG_CompareSelected%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_HideAddButton%% |\n\n# CompareButton Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideCompareItems%% |\n| %%LNG_CompareSelected%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n\n# CompareProductCustomField Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_CustomFieldName%% |\n| %%GLOBAL_CustomFieldValue%% |\n\n# CompareProductTd1 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_CompareWidth%% |\n| %%GLOBAL_RemoveCompareLink%% |\n| %%LNG_Remove%% |\n\n# CompareProductTd2 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n\n# CompareProductTd3 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductThumb%% |\n\n#  CompareProductTd4 Snippet\n\n##  Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductPrice%% |\n\n# CompareProductTd5 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductAvailability%% |\n\n# CompareProductTd6 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideComparisonReviewLink%% |\n| %%GLOBAL_NumReviews%% |\n| %%GLOBAL_ProductLink%% |\n| %%LNG_ReadReviews%% |\n\n# CompareProductTd7 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductSummary%% |\n\n# CompareProductTd8 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_CustomFields%% |\n\n# CompareProductTd9 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductBrand%% |\n\n# CompareProductTr1 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_CompareHeadWidth%% |\n| %%LNG_ProductDetails%% |\n| %%SNIPPET_TD1%% |\n\n# CompareProductTr2 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_BaseCompareLink%% |\n| %%LNG_SortByProductName%% |\n| %%LNG_Product%% |\n| %%SNIPPET_TD2%% |\n\n# CompareProductTr3 Snippet\n\n## Available Variables\n|||\n|||\n| %%LNG_Image%% |\n| %%SNIPPET_TD3%% |\n\n# CompareProductTr4 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideProductPrice%% |\n| %%GLOBAL_BaseCompareLink%% |\n| %%LNG_SortByProductPrice%% |\n| %%LNG_Price%% |\n| %%SNIPPET_TD4%% |\n\n# CompareProductTr5 Snippet\n\n## Available Variables\n|||\n|||\n| %%LNG_Availability%% |\n| %%SNIPPET_TD5%% |\n\n# CompareProductTr6 Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_BaseCompareLink%% |\n| %%LNG_SortByProductRating%% |\n| %%LNG_Rating%% |\n| %%SNIPPET_TD6%% |\n\n# CompareProductTr7 Snippet\n\n## Available Variables\n|||\n|||\n| %%LNG_Summary%% |\n| %%SNIPPET_TD7%% |\n\n# CompareProductTr8 Snippet\n\n## Available Variables\n|||\n|||\n| %%LNG_Other%% |\n| %%SNIPPET_TD8%% |\n\n# CompareProductTr9 Snippet\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_BaseCompareLink%% |\n| %%LNG_SortByProductBrand%% |\n| %%LNG_Brand%% |\n| %%SNIPPET_TD9%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ConfirmOrderCoupon Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_Coupon%% |\n| %%GLOBAL_CouponCode%% |\n| %%GLOBAL_CouponDiscount%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ConfirmOrderGiftCertificate Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_GiftCertificate%% |\n| %%GLOBAL_GiftCertificateCode%% |\n| %%GLOBAL_GiftCertificateRemaining%% |\n| %%LNG_GiftCertificateRemaining%% |\n| %%GLOBAL_CertificateAmountUsed%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CookieNotification Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PrivacyCookieNotification%% |\n| %%LNG_HC_ok%% |"
                        },
                        {
                          "type": "text",
                          "data": "# CustomizeItemJavascript Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductAttributesJavascript%% |"
                        },
                        {
                          "type": "text",
                          "data": "# DesignModeFooter Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_jQueryUIPath%% |\n| %%GLOBAL_DesignModeCurrentTemplate%% |\n| %%GLOBAL_DesignModeUpdateUrl%% |\n| %%LNG_DesignModeSave%% |\n| %%LNG_DesignModeUndo%% |\n| %%LNG_DesignModeToggle%% |\n| %%LNG_DesignModeDisable%% |\n| %%LNG_DesignModeChangesSaved%% |\n| %%LNG_DesignModeRemoveLastPanel%% |\n| %%LNG_DesignModeConfirmPanelRemove%% |\n| %%LNG_DesignModeConfirmUndo%% |\n| %%LNG_DesignModeConfirmDisable%% |\n| %%LNG_DesignModeMenuEditPanel%% |\n| %%LNG_DesignModeMenuRemovePanel%% |\n| %%LNG_DesignModeMenuEditLayout%% |\n| %%LNG_DesignModeMenuEditStylesheet%% |\n| %%LNG_Or%% |\n| %%LNG_DesignModeLangSaving%% |\n| %%LNG_DesignModeCancel%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ESelectPlusConfirmationDetails Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_Amount%% |\n| %%GLOBAL_Amount%% |\n| %%LNG_TransactionType%% |\n| %%GLOBAL_TransactionType%% |\n| %%LNG_DateAndTime%% |\n| %%GLOBAL_DateTime%% |\n| %%LNG_AuthorisationCode%% |\n| %%GLOBAL_AuthorisationCode%% |\n| %%LNG_ResponseCode%% |\n| %%GLOBAL_ResponseCode%% |\n| %%LNG_ISOCode%% |\n| %%GLOBAL_ISOCode%% |\n| %%LNG_ResponseMessage%% |\n| %%GLOBAL_ResponseMessage%% |\n| %%LNG_MerchantURL%% |\n| %%GLOBAL_MerchantURL%% |\n| %%LNG_CardholderName%% |\n| %%GLOBAL_CardholderName%% |\n| %%LNG_IssuerName%% |\n| %%GLOBAL_IssuerName%% |\n| %%LNG_IssuerConfirmation%% |\n| %%GLOBAL_IssuerConfirmation%% |\n| %%LNG_ReferenceNumber%% |\n| %%GLOBAL_ReferenceNumber%% |\n| %%LNG_InvoiceNumber%% |\n| %%GLOBAL_InvoiceNumber%% |\n\n# ESelectPlusDpConfirmationDetails Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_Amount%% |\n| %%GLOBAL_Amount%% |\n| %%LNG_TransactionType%% |\n| %%GLOBAL_TransactionType%% |\n| %%LNG_DateAndTime%% |\n| %%GLOBAL_DateTime%% |\n| %%LNG_AuthorisationCode%% |\n| %%GLOBAL_AuthorisationCode%% |\n| %%LNG_ResponseCode%% |\n| %%GLOBAL_ResponseCode%% |\n| %%LNG_ISOCode%% |\n| %%GLOBAL_ISOCode%% |\n| %%LNG_ResponseMessage%% |\n| %%GLOBAL_ResponseMessage%% |\n| %%LNG_MerchantURL%% |\n| %%GLOBAL_MerchantURL%% |\n| %%LNG_CardholderName%% |\n| %%GLOBAL_CardholderName%% |\n| %%LNG_IssuerName%% |\n| %%GLOBAL_IssuerName%% |\n| %%LNG_IssuerConfirmation%% |\n| %%GLOBAL_IssuerConfirmation%% |\n| %%LNG_ReferenceNumber%% |\n| %%GLOBAL_ReferenceNumber%% |\n| %%LNG_InvoiceNumber%% |\n| %%GLOBAL_InvoiceNumber%% |\n\n# ESelectPlusUsConfirmationDetails Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_MerchantName%% |\n| %%GLOBAL_MerchantName%% |\n| %%LNG_MerchantURL%% |\n| %%GLOBAL_MerchantURL%% |\n| %%LNG_TransactionType%% |\n| %%GLOBAL_TransactionType%% |\n| %%LNG_DateAndTime%% |\n| %%GLOBAL_DateTime%% |\n| %%LNG_Amount%% |\n| %%GLOBAL_Amount%% |\n| %%LNG_ReferenceNumber%% |\n| %%GLOBAL_ReferenceNumber%% |\n| %%LNG_AuthorisationCode%% |\n| %%GLOBAL_AuthorisationCode%% |\n| %%LNG_ResponseCode%% |\n| %%GLOBAL_ResponseCode%% |\n| %%LNG_ResponseMessage%% |\n| %%GLOBAL_ResponseMessage%% |\n| %%LNG_CardholderName%% |\n| %%GLOBAL_CardholderName%% |\n| %%LNG_InvoiceNumber%% |\n| %%GLOBAL_InvoiceNumber%% |"
                        },
                        {
                          "type": "text",
                          "data": "# EstimatedShippingQuoteList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShippingQuotes%% |\n| %%LNG_UpdateShippingCost%% |\n| %%GLOBAL_DeliveryDisclaimer%% |\n\n# EstimatedShippingQuoteProduct Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductName%% |\n\n# EstimatedShippingQuote Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_ShippingMethod%% |\n| %%LNG_Price%% |\n| %%GLOBAL_ShippingQuoteRow%% |"
                        },
                        {
                          "type": "text",
                          "data": "# EventDate Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_EventDateNameRequired%% |\n| %%GLOBAL_EventDateName%% |\n| %%GLOBAL_EventDateMonthStyle%% |\n| %%GLOBAL_OverviewToMonths%% |\n| %%GLOBAL_EventDateDayStyle%% |\n| %%GLOBAL_OverviewToDays%% |\n| %%GLOBAL_EventDateYearStyle%% |\n| %%GLOBAL_OverviewToYears%% |\n| %%GLOBAL_EventDateLimitations%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ExpressCheckoutAddress Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AddressId%% |\n| %%GLOBAL_AddressType%% |\n| %%GLOBAL_AddressSelected%% |\n| %%GLOBAL_AddressLine%% |\n\n# ExpressCheckoutChooseAddress Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_UpperAddressType%% |\n| %%GLOBAL_HideChooseAddress%% |\n| %%GLOBAL_UseExistingAddress%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_AddressType%% |\n| %%GLOBAL_AddressList%% |\n| %%GLOBAL_HideShippingOptions%% |\n| %%GLOBAL_ShipToBillingName%% |\n| %%LNG_AlsoWantToShipToThisAddress%% |\n| %%GLOBAL_UseAddressTitle%% |\n| %%GLOBAL_AddNewAddress%% |\n| %%GLOBAL_HideCreateAddress%% |\n| %%GLOBAL_HideChooseAddress%% |\n| %%GLOBAL_CompiledFormFields%% |\n| %%GLOBAL_HideSaveAddress%% |\n| %%GLOBAL_SaveAddressChecked%% |\n| %%LNG_SaveAddressInAddressBook%% |\n| %%GLOBAL_HideShippingOptions%% |\n| %%GLOBAL_ShipToBillingName%% |\n| %%GLOBAL_ShipToAddressChecked%% |\n| %%GLOBAL_CompiledFormFieldJavascript%% |\n| %%LNG_ShipToThisAddress%% |\n| %%LNG_BillAndShipToAddress%% |\n| %%LNG_BillToThisAddress%% |\n\n# ExpressCheckoutChooseShipper Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_ExpressCheckoutSelectShippingProvider%% |\n| %%GLOBAL_ShippingQuotes%% |\n| %%LNG_Continue%% |\n| %%GLOBAL_DeliveryDisclaimer%% |\n\n# ExpressCheckoutConfirmation Snippet \n\n## Available Panels \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_HideCheckoutError%% |\n| %%GLOBAL_CheckoutErrorMsg%% |\n| %%GLOBAL_HideCheckoutSuccess%% |\n| %%GLOBAL_CheckoutSuccessMsg%% |\n| %%LNG_ReviewTheContentsOfYourOrder%% |\n| %%LNG_CartItems%% |\n| %%LNG_Qty%% |\n| %%LNG_ItemPrice%% |\n| %%LNG_ItemTotal%% |\n| %%GLOBAL_totals%% |\n| %%SNIPPET_CartItems%% |\n| %%GLOBAL_HideUseCoupon%% |\n| %%LNG_HC_giftcertificatecoupon%% |\n| %%GLOBAL_RedeemTitle%% |\n| %%GLOBAL_RedeemIntro%% |\n| %%LNG_CouponCode1%% |\n| %%LNG_Apply%% |\n| %%GLOBAL_HidePaymentOptions%% |\n| %%LNG_HowWouldYouLikeToPay%% |\n| %%GLOBAL_HideUseStoreCredit%% |\n| %%LNG_CheckoutUseStoreCredit%% |\n| %%GLOBAL_HideUseStoreCredit%% |\n| %%GLOBAL_HideLimitedCreditWarning%% |\n| %%GLOBAL_CheckoutStoreCreditWarning%% |\n| %%LNG_StoreCreditBalance%% |\n| %%GLOBAL_StoreCredit%% |\n| %%LNG_YourOrderTotal%% |\n| %%GLOBAL_AdjustedTotalCost%% |\n| %%GLOBAL_HideLimitedCreditWarning%% |\n| %%LNG_OutstandingOrderTotal%% |\n| %%GLOBAL_Remaining%% |\n| %%GLOBAL_HideRemainingStoreCredit%% |\n| %%LNG_RemainingStoreCredit%% |\n| %%GLOBAL_RemainingCredit%% |\n| %%GLOBAL_HideLimitedCreditPaymentOption%% |\n| %%LNG_CreditPaymentMethod%% |\n| %%GLOBAL_HideLimitedCreditWarning%% |\n| %%GLOBAL_StoreCreditPaymentProviders%% |\n| %%GLOBAL_CheckoutWith%% |\n| %%GLOBAL_HideCreditAltOptionList%% |\n| %%GLOBAL_CreditAlt%% |\n| %%GLOBAL_HidePaymentProviderList%% |\n| %%GLOBAL_PaymentProviders%% |\n| %%GLOBAL_HideOrderComments%% |\n| %%LNG_EnterOrderComments%% |\n| %%GLOBAL_OrderComments%% |\n| %%GLOBAL_HideOrderTermsAndConditions%% |\n| %%LNG_TermsAndConditions%% |\n| %%GLOBAL_HideTermsAndConditionsTextarea%% |\n| %%GLOBAL_OrderTermsAndConditions%% |\n| %%GLOBAL_AgreeTermsAndConditions%% |\n| %%GLOBAL_TermsAndConditionsLink%% |\n| %%GLOBAL_HideMailingListInvite%% |\n| %%LNG_HearFromUsViaEmail%% |\n| %%GLOBAL_HideMailingListInvite%% |\n| %%GLOBAL_NewsletterBoxIsTicked%% |\n| %%LNG_WouldLikeToReceiveNewsletter%% |\n| %%GLOBAL_HideOrderCheckBox%% |\n| %%GLOBAL_OrderBoxIsTicked%% |\n| %%LNG_NewsletterSpecialOffersText%% |\n| %%GLOBAL_HideButtomPaymentButton%% |\n| %%LNG_ProceedToPayment%% |\n| %%GLOBAL_PaymentButtonSwitch%% |\n| %%GLOBAL_ExpressCheckoutLoadPaymentForm%% |\n| %%LNG_TickArgeeTermsAndConditions%% |\n\n# ExpressCheckoutCreateAccount Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_EmailAddress%% |\n| %%GLOBAL_AccountEmail%% |\n| %%LNG_Password%% |\n| %%LNG_PasswordConfirm%% |\n\n# ExpressCheckoutShippingMethod Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AddressId%% |\n| %%GLOBAL_ShippingQuoteId%% |\n| %%GLOBAL_ShipperName%% |\n| %%GLOBAL_TransitTime%% |\n| %%GLOBAL_ShippingPrice%% |"
                        },
                        {
                          "type": "text",
                          "data": "# FacebookLikeButton Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_FrameWidth%% |\n| %%GLOBAL_FacebookButtonHref%% |"
                        },
                        {
                          "type": "text",
                          "data": "# FastCartThickBoxContent Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideThumbColumn%%% |\n| %%GLOBAL_fastCartProdImg%% |\n| %%GLOBAL_fastCartQuantityTxt%% |\n| %%GLOBAL_fastCartProdLink%% |\n| %%LNG_HC_quantity%% |\n| %%GLOBAL_fastCartProdTotal%% |\n| %%GLOBAL_HideCheckoutButton%% |\n| %%GLOBAL_CheckoutLink%% |\n| %%LNG_CheckoutButtonTitle%% |\n| %%LNG_HC_proceedcheckout%% |\n| %%GLOBAL_AdditionalCheckoutButtons%% |\n| %%LNG_OrderSubtotal%% |\n| %%GLOBAL_fastCartSubtotal%% |\n| %%LNG_YourCartContains%% |\n| %%GLOBAL_fastCartNumItemsTxt%% |\n| %%LNG_ContinueShopping%% |\n| %%LNG_Or%% |\n| %%GLOBAL_ShopPath%% |\n| %%LNG_ViewEditCart%% |\n| %%GLOBAL_HideSuggestiveCartContent%% |\n| %%LNG_YouMayAlsoLike%% |\n| %%GLOBAL_SuggestedProductListing%% |\n| %%LNG_QuantityAdded%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%LNG_SuggestiveCartIntro%% |"
                        },
                        {
                          "type": "text",
                          "data": "# FlyoutNode Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_FlyoutAttributes%% |\n| %%GLOBAL_FlyoutNodeUrl%% |\n| %%GLOBAL_FlyoutNodeLabel%% |\n| %%GLOBAL_FlyoutChildHtml%% |\n\n# FlyoutTree Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_FlyoutAttributes%% |\n| %%GLOBAL_FlyoutChildHtml%% |"
                        },
                        {
                          "type": "text",
                          "data": "# GiftWrappingWrapOptions Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideWrappingTitle%% |\n| %%LNG_Item%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ExtraClass%% |\n| %%LNG_GiftWrapping%% |\n| %%GLOBAL_GiftWrappingId%% |\n| %%LNG_ChooseGiftWrappingOption%% |\n| %%GLOBAL_WrappingOptions%% |\n| %%GLOBAL_GiftWrapPreviewLinks%% |\n| %%GLOBAL_HideGiftWrapMessage%% |\n| %%LNG_GiftMessage%% |\n| %%GLOBAL_GiftWrapMessage%% |\n| %%GLOBAL_HideWrappingSeparator%% |"
                        },
                        {
                          "type": "text",
                          "data": "# HomeCurrencyFlags Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CurrencyID%% |\n| %%GLOBAL_CurrencyFlagURL%% |\n| %%GLOBAL_CurrencyName%% |\n| %%GLOBAL_CurrencyClass%% |\n\n# HomeFeaturedProductsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_FeaturedProductsFeed%% |\n\n# HomeFeaturedProductsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ProductRatingImageDimensions%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# HomeNewProductsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_NewProductsFeed%% |\n\n# HomeNewProductsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ProductRatingImageDimensions%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# HomeRecentBlogsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_RecentBlogsFeed%% |\n\n# HomeSaleProductsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# InvoiceCartItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductAvailability%% |\n| %%GLOBAL_HideWrappingOptions%% |\n| %%LNG_GiftWrapping%% |\n| %%GLOBAL_GiftWrappingName%% |\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductTotal%% |\n\n# InvoiceCustomerDetails Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CustomerName%% |\n| %%GLOBAL_CustomerEmail%% |\n| %%GLOBAL_CustomerPhone%% |\n\n# InvoicePendingPaymentDetails Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_HeresHowtoPayforYourOrderUC%% |\n| %%LNG_PayForYourOrderHelpI%% |\n| %%LNG_YourOrderTotalIs%% |\n| %%GLOBAL_TotalCost%% |\n| %%GLOBAL_PaymentMessage%% |\n\n# InvoicePendingPaymentNotice Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_InvoicePendingPaymentText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# LogoImage Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPathNormal%% |\n| %%GLOBAL_CdnStorePath%% |\n| %%GLOBAL_ImageDirectory%% |\n| %%GLOBAL_StoreLogo%% |\n| %%GLOBAL_StoreName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# LogoText Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPathNormal%% |\n| %%GLOBAL_LogoText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# MaintenanceNotice Snippet \n\n### Available Variables \n|||\n|||\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_jQueryUIPath%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%LNG_AdminMaintenanceNoticeHeader%% |\n| %%LNG_AdminMaintenanceNotice%% |\n| %%GLOBAL_ShopPathNormal%% |\n| %%GLOBAL_ImageDirectory%% |\n| %%GLOBAL_StoreLogo%% |\n| %%GLOBAL_StoreName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# MessageBox Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_MsgBox_Type%% |\n| %%GLOBAL_MsgBox_Message%% |"
                        },
                        {
                          "type": "text",
                          "data": "# MobileSiteLink Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_MobileSiteURL%% |\n| %%LNG_MobileSite%% |"
                        },
                        {
                          "type": "text",
                          "data": "# MultiShippingItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_AddressFieldId%% |\n| %%GLOBAL_ShippingAddressSelect%% |"
                        },
                        {
                          "type": "text",
                          "data": "# OfflinePaymentMessage Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_YourOrderNumber%% |\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_OrderId%% |\n| %%LNG_HeresHowtoPayforYourOrder%% |\n| %%LNG_InstructionsForPaymentBelow%% |\n| %%LNG_HeresHowtoPayforYourOrderThanks%% |\n| %%GLOBAL_OrderTotal%% |\n| %%LNG_Outstanding%% |\n| %%GLOBAL_PaymentMessage%% |"
                        },
                        {
                          "type": "text",
                          "data": "# PageMenuDropDown Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SubMenuLinks%% |\n\n# PageMenu Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HasSubMenuClass%% |\n| %%GLOBAL_ActivePageClass%% |\n| %%GLOBAL_PageLink%% |\n| %%GLOBAL_PageName%% |\n| %%GLOBAL_SubMenu%% |\n\n# PageRssItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_RSSLink%% |\n| %%GLOBAL_RSSTitle%% |\n| %%GLOBAL_RSSDescription%% |\n\n# PageSubMenu Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_sPageLink%% |\n| %%GLOBAL_sPageName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# PinterestButton Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CurrentProductLink%% |\n| %%GLOBAL_InitialZoomImage%% |\n| %%GLOBAL_PinterestButtonDescription%% |"
                        },
                        {
                          "type": "text",
                          "data": "# PostTag Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_TagUrl%% |\n| %%GLOBAL_TagName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# PrintableInvoiceItemConfigurableField Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_FieldName%% |\n| %%GLOBAL_SKUValue%% |\n| %%GLOBAL_FieldValue%% |\n\n# PrintableInvoiceItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_invoiceItemClass%% |\n| %%GLOBAL_hideAddressColumn%% |\n| %%GLOBAL_addressColumnRowSpan%% |\n| %%GLOBAL_productShippingAddress%% |\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductSku%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_HideAttributes%% |\n| %%GLOBAL_ProductAttributes%% |\n| %%GLOBAL_HideVariationOptions%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_HideConfigurableFields%% |\n| %%GLOBAL_ProductConfigurableFields%% |\n| %%GLOBAL_HideGiftWrapping%% |\n| %%GLOBAL_ProductGiftWrapping%% |\n| %%GLOBAL_HideEventDate%% |\n| %%GLOBAL_ProductEventDate%% |\n| %%GLOBAL_HidePreOrder%% |\n| %%GLOBAL_ProductPreOrder%% |\n| %%GLOBAL_ProductCost%% |\n| %%GLOBAL_ProductTotalCost%% |\n\n# PrintableInvoice Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HeaderLogo%% |\n| %%GLOBAL_StoreName%% |\n| %%GLOBAL_InvoiceTitle%% |\n| %%GLOBAL_StoreAddressFormatted%% |\n| %%LNG_BillTo%% |\n| %%GLOBAL_BillingAddress%% |\n| %%LNG_Phone%% |\n| %%GLOBAL_BillingPhone%% |\n| %%GLOBAL_HideBillingEmail%% |\n| %%LNG_Email%% |\n| %%GLOBAL_BillingEmail%% |\n| %%GLOBAL_hideInvoiceShippingDetails%% |\n| %%LNG_ShipTo%% |\n| %%GLOBAL_ShippingAddress%% |\n| %%GLOBAL_ShippingPhone%% |\n| %%GLOBAL_HideShippingEmail%% |\n| %%GLOBAL_ShippingEmail%% |\n| %%LNG_Order%% |\n| %%GLOBAL_OrderId%% |\n| %%LNG_PaymentMethod%% |\n| %%GLOBAL_PaymentMethod%% |\n| %%LNG_DateOfOrder%% |\n| %%GLOBAL_OrderDate%% |\n| %%GLOBAL_hideInvoiceShippingDetails%% |\n| %%LNG_ShippingMethod%% |\n| %%GLOBAL_ShippingMethod%% |\n| %%LNG_OrderItems%% |\n| %%GLOBAL_hideAddressColumn%% |\n| %%LNG_ShippingAddress%% |\n| %%LNG_Quantity%% |\n| %%LNG_Code%% |\n| %%LNG_ProdName%% |\n| %%LNG_Price%% |\n| %%LNG_Total%% |\n| %%GLOBAL_ProductsTable%% |\n| %%GLOBAL_totals%% |\n| %%GLOBAL_HideComments%% |\n| %%LNG_Comments%% |\n| %%GLOBAL_Comments%% |\n\n# PrintablePackingSlipItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductSku%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_HideAttributes%% |\n| %%GLOBAL_ProductAttributes%% |\n| %%GLOBAL_HideVariationOptions%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_HideConfigurableFields%% |\n| %%GLOBAL_ProductConfigurableFields%% |\n| %%GLOBAL_HideGiftWrapping%% |\n| %%GLOBAL_ProductGiftWrapping%% |\n| %%GLOBAL_HideEventDate%% |\n| %%GLOBAL_ProductEventDate%% |\n| %%GLOBAL_ProductBinNumber%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ProductAddToCart Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_AddToCartButtonControlScript%% |\n| %%GLOBAL_CartLink%% |\n| %%GLOBAL_ProductOptionRequired%% |\n| %%GLOBAL_FastCartButtonJs%% |\n| %%GLOBAL_ProductId%%v |\n| %%SNIPPET_ProductFieldsList%% |\n| %%SNIPPET_VariationList%% |\n| %%GLOBAL_HideProductAttributeList%% |\n| %%GLOBAL_ProductAttributeList%% |\n| %%SNIPPET_EventDate%% |\n| %%GLOBAL_DisplayAdd%% |\n| %%GLOBAL_DisplayAddQty%% |\n| %%LNG_QuantityFull%% |\n| %%GLOBAL_DisplayAddQty%% |\n| %%GLOBAL_AddToCartQty%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_SiteColor%% |\n| %%GLOBAL_HideBulkDiscountLink%% |\n| %%LNG_BulkDiscountLink%% |\n| %%SNIPPET_SideAddItemSoldOut%% |\n| %%GLOBAL_ProductBulkDiscountThickBox%% |\n| %%GLOBAL_OptionMessage%% |\n| %%LNG_VariationSoldOutMessage%% |\n| %%LNG_InvalidQuantity%% |\n| %%LNG_EnterRequiredField%% |\n| %%LNG_InvalidFileTypeJS%% |\n| %%GLOBAL_ShowAddToCartQtyBox%% |\n| %%GLOBAL_ProductMinMaxQtyJavascript%% |\n| %%GLOBAL_EventDateJavascript%% |\n| - |\n| %%GLOBAL_HideSKU%% |\n| %%LNG_SKU%% |\n| %%GLOBAL_SKU%% |\n| %%GLOBAL_HideCondition%% |\n| %%LNG_Condition%% |\n| %%GLOBAL_ProductCondition%% |\n| %%GLOBAL_HideWeight%% |\n| %%LNG_Weight%% |\n| %%GLOBAL_ProductWeight%% |\n| %%GLOBAL_HideAvailability%% |\n| %%LNG_Availability%% |\n| %%GLOBAL_Availability%% |\n| %%GLOBAL_HideShipping%% |\n| %%LNG_Shipping%% |\n| %%GLOBAL_ShippingPrice%% |\n| %%GLOBAL_HideMinQty%% |\n| %%LNG_ProductMinQty%% |\n| %%GLOBAL_MinQty%% |\n| %%LNG_units%% |\n| %%GLOBAL_HideMaxQty%% |\n| %%LNG_ProductMaxQty%% |\n| %%GLOBAL_MaxQty%% |\n| %%LNG_units%% |\n| %%GLOBAL_HideCurrentStock%% |\n| %%GLOBAL_CurrentStockLabel%% |\n| %%GLOBAL_InventoryList%% |\n| %%GLOBAL_HideGiftWrapMessage%% |\n| %%LNG_GiftWrapping%% |\n| %%GLOBAL_GiftWrappingAvailable%% |\n| %%LNG_HC_quantity%% |\n| %%GLOBAL_ItemSoldOut%% |\n| %%LNG_ProductAddToCartLink%% |\n| %%GLOBAL_HideWishlist%% |\n| %%GLOBAL_HidePurchasingOptions%% |\n| %%LNG_AddToWishList%% |\n| %%GLOBAL_ShopPath%% |\n\n# ProductBreadCrumb Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_BreadcrumbItems%% |\n\n# ProductBulkDiscountThickBox Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_BulkDiscountThickBoxTitle%% |\n| %%LNG_BulkDiscountThickBoxIntro%% |\n| %%GLOBAL_BulkDiscountThickBoxRates%% |\n| %%LNG_CloseWindow%% |\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n\n# ProductCustomFieldItem Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_CustomFieldName%% |\n| %%GLOBAL_CustomFieldValue%% |\n\n# ProductExpectedReleaseDate Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ReleaseDate%% |\n\n# ProductFieldCheckbox Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_CheckboxFieldNameLeft%% |\n| %%GLOBAL_ProductFieldType%% |\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_ProductFieldInputSize%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldValue%% |\n| %%GLOBAL_CheckboxFieldNameRight%% |\n\n# ProductFieldInput Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_ProductFieldType%% |\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldInputSize%% |\n| %%GLOBAL_ProductFieldValue%% |\n| %%GLOBAL_HideCartFileName%% |\n| %%LNG_Currently%% |\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_ItemId%% |\n| %%GLOBAL_ProductFieldFileValue%% |\n| %%GLOBAL_HideDeleteFileLink%% |\n| %%LNG_Delete%% |\n| %%GLOBAL_HideFileHelp%% |\n| %%LNG_Size%% |\n| %%GLOBAL_FileSize%% |\n| %%LNG_Type%% |\n| %%GLOBAL_FileTypes%% |\n| %%GLOBAL_CurrentProductFile%% |\n\n# ProductFieldSelect Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldInputSize%% |\n| %%GLOBAL_SelectOptions%% |\n\n# ProductFieldTextarea Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductFieldRequired%% |\n| %%GLOBAL_ProductFieldName%% |\n| %%GLOBAL_ProductFieldId%% |\n| %%GLOBAL_FieldRequiredClass%% |\n| %%GLOBAL_ProductFieldValue%% |\n\n# ProductFindByCategoryItem Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_CatTrailLink%% |\n| %%GLOBAL_CatTrailName%% |\n\n# ProductFindByCategory Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_FindByCategoryItems%% |\n\n# ProductImageZoomer Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_ProdImageZoomJavascript%% |\n| %%GLOBAL_TPL_PATH%% |\n\n# ProductImagesLightBox Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |\n| %%GLOBAL_LightBoxImageList%% |\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductTinyBoxWidth%% |\n| %%GLOBAL_VisibleImageTotal%% |\n| %%GLOBAL_ZoomImageMaxWidth%% |\n| %%GLOBAL_ZoomImageMaxHeight%% |\n\n# ProductOptionListItem Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_OptionChooseText%% |\n| %%SNIPPET_OptionList%% |\n\n# ProductOptionList Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_OptionChooseText%% |\n| %%SNIPPET_OptionList%% |\n\n# ProductReviewBadCaptcha Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ReviewError%% |\n\n# ProductReviewItem Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_AlternateReviewClass%% |\n| %%GLOBAL_ReviewTitle%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ReviewRating%% |\n| %%LNG_PostedBy%% |\n| %%GLOBAL_ReviewName%% |\n| %%LNG_xOn%% |\n| %%GLOBAL_ReviewDate%% |\n| %%GLOBAL_ReviewText%% |\n\n# ProductReviewList Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ReviewStart%% |\n| %%GLOBAL_ProductReviews%% |\n\n# ProductReviewNextLink Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ReviewLink%% |\n| %%LNG_Next%% |\n\n# ProductReviewPaging Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_PrevRevLink%% |\n| %%LNG_ShowingReviews%% |\n| %%GLOBAL_ReviewStart%% |\n| %%GLOBAL_ReviewEnd%% |\n| %%LNG_Of%% |\n| %%GLOBAL_ProductNumReviews%% |\n| %%GLOBAL_NextRevLink%% |\n\n# ProductReviewPreviousLink Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ReviewLink%% |\n| %%LNG_Previous%% |\n\n# ProductTagCloudItem Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_FontSize%% |\n| %%GLOBAL_TagLink%% |\n| %%GLOBAL_TagProductCount%% |\n| %%GLOBAL_TagName%% |\n\n# ProductThumbImagePlaceholder Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductThumbWidth%% |\n| %%GLOBAL_ProductThumbHeight%% |\n| %%GLOBAL_ThumbImageURL%% |\n| %%GLOBAL_ImageDescription%% |\n\n# ProductThumbImage Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductThumbWidth%% |\n| %%GLOBAL_ProductThumbHeight%% |\n| %%GLOBAL_InitialZoomImage%% |\n| %%GLOBAL_TinyImageClickJavascript%% |\n| %%GLOBAL_ThumbImageURL%% |\n| %%GLOBAL_ImageDescription%% |\n\n# ProductTinyImage Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductTinyBoxHeight%% |\n| %%GLOBAL_ProductTinyBoxWidth%% |\n| %%GLOBAL_TinyImageOverJavascript%% |\n| %%GLOBAL_TinyImageClickJavascript%% |\n| %%GLOBAL_ProductThumbIndex%% |\n| %%GLOBAL_ProductMaxTinyHeight%% |\n| %%GLOBAL_ProductMaxTinyWidth%% |\n| %%GLOBAL_ProductThumbImageURL%% |\n| %%GLOBAL_ProductZoomImageURL%% |\n| %%GLOBAL_TinyImageTopPadding%% |\n| %%GLOBAL_TinyImageWidth%% |\n| %%GLOBAL_TinyImageHeight%% |\n| %%GLOBAL_ProductTinyImageURL%% |\n| %%GLOBAL_ImageDescription%% |\n\n# ProductUpdatesRadio Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductName%% |\n\n# ProductVariationListMultipleItem Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_OptionId%% |\n| %%GLOBAL_OptionValue%% |\n\n# ProductVariationListMultiple Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_VariationName%% |\n| %%GLOBAL_VariationNumber%% |\n| %%GLOBAL_VariationChooseText%% |\n| %%SNIPPET_OptionList%% |\n\n# ProductVariationListSingleItem Snippet\n\n## Available Variables\n|||\n|||\n| %%GLOBAL_VariationNumber%% |\n| %%GLOBAL_OptionId%% |\n| %%GLOBAL_OptionChecked%% |\n| %%GLOBAL_OptionValue%% |\n\n# ProductVariationListSingle Snippet\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_VariationName%% |\n| %%SNIPPET_OptionList%% |"
                        },
                        {
                          "type": "text",
                          "data": "# QuickSearchJs Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CdnAppPath%% |\n| %%GLOBAL_JSCacheToken%% |"
                        },
                        {
                          "type": "text",
                          "data": "# QuickViewJs Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_QuickViewButtonText%% |\n| %%GLOBAL_QuickViewButtonColor%% |\n| %%GLOBAL_QuickViewGradientColor%% |\n| %%GLOBAL_QuickViewTextColor%% |"
                        },
                        {
                          "type": "text",
                          "data": "# RecentBlog Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_BlogLink%% |\n| %%GLOBAL_BlogText%% |\n| %%GLOBAL_BlogPreview%% |"
                        },
                        {
                          "type": "text",
                          "data": "# RelatedSearchItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SearchId%% |\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_RelatedSearchQuery%% |\n| %%GLOBAL_RelatedSearchText%% |\n\n# SearchResultAjaxNews Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NewsURL%% |\n| %%GLOBAL_NewsTitle%% |\n| %%LNG_SearchTypeNewsItem%% |\n\n# SearchResultAjaxPage Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PageURL%% |\n| %%GLOBAL_PageTitle%% |\n| %%LNG_SearchTypeWebPage%% |\n| %%GLOBAL_PageSmallContent%% |\n\n# SearchResultAjaxProduct Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductNoImageClassName%% |\n| %%GLOBAL_ProductImage%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRatingImage%% |\n\n# SearchResultGrid Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSectionPaging%% |\n| %%GLOBAL_SectionPagingPrevious%% |\n| %%GLOBAL_SectionPagingNext%% |\n| %%LNG_Pages%% |\n| %%GLOBAL_SectionPaging%% |\n| %%GLOBAL_HideSectionSorting%% |\n| %%LNG_SortBy%% |\n| %%GLOBAL_SectionSortingOptions%% |\n| %%GLOBAL_SectionType%% |\n| %%GLOBAL_SectionExtraClass%% |\n| %%GLOBAL_SectionResults%% |\n\n# SearchResultNews Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_NewsURL%% |\n| %%GLOBAL_NewsTitle%% |\n| %%LNG_SearchTypeNewsItem%% |\n| %%GLOBAL_NewsSmallContent%% |\n\n# SearchResultPage Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PageURL%% |\n| %%GLOBAL_PageTitle%% |\n| %%LNG_SearchTypeWebPage%% |\n| %%GLOBAL_PageSmallContent%% |\n\n# SearchResultProductGrid Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%GLOBAL_ProductId%% |\n| %%LNG_Compare%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SearchResultProductList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_AddToCartQty%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_ProductDescription%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%LNG_Compare%% |\n| - |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SearchResultSectionContent Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SectionSearchResults%% |\n\n# SearchResultSectionProduct Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_CompareSelectMessage%% |\n| %%LNG_PleaseSelectAProduct%% |\n| %%GLOBAL_CompareLink%% |\n| %%GLOBAL_ListJS%% |\n| %%GLOBAL_CompareOnSubmit%% |\n| %%GLOBAL_CompareButtonTop%% |\n| %%GLOBAL_SectionSearchResults%% |\n| %%GLOBAL_CompareButton%% |\n\n# SearchResultsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_RSSURL%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_CategoryPopularProductsFeed%% |\n| %%LNG_SearchFeed%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SelectGiftWrapping Snippet\n\n##  Available Variables\n|||\n|||\n| %%GLOBAL_GiftWrappingTitle%% |\n| %%GLOBAL_ItemId%% |\n| %%GLOBAL_GiftWrapModalClass%% |\n| %%LNG_ChooseHowToWrapItems%% |\n| %%GLOBAL_HideSplitWrappingOptions%% |\n| %%LNG_WrapItemsTheSame%% |\n| %%SNIPPET_GiftWrappingOptionsSingle%% |\n| %%LNG_WrapItemsDifferently%% |\n| %%SNIPPET_GiftWrappingOptions%% |\n| %%LNG_Cancel%% |\n| %%LNG_Save%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SelectedTag Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_TagName%% |\n| %%GLOBAL_BlogUrl%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ShippingProviderItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShippingData%% |\n| %%GLOBAL_AddressId%% |\n| %%GLOBAL_ShipperId%% |\n| %%GLOBAL_ShippingProvider%% |\n| %%GLOBAL_ShippingPrice%% |\n| %%GLOBAL_TransitTime%% |\n\n# ShippingQuoteProduct Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_HideGiftWrapping%% |\n| %%LNG_GiftWrapping%% |\n| %%GLOBAL_GiftWrappingName%% |\n| %%GLOBAL_HideGiftMessagePreview%% |\n| %%LNG_GiftMessage%% |\n| %%GLOBAL_GiftMessagePreview%% |\n\n# ShippingQuote Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideAddressLine%% |\n| %%LNG_ShippedTo%% |\n| %%GLOBAL_AddressLine%% |\n| %%GLOBAL_HideItemList%% |\n| %%LNG_Items%% |\n| %%GLOBAL_ItemList%% |\n| %%LNG_ShippingProvider%% |\n| %%GLOBAL_ShippingProviders%% |\n| %%GLOBAL_HideHorizontalRule%% |"
                        },
                        {
                          "type": "text",
                          "data": "# ShopByBrandAllItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AllBrandsLink%% |\n| %%LNG_SeeAllBrands%% |\n\n# ShopByBrandItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_BrandName%% |\n| %%GLOBAL_BrandLink%% |\n\n# ShopByPriceItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PriceLink%% |\n| %%GLOBAL_PriceLow%% |\n| %%GLOBAL_PriceHigh%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SideAddItemSoldOut Snippet \n\n## Available Variables \n|||\n|||\n| %%LNG_CurrentlySoldOut1%% |\n| %%LNG_CurrentlySoldOut2%% |\n| %%LNG_HC_outofstock%% |\n\n# SideCartContentsCheckoutLink Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CheckoutLink%% |\n| %%LNG_Checkout%% |\n\n# SideCartItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductQuantity%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductOptions%% |\n| %%GLOBAL_ProductAttributes%% |\n| %%GLOBAL_ProductPrice%% |\n\n# SideCategoryList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_LastChildClass%% |\n| %%GLOBAL_CategoryLink%% |\n| %%GLOBAL_CategoryName%% |\n| %%GLOBAL_SubCategoryList%% |\n\n# SideCategoryNewProductsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_CatId%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_CategoryNewProductsFeed%% |\n\n# SideCategoryNewProducts Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SideCategoryPopularProductsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_CatId%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_CategoryPopularProductsFeed%% |\n\n# SideCategoryPopularProducts Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SideCategoryTopSellers Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SideCurrencySelectorCurrency Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_CurrencyFlagStyle%% |\n| %%GLOBAL_CurrencySwitchLink%% |\n| %%GLOBAL_CurrencySelected%% |\n| %%GLOBAL_CurrencyFlag%% |\n| %%GLOBAL_CurrencyName%% |\n\n# SideCustomCategoryList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_RootCatName%% |\n| %%GLOBAL_RootCatList%% |\n\n# SideNewProductsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_CatId%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_CategoryNewProductsFeed%% |\n\n# SideNewProducts Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SidePageLink Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_PageLink%% |\n| %%GLOBAL_PageName%% |\n\n# SidePopularProductsFeed Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%LNG_PopularProductsFeed%% |\n\n# SidePopularProducts Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_ProductRatingImageDimensions%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SideProductAlsoBoughtItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n\n# SideRecentlyViewedProducts Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_HideSideProductRecentlyViewedCompare%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SideRelatedProducts Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n\n# SideTopSellersFirst Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n\n# SideTopSellers Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductNumber%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SimilarProductsByCustomerViewsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideRating%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |\n| %%LNG_ProductAddToCartLink%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SimilarProductsByTagTag Snippet\n\n## Available Variables \n|||\n|||\n| %%GLOBAL_FontSize%% |\n| %%GLOBAL_TagLink%% |\n| %%GLOBAL_TagProductCount%% |\n| %%GLOBAL_TagName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SitemapLink Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SitemapURL_HTML%% |\n| %%LNG_Sitemap%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SitemapSection Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ModelType%% |\n| %%GLOBAL_ModelHeading%% |\n| %%GLOBAL_ModelBody%% |\n| %%GLOBAL_ModelHideAllLink%% |\n| %%GLOBAL_ModelSubsectionURL%% |\n| %%LNG_SitemapSeeAll%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SlideList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_Slide_Link_Url%% |\n| %%GLOBAL_Slide_Heading_Color%% |\n| %%GLOBAL_Slide_Heading_Text%% |\n| %%GLOBAL_Slide_Text_Color%% |\n| %%GLOBAL_Slide_Text_Text%% |\n| %%GLOBAL_Slide_Button_Hide%% |\n| %%GLOBAL_Slide_Button_Color%% |\n| %%GLOBAL_Slide_Button_Text%% |\n| %%GLOBAL_Slide_Image_Url%% |\n| %%GLOBAL_Slide_Image_AlternateText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SocialLink Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SocialMedia_Service_Url%% |\n| %%GLOBAL_UseThemeSettingsClass%% |\n| %%GLOBAL_SocialMedia_Service_Class%% |\n| %%GLOBAL_SocialMedia_Service_Name%% |\n\n# SocialSharingTabsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SharingActiveTab%% |\n| %%GLOBAL_SharingName%% |\n| %%GLOBAL_SharingIcon%% |\n| %%GLOBAL_SharingDisplay%% |"
                        },
                        {
                          "type": "text",
                          "data": "# SubBrandItemImage Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_width%% |\n| %%GLOBAL_height%% |\n| %%GLOBAL_SubBrandLink%% |\n| %%GLOBAL_SubBrandImage%% |\n| %%GLOBAL_SubBrandName%% |\n\n# SubBrandItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SubBrandLink%% |\n| %%GLOBAL_SubBrandName%% |\n\n# SubCatItemImage Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_width%% |\n| %%GLOBAL_height%% |\n| %%GLOBAL_SubCatLink%% |\n| %%GLOBAL_SubCatImage%% |\n| %%GLOBAL_SubCatName%% |\n\n# SubCatItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_SubCatLink%% |\n| %%GLOBAL_SubCatName%% |"
                        },
                        {
                          "type": "text",
                          "data": "# TagProductsItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_AlternateClass%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_HideCompareItems%% |\n| %%GLOBAL_ProductId%% |\n| %%LNG_Compare%% |\n| %%GLOBAL_HideActionAdd%% |\n| %%GLOBAL_ProductURL%% |\n| %%GLOBAL_ProductAddText%% |"
                        },
                        {
                          "type": "text",
                          "data": "# TopMenuGiftCertificates Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShopPathNormal%% |\n| %%LNG_GiftCertificates%% |"
                        },
                        {
                          "type": "text",
                          "data": "# UnformattedAddressLabel Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ShipAddressLine1%% |\n| %%GLOBAL_ShipAddressLine2%% |\n| %%GLOBAL_ShipSuburb%% |\n| %%GLOBAL_ShipState%% |\n| %%GLOBAL_ShipZip%% |\n| %%GLOBAL_ShipCountry%% |"
                        },
                        {
                          "type": "text",
                          "data": "# VideoListSide Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_VideoId%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_VideoTitleLong%% |\n| %%GLOBAL_VideoLength%% |"
                        },
                        {
                          "type": "text",
                          "data": "# VideoList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_VideoId%% |\n| %%GLOBAL_VideoTitleLong%% |\n| %%GLOBAL_VideoTitleShort%% |\n| %%GLOBAL_VideoDescriptionLong%% |\n| %%GLOBAL_VideoDescriptionShort%% |"
                        },
                        {
                          "type": "text",
                          "data": "# WishList Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_WishListID%% |\n| %%GLOBAL_WishListName%% |\n| %%GLOBAL_NumOfItems%% |\n| %%GLOBAL_WishListShared%% |\n| %%LNG_Edit%% |\n| %%LNG_Delete%% |\n| %%GLOBAL_ShareWishListLink%% |\n\n# WishListItem Snippet \n\n## Available Variables \n|||\n|||\n| %%GLOBAL_ProductId%% |\n| %%GLOBAL_ProductThumb%% |\n| %%GLOBAL_ProductLink%% |\n| %%GLOBAL_SearchTrackClass%% |\n| %%GLOBAL_ProductName%% |\n| %%GLOBAL_ProductPrice%% |\n| %%GLOBAL_ProductRating%% |\n| %%GLOBAL_IMG_PATH%% |\n| %%GLOBAL_HideProductRating%% |\n| %%GLOBAL_ShopPath%% |\n| %%GLOBAL_HideRemoveItemButton%% |\n| %%GLOBAL_WishListID%% |\n| %%GLOBAL_ItemId%% |\n| %%LNG_RemoveFromWishList%% |"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "/bigcommerce-for-wordpress": {
        "title": "BigCommerce for WordPress",
        "data": {
          "children": [
            {
              "title": "Getting Started",
              "route": {
                "path": "/getting-started"
              },
              "data": {
                "children": [
                  {
                    "title": "Introduction",
                    "route": {
                      "path": "/introduction"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\" id=\"introduction\">Introduction</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#introduction_how-it-works\">How it Works</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "BigCommerce for WordPress allows you to power content-driven WordPress storefronts with the ecommerce functionality of BigCommerce. Product data is pulled into WordPress as a custom post type, giving you the freedom to embed products in posts and pages to create a tailored shopping experience. The plugin utilizes the full suite of BigCommerce APIs, allowing shoppers to seamlessly complete a purchase end-to-end on WordPress.\n\nYou can use the BigCommerce for WordPress plugin as a building block to create an ecommerce solution that’s unique to your brand. Whether you want to link multiple WordPress storefronts to a single BigCommerce store or extend the open source plugin to create custom-made solutions, BigCommerce for WordPress makes it easy to combine the power of BigCommerce with the flexible presentation of WordPress.\n"
                        },
                        {
                          "type": "text",
                          "data": "## How It Works\n\nBigCommerce for WordPress connects your WordPress site to your BigCommerce store via API, and pulls all of the relevant data into a variety of database tables, some custom, some default WordPress. Products are a post type: product data is stored in the post table and product meta is stored in the post_meta table.\n\nOrders data is stored on the BigCommerce servers and is accessible in your WordPress site via API with custom code and via a nice UI in the BigCommerce admin. \n\nMost store options and settings are managed inside the BigCommerce UI, including Shipping, Taxes, and Payment Gateways.\n\n\n### Templating\n\nAll templates that render on the front end are found in the `/wp-content/plugins/bigcommerce/templates/public` directory. To\nOverride any template, create a `bigcommerce` directory in your theme and copy the template file to that directory.\n\nFor example, copy\n\n```\nwp-content/plugins/bigcommerce/templates/public/single-bigcommerce_product.php\n```\n\nto\n\n```\nwp-content/themes/<theme-name>/bigcommerce/single-bigcommerce_product.php\n```\n\nThen, edit `wp-content/themes/<theme-name>/bigcommerce/single-bigcommerce_product.php` to override the default content.\n\n**Note**: Most templates are used for rendering content inside of the content area of your theme's template. Only a few take over the entire page template. These may need modifications to match your theme.\n\n### Shopper Experience\n\nWhen a customer visits the store, the products they see are stored locally in WordPress. A cart is optional–when the customer clicks add-to-cart, they can either be directed to a cart page or delivered directly to the checkout page.\nWhen a shopper proceeds to checkout, they land on the BigCommerce checkout page in an embedded iframe, which can be styled to match your WordPress site. This creates a seamless experience for the shopper because they remain on your WordPress site and domain for the entire shopping experience. BigCommerce embedded checkout also allows you to leverage the built-in security and PCI-compliance of the BigCommerce checkout.\n\n### Channels\n\nChannels allow you to manage products in BigCommerce and sell them on other storefronts, like one or more WordPress sites, or in marketplaces, like Amazon and Facebook. A key concept is that the products listed on other channels are managed centrally from your BigCommerce store, so inventory is tracked neatly across all channels. This means that if all of your product ends up being sold through Amazon, your Facebook store will also be sold out.\n\n### WordPress as a Channel\n\nWhen using the WordPress plugin for BigCommerce, each connected WordPress site is considered another channel. This means that your WordPress store is aware of inventory levels, because those are monitored centrally in your BigCommerce store, and when an order is placed, it appears in the BigCommerce Order View UI along with orders received on other channels. Orders are labeled with the channel they originated from, to help you track sales data across multiple channels.\n\nWhile merchants traditionally sell primarily through their BigCommerce store and supplement with channels, it is possible to mask the main BigCommerce store and treat any given channel as the primary store. This would allow you to use WordPress as your primary store.\n",
                          "header": {
                            "anchor": "introduction_how-it-works"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Install",
                    "route": {
                      "path": "/install"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Install</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#install_requirements\">Requirements</a></li>\n        <li><a href=\"#install_ installation\">Installation</a></li>\n        <li><a href=\"#install_plugin-install-wordpress\">Plugin Installation in WordPress</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## System Requirements:\n\n* PHP: 5.6+ (7.1+ recommended)\n* MySQL: 5.5+ (5.6+ recommended)\n* WordPress: 4.8+\n* SSL\n* The PHP intl extension is recommended to enable better currency formatting",
                          "header": {
                            "anchor": "#install_requirements"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Installation\n\nTo install BigCommerce for WordPress, you’ll need to [install and activate the plugin](https://wordpress.org/plugins/bigcommerce/) in WordPress and connect your BigCommerce account. If you don’t already have an account, you will be prompted to create one. \n\nFor a walkthrough on installing and activating the plugin, see [Using BigCommerce for Wordpress](https://support.bigcommerce.com/s/article/BigCommerce-for-WordPress#installation) (BigCommerce Help Center).",
                          "header": {
                            "anchor": "#install_installation"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Setting Your Channel Name\n\nOnce connected, you’ll set up a new [Channel Name](https://support.bigcommerce.com/s/article/BigCommerce-for-WordPress#channel). This name will be used to identify this specific WordPress instance in BigCommerce when checking orders or listing products."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "Looking for multi-site instructions? See [Multi Site Setup](/bigcommerce-for-wordpress/setup/multi-site).",
                            "type": "info",
                            "title": "\nMulti-Site Instructions "
                          }
                        },
                        {
                          "type": "text",
                          "data": "After you’ve created your new channel name, the initial product sync will begin and you can begin configuring your plugin settings."
                        }
                      ]
                    }
                  },
                  {
                    "title": "App Compatibility",
                    "route": {
                      "path": "/app-compatibility"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "\n\t<h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n\t<h1 class=\"sub-docs-title\" id=\"introduction\">App Compatibility</h1>\n\n"
                        },
                        {
                          "type": "text",
                          "data": "When you use BigCommerce for WordPress, your storefront is rendered by WordPress rather than BigCommerce, so some apps that you use for a BigCommerce-powered storefront may no longer be compatible.\n\n### Supported Apps\n\nFor the most part, any app that operates solely on the backend can be used without modification on WordPress. This includes  apps that interface with our catalog, order, shipping, and customer APIs. You can find hundreds of compatible apps in these categories:\n\n* [Accounting & Tax](https://www.bigcommerce.com/apps/accounting-tax/)\n* [Catalog & Order Management](https://www.bigcommerce.com/apps/catalog-order-management/)\n* [Data Transfer & Migration Services](https://www.bigcommerce.com/apps/data-transfer-migration-services/)\n* [ERP](https://www.bigcommerce.com/apps/erp/)\n* [Sales Channels](https://www.bigcommerce.com/apps/sales-channels/)\n* [Shipping & Fulfillment](https://www.bigcommerce.com/apps/shipping-fulfillment/)\n\n### Unsupported Apps \n\nApps that modify the storefront are currently not supported. This includes [Customer Acquisition & Retention](https://www.bigcommerce.com/apps/customer-acquisition-retention/) apps show banners, pop-ups, or other storefront modifications.\n\nAlthough a specific BigCommerce app may not be available, you may be able to find an alternative in the WordPress Plugin Directory. For example, some companies, like [Mailchimp](https://mailchimp.com/), build both BigCommerce apps and WordPress plugins. Keep that in mind when searching for a solution."
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "It's also possible to integrate into BigCommerce for WordPress by creating additional plugins that hook into and extend functionality; for example, Bolt's WordPress plugin: [Bolt Checkout for BigCommerce](https://wordpress.org/plugins/bolt-checkout-bigcommerce/). For more information on how Bolt used BigCommerce for WordPress to build their plugin, see [How Bolt Built an Internet-Wide Checkout UX](https://medium.com/bigcommerce-developer-blog/how-bolt-built-an-internet-wide-checkout-ux-34c285fdb322).",
                            "title": "Bolt Checkout for BigCommerce"
                          }
                        },
                        {
                          "type": "text",
                          "data": "If you are a BigCommerce app developer and would like to help our merchants on WordPress too, reach out to our App Marketplace team at [appstore@bigcommerce.com](mailto:appstore@bigcommerce.com)."
                        }
                      ]
                    }
                  },
                  {
                    "title": "Supported Features",
                    "route": {
                      "path": "/supported-features"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Supported Features</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#supported_supported\">BigCommerce for Wordpress Supported Features</a></li>\n    <li><a href=\"#supported_unsupported\">BigCommerce for Wordpress Unsupported Features</a></li>\n    <li><a href=\"#supported_general\">General Product Roadmap</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## BigCommerce for Wordpress Supported Features\n\nThe open source BigCommerce for Wordpress plugin currently supports the following features and capabilities that are native to the BigCommerce platform and more:\n\n* Complex Product Catalog (600 SKUs per product, 250 product values for a single option)\n* Product Variants and Product Variant Pricing\n* Product Promotions\n* Secure Shopper Accounts and Logins with PCI Compliant Checkout\n* Cart, Checkout, Account Profiles, Sign In, Shipping & Returns, Gift Certificates, and Order History Pages for Shoppers\n* Ability to Overwrite Template Files\n* ShipperHQ Integration\n* Gutenberg and Classic Editor\n* Google Accelerated Mobile Pages \n* Google Address Autocomplete \n* Google Analytics Enhanced Ecommerce\n* Facebook Pixel \n* Enterprise Systems Integrations (connect to existing ERP suites, PIM software, OMS solutions, POS systems, or marketing automation tools)\n* Faceted Search with FacetWP and Search with SearchWP\n* Multi Site Selling\n* Multi-Channel Selling (eBay, Amazon, Facebook, Instagram, Google Shopping, Square and more) and Central Management (bulk listing, automatic inventory syncing, unified order and fulfillment management)\n\n### Supported Payment Gateways\n\nBigCommerce has over 65 payment gateway integrations available out-of-the box, serving 100+ countries and over 250 local payment methods. BigCommerce for Wordpress currently supports the following payment gateways:\n\n* PayPal Express (now called PayPal Checkout)\n* PayPal through Braintree\n* All non-hosted (API) gateways that are supported by Optimized One Page Checkout \n\nUnsupported Hosted Payment Gateways are Amazon Pay, AfterPay, Google Pay, Chase Pay, and Masterpass.\n\n",
                          "header": {
                            "anchor": "#supported_supported"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## BigCommerce for Wordpress Unsupported Features\n\nThe BigCommerce for Wordpress plugin does not currently support the following features: \n\n* Product Pick Lists and Bundled * Products\n* Product File Upload Field\n* Warranty, Availability Fields\n* Persistent Cart\n* Cart Preview\n* Cart Page Promotional Banners\n* Real-Time Syncing with BigCommerce Catalog Updates",
                          "header": {
                            "anchor": "#supported_unsupported"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## General Product Roadmap\n\nWe plan on supporting and improving the following features in the BigCommerce for Wordpress plugin:\n\n* Product Modifier Improvements\n* Product Variant Images\n* Moderation and Management of Product Reviews\n* Additional Theme Styling within Customizer\n* Multi-Currency \n* Shopper Wishlists\n* Abandoned Cart Saver \n* Shipping Calculation on Cart Page\n* Promotional Banner Support\n* Page Builder Plugins Support\n",
                          "header": {
                            "anchor": "supported_general"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Setup",
              "route": {
                "path": "/setup"
              },
              "data": {
                "children": [
                  {
                    "title": "Plugin Settings",
                    "route": {
                      "path": "/plugin-settings"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Plugin Settings</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#plugin-settings_api-keys\">API Keys</a></li>\n        <li><a href=\"#plugin-settings_product-sync\">Product Sync</a></li>\n        <li><a href=\"#plugin-settings_cart-settings\">Cart Settings</a></li>\n        <li><a href=\"#plugin-settings_theme-customizer\">Theme Customizer</a></li>\n        <li><a href=\"#plugin-settings_reviews\">Reviews</a></li>\n        <li><a href=\"#plugin-settings_gift-certificate-settings\">Gift Certificate Settings</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "BigCommerce settings for WordPress are found in the left admin menu in WordPress, under the BigCommerce menu item.",
                          "header": {}
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6012/1540476609033",
                          "header": {
                            "title": "Plugin Settings"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Product Sync\nOnce the plugin is connected, the plugin will import products using the BigCommerce API. This will run automatically using [WordPress cron](https://developer.wordpress.org/plugins/cron/), using the schedule set on the settings page (default: every five minutes).\nIf you choose to disable the cron job, you can set a server-side cron job to run the sync using WP-CLI. The command to import products is:\n\n`wp bigcommerce import products`\n\nProduct titles, descriptions, and post statuses can be edited in the WordPress admin. Your changes will be automatically synced with your BigCommerce channel and preserved during future imports.",
                          "header": {
                            "anchor": "plugin-settings_product-sync"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Cart Settings\n\nWhen the cart is enabled, visitors to your store can add products to carts before checkout. If it is disabled, the “Add to Cart” button becomes a “Buy Now” button, sending customers directly to checkout for that product. When the cart is enabled, the plugin will automatically create a page to host the cart shortcode, `[bigcommerce_cart]`. This shortcode will show the current visitor’s cart. To use a different page as your Cart page, first create a page, insert the cart shortcode, then come back to the settings page and select it from the dropdown. Note: the plugin automatically creates this page.\n\n### Currency Settings\n\nThe store’s currency code will be imported from the BigCommerce API as part of the product import process. If the PHP intl extension is available on your server, there is nothing else to configure. If it is not available, you will be presented with additional fields to control currency formatting. These will also be populated automatically from the API. Currency formatting can be filtered using the `bigcommerce/currency/format` filter.\n\n### Accounts and Registration\n\nUser accounts in WordPress will be connected to customer accounts in BigCommerce. If user registration is enabled in WordPress (the “Anyone can register” checkbox in **Settings** › **General** in the WordPress admin), customers will be able to register accounts and manage their profiles. \n\nThe plugin requires several pages to support user account management. These pages will all be created automatically. Each will contain a shortcode that renders the relevant content. If any are deleted, they will be automatically re-created for you. If you have multiple pages with these shortcodes, you may select which will be treated as canonical using the dropdowns in this settings section. \n\nThe “Support Email” field will be used to give customers an address to contact you with questions about orders.\nThe cart page should be excluded from any page caching system enabled for your site.",
                          "header": {
                            "anchor": "plugin-settings_cart-settings"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Theme Customizer\nThe visual presentation of your store can be customized using the WordPress theme customizer. Open the theme customizer and find the \"BigCommerce\" panel, which contains several sections.\n\n* **Buttons:** Control the labels applied to buttons for interacting with products.  \n\n* **Colors & Themes:** Customize colors to better match your theme.\n  \n* **Catalog Pages:** Control the presentation of lists of products. \n \n* **Product Single:** Control the presentation of individual product pages.  \n\n* **Product Archive:** Customize labels and filters for the prouct archive.",
                          "header": {
                            "anchor": "plugin-settings_theme-customizer"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Navigation Menus\n\nThe BigCommerce for WordPress plugin creates several pages, which can be added to the WordPress navigation menus using the standard WordPress admin(**Appearance** › **Menus**, or in the theme customizer). \nSome of these pages acquire special functionality when they are added to navigation menus:\n\n* **Cart:** The cart menu item will show the number of items in the current user's cart.\n  \n* **Login:** If the user is logged in, the login page menu item becomes a link to log out.\n  \n* **Register:** If user registration is disabled, the menu item will be disabled (it won't render on the front end of the site). If the user is logged in, the menu item will link to the user's account profile.  \n* **Account Profile, Order History, Addresses:** If the user is not logged in, these menu items will be disabled (they won't render on the front end of the site).",
                          "header": {
                            "anchor": "plugin-settings_navigation-menus"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Reviews\nReviews placed on the WordPress store are synced to BigCommerce for permanent storage as well as usage on other channels. Additionally, reviews are stored in a local, custom database for quick access.\nThe review system on WordPress is enabled or disabled by the site’s Comments setting, under Settings → Discussion in the WordPress admin. Additionally, each product has a Comments switch which can be used to override the global settings.\n",
                          "header": {
                            "anchor": "plugin-settings_reviews"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Gift Certificate Settings\nIf the gift certificate setting is enabled in WordPress, shoppers will be able to purchase gift certificates from the site. Gift certificate functionality relies on two pages that are automatically created by the plugin. Both pages can be replaced by pages you create containing the appropriate shortcodes.\n\n* Gift Certificate Page: The page where customers purchase gift certificates. \nUse the shortcode `[bigcommerce_gift_form]`\n\n* Gift Certificate Balance Page:\nThe page where customers can check their gift certificate balance. Use the shortcode`[bigcommerce_gift_balance]`\n",
                          "header": {
                            "anchor": "plugin-settings_gift-certificate-settings"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Product Import",
                    "route": {
                      "path": "/product-import"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Product Import</h1>"
                        },
                        {
                          "type": "text",
                          "data": "Products are imported from the BigCommerce API on a [WordPress cron job](https://developer.wordpress.org/plugins/cron/), or using a WP-CLI command: `wp bigcommerce import products`\n\nThe import runs in several stages:\n1. A list of all products from the API is added to a queue for processing.\n2. Any products on the site that are no longer available in the BigCommerce store are marked for deletion.\n3. The queue is processed in chunks (five items at a time), whereby products are imported, updated, or deleted to match the data in BigCommerce.\n4. Currency and other store information from the API updates settings in WordPress.\n"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "WordPress Currency Processing",
                            "body": "The WordPress sites you connect to your BigCommerce store will process in the same default currency as the BigCommerce store."
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Multisite",
                    "route": {
                      "path": "/multi-site"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Multisite Setup</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#multisite_getting\">Getting Your API Credentials</a></li>\n        <li><a href=\"#multisite_setting-up\">Setting up a WordPress Site Using API Account Credentials</a></li>\n    \t\t<li><a href=\"#multisite_additional\">Additional Resources</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "When connecting more than one WordPress site to your BigCommerce store, you need to use an API account to link them. If you try to connect using the 'connect your store' flow, which uses a BigCommerce app to streamline the connection, your first WordPress site will lose its connection to BigCommerce.\n\nMultiple sites can share the same API credentials or you can choose to create a new set of credentials for each site.\n",
                          "header": {
                            "anchor": "multisite_overview"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Getting Your API Credentials\n\n1. To get your store's API credentials, log into your BigCommerce store and head to `Advanced Settings` > `API Accounts`. Then, click the blue `Create API Account` button on the top left hand side.",
                          "header": {
                            "anchor": "multisite_getting"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1544044020003",
                          "header": {
                            "title": "Click 'Create API Account' to get credentials"
                          },
                          "config": {
                            "centered": true,
                            "fluid": true,
                            "bordered": true
                          }
                        },
                        {
                          "type": "text",
                          "data": "2. Click `Create API Account`. This will open up a screen that will ask you to define a name and OAuth Scopes for the API account. For the OAuth Scopes, select the following:\n\n* Checkout Content: `none`\n* Customers Login: `login`\n\nSelect `modify` for all other scopes.\n\nThe screen will also contain your API Path, which you will need for the WordPress Plugin. "
                        },
                        {
                          "type": "callout",
                          "data": {
                            "title": "API Account Name Field",
                            "body": "We suggest 'WordPress' for the name, although you can name it anything you'd like as long as it's unique within your API accounts and is more than 3 characters."
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1544044197137",
                          "header": {
                            "title": "Fill in the Name and OAuth Scopes."
                          },
                          "config": {
                            "centered": true,
                            "fluid": true,
                            "bordered": true,
                            "maxWidth": "600",
                            "maxHeight": "600"
                          }
                        },
                        {
                          "type": "text",
                          "data": "3. After you have finished setting a name and selecting scopes, press `Save`. You will then see a modal that contains the `Client ID`, `Client Secret` and `Access Token` necessary for the remaining fields in the WordPress API Credentials settings."
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1544044553372",
                          "header": {
                            "title": "API Credentials"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "You'll also see a `.txt` file download in your browser that contains the same information in an easy-to-read format, including your API Path again in case you didn't copy it before.",
                            "title": ".txt file fownload"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1544044589538",
                          "header": {
                            "title": ".txt file download"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Setting up a WordPress Site Using API Account Credentials\n\n1. To set up a WordPress site using this method, click `Enter your API credentials` on the welcome screen in the plugin. \n",
                          "header": {
                            "anchor": "multisite_setting-up"
                          }
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1544043727239",
                          "header": {
                            "title": "Wordpress Plugin Welcome Screen"
                          },
                          "config": {
                            "centered": true,
                            "fluid": true,
                            "bordered": true,
                            "maxWidth": "600",
                            "maxHeight": "600"
                          }
                        },
                        {
                          "type": "text",
                          "data": "After clicking the text, you will be asked for your store's API credentials and base path."
                        },
                        {
                          "type": "image",
                          "data": "//s3.amazonaws.com/user-content.stoplight.io/6116/1544043952871"
                        },
                        {
                          "type": "text",
                          "data": "2. Enter the API credentials on your WordPress site. Saving the API Credentials on your WordPress site will take you to name the channel that the plugin will create so that you can list products to the channel from within BigCommerce, and link orders back to the channel that come from the WP site. You can also link to an existing channel.\n\n\n_Congratulations, you're done setting up your additional site!_ \n"
                        },
                        {
                          "type": "callout",
                          "data": {
                            "body": "The WordPress sites you connect to your BigCommerce store will process in the same currency as the BigCommerce store.",
                            "title": "WordPress Currency Processing"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Additional Resources\n\n* [Multisite Ecommerce with Wordpress and BigCommerce](https://medium.com/bigcommerce-developer-blog/multi-site-ecommerce-with-wordpress-and-bigcommerce-40dee194f8a) (Developer Blog)",
                          "header": {
                            "anchor": "multisite_additional"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Shortcodes",
                    "route": {
                      "path": "/shortcodes"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Shortcodes</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#shortcode_product-shortcode\">Products Shortcode</a></li>\n        <li><a href=\"#plugin-settings_api-keys\">API Keys</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "Most of the plugin's functionality is exposed on the front-end of the site through shortcodes embedded on automatically created pages. The code controlling those shortcodes can be found in the classes in `src/BigCommerce/Shortcodes`."
                        },
                        {
                          "type": "text",
                          "data": "## Products Shortcode\n`[bigcommerce_product]`\n\nThe product shortcode can be used to include one or more products on other pages or posts on the WordPress site. Click the **Add Products** button above the editor to select products or build a dynamic query to include in the page.\n\nWhile the shortcode can be built using the button, it can also be created manually. It accepts a number of optional attributes:\n\n|Attribute|Expected Value|Example|\n|-|-|-|\n|`id`|A comma delimited list of BigCommerce product IDs        |`[bigcommerce_product id=\"11,13\"]`|\n|`post_id`|A comma delimited list of WordPress product post IDs|`[bigcommerce_product post_id=\"12,22\"]`|\n|`sku`|A comma delimited list of BigCommerce product SKUs|`[bigcommerce_product sku=\"ex44,ex47\"]`|\n|`category`|A comma delimited list of Product Category slugs|`[bigcommerce_product category=\"tee_shirts,pants\"]`|\n|`brand`| A comma delimited list of Brand slugs|`[bigcommerce_product brand=\"sony,rca\"]`|\n|`featured`|Set to 1 to limit the query to featured products  |`[bigcommerce_product featured=\"1\"]`|\n|`recent`|Set to 1 to limit the query to products imported in the last 2 days |`[bigcommerce_product recent=\"1\"]`|\n|`sale`|Set to 1 to limit the query to sale products|`[bigcommerce_product sale=\"1\"]`|\n|`search`|A search string to match against product titles, BigCommerce product IDs, or SKUs|`[bigcommerce_product search=\"CoolProduct Title\"]`|\n|`paged`| Set to 0 to disable pagination  |`[bigcommerce_product paged=\"0\"]`|\n|`per_page`|The number of products to show per page. Defaults to the value set in the theme customizer|`[bigcommerce_product per_page=\"12\"]`|\n|`order`|Whether to sort products in \"ASC\" or \"DESC\" order|`[bigcommerce_product order=\"ASC\"]`|\n|`orderby`|Which field to use for sorting. Accepts any field that WP_Query accepts (e.g., title, date)|`[bigcommerce_product orderby=\"title\"]`|\n",
                          "header": {
                            "anchor": "shortcode_product-shortcodes"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Other Shortcodes\n\n|Shortcode|Description|\n|-|-|-|\n|`[bigcommerce_signin_form]` |The form for users to log in to the site. If user registration is enabled, it will also give a link to the registration page.\n|`[bigcommerce_registration_form]`|A form to register a new customer account.\n|`[bigcommerce_cart]`|The items currently in the customer’s cart.\n|`[bigcommerce_account_profile]`|A form to update the customer’s profile.\n|`[bigcommerce_order_history]`|A list of the customer’s past orders.\n|`[bigcommerce_shipping_address_list]`|A list of the customer’s shipping addresses, and forms to add, remove, or update addresses.",
                          "header": {
                            "anchor": "shortcode_other-short"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        }
                      ]
                    }
                  },
                  {
                    "title": "Troubleshooting",
                    "route": {
                      "path": "/troubleshooting"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Troubleshooting</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#troubleshooting_add-cart-error\">Error on \"Add to Cart\" button, 404 error</a></li>\n        <li><a href=\"#troubleshooting_php-getenv\">PHP getenv() Errors</a></li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Error on \"Add to Cart\" button, 404 error\n\n### Symptom\n\n> Not Found: The requested URL /bigcommerce/cart/42 was not found on this server.  \n> Additionally, a 404 Not Found error was encountered while trying to use an ErrorDocument to handle the request.\n\n### Solution\nIn WordPress, go to Settings → Permalinks. Scroll to the bottom of the page and click Save. This resets the site’s redirects properly.",
                          "header": {
                            "anchor": "troubleshooting_add-cart-error"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## PHP getenv() Errors\n\n### Symptom: \nWhen in use the plugin floods the error log with the following:\n\n\n> PHP message: PHP Warning: getenv() expects exactly 1 parameter, 2 given in wp-content/plugins/bigcommerce-for-wordpress-0.11.1/bigcommerce.php on line 58\n\n\n### Solution\nYou can expect to see that error if you're on PHP version 5.4 or lower (the plugin requires 5.6+).",
                          "header": {
                            "anchor": "troubleshooting_php-getenv"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Extending the Plugin",
              "route": {
                "path": "/extending-the-plugin"
              },
              "data": {
                "children": [
                  {
                    "title": "AMP for the Plugin",
                    "route": {
                      "path": "/new-subpage"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">AMP for the BigCommerce WordPress plugin\n</h1>\n  <h4>Prepared by XWP for BigCommerce</h4>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n    <li><a href=\"#amp_whats-amp\">What’s AMP?</a></li>\t\n    <li><a href=\"#amp_real-world\">AMP real world example</a></li>\t\n    <li><a href=\"#amp_how-to\">How to enable AMP</a></li>\t\n    <li><a href=\"#amp_wordpress-amp\">WordPress AMP plugin support</a></li>\t\n    <li><a href=\"#amp_choosing\">Choosing an AMP mode</a></li>\n    <li><a href=\"#amp_previewing\">Previewing AMP</a></li>\n    <li><a href=\"#amp_amp-tools\">AMP Tools</a></li>\n    <li><a href=\"#amp_amp-for-seo\">AMP for SEO</a></li>\t\n    <li><a href=\"#amp_customizing-amp\">Customizing AMP templates</a></li>\t\n  </ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## What's AMP?\n\nAMP stands for Accelerated Mobile Pages and is an [open source project](https://www.ampproject.org/) created by Google and maintained by thousands of developers who care deeply about a better and faster web.\n\nAMP aims to load your web pages faster and thus providing a better end user experience. It does this by using a subset of HTML called AMP HTML which is very similar to HTML, with a few restrictions. There is also AMP JS which is a whitelisted and concise JavaScript library and most importantly the AMP Cache which search engines like Google use to serve AMP pages.\n\nWhile AMP is quite widely used in the publishing industry and many large news organizations have taken advantage of it, AMP has not yet been rolled out in any significant way to ecommerce stores. This means there is a big opportunity for online stores to get in early and start publishing AMP valid stores to increase traffic, conversion rates, and ultimately sales.",
                          "header": {
                            "anchor": "amp_whats-amp"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## AMP real world example\n\nA user who is looking to purchase a Christmas gift for a loved one would typically go to Google and search for the item. Let’s say they’re looking for a picture frame, they type “Picture Frame” in to the search box, and Google presents a search result page of websites and ecommerce stores selling picture frames.\n\nYou may notice when doing a Google search of your own, that Google now includes AMP specific results at the top of the SERP (search engine results page). It shows a carousel of AMP enabled content that is related to your search.\n\nBy clicking one of the results in the AMP carousel, let’s say it’s a product page of a picture frame that we searched for above, the website loads almost instantaneously. This is because Google has cached the AMP version of the websites which provide AMP valid markup and can show the pages as soon as a user clicks it without the user having to wait.\n\nSearch engine optimization is one of the key advantages of AMP, however user experience is also just as important of an advantage. A user browsing the AMP cached version of your site will feel like the pages are loading immediately which leads to higher conversions and more sales.\n\nThe good news is that BigCommerce for WordPress ships with AMP by default.",
                          "header": {
                            "anchor": "amp_real-world"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## How to enable AMP\n\nEnabling AMP in the BigCommerce for WordPress plugin is simple. All you need to do is download the [Official AMP Plugin for WordPress](https://wordpress.org/plugins/amp/), noting that its the “official” one by WordPress.com VIP, XWP, and Google.\n\nOnce you’ve downloaded the plugin, extract it to the plugins directory of your WordPress install and activate the plugin from WordPress admin.\n\nAlternatively, you can use the WordPress installer to install the Official AMP Plugin for WordPress by clicking Plugins in your WordPress admin sidebar and then Add New. Search for AMP, click Install Now, and then click Activate\n\nOnce the plugin is installed and activated, your store will immediately start serving an AMP version of the store when requested.\n",
                          "header": {
                            "anchor": "amp_how-to"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## WordPress AMP plugin support\n\nThe Official AMP Plugin for WordPress is currently at version 0.7.2 and the BigCommerce for WordPress plugin fully supports this version.\n\nVersion 1.0 of the Official AMP Plugin for WordPress is due to be released shortly and the great news is that BigCommerce for WordPress already fully supports this version of the AMP plugin. Version 1.0 brings a whole new set of features including the ability to validate AMP inside WordPress and we’re excited to be able to support that with the BigCommerce plugin.\n",
                          "header": {
                            "anchor": "amp_wordpress-amp"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Choosing an AMP mode\n\nThe official AMP Plugin for WordPress plugin allows you to serve AMP pages in 3 different ways. Let’s see what they are and which mode is best suited for you.\nClassic mode (AMP Plugin Version 0.1+)\nThis is the original mode for rendering AMP pages and it renders an AMP theme that is separate and different from your WordPress theme. Think of it as a whole new WordPress theme that is only displayed when the site is being viewed as AMP. The AMP theme is customizable and can be branded to align with your brand.\n\nGenerally this mode works out of the box and not much customization is needed to be done to your website for it to be AMP valid, this is because it uses specific a specific AMP valid theme. The draw back being that your website theme is different from the AMP theme.\n\n### Paired mode (AMP Plugin Version 0.7+)\n\nPaired mode uses your existing theme and through clever sanitization and post CSS processing, the plugin does it’s best to create an AMP valid version of it. Your AMP theme and WordPress theme look extremely similar except they’re just accessed from different URL’s.\n\nIn paired mode, there is usually additional development work needed to be done to your theme to make it AMP valid. The Official AMP Plugin for WordPress plugin does a really good job of reducing the size of the CSS and loading only what is needed on the page, but because of 3rd party plugins and custom theme development, you may need to conditionally remove parts of your site when AMP is valid for it to pass validation. The plugin helps you do this and in version 1.0 it has an interface to let you know of any failing AMP validations that need to be fixed.\n\n### Native mode (AMP Plugin Version 0.7+)\n\nNative mode is very much the same as paired mode in terms of rendering, however it will always render the AMP version of the theme. It’s basically always on AMP.\n\nFor more technical details on how the 3 modes are differentiated, please check out the [Theme docs for the Official AMP Plugin for WordPress](https://github.com/ampproject/amp-wp/wiki/Adding-Theme-Support).\n",
                          "header": {
                            "anchor": "amp_choosing"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Previewing AMP\n\nOnce AMP is enabled and you’ve decided on a mode, you will probably want to preview what your site looks like. This is easy to do but depending on the mode you selected, you would need to preview the AMP theme differently.\nClassic mode\nIf you’re running with classic, you can preview the mode in two ways:\n\n1. [yourdomain.com/products/product-slug/amp](yourdomain.com/products/product-slug/amp)\n\n2. [yourdomain.com/products/product-slug/?amp](yourdomain.com/products/product-slug/?amp)\n\nBy visiting any of these two URL’s the AMP version will be shown in a browser.\n\n### Paired Mode\nFor paired mode, you can only use the ?amp query parameter to show the AMP version in a browser. \n[yourdomain.com/products/product-slug/amp](yourdomain.com/products/product-slug/amp)\n\n### Native Mode\nAs discussed earlier, native mode will always display the AMP version of the theme.",
                          "header": {
                            "anchor": "amp_previewing"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## AMP Tools\n\nThere are a number of tools that you can use to help you with AMP development, testing, and maintenance.\n\n### AMP Test\nTo test if a webpage is AMP valid, you can use the AMP Test tool provided by Google:\nhttps://search.google.com/test/amp\n\n### AMP Validator\nThe official AMP project provides an AMP validator tool for validating and debugging AMP pages:\nhttps://validator.ampproject.org/\n\n### AMP Validator for Chrome\nIf you’re using Chrome, there is an AMP Validator extension that allows you to test AMP pages directly while browsing your website:\n[https://chrome.google.com/webstore/detail/amp-validator/nmoffdblmcmgeicmolmhobpoocbbmknc?hl=en](https://chrome.google.com/webstore/detail/amp-validator/nmoffdblmcmgeicmolmhobpoocbbmknc?hl=en)\n",
                          "header": {
                            "anchor": "amp_amp-tools"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## AMP for SEO\n\nEarlier we talked about how AMP can be beneficial for SEO purposes and driving web traffic to your store. Just by enabling the Official AMP Plugin for WordPress and BigCommerce for WordPress plugins, your AMP pages will automatically get indexed and cached by Google without having to submit or request this from Google. This is because the plugin adds a reference to the AMP page on each canonical web page that has an AMP version.\n\nThere is nothing additional that you need to do to get the added SEO benefit from AMP, it’s all handled for you by the plugin and Google crawler.\n",
                          "header": {
                            "anchor": "amp_amp-for-seo"
                          }
                        },
                        {
                          "type": "text",
                          "data": "## Customizing AMP templates\n\nThe BigCommerce for WordPress plugin ships with beautifully customized AMP templates that look great. You may however want to customize these AMP templates to be more aligned with your brand.\n\n### Classic Mode\nThe classic AMP theme can be customized in the WordPress Customizer. Click on `Appearance` on the WordPress Admin menu and then click `Customize`. The WordPress Customizer will then open and you’ll see a panel for AMP. Click `AMP` and then `Design` and from this panel you can change the look and feel.\n\nYou may want to go a step further an customize the actual HTML markup and output. This is customized in the same way as the non-AMP BigCommerce templates.\n\nFirstly, create a folder in your theme called `bigcommerce`. In this folder add an additional folder called `amp`. You can now copy and paste any template you would like to override from `bigcommerce/templates/public/amp` in to this folder and modify them. The BigCommerce plugin will look in your theme first for an AMP template before it looks at the template from the plugin.\n\n### Paired and Native Mode\n\nPaired and native mode uses your existing WordPress theme to display. So there is little to no customization needed in terms of the theme layout and branding. You may however want to override the html outputted by the components on a product archive or product page. To do this, you do exactly what you would in classic. Create a folder in your theme called `bigcommerce/amp/components`. In this folder copy and paste any components that you would want to override from the plugin `bigcommerce/templates/public/amp`.",
                          "header": {
                            "anchor": "amp_customizing-amp"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Customization Guide",
                    "route": {
                      "path": "/customization-guide"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<div><h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Customization Guide</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n        <li><a href=\"#customization-guide_introduction\">Introduction</a></li>\n        <li><a href=\"#customization-guide_file-structure\">File Structure</a></li>\n    \t\t<li><a href=\"#customization-guide_template-overrides\">Template Overrides</a></li>\t\n    \t\t<li><a href=\"#customization-guide_custom-css\">Custom CSS</a></li>\t\n    \t\t<li><a href=\"#customization-guide_hooks\">Hooks</a></li>\n    \t\t<li><a href=\"#customization-guide_styling-checkout\">Styling Checkout</a></li>\t\n    \t\t<li><a href=\"#customization-guide_email-templates\">Email Templates</a></li>\n    \t\t<li><a href=\"#customization-guide_external-resources\">External Resources</a></li>\t\n  </ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "## Introduction\n\nBigCommerce for WordPress is compatible out-of-the-box with all standard WordPress themes and includes full support for the Genesis theme framework. The plugin includes templates and stylesheets to render all of the elements and pages you need to merchandise your products and move shoppers through checkout, including:\n- Product Cards\n- Product Detail Pages\n- Product Listing Pages\n- Product Archive Page\n- Cart Page\n- Gift Certificate Page\n- Customer Account, Registration, and Order History Pages\n- Shipping & Returns Page\n- Checkout Page\n\nAlthough the plugin will work with any theme, as a theme developer, you can choose to offer  BigCommerce for WordPress support by styling the pages and elements created by the plugin to fit your theme’s design.\n\nPlugin developers can also fork [BigCommerce for WordPress on GitHub](https://github.com/bigcommerce/bigcommerce-for-wordpress), where the plugin is available as an open source project. We encourage developers to adapt BigCommerce for WordPress to fit any custom use case imaginable! If you’re building a custom feature that you think would benefit the wider community, consider submitting a pull request on GitHub to add your feature to the code base.\n\nThis guide will walk through the available options for developing themes that support BigCommerce for WordPress and extending the plugin through custom development.\n\n",
                          "header": {
                            "anchor": "customization-guide_introduction"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## File Structure\n### Templates\nAll of the BigCommerce for WordPress template files that render on the front end can be found in the templates/public folder. Templates within the components subfolder render smaller content blocks within your theme’s template, while two control the entire page:\n\n- `single-bigcommerce_product.php`: The template for rendering a single Product post.\n\n- `archive-bigcommerce_product.php`: The template for rendering the Product post type archive.\n\nThese templates may require modification to match the styling of your theme. Both templates call `get_header()` and `get_footer()` to render your theme's default header and footer. \nThe page content is rendered inside the wrapper template found in `components/page-wrapper.php`. By modifying this wrapper template to match the HTML markup of a template in your theme, you should have consistent styling across your site.\n### CSS\nBigCommerce for WordPress uses [PostCSS](https://postcss.org/), a JavaScript tool that accepts CSS with special additional syntax and compiles it into normal CSS. Combined with PostCSS plugins, PostCSS offers many of the core features of CSS preprocessors like Sass, with less overhead.\n\nPostCSS modules are contained in the asset/pcss directory. The assets/css directory contains both the minified and uncompressed versions of the CSS files created during the PostCSS build process.\n",
                          "header": {
                            "anchor": "customization-guide_file-structure"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Template Overrides\nWhen a WordPress plugin is updated, existing plugin files are overwritten by the new version. To ensure that your customizations persist through the update process, it’s important to use overrides in your theme files rather than editing plugin files directly.\n\nTo override any template, create a bigcommerce directory in your theme and copy the template file to that directory. \n\nExamples:\n\nCopy `templates/public/single-bigcommerce_product.php` to `bigcommerce/single-bigcommerce_product.php`\n\nCopy `templates/public/components/page-wrapper.php` to `bigcommerce/components/page-wrapper.php`\n\nAs WordPress loads, it will first check for a custom template override in your theme’s bigcommerce directory; if no custom template is found there, WordPress will fetch the built-in plugin template instead.\n### Required Classes\nBigCommerce for WordPress relies on specially named element classes for JavaScript functionality, and we strongly recommend leaving the default class names untouched as you create custom templates. You are, however, welcome to create additional classes.",
                          "header": {
                            "anchor": "customization-guide_template-overrides"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Custom CSS\nTo style BigCommerce for WordPress elements with custom CSS, add your CSS to your theme’s stylesheet rather than editing the plugin stylesheets directly. Your theme’s CSS will have specificity over styles applied by the plugin and will override the default styles.\n\nFor example, you might want to change the Add-To-Cart button from blue to orange by adding the following CSS to your theme’s stylesheet:\n\n```\nbutton.bc-btn.bc-btn--form-submit.bc-btn--add_to_cart {\n    background-color: #FF9C33;\n}\n```\n### Opting Out of BigCommerce Styles\nIf you wish to disable the built-in plugin styles entirely, you have the option to do so. In the WordPress theme customizer, navigate to BigCommerce > Colors & Theme and select Disable Plugin Styles from the CSS dropdown menu.\n",
                          "header": {
                            "anchor": "customization-guide_custom-css"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Hooks\nHooks are access points during the WordPress execution process where a developer can insert custom code. Hooks consist of two types: actions and filters. Both allow developers to execute custom code during the WordPress lifecycle. The difference lies in whether the function returns a value: \n\n\n- **Actions** execute a function with no output. Even if a value was returned it would be ignored. \n- **Filters** modify a variable and return a value, which is the modified version of the original variable.\n\nBigCommerce for WordPress provides over 100 hooks that you can use to extend and customize the plugin. For a comprehensive, searchable list of all available hooks, visit our [Code Reference](https://bigcommerce.moderntribe.qa/reference/hooks/).\n\n### Architectural Guidelines\nAll actions and filters called by the plugin begin with the `bigcommerce/` prefix (e.g., `bigcommerce/init`). If there is a dynamic component to the hook, it should be preceded by an equal sign (e.g., `bigcommerce/template=' . $template . '/path`).\n\nThe entire plugin operates through closures wrapped around calls to classes instantiated via a dependency injection container. In the event that you need to modify the core behavior of the plugin, there are several methods to get access to these closures.\n\n",
                          "header": {
                            "anchor": "customization-guide_hooks"
                          }
                        },
                        {
                          "type": "callout",
                          "data": {
                            "type": "error",
                            "title": "Warning",
                            "body": "Modifying core plugin functionality can lead to security vulnerabilities, data corruption, broken user workflows, and an overall unpleasant experience for you and your customers. Proceed at your own risk.\n"
                          }
                        },
                        {
                          "type": "text",
                          "data": "The `bigcommerce/init` action fires after the plugin has completed initializing all of its service providers and hooked them into WordPress. It passes two arguments: the primary plugin controller (an instance of the BigCommerce\\Plugin class) and the dependency injection container itself. The former is also available at any time after initialization by calling the function `bigcommerce()`.\n\nAn instance of each of the service providers found in the src/BigCommerce/Container directory can be accessed via this plugin controller, using the keys specified in `\\BigCommerce\\Plugin::load_service_providers()`. E.g., to get an instance of the BigCommerce\\Container\\Cart service provider, you would use `bigcommerce()->cart`.\n\nEvery action or filter callback created by one of the service providers is given an identifier so that it can be retrieved and, if appropriate, unhooked from WordPress. E.g., to unhook the closure that renders the product archive template and replace it with your own, you could do:\n\n```\nremove_action( 'bigcommerce/template/product/archive', bigcommerce()->templates->product_archive, 10 );\n\nadd_action( 'bigcommerce/template/product/archive', 'your_callback_function', 10, 2 );\n```"
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Styling Checkout\nBigCommerce for WordPress offers two possible checkout experiences, depending on whether the WordPress site has an installed SSL certificate.\n\nIf no SSL is detected, shoppers will be redirected to the BigCommerce checkout page, on the domain of the BigCommerce store. Because BigCommerce stores provide an SSL certificate by default, this ensures that the checkout page is always accessed on an encrypted domain. If you are using this checkout experience, visit our [Stencil documentation](https://developer.bigcommerce.com/stencil-docs/template-files/customize-stencil-checkout/optimized-one-page-checkout) to review all available options for styling the checkout page.\n\nIf an SSL is detected, shoppers will visit an embedded version of the BigCommerce checkout page, on your WordPress domain. This has the advantage of providing a seamless experience for the shopper. ",
                          "header": {
                            "anchor": "customization-guide_styling-checkout"
                          }
                        },
                        {
                          "type": "text",
                          "data": "### Embedded Checkout\n\nEmbedded Checkout includes settings within the WordPress theme customizer that allow you to adjust colors to blend the checkout page with your theme. For advanced users, the plugin provides the [Checkout Config hook](https://bigcommerce.moderntribe.qa/reference/hooks/bigcommerce-checkout-config/) to filter all available [Embedded Checkout config options](https://github.com/bigcommerce/checkout-sdk-js/blob/master/docs/interfaces/embeddedcheckoutoptions.md) (Github). Because of the method used to load the Embedded Checkout within the iframe, styling checkout must be accomplished by filtering the available `$checkout_config` options rather than targeting element classes or IDs with CSS.\n\nBelow, we define a function called `myCheckoutFunction()` that accepts `$checkout_config` as an argument. The function builds an array of checkout config styles that make the checkout step header text red, step number icons blue, and checkout body text green. Finally, we pass `myCheckoutFunction` to the Checkout Config hook. Try adding the below snippet to your theme’s `functions.php` file to test it out"
                        },
                        {
                          "type": "code",
                          "data": "function myCheckoutFunction($checkout_config) {\n  $checkout_config['styles']['heading']['color'] = '#C70039'; //red\n  $checkout_config['styles']['step']['icon']['backgroundColor'] = '#AE0BE6'; //purple\n  $checkout_config['styles']['step']['color'] = '#0BE640'; //green\n  return $checkout_config;\n}\nadd_filter( 'bigcommerce/checkout/config', 'myCheckoutFunction');\n",
                          "header": {
                            "title": "myCheckoutFunction()",
                            "subtitle": "functions.php"
                          },
                          "config": {
                            "mode": "js"
                          }
                        },
                        {
                          "type": "text",
                          "data": "Following this format, you can apply styles to other elements, like buttons, input fields, and checkboxes. See the full list of checkout elements that can be styled and which properties you can adjust in the [Embedded Checkout Styles documentation](https://github.com/bigcommerce/checkout-sdk-js/blob/master/docs/interfaces/embeddedcheckoutstyles.md) (Github).\n\nNote that styles apply globally to all elements on the checkout page. For example, styles applied to steps will apply to all steps rather than targeting only step 2 or 3."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Email Templates\nYou may wish to customize the built-in transactional emails sent from BigCommerce when an order is placed or updated. You can add custom text or images to email templates to reflect your store’s branding. \n\nEmail templates can be customized and enabled/disabled on an individual basis from the BigCommerce control panel. For more information, see [Customizing Emails](https://support.bigcommerce.com/s/article/Customizing-Emails).",
                          "header": {
                            "anchor": "customization-guide_email-templates"
                          }
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Additional Resources\n- [https://codex.wordpress.org/Theme_Development](https://codex.wordpress.org/Theme_Development)\n- [https://wpengine.com/resources/customize-wordpress-plugin/](https://wpengine.com/resources/customize-wordpress-plugin/)\n- [https://css-tricks.com/methods-overriding-styles-wordpress/](https://css-tricks.com/methods-overriding-styles-wordpress/)",
                          "header": {
                            "anchor": "customization-guide_external-resources"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Proxy REST API Endpoints",
                    "route": {
                      "path": "/proxy-rest-api-endpoints"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h1>Proxy REST API Endpoints</h1>\n<div class=\"otp\" id=\"no-index\">\n\t<h3> On This Page </h3>\n\t<ul>\n\t\t<li><a href=\"#proxy-api-endpoints_caching\"></a>Caching and Webhooks</li>\n    <li><a href=\"#proxy-api-endpoints_endpoints\"></a>Endpoints</li>\n\t</ul>\n</div>"
                        },
                        {
                          "type": "text",
                          "data": "BigCommerce for WordPress sets up several proxy REST endpoints that map requests to the BigCommerce API. This allows developers to build extensions using client-side requests without having to worry about cross-origin restrictions. This feature is useful for building extensions such as single-page store apps or progressive web apps, and it powers the AMP integration provided when the official AMP plugin for WordPress is active on the same site.\n\nBy default, these proxy REST endpoints are available under `your-wordpress-site.com/wp-json/bc/v3/`, with request routes mapping to those documented in the BigCommerce Dev Center's API Reference. For example, `your-wordpress-site.com/wp-json/bc/v3/catalog/products` returns data from the corresponding BigCommerce API endpoint and accepts all the same parameters.\n\nMost of the WordPress proxy REST endpoints are publicly queryable, with authentication happening automatically using plugin settings. For security purposes, however, some potentially sensitive data is filtered out of the WordPress response. Those fields are noted in the table below."
                        },
                        {
                          "type": "text",
                          "data": ""
                        },
                        {
                          "type": "text",
                          "data": "## Caching and Webhooks\nBy default, GET requests under `/catalog` are cached for ten minutes in the object cache -- or via WordPress transients if object caching is not available -- and a BigCommerce webhook is used to bust cached data related to a product when it is updated in BigCommerce or its inventory data changes. This default caching implementation can be overridden using the `bigcommerce/proxy/result_pre` WordPress filter. See the plugin customization guide for details on overriding core plugin functionality.",
                          "header": {
                            "anchor": "proxy-api-endpoints_caching"
                          }
                        },
                        {
                          "type": "text",
                          "data": "",
                          "header": {}
                        },
                        {
                          "type": "text",
                          "data": "## Endpoints\n|URL|Description|Methods|Excluded Fields\n|||||\n|[`/catalog/products(/*)`](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/products/getproducts)|Endpoints for products and product-related data such as reviews, categories, and variants|`GET`|bin_picking_number, cost_price, date_created, date_modified, inventory_tracking, layout_file, product_tax_code, search_keywords, sku_id, tax_class_id, total_sold, view_count; **If price_id_hidden is true**: map_price, price, retail_price, sale_price; **If is_condition_shown is false**: condition; **If is_preorder_only is true**: preorder_message, prorder_release_date\n|[`/catalog/products/[product-id]/variants/(*)`](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-variants/getvariantsbyproductid)|Fetch variants associated with a product|`GET`|cost_price, sku_id; **If associated product's is_price_hidden is true**: calculated_price, map_price, price, retail_price, sale_price\n|[`/catalog/products/[product-id]/images/(*)`](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-images/getproductimages)|Fetch images associated with a product|`GET`|date_modified\n|[`/catalog/products/[product-id]/reviews(/*)`](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/product-reviews/getproductreviews)|Fetch reviews associated with a product|`GET`|date_created, date_modifed, date_reviewed, email, status (**note: reviews are filtered out if status is not `approved`**)\n|[`/catalog/categories(/*)`](https://developer.bigcommerce.com/api-reference/catalog/catalog-api/category/getcategories)|Fetch category listings or individual categories by ID|`GET`|views\n|[Additional `/catalog` endpoints](https://developer.bigcommerce.com/api-reference/catalog/catalog-api)| See BigCommerce API docs |`GET`\n|`/channels(/*)`|BigCommerce channels endpoints|`GET`\n|`/channels/[channel-id]/site`||`GET`|\n|[`/carts`](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api/cart/postcarts)|Creates a cart]|`POST`, `PUT`\n|[`/carts/[cart-id]`]()|Fetch, update, and delete a cart by cart ID|`GET`, `POST`, `PUT`, `DELETE`|\n|[`/carts/[cart-id]/items(/[item-id])`](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api/cart/postcartscartiditems)|Create, update, and delete cart items|`POST`, `PUT`, `DELETE`|\n|[`/carts/[cart-id]/redirect_urls/`](https://developer.bigcommerce.com/api-reference/cart-checkout/server-server-cart-api/cart/postcartscartidredirecturls)|Fetch a cart's redirect URLs|`POST`, `PUT`|",
                          "header": {
                            "anchor": "#proxy-api-endpoints_endpoints"
                          }
                        }
                      ]
                    }
                  },
                  {
                    "title": "Code Reference",
                    "route": {
                      "path": "/code-reference"
                    },
                    "data": {
                      "blocks": [
                        {
                          "type": "html",
                          "data": "<h3 class=\"sub-docs-type\" id=\"bigcommerce-for-wordpress\">BigCommerce for Wordpress</h3>\n<h1 class=\"sub-docs-title\">Code Reference</h1>"
                        },
                        {
                          "type": "text",
                          "data": "Search the BigCommerce for WordPress codebase for detailed entries on available hooks, functions, classes and methods. Do a deep dive, and browse the building blocks you can use to extend and customize the plugin.\n\n[View the code reference here](https://bigcommerce.moderntribe.qa/)"
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "title": "Changelog",
              "route": {
                "path": "/changelog"
              },
              "data": {
                "children": [
                  {
                    "title": "BigCommerce for Wordpress Changelog",
                    "route": {
                      "path": "/plugin-changelog"
                    },
                    "data": {}
                  }
                ]
              }
            }
          ]
        }
      },
      "/stencil-cornerstone-license": {
        "title": "Stencil and Cornerstone License",
        "data": {
          "$ref": "./stencil-licenses.html"
        }
      },
      "/contributing": {
        "title": "Contributing",
        "data": {
          "children": [
            {
              "title": "Style Guide",
              "route": {
                "path": "/style-guide"
              },
              "data": {
                "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/_styleguide.md"
              }
            },
            {
              "title": "Components",
              "route": {
                "path": "/components"
              },
              "data": {
                "$ref": "https://raw.githubusercontent.com/bigcommerce/dev-docs/master/markdown/_components.md"
              }
            }
          ]
        }
      }
    },
    "theme": {
      "background": "#4d34c6",
      "primary": "#4b71fc",
      "secondary": "#2553fb"
    },
    "logo": "https://cdn6.bigcommerce.com/s-qtmbtj/product_images/uploaded_images/bigcommerce-logomark-darkbg.png",
    "meta": {
      "title": "BigCommerce Dev Center - Theme Development & API Documentation",
      "favicon": "https://www.bigcommerce.com/assets/images/favicons/favicon-96x96.png",
      "description": "Build apps and themes for thousands of successful merchants on our growing ecommerce platform."
    }
  }