{
    "openapi": "3.0.0",
    "info": {
      "title": "Storefront API Authentication Token",
      "version": "1.0",
      "description": "An OpenAPI Document for Storefront API Token generation via Bigcommerce v3 API.",
      "termsOfService": "http://www.bigcommerce.com/terms"
    },
    "tags": [
      {
        "name": "Storefront API Auth",
        "description": "Bigcommerce Storefront API Auth API Definition."
      }
    ],
    "servers": [
      {
        "url": "https://api.bigcommerce.com/stores/{store_id}/v3",
        "variables": {
          "store_id": {
            "default": "unknown"
          }
        }
      }
    ],
    "paths": {
      "/storefront/api-token": {
        "post": {
          "tags": [
            "Storefront API Auth"
          ],
          "description": "Creates a Storefront API token.",
          "operationId": "createToken",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPostSimple"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A storefront API access token is returned.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TokenResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Invalid JSON request body - missing or invalid data.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        },
        "delete": {
          "tags": [
            "Storefront API Auth"
          ],
          "description": "Revoke access for a Storefront API token.",
          "operationId": "revokeToken",
          "parameters": [
            {
              "in": "header",
              "name": "Sf-Api-Token",
              "required": true,
              "description": "An existing JWT token that you want to revoke.",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "A storefront API token revocation has been scheduled.",
              "content": {
                "applicaton/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Invalid JWT Token provided or missing JWT token header",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      },
      "/storefront/api-token-customer-impersonation": {
        "post": {
          "tags": [
            "Storefront API Auth"
          ],
          "description": "Creates a Storefront API token that allows for customer impersonation.",
          "operationId": "createTokenWithCustomerImpersonation",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenPostImpersonation"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A storefront API access token that allows for customer impersonation is returned.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TokenResponse"
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized - the v3 Auth client ID or token in the request are not a valid combination for this store.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "403": {
              "description": "Missing scope - the v3 Auth token is valid but does not have proper permissions to access this endpoint.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            },
            "422": {
              "description": "Invalid JSON request body - missing or invalid data",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ErrorResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "TokenPostImpersonation": {
          "type": "object",
          "properties": {
            "channel_id": {
              "type": "integer",
              "description": "Channel ID for requested token"
            },
            "expires_at": {
              "type": "number",
              "format": "double",
              "description": "Unix timestamp (UTC time) defining when the token should expire."
            }
          },
          "required": [
            "channel_id",
            "expires_at"
          ]
        },
        "TokenPostSimple": {
          "type": "object",
          "allOf": [
            {
              "$ref": "#/components/schemas/TokenPostImpersonation"
            },
            {
              "type": "object",
              "properties": {
                "allowed_cors_origins": {
                  "type": "array",
                  "description": "List of allowed domains for Cross-Origin Request Sharing.",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          ]
        },
        "TokenResponse": {
          "type": "object",
          "properties": {
            "data": {
              "$ref": "#/components/schemas/Token"
            },
            "meta": {
              "type": "object"
            }
          }
        },
        "Token": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "description": "JWT Token for accessing the Storefront API"
            }
          }
        },
        "ErrorResponse": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BaseError"
            },
            {
              "type": "object",
              "properties": {
                "errors": {
                  "$ref": "#/components/schemas/DetailedErrors"
                }
              }
            }
          ]
        },
        "BaseError": {
          "type": "object",
          "description": "Error payload for the BigCommerce API.\n",
          "properties": {
            "status": {
              "description": "The HTTP status code.\n",
              "type": "integer"
            },
            "title": {
              "description": "The error title describing the particular error.\n",
              "type": "string"
            },
            "type": {
              "type": "string"
            }
          }
        },
        "DetailedErrors": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    }
  }