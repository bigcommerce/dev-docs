swagger: '2.0'
info:
  title: Storefront Carts
  description: >-
    ### Cart

    The Storefront Cart does not use API Tokens and allows for cart data to be
    scraped directly from the front end or used in a Stencil Theme.


    See [Best
    Practices](https://developer.bigcommerce.com/api-docs/getting-started/best-practices)
    to learn about properly querying this resource.


    Notes:

    - The Try It Now at each endpoint will not work. Please see [Cart and
    Checkout](/api-docs/cart-and-checkout/cart-and-checkout-overview) for a
    script that can be used to get Cart details.

    - cartId is the same as the checkoutId.

    - Carts are valid for 30 days after the last modification. A modification
    includes the initial cart creation or editing the existing cart.

    - Redirect URLs can be generated only from carts created using the
    server-to-server cart API. To restore a cart that was created on the
    storefront--either by a shopper or the Storefront Cart API--first recreate
    the cart using the server-to-server Cart API.
  version: '1.0'
consumes:
  - application/json
produces:
  - application/json
paths:
  /carts:
    get:
      parameters:
        - name: include
          type: string
          in: query
          description: >-
            To return product options add one of the following include:


            `lineItems.physicalItems.options`: The Cart returns an abbreviated
            result. Use this to return physical items product options. Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options`:  The Cart returns an abbreviated
            result. Use this to return digital items product options.  Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options,lineItems.physicalItems.options`: 
            The Cart returns an abbreviated result. Use this to return digital
            and physical options. Can also be used in a /POST to have the
            extended Cart object return.
          default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
          enum:
            - lineItems.physicalItems.options
            - lineItems.digitalItems.options
            - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      tags:
        - Cart
      responses:
        '200':
          $ref: '#/responses/CartResponse'
      summary: Get a Cart
      description: >-
        Returns a *Cart*. 


        By default, the cart response will return abbreviated details for cart
        line items. To get full details of selected product options, use the
        following query parameters: 


        - Physical products only: `?include=lineItems.physicalItems.options `

        - Digital products only: `?include=lineItems.digitalItems.options`

        - Both physical and digital items:
        `?include=lineItems.digitalItems.options,lineItems.physicalItems.options`
      operationId: getACart
    post:
      description: >-
        Creates a *Cart*.


        **Required Fields**

        * line_items object

        * gift_certificates object – only if adding a gift certificate


        **Notes**


        Cart ID is generated in the response.


        To add a product with a mix of variants and options, add
        `optionSelections` to the `lineItems` object. `optionSelections` accepts
        `optionId` and `optionValue`. 


        The redirect url endpoint does not work using the Storefront Cart. At
        this time, shoppers can not be directed to any carts or checkouts
        created using the Storefront APIs. 
      parameters:
        - name: cartData
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCartPost'
          x-examples:
            Simple Product:
              lineItems:
                - quantity: 5
                  productId: 107
            Product with Variant: >-
              {
                "lineItems": [
                  {
                    "quantity": 2,
                    "productId": 107,
                    "variantId": 185
                  }
                ]
              }

              //This works when a product can be specified purely by a variant,
              without any other required options.
            Variant and Modifiers: |-
              {
                  "lineItems":[
                      {
                          "quantity": 2,
                          "productId": 107,
                          "variantId": 185,
                          "optionSelections": [
                              {
                                "optionId": 134,
                                "optionValue": 116
                              },
                              {
                                "optionId": 135,
                                "optionValue": 118
                              }
                          ]
                      }
                  ]
              }
            Several Variants and Modifiers: |-
              {
                "lineItems": [
                  {
                    "quantity": 1,
                    "productId": 77,
                    "optionSelections": [
                      {
                        "optionId": 120,
                        "optionValue": 69
                      },
                      {
                        "optionId": 121,
                        "optionValue": 10
                      },
                      {
                        "optionId": 124,
                        "optionValue": 106
                      },
                      {
                        "optionId": 122,
                        "optionValue": "Hello"
                      },
                      {
                        "option_id": 123,
                        "optionValue": 104
                      }
                    ]
                  }
                ]
              }
        - name: include
          type: string
          in: query
          description: >-
            To return product options add one of the following include:


            `lineItems.physicalItems.options`: The Cart returns an abbreviated
            result. Use this to return physical items product options. Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options`:  The Cart returns an abbreviated
            result. Use this to return digital items product options.  Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options,lineItems.physicalItems.options`: 
            The Cart returns an abbreviated result. Use this to return digital
            and physical options. Can also be used in a /POST to have the
            extended Cart object return.
          default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
          enum:
            - lineItems.physicalItems.options
            - lineItems.digitalItems.options
            - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      tags:
        - Cart
      responses:
        '200':
          $ref: '#/responses/CartResponse'
      summary: Create a Cart
      operationId: createACart
  '/carts/{cartId}/items':
    post:
      description: >-
        Adds a line items to the *Cart*.


        **Required Fields**

        * line_items object

        * gift_certificates object – Only if adding a gift certificate to for
        shopper purchase
      parameters:
        - name: cartId
          in: path
          required: true
          description: This cart's unique ID.
          type: string
          format: UUID
        - name: ItemData
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCartPost'
          x-examples:
            application/json:
              lineItems:
                - quantity: 5
                  productId: 161
                  variantId: 55
              giftCertificates:
                - sender:
                    name: Jane Doe
                    email: janedoe@email.com
                  recipient:
                    name: John Doe
                    email: johndoe@email.com
                  amount: 10
                  theme: Celebration
                  quantity: 1
                  message: Thank You!
        - name: include
          type: string
          in: query
          description: >-
            To return product options add one of the following include:


            `lineItems.physicalItems.options`: The Cart returns an abbreviated
            result. Use this to return physical items product options. Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options`:  The Cart returns an abbreviated
            result. Use this to return digital items product options.  Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options,lineItems.physicalItems.options`: 
            The Cart returns an abbreviated result. Use this to return digital
            and physical options. Can also be used in a /POST to have the
            extended Cart object return.
          default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
          enum:
            - lineItems.physicalItems.options
            - lineItems.digitalItems.options
            - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      tags:
        - Cart Items
      responses:
        '200':
          $ref: '#/responses/CartResponse'
      summary: Add Cart Line Items
      operationId: addCartLineItem
  '/carts/{cartId}/items/{itemId}':
    put:
      description: >-
        Updates a *Cart* line item. Updates an existing, single line item in the
        cart.


        **Notes**


        Currently only updating the item quantity is supported.


        If a variant needs to be changed or updated, the product will need to be
        removed and re-added to the cart with the correct variants using the
        [Add Cart Line
        Items](/api-reference/cart-checkout/storefront-cart-api/cart-items/addcartlineitem)
        endpoint.
      parameters:
        - name: cartId
          in: path
          required: true
          description: This cart's unique ID.
          type: string
          format: UUID
        - name: itemId
          in: path
          required: true
          description: This item's ID.
          type: string
          format: number
        - name: lineItem
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateCartPost'
          x-examples:
            application/json:
              lineItem:
                quantity: 10
              giftCertificate:
                name: Jane Doe
                theme: General
                amount: 0
                quantity: 0
                sender: {}
                recipient: {}
        - name: include
          type: string
          in: query
          description: >-
            To return product options add one of the following include:


            `lineItems.physicalItems.options`: The Cart returns an abbreviated
            result. Use this to return physical items product options. Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options`:  The Cart returns an abbreviated
            result. Use this to return digital items product options.  Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options,lineItems.physicalItems.options`: 
            The Cart returns an abbreviated result. Use this to return digital
            and physical options. Can also be used in a /POST to have the
            extended Cart object return.
          default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
          enum:
            - lineItems.physicalItems.options
            - lineItems.digitalItems.options
            - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      tags:
        - Cart Items
      responses:
        '200':
          $ref: '#/responses/CartResponse'
      summary: Update Cart Line Item
      operationId: updateCartLineItem
    delete:
      description: |-
        Deletes a *Cart* line item.

        **Notes**

        Removing the last `line_item` in the *Cart* deletes the *Cart*.
      parameters:
        - name: cartId
          in: path
          required: true
          description: This cart's unique ID.
          type: string
          format: UUID
        - name: itemId
          in: path
          required: true
          description: The ID of the item to delete.
          type: string
          format: number
        - name: include
          type: string
          in: query
          description: >-
            To return product options add one of the following include:


            `lineItems.physicalItems.options`: The Cart returns an abbreviated
            result. Use this to return physical items product options. Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options`:  The Cart returns an abbreviated
            result. Use this to return digital items product options.  Can also
            be used in a /POST to have the extended Cart object return.


            `lineItems.digitalItems.options,lineItems.physicalItems.options`: 
            The Cart returns an abbreviated result. Use this to return digital
            and physical options. Can also be used in a /POST to have the
            extended Cart object return.
          default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
          enum:
            - lineItems.physicalItems.options
            - lineItems.digitalItems.options
            - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
      tags:
        - Cart Items
      responses:
        '200':
          $ref: '#/responses/CartResponse'
      summary: Delete Cart Line Item
      operationId: deleteCartLineItem
  '/carts/{cartId}':
    delete:
      description: >-
        Deletes a *Cart*. Once a *Cart* has been deleted it can not be
        recovered.
      parameters:
        - name: cartId
          in: path
          required: true
          description: This cart's unique ID.
          type: string
          format: UUID
      tags:
        - Cart
      responses:
        '204':
          description: ''
      summary: Delete a Cart
      operationId: deleteACart
parameters:
  lineItems.options:
    name: include
    type: string
    in: query
    description: >-
      To return product options add one of the following include:


      `lineItems.physicalItems.options`: The Cart returns an abbreviated result.
      Use this to return physical items product options. Can also be used in a
      /POST to have the extended Cart object return.


      `lineItems.digitalItems.options`:  The Cart returns an abbreviated result.
      Use this to return digital items product options.  Can also be used in a
      /POST to have the extended Cart object return.


      `lineItems.digitalItems.options,lineItems.physicalItems.options`:  The
      Cart returns an abbreviated result. Use this to return digital and
      physical options. Can also be used in a /POST to have the extended Cart
      object return.
    default: 'lineItems.digitalItems.options,lineItems.physicalItems.options'
    enum:
      - lineItems.physicalItems.options
      - lineItems.digitalItems.options
      - 'lineItems.digitalItems.options,lineItems.physicalItems.options'
definitions:
  LineItemsRequest:
    type: object
    properties:
      lineItems:
        type: array
        description: Array of `LineItemRequestData` objects.
        items:
          type: object
          title: Line Item Request Data
          properties:
            quantity:
              type: number
              description: Quantity of this item.
            productId:
              type: number
              description: ID of the product.
            variantId:
              type: number
              description: ID of the variant.
          required:
            - quantity
      giftCertificates:
        type: array
        description: Array of `LineItemGiftCertificateRequestData` objects.
        items:
          type: object
          title: Line Item Gift Certificate Request Data
          properties:
            name:
              type: string
              description: Name assigned to this gift-certificate line item.
            theme:
              type: string
              description: >-
                Currently supports `Birthday`, `Boy`, `Celebration`,
                `Christmas`, `General`, and `Girl`.
            amount:
              type: number
              description: Gift-certificate amount.
              minimum: 1
              maximum: 1000
            quantity:
              type: integer
              description: Quantity of this item.
              minimum: 1
            sender:
              type: object
              properties:
                name:
                  type: string
                  description: Contact's name.
                email:
                  type: string
                  format: email
                  description: Contact's email address.
              title: Contact Entity
            recipient:
              type: object
              properties:
                name:
                  type: string
                  description: Contact's name.
                email:
                  type: string
                  format: email
                  description: Contact's email address.
              title: Contact Entity
            message:
              type: string
              maximum: 200
              description: 'Message shown to recipient, as provided by sender.'
          required:
            - name
            - theme
            - amount
            - quantity
            - sender
            - recipient
    title: Line Items Request
  CreateCartPost:
    type: object
    properties:
      lineItem:
        type: object
        title: Line Item Request Data
        properties:
          quantity:
            type: number
            description: Quantity of this item.
          productId:
            type: number
            description: ID of the product.
          variantId:
            type: number
            description: ID of the variant.
        required:
          - quantity
      giftCertificate:
        type: object
        title: Line Item Gift Certificate Request Data
        properties:
          name:
            type: string
            description: Name assigned to this gift-certificate line item.
          theme:
            type: string
            description: >-
              Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`,
              `General`, and `Girl`.
          amount:
            type: number
            description: Gift-certificate amount.
            minimum: 1
            maximum: 1000
          quantity:
            type: integer
            description: Quantity of this item.
            minimum: 1
          sender:
            type: object
            properties:
              name:
                type: string
                description: Contact's name.
              email:
                type: string
                format: email
                description: Contact's email address.
            title: Contact Entity
          recipient:
            type: object
            properties:
              name:
                type: string
                description: Contact's name.
              email:
                type: string
                format: email
                description: Contact's email address.
            title: Contact Entity
          message:
            type: string
            maximum: 200
            description: 'Message shown to recipient, as provided by sender.'
        required:
          - name
          - theme
          - amount
          - quantity
          - sender
          - recipient
    title: Create Cart Post
  LineItemRequestData:
    type: object
    title: Line Item Request Data
    properties:
      quantity:
        type: number
        description: Quantity of this item.
      productId:
        type: number
        description: ID of the product.
      variantId:
        type: number
        description: ID of the variant.
    required:
      - quantity
  LineItemGiftCertificateRequestData:
    type: object
    title: Line Item Gift Certificate Request Data
    properties:
      name:
        type: string
        description: Name assigned to this gift-certificate line item.
      theme:
        type: string
        description: >-
          Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`,
          `General`, and `Girl`.
      amount:
        type: number
        description: Gift-certificate amount.
        minimum: 1
        maximum: 1000
      quantity:
        type: integer
        description: Quantity of this item.
        minimum: 1
      sender:
        type: object
        properties:
          name:
            type: string
            description: Contact's name.
          email:
            type: string
            format: email
            description: Contact's email address.
        title: Contact Entity
      recipient:
        type: object
        properties:
          name:
            type: string
            description: Contact's name.
          email:
            type: string
            format: email
            description: Contact's email address.
        title: Contact Entity
      message:
        type: string
        maximum: 200
        description: 'Message shown to recipient, as provided by sender.'
    required:
      - name
      - theme
      - amount
      - quantity
      - sender
      - recipient
  Cart_Full:
    description: >-
      A cart contains a collection of items, prices, discounts, etc. It does not
      contain customer-related data.

      Custom Items is a read only field. A custom item can only be added to a
      cart using the Server to Server Cart API. 
    type: object
    title: Cart_Full
    properties:
      id:
        description: 'Cart ID, provided after creating a cart with a POST.'
        type: string
        format: UUID
      customer_id:
        description: ID of the customer to which the cart belongs.
        type: integer
      email:
        description: >-
          The cart's email. This is the same email that is used in the billing
          address
        type: string
      currency:
        type: object
        description: This will always be the same between cart and checkout.
        title: Currency
        properties:
          code:
            type: string
            format: ISO-4217
            description: >-
              ISO-4217 currency code. (See:
              http://en.wikipedia.org/wiki/ISO_4217.)
      isTaxIncluded:
        type: boolean
        description: Whether this item is taxable.
      baseAmount:
        type: number
        description: 'Cost of cart''s contents, before applying discounts.'
      discountAmount:
        type: number
        format: float
        description: Discounted amount.
      cartAmount:
        type: number
        description: >-
          Sum of line-items amounts, minus cart-level discounts and coupons.
          This amount includes taxes (where applicable).
      coupons:
        type: array
        description: Array of `AppliedCoupon` objects applied to this cart.
        items:
          $ref: '#/definitions/AppliedCoupon'
      discounts:
        type: array
        description: Array of `AppliedDiscount` objects applied to this cart.
        items:
          $ref: '#/definitions/AppliedDiscount'
      lineItems:
        type: array
        description: Array of `LineItem` objects.
        items:
          type: object
          title: Line Item
          properties:
            physicalItems:
              type: array
              description: Array of `ItemPhysical` objects.
              items:
                allOf:
                  - title: Base Item
                    properties:
                      id:
                        type: string
                        description: The line-item ID.
                        example: '4'
                      parentId:
                        type: string
                        description: >-
                          The product is part of a bundle such as a product pick
                          list, then the parentId or the main product id will
                          populate.
                        example: '6'
                      variantId:
                        type: number
                        description: ID of the variant.
                        example: 7
                      productId:
                        type: number
                        description: ID of the product.
                      sku:
                        type: string
                        description: SKU of the variant.
                      name:
                        type: string
                        description: The item's product name.
                      url:
                        description: The product URL.
                        type: string
                        format: uri
                      quantity:
                        type: number
                        description: Quantity of this item.
                      isTaxable:
                        type: boolean
                        description: Whether the item is taxable.
                      imageUrl:
                        type: string
                        description: >-
                          URL of an image of this item, accessible on the
                          internet.
                        format: uri
                      discounts:
                        type: array
                        description: >-
                          List of discounts applied to this item, as an array of
                          AppliedDiscount objects.
                        items:
                          type: object
                          title: Applied Discount
                          properties:
                            id:
                              type: number
                              description: ID of the applied discount.
                            discountedAmount:
                              type: number
                              format: float
                              description: >-
                                The discounted amount applied within a given
                                context.
                      discountAmount:
                        type: number
                        format: float
                        description: >-
                          The total value of all discounts applied to this item
                          (excluding coupon).
                      couponAmount:
                        type: number
                        description: The total value of all coupons applied to this item.
                      listPrice:
                        type: number
                        description: >-
                          Item's list price, as quoted by the
                          manufacturer/distributor.
                      salePrice:
                        type: number
                        description: >-
                          Item's price after all discounts are applied. (The
                          final price before tax calculation.)
                      extendedListPrice:
                        type: number
                        description: Item's list price multiplied by the quantity.
                      extendedSalePrice:
                        type: number
                        description: Item's sale price multiplied by the quantity.
                      Options:
                        description: The list of selected options for this product.
                        type: array
                        items:
                          type: object
                          title: Product Option
                          properties:
                            name:
                              type: string
                              description: >-
                                The product option name. For example, Color or
                                Size
                            nameId:
                              type: number
                              description: The product option identifier.
                            value:
                              type: string
                              description: >-
                                The product option value. For example, Red or
                                Medium
                            valueId:
                              type: number
                              description: The product option value identifier.
                      brand:
                        type: string
                        description: The products brand
                    required:
                      - quantity
                  - properties:
                      isShippingRequired:
                        type: boolean
                        description: >-
                          Whether this item requires shipping to a physical
                          address.
                      giftWrapping:
                        $ref: '#/definitions/GiftWrapping'
                title: Item Physical
                type: object
            digitalItems:
              type: array
              description: Array of `ItemDigital` objects.
              items:
                allOf:
                  - title: Base Item
                    properties:
                      id:
                        type: string
                        description: The line-item ID.
                        example: '4'
                      parentId:
                        type: string
                        description: >-
                          The product is part of a bundle such as a product pick
                          list, then the parentId or the main product id will
                          populate.
                        example: '6'
                      variantId:
                        type: number
                        description: ID of the variant.
                        example: 7
                      productId:
                        type: number
                        description: ID of the product.
                      sku:
                        type: string
                        description: SKU of the variant.
                      name:
                        type: string
                        description: The item's product name.
                      url:
                        description: The product URL.
                        type: string
                        format: uri
                      quantity:
                        type: number
                        description: Quantity of this item.
                      isTaxable:
                        type: boolean
                        description: Whether the item is taxable.
                      imageUrl:
                        type: string
                        description: >-
                          URL of an image of this item, accessible on the
                          internet.
                        format: uri
                      discounts:
                        type: array
                        description: >-
                          List of discounts applied to this item, as an array of
                          AppliedDiscount objects.
                        items:
                          type: object
                          title: Applied Discount
                          properties:
                            id:
                              type: number
                              description: ID of the applied discount.
                            discountedAmount:
                              type: number
                              format: float
                              description: >-
                                The discounted amount applied within a given
                                context.
                      discountAmount:
                        type: number
                        format: float
                        description: >-
                          The total value of all discounts applied to this item
                          (excluding coupon).
                      couponAmount:
                        type: number
                        description: The total value of all coupons applied to this item.
                      listPrice:
                        type: number
                        description: >-
                          Item's list price, as quoted by the
                          manufacturer/distributor.
                      salePrice:
                        type: number
                        description: >-
                          Item's price after all discounts are applied. (The
                          final price before tax calculation.)
                      extendedListPrice:
                        type: number
                        description: Item's list price multiplied by the quantity.
                      extendedSalePrice:
                        type: number
                        description: Item's sale price multiplied by the quantity.
                      Options:
                        description: The list of selected options for this product.
                        type: array
                        items:
                          type: object
                          title: Product Option
                          properties:
                            name:
                              type: string
                              description: >-
                                The product option name. For example, Color or
                                Size
                            nameId:
                              type: number
                              description: The product option identifier.
                            value:
                              type: string
                              description: >-
                                The product option value. For example, Red or
                                Medium
                            valueId:
                              type: number
                              description: The product option value identifier.
                      brand:
                        type: string
                        description: The products brand
                    required:
                      - quantity
                title: Item Digital
                type: object
            giftCertificates:
              type: array
              description: Array of `ItemGiftCertificate` objects.
              items:
                type: object
                title: Item Gift Certificate
                properties:
                  id:
                    type: string
                    description: ID of this gift certificate.
                  name:
                    type: string
                    description: >-
                      GiftCertificate-provided name that will appear in the
                      control panel.
                  theme:
                    type: string
                    description: >-
                      Currently supports `Birthday`, `Boy`, `Celebration`,
                      `Christmas`, `General`, and `Girl`.
                  amount:
                    type: number
                    description: >-
                      Value must be between 1.00 and 1,000.00 in the store's
                      default currency.
                  isTaxable:
                    type: boolean
                    description: Whether or not the gift certificate is taxable.
                  sender:
                    type: object
                    title: Contact Entity
                    properties:
                      name:
                        type: string
                        description: Contact's name.
                      email:
                        type: string
                        format: email
                        description: Contact's email address.
                  recipient:
                    type: object
                    title: Contact Entity
                    properties:
                      name:
                        type: string
                        description: Contact's name.
                      email:
                        type: string
                        format: email
                        description: Contact's email address.
                  message:
                    type: string
                    description: >-
                      Message that will be sent to the gift certificate's
                      recipient. Limited to 200 characters.
                required:
                  - theme
                  - amount
                  - sender
                  - recipient
            customItems:
              type: array
              items:
                type: object
                title: Item Custom
                description: >-
                  **Read Only**


                  This will return in the Cart Response if the Cart was created
                  using the [Server to Server Cart
                  API](/api-reference/cart-checkout/server-server-cart-api). A
                  custom item can only be added to a cart using the Server to
                  Server API. 
                properties:
                  id:
                    type: string
                    description: Id of the custom item
                    example: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
                    readOnly: true
                  sku:
                    type: string
                    description: Custom item sku
                    example: SM-456
                    readOnly: true
                  name:
                    type: string
                    description: Item name
                    example: Custom Item Name
                    readOnly: true
                  quantity:
                    type: integer
                    example: 1
                    readOnly: true
                  listPrice:
                    type: integer
                    description: >-
                      Price of the item. With or without tax depending on your
                      stores set up.
                    example: 10
                    readOnly: true
                  extendedListPrice:
                    type: integer
                    example: 9.24
                    readOnly: true
          required:
            - physicalItems
            - digitalItems
            - giftCertificates
      createdTime:
        type: string
        format: ISO-8601
        description: Time when the cart was created.
      updatedTime:
        type: string
        format: ISO-8601
        description: Time when the cart was last updated.
  Currency:
    type: object
    description: This will always be the same between cart and checkout.
    properties:
      code:
        type: string
        format: ISO-4217
        description: 'ISO-4217 currency code. (See: http://en.wikipedia.org/wiki/ISO_4217.)'
    title: Currency
  LineItem:
    type: object
    title: Line Item
    properties:
      physicalItems:
        type: array
        description: Array of `ItemPhysical` objects.
        items:
          allOf:
            - type: object
              title: Base Item
              properties:
                id:
                  type: string
                  description: The line-item ID.
                  example: '4'
                parentId:
                  type: string
                  description: >-
                    The product is part of a bundle such as a product pick list,
                    then the parentId or the main product id will populate.
                  example: '6'
                variantId:
                  type: number
                  description: ID of the variant.
                  example: 7
                productId:
                  type: number
                  description: ID of the product.
                sku:
                  type: string
                  description: SKU of the variant.
                name:
                  type: string
                  description: The item's product name.
                url:
                  description: The product URL.
                  type: string
                  format: uri
                quantity:
                  type: number
                  description: Quantity of this item.
                isTaxable:
                  type: boolean
                  description: Whether the item is taxable.
                imageUrl:
                  type: string
                  description: 'URL of an image of this item, accessible on the internet.'
                  format: uri
                discounts:
                  type: array
                  description: >-
                    List of discounts applied to this item, as an array of
                    AppliedDiscount objects.
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ID of the applied discount.
                      discountedAmount:
                        type: number
                        format: float
                        description: The discounted amount applied within a given context.
                    title: Applied Discount
                discountAmount:
                  type: number
                  format: float
                  description: >-
                    The total value of all discounts applied to this item
                    (excluding coupon).
                couponAmount:
                  type: number
                  description: The total value of all coupons applied to this item.
                listPrice:
                  type: number
                  description: >-
                    Item's list price, as quoted by the
                    manufacturer/distributor.
                salePrice:
                  type: number
                  description: >-
                    Item's price after all discounts are applied. (The final
                    price before tax calculation.)
                extendedListPrice:
                  type: number
                  description: Item's list price multiplied by the quantity.
                extendedSalePrice:
                  type: number
                  description: Item's sale price multiplied by the quantity.
                Options:
                  description: The list of selected options for this product.
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: 'The product option name. For example, Color or Size'
                      nameId:
                        type: number
                        description: The product option identifier.
                      value:
                        type: string
                        description: 'The product option value. For example, Red or Medium'
                      valueId:
                        type: number
                        description: The product option value identifier.
                    title: Product Option
                brand:
                  type: string
                  description: The products brand
              required:
                - quantity
            - type: object
              properties:
                isShippingRequired:
                  type: boolean
                  description: Whether this item requires shipping to a physical address.
                giftWrapping:
                  properties:
                    name:
                      type: string
                      description: Name of the gift-wrapping option.
                    amount:
                      type: number
                      format: float
                      description: Gift-wrapping price per product.
                  title: Gift Wrapping
          title: Item Physical
      digitalItems:
        type: array
        description: Array of `ItemDigital` objects.
        items:
          allOf:
            - type: object
              title: Base Item
              properties:
                id:
                  type: string
                  description: The line-item ID.
                  example: '4'
                parentId:
                  type: string
                  description: >-
                    The product is part of a bundle such as a product pick list,
                    then the parentId or the main product id will populate.
                  example: '6'
                variantId:
                  type: number
                  description: ID of the variant.
                  example: 7
                productId:
                  type: number
                  description: ID of the product.
                sku:
                  type: string
                  description: SKU of the variant.
                name:
                  type: string
                  description: The item's product name.
                url:
                  description: The product URL.
                  type: string
                  format: uri
                quantity:
                  type: number
                  description: Quantity of this item.
                isTaxable:
                  type: boolean
                  description: Whether the item is taxable.
                imageUrl:
                  type: string
                  description: 'URL of an image of this item, accessible on the internet.'
                  format: uri
                discounts:
                  type: array
                  description: >-
                    List of discounts applied to this item, as an array of
                    AppliedDiscount objects.
                  items:
                    type: object
                    properties:
                      id:
                        type: number
                        description: ID of the applied discount.
                      discountedAmount:
                        type: number
                        format: float
                        description: The discounted amount applied within a given context.
                    title: Applied Discount
                discountAmount:
                  type: number
                  format: float
                  description: >-
                    The total value of all discounts applied to this item
                    (excluding coupon).
                couponAmount:
                  type: number
                  description: The total value of all coupons applied to this item.
                listPrice:
                  type: number
                  description: >-
                    Item's list price, as quoted by the
                    manufacturer/distributor.
                salePrice:
                  type: number
                  description: >-
                    Item's price after all discounts are applied. (The final
                    price before tax calculation.)
                extendedListPrice:
                  type: number
                  description: Item's list price multiplied by the quantity.
                extendedSalePrice:
                  type: number
                  description: Item's sale price multiplied by the quantity.
                Options:
                  description: The list of selected options for this product.
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: 'The product option name. For example, Color or Size'
                      nameId:
                        type: number
                        description: The product option identifier.
                      value:
                        type: string
                        description: 'The product option value. For example, Red or Medium'
                      valueId:
                        type: number
                        description: The product option value identifier.
                    title: Product Option
                brand:
                  type: string
                  description: The products brand
              required:
                - quantity
          title: Item Digital
      giftCertificates:
        type: array
        description: Array of `ItemGiftCertificate` objects.
        items:
          type: object
          required:
            - sender
            - recipient
            - amount
            - theme
          properties:
            id:
              type: string
              description: ID of this gift certificate.
            name:
              type: string
              description: >-
                GiftCertificate-provided name that will appear in the control
                panel.
            theme:
              type: string
              description: >-
                Currently supports `Birthday`, `Boy`, `Celebration`,
                `Christmas`, `General`, and `Girl`.
            amount:
              type: number
              description: >-
                Value must be between 1.00 and 1,000.00 in the store's default
                currency.
            isTaxable:
              type: boolean
              description: Whether or not the gift certificate is taxable.
            sender:
              type: object
              properties:
                name:
                  type: string
                  description: Contact's name.
                email:
                  type: string
                  format: email
                  description: Contact's email address.
              title: Contact Entity
            recipient:
              type: object
              properties:
                name:
                  type: string
                  description: Contact's name.
                email:
                  type: string
                  format: email
                  description: Contact's email address.
              title: Contact Entity
            message:
              type: string
              description: >-
                Message that will be sent to the gift certificate's recipient.
                Limited to 200 characters.
          title: Item Gift Certificate
      customItems:
        type: array
        items:
          type: object
          title: Item Custom
          description: >-
            **Read Only**


            This will return in the Cart Response if the Cart was created using
            the [Server to Server Cart
            API](/api-reference/cart-checkout/server-server-cart-api). A custom
            item can only be added to a cart using the Server to Server API. 
          properties:
            id:
              type: string
              description: Id of the custom item
              example: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
              readOnly: true
            sku:
              type: string
              description: Custom item sku
              example: SM-456
              readOnly: true
            name:
              type: string
              description: Item name
              example: Custom Item Name
              readOnly: true
            quantity:
              type: integer
              example: 1
              readOnly: true
            listPrice:
              type: integer
              description: >-
                Price of the item. With or without tax depending on your stores
                set up.
              example: 10
              readOnly: true
            extendedListPrice:
              type: integer
              example: 9.24
              readOnly: true
    required:
      - physicalItems
      - digitalItems
      - giftCertificates
  ItemGiftCertificate:
    type: object
    required:
      - sender
      - recipient
      - amount
      - theme
    properties:
      id:
        type: string
        description: ID of this gift certificate.
      name:
        type: string
        description: GiftCertificate-provided name that will appear in the control panel.
      theme:
        type: string
        description: >-
          Currently supports `Birthday`, `Boy`, `Celebration`, `Christmas`,
          `General`, and `Girl`.
      amount:
        type: number
        description: >-
          Value must be between 1.00 and 1,000.00 in the store's default
          currency.
      isTaxable:
        type: boolean
        description: Whether or not the gift certificate is taxable.
      sender:
        type: object
        properties:
          name:
            type: string
            description: Contact's name.
          email:
            type: string
            format: email
            description: Contact's email address.
        title: Contact Entity
      recipient:
        type: object
        properties:
          name:
            type: string
            description: Contact's name.
          email:
            type: string
            format: email
            description: Contact's email address.
        title: Contact Entity
      message:
        type: string
        description: >-
          Message that will be sent to the gift certificate's recipient. Limited
          to 200 characters.
    title: Item Gift Certificate
  ContactEntity:
    type: object
    properties:
      name:
        type: string
        description: Contact's name.
      email:
        type: string
        format: email
        description: Contact's email address.
    title: Contact Entity
  ItemDigital:
    allOf:
      - type: object
        title: Base Item
        properties:
          id:
            type: string
            description: The line-item ID.
            example: '4'
          parentId:
            type: string
            description: >-
              The product is part of a bundle such as a product pick list, then
              the parentId or the main product id will populate.
            example: '6'
          variantId:
            type: number
            description: ID of the variant.
            example: 7
          productId:
            type: number
            description: ID of the product.
          sku:
            type: string
            description: SKU of the variant.
          name:
            type: string
            description: The item's product name.
          url:
            description: The product URL.
            type: string
            format: uri
          quantity:
            type: number
            description: Quantity of this item.
          isTaxable:
            type: boolean
            description: Whether the item is taxable.
          imageUrl:
            type: string
            description: 'URL of an image of this item, accessible on the internet.'
            format: uri
          discounts:
            type: array
            description: >-
              List of discounts applied to this item, as an array of
              AppliedDiscount objects.
            items:
              type: object
              properties:
                id:
                  type: number
                  description: ID of the applied discount.
                discountedAmount:
                  type: number
                  format: float
                  description: The discounted amount applied within a given context.
              title: Applied Discount
          discountAmount:
            type: number
            format: float
            description: >-
              The total value of all discounts applied to this item (excluding
              coupon).
          couponAmount:
            type: number
            description: The total value of all coupons applied to this item.
          listPrice:
            type: number
            description: 'Item''s list price, as quoted by the manufacturer/distributor.'
          salePrice:
            type: number
            description: >-
              Item's price after all discounts are applied. (The final price
              before tax calculation.)
          extendedListPrice:
            type: number
            description: Item's list price multiplied by the quantity.
          extendedSalePrice:
            type: number
            description: Item's sale price multiplied by the quantity.
          Options:
            description: The list of selected options for this product.
            type: array
            items:
              type: object
              properties:
                name:
                  type: string
                  description: 'The product option name. For example, Color or Size'
                nameId:
                  type: number
                  description: The product option identifier.
                value:
                  type: string
                  description: 'The product option value. For example, Red or Medium'
                valueId:
                  type: number
                  description: The product option value identifier.
              title: Product Option
          brand:
            type: string
            description: The products brand
        required:
          - quantity
    title: Item Digital
  ItemPhysical:
    allOf:
      - title: Base Item
        properties:
          id:
            type: string
            description: The line-item ID.
            example: '4'
          parentId:
            type: string
            description: >-
              The product is part of a bundle such as a product pick list, then
              the parentId or the main product id will populate.
            example: '6'
          variantId:
            type: number
            description: ID of the variant.
            example: 7
          productId:
            type: number
            description: ID of the product.
          sku:
            type: string
            description: SKU of the variant.
          name:
            type: string
            description: The item's product name.
          url:
            description: The product URL.
            type: string
            format: uri
          quantity:
            type: number
            description: Quantity of this item.
          isTaxable:
            type: boolean
            description: Whether the item is taxable.
          imageUrl:
            type: string
            description: 'URL of an image of this item, accessible on the internet.'
            format: uri
          discounts:
            type: array
            description: >-
              List of discounts applied to this item, as an array of
              AppliedDiscount objects.
            items:
              type: object
              title: Applied Discount
              properties:
                id:
                  type: number
                  description: ID of the applied discount.
                discountedAmount:
                  type: number
                  format: float
                  description: The discounted amount applied within a given context.
          discountAmount:
            type: number
            format: float
            description: >-
              The total value of all discounts applied to this item (excluding
              coupon).
          couponAmount:
            type: number
            description: The total value of all coupons applied to this item.
          listPrice:
            type: number
            description: 'Item''s list price, as quoted by the manufacturer/distributor.'
          salePrice:
            type: number
            description: >-
              Item's price after all discounts are applied. (The final price
              before tax calculation.)
          extendedListPrice:
            type: number
            description: Item's list price multiplied by the quantity.
          extendedSalePrice:
            type: number
            description: Item's sale price multiplied by the quantity.
          Options:
            description: The list of selected options for this product.
            type: array
            items:
              type: object
              title: Product Option
              properties:
                name:
                  type: string
                  description: 'The product option name. For example, Color or Size'
                nameId:
                  type: number
                  description: The product option identifier.
                value:
                  type: string
                  description: 'The product option value. For example, Red or Medium'
                valueId:
                  type: number
                  description: The product option value identifier.
          brand:
            type: string
            description: The products brand
        required:
          - quantity
      - properties:
          isShippingRequired:
            type: boolean
            description: Whether this item requires shipping to a physical address.
          giftWrapping:
            $ref: '#/definitions/GiftWrapping'
    title: Item Physical
    type: object
  BaseItem:
    type: object
    title: Base Item
    properties:
      id:
        type: string
        description: The line-item ID.
        example: '4'
      parentId:
        type: string
        description: >-
          The product is part of a bundle such as a product pick list, then the
          parentId or the main product id will populate.
        example: '6'
      variantId:
        type: number
        description: ID of the variant.
        example: 7
      productId:
        type: number
        description: ID of the product.
      sku:
        type: string
        description: SKU of the variant.
      name:
        type: string
        description: The item's product name.
      url:
        description: The product URL.
        type: string
        format: uri
      quantity:
        type: number
        description: Quantity of this item.
      isTaxable:
        type: boolean
        description: Whether the item is taxable.
      imageUrl:
        type: string
        description: 'URL of an image of this item, accessible on the internet.'
        format: uri
      discounts:
        type: array
        description: >-
          List of discounts applied to this item, as an array of AppliedDiscount
          objects.
        items:
          type: object
          properties:
            id:
              type: number
              description: ID of the applied discount.
            discountedAmount:
              type: number
              format: float
              description: The discounted amount applied within a given context.
          title: Applied Discount
      discountAmount:
        type: number
        format: float
        description: >-
          The total value of all discounts applied to this item (excluding
          coupon).
      couponAmount:
        type: number
        description: The total value of all coupons applied to this item.
      listPrice:
        type: number
        description: 'Item''s list price, as quoted by the manufacturer/distributor.'
      salePrice:
        type: number
        description: >-
          Item's price after all discounts are applied. (The final price before
          tax calculation.)
      extendedListPrice:
        type: number
        description: Item's list price multiplied by the quantity.
      extendedSalePrice:
        type: number
        description: Item's sale price multiplied by the quantity.
      Options:
        description: The list of selected options for this product.
        type: array
        items:
          type: object
          properties:
            name:
              type: string
              description: 'The product option name. For example, Color or Size'
            nameId:
              type: number
              description: The product option identifier.
            value:
              type: string
              description: 'The product option value. For example, Red or Medium'
            valueId:
              type: number
              description: The product option value identifier.
          title: Product Option
      brand:
        type: string
        description: The products brand
    required:
      - quantity
  ProductOption:
    type: object
    properties:
      name:
        type: string
        description: 'The product option name. For example, Color or Size'
      nameId:
        type: number
        description: The product option identifier.
      value:
        type: string
        description: 'The product option value. For example, Red or Medium'
      valueId:
        type: number
        description: The product option value identifier.
    title: Product Option
  AppliedCoupon:
    type: object
    title: Applied Coupon
    properties:
      id:
        type: string
        description: The coupon ID.
      code:
        type: string
        description: The coupon code.
      couponType:
        type: integer
        description: |-
          |Type `int`|Type Name|
          |-|-|
          |`0`|`per_item_discount`|
          |`1`|`percentage_discount`|
          |`2`|`per_total_discount`|
          |`3`|`shipping_discount`|
          |`4`|`free_shipping`|
          |`5`|`promotion`|
        enum:
          - 1
          - 2
          - 3
          - 4
          - 5
      discountedAmount:
        type: number
        format: float
        description: The discounted amount applied within a given context.
    required:
      - code
  AppliedDiscount:
    type: object
    properties:
      id:
        type: number
        description: ID of the applied discount.
      discountedAmount:
        type: number
        format: float
        description: The discounted amount applied within a given context.
    title: Applied Discount
  GiftWrapping:
    title: Gift Wrapping
    type: object
    properties:
      name:
        type: string
        description: Name of the gift-wrapping option.
      amount:
        type: number
        format: float
        description: Gift-wrapping price per product.
      message:
        type: string
  ItemCustom:
    type: object
    title: Item Custom
    description: >-
      **Read Only**


      This will return in the Cart Response if the Cart was created using the
      [Server to Server Cart
      API](/api-reference/cart-checkout/server-server-cart-api). A custom item
      can only be added to a cart using the Server to Server API. 
    properties:
      id:
        type: string
        description: Id of the custom item
        example: f1f3a531-fbcf-439b-bac1-40d5ae5c2bff
        readOnly: true
      sku:
        type: string
        description: Custom item sku
        example: SM-456
        readOnly: true
      name:
        type: string
        description: Item name
        example: Custom Item Name
        readOnly: true
      quantity:
        type: integer
        example: 1
        readOnly: true
      listPrice:
        type: integer
        description: >-
          Price of the item. With or without tax depending on your stores set
          up.
        example: 10
        readOnly: true
      extendedListPrice:
        type: integer
        example: 9.24
        readOnly: true
securityDefinitions: {}
basePath: /api/storefront
schemes:
  - https
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
host: '{$$.env.store_domain}'
tags:
  - name: Cart Items
responses:
  CartResponse:
    description: ''
    schema:
      $ref: '#/definitions/Cart_Full'
