swagger: '2.0'
info:
  title: Widgets
  version: '3.0'
  description: >-
    Widgets allow developers to associate content with regions on a BigCommerce
    storefront. The Widgets resource lets you programatically inject content
    into a BigCommerce theme.


    **On This Page**

    - [Authentication](#authentication)

    - [OAuth Scopes](#oauth-scopes)

    - [Subresources](#subresources)

    - [Additional Resources](#additional-resources)

    ---


    ## Authentication

    You can authenticate requests by sending a `client_id` and `access_token`
    via `X-Auth-Client` and `X-Auth-Token` HTTP headers:


    ```http

    GET /stores/{$$.env.store_hash}/v3/catalog/summary

    host: api.bigcommerce.com

    Accept: application/json

    X-Auth-Client: {client_id}

    X-Auth-Token: {access_token}

    ```

    You can obtain the `client_id` and `access_token` using either of the
    following methods:

    - [Creating API
    account](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#obtaining-store-api-credentials)

    - [Installing an app in the BigCommerce control
    panel](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#obtaining-app-api-credentials)


    ## OAuth Scopes

    Scope limits ability to read or modify data. To interact with the Widgets
    resource, set the scope to the minimum level needed to accomplish your
    specific task. 


    | UI Name  | Permission | Parameter                     |

    |----------|------------|-------------------------------|

    | Content | modify     | `store_v2_content`           |

    | Content | read-only  | `store_v2_content_read_only` |


    For more information on OAuth Scopes, see the [REST API
    Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes)
    page.


    ---


    ## Subresources


    ### Widgets

    Widgets are units of content you can place on specific pages in a
    [Stencil](https://developer.bigcommerce.com/stencil-docs) theme. Widgets are
    made of a JSON configuration and a widget template UUID. Widgets are
    rendered as part of the HTML on the storefront.


    ### Regions

    Regions are user-specified locations, within the Stencil theme files, where
    you can place a widget. Users hard code these regions within a theme.


    ### Placements

    Placements determine a widget's location on a storefront using regions as
    guides. Placements let you determine the sort order if there are multiple
    widgets in a region. You can also manage widgets' visibility with
    placements. 


    >**Note**

    >

    >You can create placements without a region.


    ### Widgets Templates

    [Handlebars](https://handlebarsjs.com/)-enabled templates that let users
    define the structure of the widget on a page. You can use if/else
    statements, style tags, and more to build a widget template.


    ## Additional Information

    **Additional Resources**

    - [Widgets
    Overview](https://developer.bigcommerce.com/api-docs/storefront/widgets/widgets-overview)

    - [Widgets
    Tutorial](https://developer.bigcommerce.com/api-docs/storefront/widgets/widgets-tutorial)

    - [Widgets Code
    Samples](https://developer.bigcommerce.com/api-docs/storefront/widgets/widgets-code-samples)
  termsOfService: ''
host: api.bigcommerce.com
basePath: '/stores/{$$.env.store_hash}/v3'
tags:
  - name: Regions
  - name: Widget Template
    description: BigCommerce Widget Templates API Definition.
  - name: Widget
    description: BigCommerce Widgets API Definition.
  - name: Placement
    description: BigCommerce Placements API Definition.
  - name: Layout
    description: BigCommerce Layouts API Definition.
schemes:
  - https
produces:
  - application/json
consumes:
  - application/json
paths:
  /content/widget-templates:
    post:
      tags:
        - Widget Template
      summary: Create a Widget Template
      operationId: createWidgetTemplate
      parameters:
        - name: templateBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widgetTemplate_Post'
          x-examples:
            application/json:
              name: Header Images
              template: >-
                {{#each images}}<a href='{{image_url}}'><img
                src={{image_source}} style='width:33.3%'/></a>{{/each}}
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/WidgetTemplate_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: |-
        Creates a **Widget Template**.

        ***Note:*** *There is a limit of 100 custom widget templates per store.*

        **Required Fields**
        * name
        * template
    get:
      tags:
        - Widget Template
      operationId: getWidgetTemplates
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - name: limit
          description: >
            Controls the number of items per page in a limited (paginated) list
            of products.
          required: false
          in: query
          type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          type: string
          required: false
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/WidgetTemplateCollection_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a list of **Widget Templates**.
      summary: Get All Widget Templates
  '/content/widget-templates/{uuid}':
    get:
      tags:
        - Widget Template
      summary: Get a Widget Template
      operationId: getWidgetTemplate
      parameters:
        - name: uuid
          description: The identifier for a specific template.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Return a single **Widget Template**.
    put:
      tags:
        - Widget Template
      summary: Update a Widget Template
      operationId: updateWidgetTemplate
      parameters:
        - name: uuid
          description: The identifier for a specific template.
          required: true
          in: path
          type: string
          format: uuid
        - name: templateBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widgetTemplate_Put'
          x-examples:
            application/json:
              name: Header Images
              template: >-
                {{#each images}}<a href='{{image_url}}'><img
                src={{image_source}} style='width:33.3%'/></a>{{/each}}
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/WidgetTemplate_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Update a **Widget Template**.
    delete:
      tags:
        - Widget Template
      summary: Delete A Widget Template
      operationId: deleteWidgetTemplate
      parameters:
        - name: uuid
          description: The identifier for a specific template.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Delete a **Widget Template**.
  /content/widgets:
    post:
      tags:
        - Widget
      summary: Create a Widget
      operationId: createWidget
      parameters:
        - name: widgetBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widget_Post'
          x-examples:
            application/json:
              name: Header Images
              widget_configuration:
                images:
                  - image_url: 'https://{your-store-url}/all/kinfolk-issue-16/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on
                  - image_url: 'https://your-store-url/all/kinfolk-issue-16/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
                  - image_url: 'https://your-store-url/all/kinfolk-issue-16/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
              widget_template_uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Widget_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: |-
        Creates a **Widget**.

        ***Note:*** *There is a limit of 1000 widgets per store.*

        **Required Fields**
        * name
        * widget_template_uuid
    get:
      tags:
        - Widget
      summary: Get All Widgets
      operationId: getWidgets
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - name: limit
          description: >
            Controls the number of items per page in a limited (paginated) list
            of products.
          required: false
          in: query
          type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          type: string
          required: false
        - in: query
          name: widget_template_uuid
          description: The identifier for a specific widget template.
          type: string
          format: uuid
          required: false
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
        - in: query
          name: name
          type: string
          description: >-
            The URL encoded name of the widget.

            Use `name:in` to pass in comma-separated list of widget names.
            **Ex**: `/widgets?name:in=test-widget-name,header%20images`
      responses:
        '200':
          $ref: '#/responses/WidgetCollection_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a list of **Widgets**. Optional parameters can be passed in.
  '/content/widgets/{uuid}':
    get:
      tags:
        - Widget
      summary: Get a Widget
      operationId: getWidget
      parameters:
        - name: uuid
          description: The identifier for a specific widget.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Widget_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a single **Widget**.
    put:
      tags:
        - Widget
      summary: Update a Widget
      operationId: updateWidget
      parameters:
        - name: uuid
          description: The identifier for a specific widget.
          required: true
          in: path
          type: string
          format: uuid
        - name: widgetBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/widget_Put'
          x-examples:
            application/json:
              name: Header Images
              widget_configuration:
                images:
                  - image_url: 'https://{your-store-url}/all/kinfolk-issue-16/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on
                  - image_url: 'https://your-store-url/all/kinfolk-issue-16/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
                  - image_url: 'https://your-store-url/all/kinfolk-issue-16/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
              widget_template_uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Widget_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Updates a **Widget**.
    delete:
      tags:
        - Widget
      summary: Delete a Widget
      operationId: deleteWidget
      parameters:
        - name: uuid
          description: The identifier for a specific widget.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Deletes a **Widget**.
  /content/placements:
    post:
      tags:
        - Placement
      summary: Create a Placement
      operationId: createPlacement
      parameters:
        - name: placementBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/placement_Post'
          x-examples:
            application/json:
              widget_uuid: a8940709-5655-4401-a341-62c44e3180b2
              entity_id: '21'
              template_file: pages/category
              status: active
              sort_order: 1
              region: home_header_image
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Placement_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Creates a **Placement**.
    get:
      tags:
        - Placement
      summary: Get All Placements
      operationId: getPlacements
      parameters:
        - name: page
          description: |
            Specifies the page number in a limited (paginated) list of products.
          required: false
          in: query
          type: integer
        - name: limit
          description: >
            Controls the number of items per page in a limited (paginated) list
            of products.
          required: false
          in: query
          type: integer
        - in: query
          name: widget_template_kind
          description: The kind of widget template.
          type: string
          required: false
        - in: query
          name: template_file
          description: 'The template file, for example: `pages/home`.'
          type: string
          required: false
        - name: widget_uuid
          description: The identifier for a specific widget.
          in: query
          type: string
          format: uuid
          required: false
        - in: query
          name: widget_template_uuid
          description: The identifier for a specific widget template.
          type: string
          format: uuid
          required: false
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/PlacementsCollection_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a list of **Placements**. Optional parameters can be passed in.
  '/content/placements/{uuid}':
    get:
      tags:
        - Placement
      summary: Get a Placement
      operationId: getPlacement
      parameters:
        - name: uuid
          description: The identifier for a specific placement.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Placement_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Returns a single **Placement**.
    put:
      tags:
        - Placement
      summary: Update a Placement
      operationId: updatePlacement
      parameters:
        - name: uuid
          description: The identifier for a specific placement.
          required: true
          in: path
          type: string
          format: uuid
        - name: placementBody
          in: body
          required: true
          schema:
            $ref: '#/definitions/placement_Put'
          x-examples:
            application/json:
              sort_order: 1
              region: home_header_image
              template_file: pages/home
              status: active
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '200':
          $ref: '#/responses/Placement_Resp'
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Updates a **Placement**.
    delete:
      tags:
        - Placement
      summary: Delete a Placement
      operationId: deletePlacement
      parameters:
        - name: uuid
          description: The identifier for a specific placement.
          required: true
          in: path
          type: string
          format: uuid
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
      responses:
        '204':
          description: An empty response.
        '404':
          $ref: '#/responses/Error404_Resp'
        '422':
          $ref: '#/responses/Error422_Resp'
      description: Deletes a **Placement**.
  /content/regions:
    get:
      responses:
        '200':
          $ref: '#/responses/ThemeRegions_Resp'
      summary: Get Theme Regions
      description: |-
        Returns a list of unique **Theme Regions** in a file.

        **Required Query**
        * templateFile
      operationId: getContentRegions
      tags:
        - Regions
      parameters:
        - name: Accept
          in: header
          type: string
          default: application/json
        - in: header
          type: string
          default: application/json
          name: Content-Type
        - in: query
          name: templateFile
          description: 'The template file, for example: `templateFile=pages/home`.'
          type: string
          required: true
parameters:
  TemplateUUID:
    name: uuid
    description: The identifier for a specific template.
    required: true
    in: path
    type: string
    format: uuid
  FilterWidgetTemplateUUIDParam:
    in: query
    name: widget_template_uuid
    description: The identifier for a specific widget template.
    type: string
    format: uuid
    required: false
  FilterWidgetTemplateKindParam:
    in: query
    name: widget_template_kind
    description: The kind of widget template.
    type: string
    required: false
  FilterTemplateFileParam:
    in: query
    name: template_file
    description: 'The template file, for example: `pages/home`.'
    type: string
    required: false
  RequiredTemplateFile:
    in: query
    name: templateFile
    description: 'The template file, for example: `templateFile=pages/home`.'
    type: string
    required: true
  LayoutUUID:
    name: uuid
    description: The identifier for a specific layout.
    required: true
    in: path
    type: string
    format: uuid
  PlacementUUID:
    name: uuid
    description: The identifier for a specific placement.
    required: true
    in: path
    type: string
    format: uuid
  WidgetUUID:
    name: uuid
    description: The identifier for a specific widget.
    required: true
    in: path
    type: string
    format: uuid
  FilterWidgetUUIDParam:
    name: widget_uuid
    description: The identifier for a specific widget.
    in: query
    type: string
    format: uuid
    required: false
  PageParam:
    name: page
    description: |
      Specifies the page number in a limited (paginated) list of products.
    required: false
    in: query
    type: integer
  LimitParam:
    name: limit
    description: >
      Controls the number of items per page in a limited (paginated) list of
      products.
    required: false
    in: query
    type: integer
  QueryWidgetsParam:
    type: string
    name: query
    in: query
    description: |
      The query string associated with a widget's name and description.
  Accept:
    name: Accept
    in: header
    type: string
    default: application/json
  Content-Type:
    in: header
    type: string
    default: application/json
    name: Content-Type
definitions:
  widgetTemplate_Put:
    $ref: '#/definitions/widgetTemplate_Base'
    title: widgetTemplate_Put
  widgetTemplate_Post:
    required:
      - name
      - template
    properties:
      name:
        type: string
        description: User friendly name.
      schema:
        type: object
        description: >-
          The JSON schema of data for this template. Used to validate a
          configuration.
        format: json
      template:
        type: string
        description: Handlebars HTML content. Also has access to Stencil Paper helpers.
        format: html
    title: widgetTemplate_Post
  widgetTemplate_Full:
    allOf:
      - $ref: '#/definitions/widgetTemplate_Base'
      - type: object
        properties:
          uuid:
            type: string
            format: uuid
            description: The primary identifier.
          kind:
            type: string
            description: The kind of widget template.
          date_created:
            type: string
            format: datetime
            description: The date on which this object was initially created.
          date_modified:
            type: string
            format: datetime
            description: The date on which this object was last updated.
    title: widgetTemplate_Full
  widget_Full:
    title: widget_Full
    allOf:
      - $ref: '#/definitions/widget_Base'
      - type: object
        properties:
          uuid:
            type: string
            format: uuid
            description: The primary identifier.
          widget_template:
            $ref: '#/definitions/widgetTemplate_Full'
          date_created:
            type: string
            format: datetime
            description: The date on which this object was initially created.
          date_modified:
            type: string
            format: datetime
            description: The date on which this object was last updated.
  widget_Post:
    required:
      - name
      - widget_template_uuid
    properties:
      name:
        type: string
        description: User friendly name.
      description:
        type: string
        description: The user-friendly description.
      widget_configuration:
        type: object
        description: The JSON data that populates the template.
        format: json
      widget_template_uuid:
        type: string
        description: The widget template UUID.
    title: widget_Post
  widget_Put:
    title: widget_Put
    allOf:
      - $ref: '#/definitions/widget_Base'
      - properties:
          widget_template_uuid:
            type: string
            description: The widget template UUID.
        type: object
  placement_Post:
    title: placement_Post
    allOf:
      - type: object
        properties:
          widget_uuid:
            type: string
            description: A widget identifier.
          template_file:
            type: string
            description: The template file that you would like to target.
        required:
          - widget_uuid
          - template_file
      - $ref: '#/definitions/placement_Base'
  placement_Put:
    title: placement_Put
    allOf:
      - type: object
        properties:
          template_file:
            type: string
            description: The template file that you would like to target.
          widget_uuid:
            type: string
            description: A widget identifier.
      - $ref: '#/definitions/placement_Base'
  placement_Full:
    title: placement_Full
    allOf:
      - type: object
        properties:
          uuid:
            type: string
            format: uuid
            description: The primary identifier.
          template_file:
            type: string
            description: The template file that you would like to target.
          date_created:
            type: string
            format: datetime
            description: The date on which this object was initially created.
          date_modified:
            type: string
            format: datetime
            description: The date on which this object was last updated.
      - $ref: '#/definitions/placement_Base'
      - type: object
        properties:
          widget:
            $ref: '#/definitions/widget_Full'
  metaCollection:
    type: object
    description: 'Data about the response, including pagination and collection totals.'
    title: metaCollection
    properties:
      pagination:
        $ref: '#/definitions/pagination'
  pagination:
    type: object
    description: |
      Data about the response, including pagination and collection totals.
    properties:
      total:
        type: integer
        description: |
          Total number of items in the result set.
      count:
        type: integer
        description: |
          Total number of items in the collection response.
      per_page:
        type: integer
        description: >
          The amount of items returned in the collection per page, controlled by
          the limit parameter.
      current_page:
        type: integer
        description: |
          The page you are currently on within the collection.
      total_pages:
        type: integer
        description: |
          The total number of pages in the collection.
      links:
        type: object
        description: >
          Pagination links for the previous and next parts of the whole
          collection.
        properties:
          previous:
            type: string
            description: |
              Link to the previous page returned in the response.
          current:
            type: string
            description: |
              Link to the current page returned in the response.
          next:
            type: string
            description: |
              Link to the next page returned in the response.
    title: pagination
  error_Base:
    type: object
    description: |
      Error payload for the BigCommerce API.
    title: error_Base
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
      errors:
        type: object
  themeRegion:
    properties:
      name:
        type: string
        description: The region name.
    title: themeRegion
  Meta:
    type: object
    description: Empty meta object; may be used later.
  placement_Base:
    type: object
    title: placement_Base
    properties:
      entity_id:
        type: string
        description: The specific instance of a page that you would like to target.
      sort_order:
        type: integer
        description: >-
          The sort order to control the position of a content widget in a
          region.
      region:
        type: string
        description: The name of the region in which to insert content widgets.
      status:
        type: string
        enum:
          - inactive
          - active
        description: Sets the placement as either inactive or active.
        default: inactive
  widgetTemplate_Base:
    type: object
    title: widgetTemplate_Base
    properties:
      name:
        type: string
        description: The user-friendly name.
      schema:
        type: object
        format: json
        description: >-
          The JSON schema of data for this template. Used to validate a
          configuration.
      template:
        type: string
        format: html
        description: The widget template HTML. Supports Handlebars and Paper helpers.
  widget_Base:
    type: object
    title: widget_Base
    properties:
      name:
        type: string
        description: The user-friendly name.
      description:
        type: string
        description: The user-friendly description.
      widget_configuration:
        type: object
        format: json
        description: The JSON data that populates the template.
securityDefinitions:
  X-Auth-Client:
    type: apiKey
    name: X-Auth-Client
    in: header
    description: >-
      ### OAuth Scopes

      |  **UI Name** | **Permission** | **Parameter** |

      | --- | --- | --- |

      |  Content | modify | `store_v2_content` |

      |  Content | read-only | `store_v2_content_read_only` |


      ### Headers


      |Header|Parameter|Description|

      |-|-|-|

      |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|

      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|


      ### Example


      ```http

      GET /stores/{$$.env.store_hash}/v3/catalog/summary

      host: api.bigcommerce.com

      Content-Type: application/json

      X-Auth-Client: {client_id}

      X-Auth-Token: {access_token}

      ```


      * For more information on Authenticating BigCommerce APIs, see:
      [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  X-Auth-Token:
    type: apiKey
    name: X-Auth-Token
    in: header
    description: >-
      ### OAuth Scopes

      |  **UI Name** | **Permission** | **Parameter** |

      | --- | --- | --- |

      |  Content | modify | `store_v2_content` |

      |  Content | read-only | `store_v2_content_read_only` |


      ### Headers


      |Header|Parameter|Description|

      |-|-|-|

      |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|

      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|


      ### Example


      ```http

      GET /stores/{$$.env.store_hash}/v3/catalog/summary

      host: api.bigcommerce.com

      Content-Type: application/json

      X-Auth-Client: {client_id}

      X-Auth-Token: {access_token}

      ```


      * For more information on Authenticating BigCommerce APIs, see:
      [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
responses:
  ThemeRegions_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/themeRegion'
        meta:
          type: object
          description: Empty meta object; may be used later.
    examples:
      application/json:
        data:
          - name: header_bottom
          - name: category_header_banner
        meta: {}
  LayoutCollectionResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            properties:
              uuid:
                type: string
                format: uuid
                description: The primary identifier.
              entity_id:
                type: string
                description: The specific instance of a page
              template_file:
                type: string
                description: The page template name.
              region:
                type: string
                description: The name of the region defined in the stencil theme file.
              markup:
                type: string
                description: >-
                  The HTML layout which defines complex poisitoning for
                  placements.
              date_created:
                type: string
                format: datetime
                description: The date on which this object was initially created.
              date_modified:
                type: string
                format: datetime
                description: The date on which this object was last updated.
            title: Layout
        meta:
          type: object
          description: 'Data about the response, including pagination and collection totals.'
          properties:
            pagination:
              type: object
              description: >
                Data about the response, including pagination and collection
                totals.
              properties:
                total:
                  type: integer
                  description: |
                    Total number of items in the result set.
                count:
                  type: integer
                  description: |
                    Total number of items in the collection response.
                per_page:
                  type: integer
                  description: >
                    The amount of items returned in the collection per page,
                    controlled by the limit parameter.
                current_page:
                  type: integer
                  description: |
                    The page you are currently on within the collection.
                total_pages:
                  type: integer
                  description: |
                    The total number of pages in the collection.
                links:
                  type: object
                  description: >
                    Pagination links for the previous and next parts of the
                    whole collection.
                  properties:
                    previous:
                      type: string
                      description: |
                        Link to the previous page returned in the response.
                    current:
                      type: string
                      description: |
                        Link to the current page returned in the response.
                    next:
                      type: string
                      description: |
                        Link to the next page returned in the response.
          title: Collection Meta
    examples:
      application/json:
        data:
          - uuid: cacdadcf-07ec-43f3-aec4-f8e3382d7618
            template_file: pages/category
            entity_id: '21'
            region: category_header_banner
            markup: >-
              <style>img:hover{opacity: 0.3;}</style><div><div
              style='padding:5px;'><bc-placement
              id='bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08'></bc-placement></div></div>
            date_created: '2019-02-25T18:38:08.455Z'
            date_modified: '2019-02-25T18:38:08.455Z'
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
  LayoutResponse:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            properties:
              uuid:
                type: string
                format: uuid
                description: The primary identifier.
              entity_id:
                type: string
                description: The specific instance of a page
              template_file:
                type: string
                description: The page template name.
              region:
                type: string
                description: The name of the region defined in the stencil theme file.
              markup:
                type: string
                description: >-
                  The HTML layout which defines complex poisitoning for
                  placements.
              date_created:
                type: string
                format: datetime
                description: The date on which this object was initially created.
              date_modified:
                type: string
                format: datetime
                description: The date on which this object was last updated.
            title: Layout
    examples:
      application/json:
        data:
          uuid: cacdadcf-07ec-43f3-aec4-f8e3382d7618
          template_file: pages/category
          entity_id: '21'
          region: category_header_banner
          markup: >-
            <style>img:hover{opacity: 0.3;}</style><div><div
            style='padding:5px;'><bc-placement
            id='bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08'></bc-placement></div></div>
          date_created: '2019-02-25T18:38:08.455Z'
          date_modified: '2019-02-25T18:38:08.455Z'
        meta: {}
  PlacementsCollection_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/placement_Full'
        meta:
          $ref: '#/definitions/metaCollection'
    examples:
      application/json:
        data:
          - uuid: bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08
            template_file: pages/category
            region: ''
            sort_order: 0
            entity_id: '21'
            status: active
            widget:
              uuid: a8940709-5655-4401-a341-62c44e3180b2
              name: Header Images
              widget_configuration:
                images:
                  - image_url: 'https://{{your-url}.com/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on
                  - image_url: 'https://{{your-url}.com/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
                  - image_url: 'https://{{your-url}.com/'
                    image_source: >-
                      https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
                _:
                  id: a8940709-5655-4401-a341-62c44e3180b2
              widget_template:
                uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
                name: Header Images
                schema: []
                template: >-
                  {{#each images}}<a href='{{image_url}}'><img
                  src={{image_source}} style='width:33.3%'/></a>{{/each}}
                date_created: '2019-02-25T18:35:04.904Z'
                date_modified: '2019-02-25T18:35:04.904Z'
                kind: custom
              date_created: '2019-02-25T18:36:45.238Z'
              date_modified: '2019-02-25T18:36:45.238Z'
              description: ''
            date_created: '2019-02-25T18:37:10.658Z'
            date_modified: '2019-02-25T18:37:10.658Z'
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
  Placement_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/placement_Full'
        meta:
          type: object
    examples:
      application/json:
        data:
          uuid: bb34b23b-0d4b-4b9b-9e24-c8b0dcfd5e08
          template_file: pages/category
          region: ''
          sort_order: 0
          entity_id: '21'
          status: active
          widget:
            uuid: a8940709-5655-4401-a341-62c44e3180b2
            name: Header Images
            widget_configuration:
              images:
                - image_url: 'https://{{your-url}.com/'
                  image_source: >-
                    https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on
                - image_url: 'https://{{your-url}.com/'
                  image_source: >-
                    https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
                - image_url: 'https://{{your-url}.com/'
                  image_source: >-
                    https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
              _:
                id: a8940709-5655-4401-a341-62c44e3180b2
            widget_template:
              uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
              name: Header Images
              schema: []
              template: >-
                {{#each images}}<a href='{{image_url}}'><img
                src={{image_source}} style='width:33.3%'/></a>{{/each}}
              date_created: '2019-02-25T18:35:04.904Z'
              date_modified: '2019-02-25T18:35:04.904Z'
              kind: custom
            date_created: '2019-02-25T18:36:45.238Z'
            date_modified: '2019-02-25T18:36:45.238Z'
            description: ''
          date_created: '2019-02-25T18:37:10.658Z'
          date_modified: '2019-02-25T18:37:10.658Z'
        meta: {}
  WidgetTemplateCollection_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/widgetTemplate_Full'
        meta:
          $ref: '#/definitions/pagination'
    examples:
      application/json:
        data:
          - uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
            name: Header Images
            schema: []
            template: >-
              {{#each images}}<a href='{{image_url}}'><img src={{image_source}}
              style='width:33.3%'/></a>{{/each}}
            date_created: '2019-02-25T18:35:04.904Z'
            date_modified: '2019-02-25T18:35:04.904Z'
            kind: custom
          - uuid: 2fbb8014-2a6e-4569-b484-65824959d035
            name: Simple List
            schema: []
            template: >-
              <ul>{{#each list_items}}<li
              style='color:{{color}};'>{{text}}</li>{{/each}}</ul>
            date_created: '2019-02-25T22:12:32.779Z'
            date_modified: '2019-02-25T22:12:32.779Z'
            kind: custom
          - uuid: bbdd79ad-760c-406c-8866-c0642ec6fb3f
            name: Simple HTML
            schema: []
            template: '{{{html}}}'
            date_created: '2019-02-26T16:35:33.257Z'
            date_modified: '2019-02-26T16:35:33.257Z'
            kind: custom
          - uuid: 28a6d62d-6435-4423-a611-35feaab1229a
            name: Simple Text with Styling
            schema: []
            template: >-
              <style>#bc-simple-text-{{_.id}} {color: {{color}};background:
              {{background_color}};font-size: {{font_size}};font-style:
              {{font_style}};font-weight: {{font_weight}};font-family:
              {{font_family}};text-align: {{text_align}};margin-top:
              {{margin_top}};margin-bottom: {{margin_bottom}};margin-left:
              {{margin_left}};margin-right: {{margin_right}};padding-top:
              {{padding_top}};padding-bottom: {{padding_bottom}};padding-left:
              {{padding_left}};padding-right: {{padding_right}};}</style><p
              id='bc-simple-text-{{_.id}}'>{{text}}</p>
            date_created: '2019-02-26T17:20:14.274Z'
            date_modified: '2019-02-26T17:20:14.274Z'
            kind: custom
          - uuid: f054d960-3b3f-4bed-b3b3-ccb024e2f807
            name: YouTube Embed
            schema: []
            template: >-
              <iframe    id='ytplayer-{{_.id}}'    type='text/html'
              width='{{width}}'    height='{{height}}'
              src='https://www.youtube.com/embed/{{video_id}}?autoplay={{autoplay}}&color={{color}}&controls={{controls}}&disablekb={{disablekb}}&fs={{fs}}&rel={{rel}}&showinfo={{showinfo}}'
              frameborder='{{frameborder}}'>  </iframe>
            date_created: '2019-02-26T18:59:18.359Z'
            date_modified: '2019-02-26T18:59:18.359Z'
            kind: custom
          - uuid: be346d31-d869-4e96-9299-4c85bc1af55a
            name: Slider Template
            schema: []
            template: |-
              <ul class="slider">
              {{#each slides}}
              <ul class="slide"><img class="mySlides" src="{{image}}"/></ul>
              {{/each}}
              </ul>
              <script>
              var slideIndex = 0;
              carousel();
              function carousel() {
              var i;
              var x = document.getElementsByClassName("mySlides");
              for (i = 0; i < x.length; i++) {
              x[i].style.display = "none";
              }
              slideIndex++;
              if (slideIndex > x.length) {slideIndex = 1}
              x[slideIndex-1].style.display = "block";
              setTimeout(carousel, 4000); // Change image every 4 seconds
              }
              </script>
            date_created: '2019-02-26T19:25:24.081Z'
            date_modified: '2019-02-26T19:25:24.081Z'
            kind: custom
          - uuid: 2ff24732-6848-47ba-9a7f-c8b1d444f270
            name: PayPal Credit Banner - Cart Page (728x90)
            schema: []
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  margin-right: auto;
                  margin-left: auto;
                  width: 100%;
                  max-width: 728px;
                  height: 90px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="728x90"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="CartPage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            date_created: '2017-10-04T22:49:21.073Z'
            date_modified: '2017-10-27T17:20:20.386Z'
            kind: pp-cartpage-fullbanner
          - uuid: 3002bf5b-5eca-4ac2-8f1f-5240c2b74712
            name: PayPal Credit Banner - Home Page (728x90)
            schema: []
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  margin-right: auto;
                  margin-left: auto;
                  width: 100%;
                  max-width: 728px;
                  height: 90px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="728x90"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="HomePage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            date_created: '2017-10-04T22:49:32.067Z'
            date_modified: '2017-10-27T17:20:50.367Z'
            kind: pp-homepage-fullbanner
          - uuid: 7c541473-855d-4b62-a7bf-6ef3199f914c
            name: PayPal Credit Banner - Product Details Page (234x60)
            schema: []
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  width: 100%;
                  max-width: 234px;
                  height: 60px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="234x60"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="ProductDetailsPage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            date_created: '2017-10-04T22:49:41.274Z'
            date_modified: '2017-10-27T17:21:16.179Z'
            kind: pp-proddetailspage-quarterbanner
          - uuid: 2dfeb50e-5f8c-4df2-8525-a338091eed32
            name: Braintree PayPal Credit Banner - Cart Page (728x90)
            schema: []
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  margin-right: auto;
                  margin-left: auto;
                  width: 100%;
                  max-width: 728px;
                  height: 90px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="728x90"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="CartPage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            date_created: '2017-10-27T17:21:27.316Z'
            date_modified: '2017-10-27T17:21:38.264Z'
            kind: bt-cartpage-fullbanner
          - uuid: a96caeab-1e47-4196-b707-7037950fb2a7
            name: Braintree PayPal Credit Banner - Home Page (728x90)
            schema: []
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  margin-right: auto;
                  margin-left: auto;
                  width: 100%;
                  max-width: 728px;
                  height: 90px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="728x90"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="HomePage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            date_created: '2017-10-27T17:21:48.607Z'
            date_modified: '2017-10-27T17:21:59.798Z'
            kind: bt-homepage-fullbanner
          - uuid: 5b91d91c-9d09-4fc2-81a5-733746306924
            name: Braintree PayPal Credit Banner - Product Details Page (234x60)
            schema: []
            template: |
              <style media="screen">
                #banner-region-{{ _.id }} {
                  display: block;
                  width: 100%;
                  max-width: 234px;
                  height: 60px;
                }
              </style>

              <div id="banner-region-{{ _.id }}">
                <script src="https://www.paypalobjects.com/upstream/partner.js"
                  data-pp_payer_id="{{ merchant_id }}"
                  data-pp_bn_code="BigCommerce_Cart_PPC"
                  data-pp_dimensions="234x60"
                  data-pp_format="HTML"
                  data-pp_presentation_types="HTML"
                  data-pp_page="ProductDetailsPage"
                  data-pp_country_code="{{ country_code }}"
                  data-pp_locale="{{ locale }}"
                  data-pp_partner_version="2">
                </script>
              </div>
            date_created: '2017-10-27T17:22:08.430Z'
            date_modified: '2017-10-27T17:22:18.701Z'
            kind: bt-proddetailspage-quarterbanner
        meta:
          pagination:
            total: 12
            count: 12
            per_page: 50
            current_page: 1
            total_pages: 1
  WidgetTemplate_Resp:
    description: ''
    schema:
      allOf:
        - properties:
            data:
              $ref: '#/definitions/widgetTemplate_Full'
        - properties:
            meta:
              type: object
      type: object
    examples:
      application/json:
        data:
          uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
          name: Header Images
          schema: []
          template: >-
            {{#each images}}<a href='{{image_url}}'><img src={{image_source}}
            style='width:33.3%'/></a>{{/each}}
          date_created: '2019-02-25T18:35:04.904Z'
          date_modified: '2019-02-25T18:35:04.904Z'
          kind: custom
        meta: {}
  WidgetCollection_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/definitions/widget_Full'
        meta:
          $ref: '#/definitions/metaCollection'
    examples:
      application/json:
        data:
          - uuid: a8940709-5655-4401-a341-62c44e3180b2
            name: Header Images
            widget_configuration:
              images:
                - image_url: 'https://www.bigcommerce.com'
                  image_source: >-
                    https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on
                - image_url: 'hhttps://www.bigcommerce.com'
                  image_source: >-
                    https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
                - image_url: 'https://www.bigcommerce.com'
                  image_source: >-
                    https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
              _:
                id: a8940709-5655-4401-a341-62c44e3180b2
            widget_template:
              uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
              name: Header Images
              schema: []
              template: >-
                {{#each images}}<a href='{{image_url}}'><img
                src={{image_source}} style='width:33.3%'/></a>{{/each}}
              date_created: '2019-02-25T18:35:04.904Z'
              date_modified: '2019-02-25T18:35:04.904Z'
              kind: custom
            date_created: '2019-02-25T18:36:45.238Z'
            date_modified: '2019-02-25T18:36:45.238Z'
            description: ''
        meta:
          pagination:
            total: 1
            count: 1
            per_page: 50
            current_page: 1
            total_pages: 1
  Widget_Resp:
    description: ''
    schema:
      type: object
      properties:
        data:
          $ref: '#/definitions/widget_Full'
        meta:
          type: object
    examples:
      application/json:
        data:
          uuid: a8940709-5655-4401-a341-62c44e3180b2
          name: Header Images
          widget_configuration:
            images:
              - image_url: 'https://tatiana.fun/all/kinfolk-issue-16/'
                image_source: >-
                  https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/91/309/thekinfolktablecover_1024x1024__80715.1456436719.jpg?c=2&imbypass=on
              - image_url: 'https://tatiana.fun/all/kinfolk-issue-16/'
                image_source: >-
                  https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/1280x1280/products/109/361/kinfolkessentialissue_1024x1024__22507.1456436715.jpg?c=2&imbypass=on
              - image_url: 'https://tatiana.fun/all/kinfolk-issue-16/'
                image_source: >-
                  https://cdn11.bigcommerce.com/s-n0i50vy/images/stencil/500x659/products/85/282/livingwithplants_grande__26452.1456436666.jpg?c=2&imbypass=on
            _:
              id: a8940709-5655-4401-a341-62c44e3180b2
          widget_template:
            uuid: 3a1b0044-c9b3-47d3-9929-01ab0c20243b
            name: Header Images
            schema: []
            template: >-
              {{#each images}}<a href='{{image_url}}'><img src={{image_source}}
              style='width:33.3%'/></a>{{/each}}
            date_created: '2019-02-25T18:35:04.904Z'
            date_modified: '2019-02-25T18:35:04.904Z'
            kind: custom
          date_created: '2019-02-25T18:36:45.238Z'
          date_modified: '2019-02-25T18:36:45.238Z'
          description: ''
        meta: {}
  Error422_Resp:
    description: >
      This is the result of missing required fields, or of invalid data. See the
      response for more details.
    schema:
      $ref: '#/definitions/error_Base'
  Error404_Resp:
    description: The resource was not found.
    schema:
      $ref: '#/definitions/error_Base'
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
