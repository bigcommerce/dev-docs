swagger: '2.0'
info:
  title: Customer Login (SSO)
  version: '1.0'
host: '{$$.env.store_domain}'
paths: {}
definitions:
  customerLoginSSO:
    type: object
    title: Customer Login SSO
    properties:
      iss:
        type: string
        description: >-
          Indicates the token’s issuer. This is your application’s client ID,
          which is obtained during application registration in Developer Portal.
        example: '"1234r5t6y7u8i9o0p"'
      iat:
        type: integer
        description: >-
          Time when the token was generated. This is a numeric value indicating
          the number of seconds since the [Unix
          epoch](https://en.wikipedia.org/wiki/Unix_time).
        example: 1535393113
      jti:
        type: string
        description: >-
          Request ID string that must be unique across all requests made by your
          app. A UUID or other random string would be an appropriate value. Most
          libraries contain a method for generating a uuid. For testing a [UUID
          generator](https://www.uuidgenerator.net/) can be used, but it
          recommended to use built in libraries.
        example: '"20b7c03e-00da-4d29-91bf-2aa06a57575b"'
      operation:
        type: string
        description: Must contain the string “customer_login”.
        example: '"customer_login"'
      store_hash:
        type: string
        description: |
          Store hash identifying the store you are logging into.
        example: '"abc123"'
      customer_id:
        type: integer
        description: >
          ID of the customer you are logging in, as obtained through the
          Customer API.
        example: 2
      redirect_to:
        type: string
        description: >
          Optional field containing a relative path for the shopper’s
          destination after login. Will default to `/account.php`.
        default: /account.php
      request_ip:
        type: string
        description: >
          **(Optional)** Field containing the expected IP address for the
          request. If provided, BigCommerce will check that it matches the
          browser trying to log in. If there is not a match, it will be
          rejected.
        example: '"111.222.333.444"'
