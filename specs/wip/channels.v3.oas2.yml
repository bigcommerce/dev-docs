{
  "swagger": "2.0",
  "info": {
    "version": "3.0",
    "title": "Channels",
    "description": "\n- [OAuth Scopes](#oauth-scopes)\n- [Authentication](#authentication)\n- [Available Endpoints](#available-endpoints)\n- [Usage Notes](#usage-notes)\n- [Resources](#resources)\n\nCreate and manage product listings for multiple storefronts and sales channels.\n\n**Deprecation notice:**\n<br>\nAs of April 2020, the new `status` property should be used instead of the `is_enabled` property. The `is_enabled` property will be deprecated. \n\nThe `status` property should be used as follows based on channel `type` and `platform`:\n\n|Type|Platform|Status\n|--|--|--|\n|`storefront`|`bigcommerce`|`active`, `inactive`, `archived`|\n|`storefront`|**Is not** `bigcommerce` |`active`, `inactive`, `disconnected`|\n|`marketing`, `marketplace`, `pos`|N/A|`connected`, `disconnected`|\n\n## OAuth Scopes\n| UI Name                                      | Permission | Parameter                                     |\n|----------------------------------------------|------------|-----------------------------------------------|\n| Channel Listings                             | modify     | `store_channel_listings`                      |\n| Channel Listings                             | read-only  | `store_channel_listings_read_only`            |\n| Channel Settings                             | modify     | `store_channel_settings`                      |\n| Channel Settings                             | read-only  | `store_channel_settings_read_only`            |\n\nFor more information on OAuth Scopes, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## Authentication\n\nRequests can be authenticated by sending a `client_id` and `access_token` via `X-Auth-Client` and `X-Auth-Token` HTTP headers:\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nAccept: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\nFor more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).\n\n## Available Endpoints\n| Resource / Endpoint                     | Description                                                              |\n|-----------------------------------------|--------------------------------------------------------------------------|\n| Channels                                | Create and manage catalog listings and channels                          |\n| Channel Site                            | Manage sites and routing for headless storefronts                        |\n| Channel Listings                        | Manage catalog differences among different storefronts or marketplaces   |\n\n## Usage Notes\n\n**Channels and Channel Listings:**\n* A channel is anywhere a merchant sells their products. This encompasses headless storefronts, marketplaces, POS systems, and marketing platforms.\n* Channel listings allow you to manage catalog differences among different storefronts or marketplaces.\n\n**Sites and Site Routes:**\n* Sites and routes control the paths that make up a headless storefront\n* Site refers to the domain associated with a channel\n* Routes point to the URLs for key pages on the headless storefront. They define where your homepage is, where your cart page is, etc.\n* Sites and routes ensure links point where they’re supposed to and sales are attributed correctly. For example, a shopper’s order confirmation email should link back to Storefront A, where they placed their order, not Storefront B, which they’ve never visited.\n\n## Resources\n\n### Related Endpoints\n* [Sites](https://developer.bigcommerce.com/api-reference/cart-checkout/sites-routes-api)"
  },
  "host": "api.bigcommerce.com",
  "tags": [
    {
      "name": "Channels",
      "description": "Enables creation and management of additional channels, such as marketplaces, POS, and 3rd-party storefronts, where a merchant can list their products to sell."
    },
    {
      "name": "Channel Listings",
      "description": "Enables creation and management of product listings, the representation of a product from a merchant's catalog on a specific sales channel."
    },
    {
      "name": "Channel Site"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/channels": {
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Get all Channels",
        "operationId": "listChannels",
        "responses": {
          "200": {
            "$ref": "#/responses/channel_Resp_Collection"
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Returns a list of *Channels*. Will always return the BigCommerce storefront with an ID of `1`."
      },
      "post": {
        "tags": [
          "Channels"
        ],
        "summary": "Create a Channel",
        "operationId": "createChannel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/channel_Post"
            },
            "x-examples": {
              "application/json": {
                "name": "My Store - US",
                "type": "storefront",
                "platform": "wordpress",
                "external_id": "002",
                "is_enabled": true
              }
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/channel_Resp"
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "400": {
            "description": "Invalid data was submitted. This is the result of an invalid value being passed for 1 or more fields. Commonly, an invalid combination of 'type' and 'platform' was provided.",
            "schema": {
              "$ref": "#/responses/error_Resp"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "title": "Input is invalid",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {}
              }
            }
          },
          "422": {
            "description": "The request is missing 1 or more required fields",
            "schema": {
              "$ref": "#/responses/error_Resp"
            },
            "examples": {
              "application/json": {
                "status": 422,
                "title": "JSON data is missing or invalid",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {
                  "platform": "error.path.missing"
                }
              }
            }
          }
        },
        "description": "Creates a *Channel*.\n\n**Required Fields**\n* `type`\n* `platform`\n* `name`\n\n**Usage Notes**\n\nType & platform combination must be a valid pair:\n\n| Platform          | Accepted Type             |\n|-------------------|---------------------------|\n| `square `         | `pos`                     |\n| `vend`            | `pos`                     |\n| `clover`          | `pos`                     |\n| `facebook`        | `marketplace`,`marketing` |\n| `amazon`          | `marketplace`             |\n| `ebay`            | `marketplace`             |\n| `wordpress`       | `storefront`              |\n| `drupal`          | `storefont`               |\n| `acquia`          | `storefront`              |\n| `bloomreach`      | `storefront`              |\n| `deity`           | `storefront`              |\n| `google_shopping` | `marketing`               |\n| `custom`          | `storefront`, `pos`, `marketing`, `marketplace`             |"
      }
    },
    "/channels/{channel_id}": {
      "parameters": [
        {
          "name": "channel_id",
          "in": "path",
          "description": "The ID of a Channel",
          "required": true,
          "type": "integer",
          "format": "int64"
        }
      ],
      "get": {
        "tags": [
          "Channels"
        ],
        "summary": "Get a Channel",
        "operationId": "getChannel",
        "responses": {
          "200": {
            "$ref": "#/responses/channel_Resp"
          },
          "404": {
            "description": "A *Channel* with the provided ID was not found. ",
            "schema": {
              "$ref": "#/responses/error_Resp"
            }
          }
        },
        "description": "Returns a *Channel*. Channel ID `1` returns the BigCommerce storefront."
      },
      "put": {
        "tags": [
          "Channels"
        ],
        "summary": "Update a Channel",
        "operationId": "updateChannel",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/channel_Put"
            },
            "x-examples": {
              "application/json": {
                "is_enabled": false,
                "name": "Old Wordpress Channel"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "examples": {
              "application/json": {
                "data": {
                  "id": 15023,
                  "name": "Old Wordpress Channel",
                  "platform": "wordpress",
                  "type": "storefront",
                  "date_created": "2019-03-19T16:05:37Z",
                  "date_modified": "2019-05-29T06:03:37Z",
                  "external_id": "",
                  "is_enabled": false
                },
                "meta": {}
              }
            },
            "schema": {
              "$ref": "#/definitions/resp_channel"
            }
          },
          "400": {
            "description": "The value for at least one provided field is not valid.",
            "schema": {
              "$ref": "#/responses/error_Resp"
            },
            "examples": {
              "application/json": {
                "status": 400,
                "title": "Input is invalid",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {}
              }
            }
          },
          "404": {
            "description": "A *Channel* with the provided ID was not found. ",
            "schema": {
              "$ref": "#/responses/error_Resp"
            },
            "examples": {
              "application/json": {
                "status": 404,
                "title": "{}",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {}
              }
            }
          }
        },
        "description": "Updates a *Channel*. Partial updates are supported. Currently, if a field that *cannot* be updated is passed in, the API **not** respond with an error.\n\n**Fields That Can Be Updated**\n* name\n* external_id"
      }
    },
    "/channels/{channel_id}/listings": {
      "get": {
        "summary": "Get Channel Listings",
        "operationId": "listChannelListings",
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "format": "int64"
          },
          {
            "$ref": "#/parameters/LimitParam"
          },
          {
            "$ref": "#/parameters/AfterParam"
          },
          {
            "in": "query",
            "name": "data_modified:min",
            "type": "string",
            "format": "date-time",
            "description": "Filter items by mininum date_modified. `date_modified:min=2019-09-04T:00:00:00` or `date_modified:min=2019-09-04`"
          },
          {
            "in": "query",
            "name": "data_modified:max",
            "type": "string",
            "format": "date-time",
            "description": "Filter items by maximum date_modified. `date_modified:max=2019-09-04T:00:00:00` or `date_modified:max=2019-09-04`"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/listing_Full"
            },
            "description": ""
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/listing_Resp_Collection"
          }
        },
        "tags": [
          "Channel Listings"
        ],
        "description": "Returns a list of all *Channel Listings* for a particular channel"
      },
      "put": {
        "summary": "Update Channel Listings",
        "operationId": "updateChannelListings",
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listing_Put"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "product_id": 111,
                  "listing_id": 12180407,
                  "state": "pending",
                  "variants": [
                    {
                      "product_id": 112,
                      "variant_id": 77,
                      "state": "error"
                    }
                  ]
                },
                {
                  "product_id": 111,
                  "listing_id": 11511867,
                  "state": "deleted",
                  "variants": [
                    {
                      "product_id": 111,
                      "variant_id": 74,
                      "state": "error"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/listing_Resp_Collection"
          },
          "422": {
            "description": "When there are errors with multiple objects in the request, errors will be associated with the object's location in the list. ",
            "schema": {
              "$ref": "#/responses/error_Resp"
            },
            "examples": {
              "application/json": {
                "status": 422,
                "title": "JSON data is missing or invalid",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {
                  "0.product_id": "error.path.missing",
                  "1.product_id": "error.path.missing"
                }
              }
            }
          }
        },
        "tags": [
          "Channel Listings"
        ],
        "description": "Currently only the following properties can be updated on channel listings:\n\n* state\n* variants.state"
      },
      "post": {
        "summary": "Create Channel Listings",
        "operationId": "createChannelListings",
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "type": "integer",
            "required": true,
            "format": "int64"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/listing_Post"
              }
            },
            "x-examples": {
              "application/json": [
                {
                  "product_id": 117,
                  "state": "active",
                  "name": "baseball hat",
                  "description": "Baseball hat with your favorite team's name.",
                  "external_id": "listing1",
                  "variants": [
                    {
                      "variant_id": 82,
                      "name": "blue baseball bat",
                      "product_id": 117,
                      "state": "disabled",
                      "external_id": "Var1"
                    },
                    {
                      "variant_id": 83,
                      "product_id": 117,
                      "state": "active",
                      "external_id": "Var2"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/listing_Resp"
          },
          "422": {
            "description": "",
            "examples": {
              "application/json": {
                "status": 422,
                "title": "JSON data is missing or invalid",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {
                  "0.variants": "error.path.missing"
                }
              }
            },
            "schema": {
              "$ref": "#/responses/error_Resp"
            }
          }
        },
        "tags": [
          "Channel Listings"
        ],
        "description": "Creates a channel listing"
      }
    },
    "/channels/{channel_id}/listings/{listing_id}": {
      "parameters": [
        {
          "$ref": "#/parameters/channel_id"
        },
        {
          "$ref": "#/parameters/listing_id"
        }
      ],
      "get": {
        "summary": "Get a Channel Listing",
        "operationId": "getChannelListing",
        "responses": {
          "200": {
            "$ref": "#/responses/listing_Resp"
          },
          "404": {
            "description": "",
            "examples": {
              "application/json": {
                "status": 404,
                "title": "Listing [1218040] not found",
                "type": "https://developer.bigcommerce.com/api#api-status-codes",
                "errors": {}
              }
            },
            "schema": {
              "$ref": "#/responses/error_Resp"
            }
          }
        },
        "tags": [
          "Channel Listings"
        ],
        "description": "Creates a Channel Listing"
      }
    },
    "/channels/{channel_id}/site": {
      "get": {
        "summary": "Get a Channel Site",
        "description": "Alias of GET /sites?channel_id=channel_id\n\nReturns site data for given channel\n\n",
        "operationId": "get-channel-site",
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/site_Resp"
          }
        },
        "tags": [
          "Channel Site"
        ],
        "produces": []
      },
      "put": {
        "responses": {
          "200": {
            "$ref": "#/responses/site_Resp"
          }
        },
        "summary": "Update a Channel Site",
        "operationId": "put-channel-site",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/site_Put"
            },
            "x-examples": {
              "application/json": {
                "url": "https://example.com/"
              }
            }
          }
        ],
        "tags": [
          "Channel Site"
        ],
        "description": "Updates a site for provided channel"
      },
      "parameters": [
        {
          "name": "channel_id",
          "in": "path",
          "type": "string",
          "required": true
        }
      ],
      "post": {
        "responses": {
          "200": {
            "$ref": "#/responses/site_Resp"
          }
        },
        "summary": "Create a Channel Site",
        "operationId": "postChannelSite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/site_Post"
            },
            "x-examples": {
              "application/json": {
                "url": "http://kittens.mybigcommerce.com/",
                "channel_id": 123
              }
            }
          }
        ],
        "tags": [
          "Channel Site"
        ],
        "description": "Alias of POST `/sites`. Creates a site for provided channel."
      },
      "delete": {
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {}
            }
          }
        },
        "description": "Deletes the Channe's site.",
        "tags": [
          "Channel Site"
        ],
        "summary": "Delete a Channel Site"
      }
    }
  },
  "definitions": {
    "_metaCollection": {
      "title": "_metaCollection",
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/pagination_Full"
        }
      }
    },
    "pagination_Full": {
      "type": "object",
      "description": "Data about the response, including pagination and collection totals.\n",
      "properties": {
        "total": {
          "type": "integer",
          "description": "Total number of items in the result set.\n"
        },
        "count": {
          "type": "integer",
          "description": "Total number of items in the collection response.\n"
        },
        "total_pages": {
          "type": "integer",
          "description": "The total number of pages in the collection.\n"
        },
        "links": {
          "type": "object",
          "description": "Pagination links for the previous and next parts of the whole collection.\n",
          "properties": {
            "previous": {
              "type": "string",
              "description": "Link to the previous page returned in the response.\n"
            },
            "current": {
              "type": "string",
              "description": "Link to the current page returned in the response.\n"
            },
            "next": {
              "type": "string",
              "description": "Link to the next page returned in the response.\n"
            }
          }
        }
      },
      "title": "pagination_Full"
    },
    "channel_Post": {
      "title": "channel_Post",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "pos",
            "marketplace",
            "storefront",
            "marketing"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the channel as it will appear to merchants in BC"
        },
        "external_id": {
          "type": "string",
          "description": "Associated ID within a system / platform outside of BC. "
        },
        "is_enabled": {
          "type": "boolean",
          "description": "Determines whether the channel is enabled on a store. In order to disable a channel, set is_enabled to false.\n\nThis results in the channel not showing in the 'Products' section of the BC control panel.",
          "default": true
        },
        "platform": {
          "type": "string",
          "enum": [
            "amazon",
            "facebook",
            "google_shopping",
            "vend",
            "square",
            "clover",
            "wordpress",
            "acquia",
            "deity",
            "ebay",
            "drupal",
            "bloomreach",
            "custom"
          ]
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive",
            "connected",
            "disconnected",
            "archived"
          ]
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "channel_Put": {
      "title": "channel_Put",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the channel as it will appear to merchants in BC"
        },
        "external_id": {
          "type": "string",
          "description": "Associated ID within a system / platform outside of BC. "
        },
        "is_enabled": {
          "type": "boolean",
          "description": "Determines whether the channel is enabled on a store. In order to disable a channel, set is_enabled to false.\n\nThis results in the channel not showing in the 'Products' section of the BC control panel.",
          "default": true
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive",
            "connected",
            "disconnected",
            "archived"
          ]
        }
      }
    },
    "channel_Full": {
      "title": "channel_Full",
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32",
          "description": "ID of the channel, as returned by BC"
        },
        "type": {
          "type": "string",
          "enum": [
            "pos",
            "marketplace",
            "storefront",
            "marketing"
          ],
          "description": "The type of channel that is being created, updated, or fetched"
        },
        "platform": {
          "type": "string",
          "description": "The name of the platform for the channel. Must be used with a valid platform combination",
          "enum": [
            "wordpress",
            "square",
            "drupal",
            "acquia",
            "bloomreach",
            "deity",
            "amazon",
            "facebook",
            "ebay",
            "google_shopping",
            "vend",
            "clover",
            "custom"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the channel as it will appear to merchants in BC"
        },
        "date_created": {
          "type": "string"
        },
        "date_modified": {
          "type": "string"
        },
        "external_id": {
          "type": "string",
          "description": "Associated ID within a system / platform outside of BC for the channel"
        },
        "is_enabled": {
          "type": "boolean",
          "description": "Determines whether the channel is enabled on a store. In order to disable a channel, set is_enabled to false.\n\nThis results in the channel not showing in the 'Products' section of the BC control panel.",
          "default": true
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "inactive",
            "connected",
            "disconnected",
            "archived"
          ]
        }
      }
    },
    "listing_Put": {
      "title": "listing_Put",
      "type": "object",
      "properties": {
        "listing_id": {
          "type": "integer",
          "format": "int32"
        },
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string",
          "description": "Name of the product for this channel listing specifically. This overrides the name in the catalog "
        },
        "description": {
          "type": "string",
          "description": "Description of the product for this channel listing specifically. This overrides the description in the catalog "
        },
        "state": {
          "enum": [
            "active",
            "disabled",
            "error",
            "pending",
            "pending_disable",
            "pending_delete",
            "queued",
            "rejected",
            "submitted",
            "deleted",
            "unknown"
          ],
          "type": "string"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listingVariant_Post"
          }
        }
      },
      "required": [
        "listing_id",
        "product_id",
        "state",
        "variants"
      ]
    },
    "listing_Full": {
      "title": "listing_Full",
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "integer",
          "format": "int64",
          "description": "ID of the channel that the channel listing belongs to"
        },
        "listing_id": {
          "type": "integer",
          "format": "int32",
          "description": "ID of the channel listing that has been created, returned, or updated"
        },
        "external_id": {
          "type": "string",
          "description": "Associated ID within a system / platform outside of BC for the product listing."
        },
        "product_id": {
          "type": "integer",
          "format": "int32",
          "description": "ID of the product in the BC catalog that the channel listing corresponds to"
        },
        "name": {
          "type": "string",
          "description": "Name of the product for this channel listing specifically. This overrides the name in the catalog "
        },
        "description": {
          "type": "string",
          "description": "Description of the product for this channel listing specifically. This overrides the description in the catalog "
        },
        "state": {
          "enum": [
            "active",
            "disabled",
            "error",
            "pending",
            "pending_disable",
            "pending_delete",
            "queued",
            "rejected",
            "submitted",
            "deleted",
            "unknown"
          ],
          "description": "Current state of the channel listing ",
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "Date on which the channel listing was first created"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "Date on which the channel listing was most recently changed"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listingVariant_Full"
          }
        }
      }
    },
    "_meta": {
      "type": "object",
      "description": "Empty meta object; may be used later.",
      "title": "_meta"
    },
    "listing_Post": {
      "title": "listing_Post",
      "type": "object",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int32"
        },
        "external_id": {
          "type": "string",
          "description": "Associated ID within a system / platform outside of BC."
        },
        "name": {
          "type": "string",
          "description": "Name of the product for this channel listing specifically. This overrides the name in the catalog "
        },
        "description": {
          "type": "string",
          "description": "Description of the product for this channel listing specifically. This overrides the description in the catalog "
        },
        "state": {
          "enum": [
            "active",
            "disabled",
            "error",
            "pending",
            "pending_disable",
            "pending_delete",
            "queued",
            "rejected",
            "submitted",
            "deleted",
            "unknown"
          ],
          "type": "string"
        },
        "variants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/listingVariant_Post"
          }
        }
      },
      "required": [
        "product_id",
        "state",
        "variants"
      ]
    },
    "listingVariant_Full": {
      "title": "listingVariant_Full",
      "type": "object",
      "properties": {
        "channel_id": {
          "type": "integer",
          "format": "int64",
          "minimum": 0
        },
        "product_id": {
          "type": "integer",
          "format": "int64",
          "minimum": 0
        },
        "variant_id": {
          "type": "integer",
          "format": "int64",
          "minimum": 0
        },
        "external_id": {
          "type": "string",
          "description": "Associated ID within a system / platform outside of BC for the product variant listing"
        },
        "name": {
          "type": "string",
          "description": "Name of the product for this channel listing specifically. This overrides the name in the catalog "
        },
        "description": {
          "type": "string",
          "description": "Description of the product for this channel listing specifically. This overrides the description in the catalog "
        },
        "state": {
          "enum": [
            "active",
            "disabled",
            "error",
            "pending",
            "pending_disable",
            "pending_delete",
            "queued",
            "rejected",
            "submitted",
            "deleted",
            "unknown"
          ],
          "type": "string"
        },
        "date_created": {
          "type": "string",
          "format": "date-time",
          "description": "Date on which the channel listing variant was created"
        },
        "date_modified": {
          "type": "string",
          "format": "date-time",
          "description": "Date on which the channel listing variant was most recently changed"
        }
      }
    },
    "listingVariant_Post": {
      "type": "object",
      "title": "listingVariant_Post",
      "properties": {
        "product_id": {
          "type": "integer",
          "format": "int64"
        },
        "variant_id": {
          "type": "integer",
          "format": "int64"
        },
        "external_id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the product for this channel listing specifically. This overrides the name in the catalog "
        },
        "description": {
          "type": "string",
          "description": "Description of the product for this channel listing specifically. This overrides the description in the catalog "
        },
        "state": {
          "enum": [
            "active",
            "disabled",
            "error",
            "pending",
            "pending_disable",
            "pending_delete",
            "queued",
            "rejected",
            "submitted",
            "deleted",
            "unknown"
          ],
          "type": "string"
        }
      },
      "required": [
        "product_id",
        "variant_id",
        "state"
      ]
    },
    "resp_channel": {
      "title": "resp_channel",
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/channel_Full"
        },
        "meta": {
          "$ref": "#/definitions/_meta"
        }
      },
      "description": ""
    },
    "site_Put": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this."
        }
      },
      "title": "site_Put"
    },
    "site_Post": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.",
          "example": "http://kittens.mybigcommerce.com/"
        },
        "channel_id": {
          "type": "integer",
          "description": "The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites."
        }
      },
      "title": "site_Post"
    },
    "site_Full": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "url": {
          "type": "string",
          "description": "The Fully Qualified URL (including host and scheme) where this site is hosted. All URLs generated for this site will be appended to this.",
          "example": "http://kittens.mybigcommerce.com/"
        },
        "channel_id": {
          "type": "integer",
          "description": "The channel this site is attached to. Each site belongs to a single channel, and each channel can have either zero or one sites."
        },
        "created_at": {
          "type": "string",
          "description": "When was this site created? RFC 3339",
          "example": "2018-01-04T04:15:50.000Z"
        },
        "updated_at": {
          "type": "string",
          "description": "When was this site defintion last updated? RFC 3339",
          "example": "2018-01-04T04:15:50.000Z"
        },
        "routes": {
          "type": "array",
          "description": "(optional - if included) collection of routes defined for this site. Limited to 200 routes side loaded (query routes direction via `/routes` for bulk)",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "description": "Unique ID for this route. Required when updating an existing route"
              },
              "type": {
                "type": "string",
                "description": "What type of resource are we routing to?",
                "enum": [
                  "product",
                  "brand",
                  "category",
                  "page",
                  "blog",
                  "home",
                  "cart",
                  "checkout",
                  "search",
                  "account",
                  "login",
                  "returns",
                  "static"
                ]
              },
              "matching": {
                "type": "string",
                "description": "(entity_id?) For a given type, which resources should match this route? e.g For a route with the type: \"product\" and matching: \"5\" this route would be used for the product with the ID of 5. \n\nDepending on the type of resource, this may be an ID (matching a specific item), or a \"*\" wildcard matching all items of that type.",
                "example": "5"
              },
              "route": {
                "type": "string",
                "description": "The route template that will be used to generate the URL for the requested resource.\n\nSupports several tokens:\n\n- {id} The ID of the requested item\n- {slug} The slug for the requested item (if available). Note: the `slug` value may contain `/` slash\n- {language} The language string that the client is using",
                "example": "/my-amazing-product"
              }
            }
          }
        }
      },
      "title": "site_Full"
    },
    "resp_error": {
      "type": "object",
      "properties": {},
      "title": "resp_error"
    }
  },
  "parameters": {
    "AfterParam": {
      "name": "after",
      "description": "Specifies the prior ID number in a limited (paginated) list of listings.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "DateModifiedMaxParam": {
      "name": "date_modified:max",
      "description": "max iso8601 time",
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "DateModifiedMinParam": {
      "name": "date_modified:min",
      "description": "min iso8601 time",
      "in": "query",
      "type": "string",
      "format": "date-time"
    },
    "PageParam": {
      "name": "page",
      "description": "Specifies the page number in a limited (paginated) list of listings.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "LimitParam": {
      "name": "limit",
      "description": "Controls the number of items per page in a limited (paginated) list of products.\n",
      "required": false,
      "in": "query",
      "type": "integer"
    },
    "channel_id": {
      "name": "channel_id",
      "in": "path",
      "type": "integer",
      "required": true,
      "format": "int64"
    },
    "listing_id": {
      "name": "listing_id",
      "in": "path",
      "type": "integer",
      "required": true,
      "format": "int64"
    }
  },
  "basePath": "/stores/{$$.env.store_hash}/v3",
  "securityDefinitions": {
    "X-Auth-Client": {
      "type": "apiKey",
      "name": "X-Auth-Client",
      "in": "header",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Channel Listings | modify | `store_channel_listings` |\n|  Channel Listings | read-only | `store_channel_listings_read_only` |\n|  Channel Settings | modify | `store_channel_settings` |\n|  Channel Settings | read-only | `store_channel_settings_read_only` |\n|  Sites & Routes | modify | `store_sites` |\n|  Sites & Routes | read-only | `store_sites_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "
    },
    "X-Auth-Token": {
      "type": "apiKey",
      "in": "header",
      "name": "X-Auth-Token",
      "description": "### OAuth Scopes\n|  **UI Name** | **Permission** | **Parameter** |\n| --- | --- | --- |\n|  Channel Listings | modify | `store_channel_listings` |\n|  Channel Listings | read-only | `store_channel_listings_read_only` |\n|  Channel Settings | modify | `store_channel_settings` |\n|  Channel Settings | read-only | `store_channel_settings_read_only` |\n|  Sites & Routes | modify | `store_sites` |\n|  Sites & Routes | read-only | `store_sites_read_only` |\n\n### Headers\n\n|Header|Parameter|Description|\n|-|-|-|\n|`X-Auth-Client`|`client_id`|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n|`X-Auth-Token`|`access_token `|Obtained by creating an API account or installing an app in a BigCommerce control panel.|\n\n### Example\n\n```http\nGET /stores/{$$.env.store_hash}/v3/catalog/summary\nhost: api.bigcommerce.com\nContent-Type: application/json\nX-Auth-Client: {client_id}\nX-Auth-Token: {access_token}\n```\n\n* For more information on Authenticating BigCommerce APIs, see: [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication). "
    }
  },
  "security": [
    {
      "X-Auth-Client": []
    },
    {
      "X-Auth-Token": []
    }
  ],
  "responses": {
    "channel_Resp_Collection": {
      "description": "",
      "schema": {
        "title": "Channel Collection Response",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/channel_Full"
            }
          },
          "meta": {
            "$ref": "#/definitions/_metaCollection"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "id": 1,
              "type": "storefront",
              "platform": "bigcommerce",
              "name": "myBC-store.com",
              "date_created": "2018-01-04T04:15:50.000Z",
              "date_modified": "2018-01-18T01:22:10.000Z",
              "external_id": "",
              "is_enabled": false
            },
            {
              "id": 2,
              "type": "storefront",
              "platform": "wordpress",
              "name": "mysite.com",
              "date_created": "2018-01-04T04:15:50.000Z",
              "date_modified": "2018-01-18T01:22:10.000Z",
              "external_id": "",
              "is_enabled": false
            },
            {
              "id": 3,
              "name": "Square",
              "platform": "square",
              "type": "pos",
              "date_created": "2019-03-19T16:05:37Z",
              "date_modified": "2019-03-19T16:05:37Z",
              "external_id": "",
              "is_enabled": true
            }
          ],
          "meta": {
            "pagination": {
              "total": 1
            }
          }
        }
      }
    },
    "channel_Resp": {
      "description": "",
      "schema": {
        "title": "Channel Response",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/channel_Full"
          },
          "meta": {
            "$ref": "#/definitions/_meta"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": {
            "id": 1,
            "type": "storefront",
            "platform": "wordpress",
            "name": "mysite.com",
            "date_created": "2018-01-04T04:15:50.000Z",
            "date_modified": "2018-01-18T01:22:10.000Z",
            "is_enabled": true,
            "external_id": ""
          },
          "meta": {}
        }
      }
    },
    "error_Resp": {
      "description": "",
      "schema": {
        "title": "Error Response",
        "type": "object",
        "properties": {
          "status": {
            "description": "The HTTP status code.",
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "description": "The error title describing the particular error.",
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      }
    },
    "listing_Resp": {
      "description": "",
      "schema": {
        "title": "Listing Response",
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/listing_Full"
          },
          "meta": {
            "$ref": "#/definitions/_meta"
          }
        }
      }
    },
    "listing_Resp_Collection": {
      "description": "",
      "schema": {
        "title": "Listing Collection Response",
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/listing_Full"
            }
          },
          "meta": {
            "$ref": "#/definitions/_metaCollection"
          }
        }
      },
      "examples": {
        "application/json": {
          "data": [
            {
              "channel_id": 42527118,
              "listing_id": 58667643,
              "external_id": "EXT-1",
              "product_id": 76825686,
              "name": "Baseball bat",
              "description": "A steel baseball bat",
              "state": "active",
              "date_created": "2019-01-20T22:11:39.384Z",
              "date_modified": "2019-02-06T22:59:36.867Z",
              "variants": [
                {
                  "channel_id": 42527118,
                  "product_id": 76825686,
                  "variant_id": 77,
                  "external_id": "ext-1-var",
                  "name": "Baseball Bat - short",
                  "description": "A shorter baseball bat",
                  "state": "deleted",
                  "date_created": "2019-01-20T22:11:39.384Z",
                  "date_modified": "2019-02-06T22:59:36.867Z"
                }
              ]
            }
          ],
          "meta": {
            "pagination": {
              "total": 1,
              "count": 1,
              "total_pages": 1,
              "links": {
                "current": "?page=1&limit=1000"
              }
            }
          }
        }
      }
    },
    "site_Resp": {
      "description": "",
      "examples": {
        "application/json": {
          "data": {
            "id": 1,
            "url": "https://www.my-awesome-site.com",
            "channel_id": 18735,
            "created_at": "2019-08-05T18:26:21Z",
            "updated_at": "2019-08-05T18:26:21Z"
          },
          "meta": {}
        }
      },
      "schema": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/definitions/site_Full"
          },
          "meta": {
            "$ref": "#/definitions/_meta"
          }
        }
      }
    }
  },
  "x-stoplight": {
    "docs": {
      "includeDownloadLink": true,
      "showModels": false
    }
  }
}