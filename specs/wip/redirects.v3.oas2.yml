swagger: '2.0'
info:
  title: Redirects
  version: 3.0.0
  description: >-
    Redirects allow you to manage 301 redirects for one or more storefronts
    powered by a single BigCommerce back-end.


    **On This Page**

    - [Authentication](#authentication)

    - [OAuth Scopes](#oauth-scopes)

    - [Additional Resources](#resources)

    ---


    ## Authentication

    You can authenticate requests by sending a `client_id` and `access_token`
    via `X-Auth-Client` and `X-Auth-Token` HTTP headers:


    ```http

    GET /stores/{$$.env.store_hash}/v3/storefront/redirects

    host: api.bigcommerce.com

    Accept: application/json

    X-Auth-Client: {client_id}

    X-Auth-Token: {access_token}

    ```

    You can obtain the `client_id` and `access_token` using either of the
    following methods:

    - [Creating API
    account](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#obtaining-store-api-credentials)

    - [Installing an app in the BigCommerce control
    panel](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#obtaining-app-api-credentials)

    ---


    ## OAuth Scopes

    Scope limits ability to read or modify data. To interact with the Products
    resource, set the scope to the minimum level needed to accomplish your
    specific task. 


    | UI Name  | Permission | Parameter                     |

    |----------|------------|-------------------------------|

    | Products | modify     | `store_v2_products`           |

    | Products | read-only  | `store_v2_products_read_only` |


    For more information on OAuth Scopes, see the [REST API
    Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication/rest-api-authentication#oauth-scopes)
    page.


    ---


    ## Subresources

    The Products resource contains many subresources, outlined in the following
    sections.


    ### Bulk Pricing Rules

    Set prices for individual items or item groups based on the number of items
    ordered. For more details, see [Bulk
    Pricing](https://support.bigcommerce.com/s/article/Bulk-Pricing).


    ### Complex Rules

    Define specific attributes that alter a product without changing the
    product's SKU. For more details, see [Product Option:
    Rules](https://support.bigcommerce.com/s/article/Product-Options-Rules-Video#).


    ### Custom Fields

    Create and display additional product information on the product page. For
    more details, see [Custom
    Fields](https://support.bigcommerce.com/s/article/Custom-Fields). 


    ### Images

    Add and manage images for specific products. For more details, see the
    _Images & videos_ section of the [Adding
    Products](https://support.bigcommerce.com/s/article/Adding-Products-v3#images)
    page.


    ### Metafields

    View, create, and modify meta information associated with products.


    ### Modifiers

    Modifiers differ in capabilities depending on which version you are using.
    For more information, see the version comparison section on the [Product
    Options](https://support.bigcommerce.com/s/article/Product-Options-v3#compare)
    page.


    ### Modifier Images

    Add and manage images for specific product modifiers.


    ### Modifier Values

    Set and manage the values associated with defined product modifiers.


    ### Reviews

    View and manage the comments customers leave on product pages. For more
    details, see [Managing
    Reviews](https://support.bigcommerce.com/s/article/Managing-Reviews). 


    ### Variants

    View, add, and manage product variations that alter the product's SKU. For
    more details, see
    [Variations](https://support.bigcommerce.com/s/article/Product-Options-v3#variations).


    ### Variant Options

    Manage the variant choices displayed on product pages. For more details, see
    the _Variations_ section on the [Product
    Options](https://support.bigcommerce.com/s/article/Product-Options-v3#variations)
    page. 


    ### Variant Option Values

    Add and manage the values associated with specified variant options. For
    more details, see the _Variations_ section on the [Product
    Options](https://support.bigcommerce.com/s/article/Product-Options-v3#variations)
    page. 


    ### Variant Metafields

    View, create, and modify meta information associated with product variants.


    ### Videos

    Add and manage product videos hosted on YouTube. For more details, see the
    _Images & videos_ section of the [Adding
    Products](https://support.bigcommerce.com/s/article/Adding-Products-v3#images)
    page.


    ---


    ## Additional Information

    **Webhooks**

    -
    [Product](/api-docs/getting-started/webhooks/webhook-events#webhook-events_products)


    **Related API Resources**

    - [Brand](#)

    - [Category](#)

    - [Summary](#)

    - [Variant](#)


    - [OAuth Scopes](#oauth-scopes)

    - [Authentication](#authentication)


    BigCommerce' V3 RESTP API Redirect endpoints allow developers to manage 301
    redirects for one or more storefronts powered by a single BigCommerce
    back-end.


    ## OAuth Scopes

    | UI Name                                      | Permission |
    Parameter                                     |

    |----------------------------------------------|------------|-----------------------------------------------|

    | Storefront API                               | manage     |
    `store_storefront_api`                        |


    For more information on OAuth Scopes, see:
    [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).


    ## Authentication


    Requests can be authenticated by sending a `client_id` and `access_token`
    via `X-Auth-Client` and `X-Auth-Token` HTTP headers:


    ```http

    GET /stores/{$$.env.store_hash}/v3/catalog/summary

    host: api.bigcommerce.com

    Accept: application/json

    X-Auth-Client: {client_id}

    X-Auth-Token: {access_token}

    ```


    |Header|Parameter|Description|

    |-|-|-|

    |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
    installing an app in a BigCommerce control panel.|

    |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
    installing an app in a BigCommerce control panel.|


    For more information on Authenticating BigCommerce APIs, see:
    [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
securityDefinitions:
  X-Auth-Client:
    type: apiKey
    name: X-Auth-Client
    in: header
    description: >-
      ### OAuth Scopes

      |  **UI Name** | **Permission** | **Parameter** |

      | --- | --- | --- |

      |  Carts | modify | `store_cart` |

      |  Carts | read-only | `store_cart_read_only` |


      ### Headers


      |Header|Parameter|Description|

      |-|-|-|

      |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|

      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|


      ### Example


      ```http

      GET /stores/{$$.env.store_hash}/v3/catalog/summary

      host: api.bigcommerce.com

      Content-Type: application/json

      X-Auth-Client: {client_id}

      X-Auth-Token: {access_token}

      ```


      * For more information on Authenticating BigCommerce APIs, see:
      [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
  X-Auth-Token:
    type: apiKey
    in: header
    name: X-Auth-Token
    description: >-
      ### OAuth Scopes

      |  **UI Name** | **Permission** | **Parameter** |

      | --- | --- | --- |

      |  Carts | modify | `store_cart` |

      |  Carts | read-only | `store_cart_read_only` |


      ### Headers


      |Header|Parameter|Description|

      |-|-|-|

      |`X-Auth-Client`|`client_id`|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|

      |`X-Auth-Token`|`access_token `|Obtained by creating an API account or
      installing an app in a BigCommerce control panel.|


      ### Example


      ```http

      GET /stores/{$$.env.store_hash}/v3/catalog/summary

      host: api.bigcommerce.com

      Content-Type: application/json

      X-Auth-Client: {client_id}

      X-Auth-Token: {access_token}

      ```


      * For more information on Authenticating BigCommerce APIs, see:
      [Authentication](https://developer.bigcommerce.com/api-docs/getting-started/authentication).
security:
  - X-Auth-Client: []
  - X-Auth-Token: []
  - OAuthScopes: []
paths:
  /storefront/redirects:
    get:
      summary: Get Redirects
      tags:
        - Redirects
      responses:
        '200':
          $ref: ''
      parameters:
        - type: integer
          in: query
          name: site_id
          description: Site ID to return only redirects for a given Site
        - type: array
          in: query
          name: 'id:in'
          description: 'Explicitly fetch Redirects by IDs, provided as CSV string'
          items:
            type: string
        - type: integer
          in: query
          name: limit
          description: Number of results to return per page
        - type: integer
          in: query
          name: page
          description: >-
            Which page number to return, based on the page size. Used to
            paginate large collections.
        - type: string
          enum:
            - from_path
            - type
            - site_id
          in: query
          name: sort
          description: Sorts a collection by a particular field.
        - type: string
          enum:
            - asc
            - desc
          in: query
          name: direction
          description: Sort direction.
        - type: string
          enum:
            - to_url
          in: query
          name: include
          description: >-
            Request extra fields that aren't in the standard response. On this
            endpoint, only "to_url" is supported.
        - type: string
          in: query
          name: keyword
          description: >-
            Search keyword to look for redirects matching this keyword. Will
            only search from the beginning of a URL path, so "blue" will match
            "/blue" and "/blue-shirt" but not "/royal-blue-shirt"
      description: Get a collection of the store's 301 redirects across all sites
      operationId: GetRedirects
    put:
      summary: Upsert Redirects
      tags:
        - Redirects
      description: Upsert new redirect data across all storefronts.
      responses:
        '201':
          $ref: ''
      operationId: UpsertRedirects
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/301RedirectUpsert'
          x-examples:
            application/json:
              from_path: /old-url
              site_id: 123
              to:
                type: brand
                entity_id: 445
                url: /new-url
    delete:
      summary: Delete Redirects
      tags:
        - Redirects
      responses:
        '204':
          description: No Content
      parameters:
        - in: query
          name: 'id:in'
          required: true
          description: List of Redirect IDs to delete explicitly
          type: array
          items:
            type: integer
        - in: query
          name: site_id
          description: Site ID provided to delete all redirects for a given Site
          type: integer
      description: Delete redirects
      operationId: DeleteRedirects
definitions:
  Error:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
  ErrorResponse400:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  ErrorResponse404:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  ErrorResponse409:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  ErrorResponse422:
    type: object
    properties:
      schema:
        $ref: '#/definitions/Error'
  301RedirectUpsert:
    type: object
    description: >-
      Data necessary to create or update a redirect. If there's a conflict on
      the from_path and site_id, the redirect will be overwritten with new data.
    properties:
      from_path:
        type: string
        example: /old-url
      site_id:
        type: integer
      to:
        $ref: '#/definitions/RedirectTo'
    required:
      - from_path
      - site_id
  301RedirectRead:
    type: object
    description: 'Full detail of a Redirect, optionally including the full destination URL.'
    properties:
      from_path:
        type: string
        example: /old-url
      site_id:
        type: integer
      to:
        $ref: '#/definitions/RedirectTo'
      id:
        type: integer
      to_url:
        type: string
        format: uri
        description: >-
          Full destination URL for the redirect. Must be explicitly included via
          URL parameter.
        example: 'https://store-domain.com/new-url'
    required:
      - from_path
      - site_id
  MetaPaginationObject:
    type: object
    properties:
      pagination:
        type: object
        properties:
          total:
            type: integer
            example: 246
            minimum: 0
          count:
            type: integer
            example: 5
            minimum: 0
          per_page:
            type: integer
            example: 5
            minimum: 0
          current_page:
            type: integer
            example: 1
            minimum: 1
          total_pages:
            type: integer
            example: 50
            minimum: 0
          links:
            type: object
            properties:
              next:
                type: string
                example: '?limit=5&page=2'
              current:
                type: string
                example: '?limit=5&page=1'
  RedirectTo:
    title: RedirectTo
    type: object
    properties:
      type:
        type: string
        enum:
          - product
          - brand
          - category
          - page
          - post
          - url
      entity_id:
        type: integer
      url:
        type: string
        example: /new-url
        maxLength: 2048
  DetailedErrors:
    type: object
    additionalProperties:
      type: string
  BaseError:
    type: object
    description: |
      Error payload for the BigCommerce API.
    properties:
      status:
        description: |
          The HTTP status code.
        type: integer
      title:
        description: |
          The error title describing the particular error.
        type: string
      type:
        type: string
      instance:
        type: string
  ErrorResponse:
    allOf:
      - $ref: '#/definitions/BaseError'
      - type: object
        properties:
          errors:
            $ref: '#/definitions/DetailedErrors'
host: api.bigcommerce.com
basePath: '/stores/{$$.env.store_hash}/v3'
tags:
  - name: Redirects
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
x-stoplight:
  docs:
    includeDownloadLink: true
    showModels: false
